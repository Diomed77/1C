//======================================================================
Перем п_готовность;
Перем ит_ДокМаршр;

Процедура  ЗагрузкаДанныхИзДиапазона(п_НачДата,п_КонДата)
	
	ит_ДокМаршр.Очистить();
	
	Запрос=СоздатьОбъект("ODBCRecordSet");

	ТекстЗапроса="SELECT Журнал.IDDOC [Документ $Документ.МаршрутныйЛист]
		|	, (Журнал.CLOSED & 1) ДокументПроведён
		|	, Журнал.ISMARK ПометкаУдаления
		|	, Журнал.DOCNO Документ_ном
		|FROM _1SJOURN AS Журнал (NOLOCK)
		|WHERE Журнал.DATE_TIME_IDDOC >= :НачДата
		|	AND Журнал.DATE_TIME_IDDOC <= :КонДата
		|	AND (Журнал.IDDOCDEF = $ВидДокумента.МаршрутныйЛист)
		|";	
		
	Запрос.УстановитьТекстовыйПараметр("НачДата",п_НачДата);
	Запрос.УстановитьТекстовыйПараметр("КонДата",п_КонДата);
	Запрос.ВыполнитьИнструкцию(ТекстЗапроса,ит_ДокМаршр);
	
	ит_ДокМаршр.НоваяКолонка("СостГотовности");
	ит_ДокМаршр.ДобавитьИндекс("иДок","*Документ");
КонецПроцедуры



Функция СостояниеГотовностиДокумента(п_Док)

	л_ТЗдокМЛист=СоздатьОбъект("ТаблицаЗначений");
	п_Док.ВыгрузитьТабличнуюЧасть(л_ТЗдокМЛист,);
	л_ТЗдокМЛист.ВыбратьСтроки();
	
	л_колГотовые=0;
	л_колОбщее=л_ТЗдокМЛист.КоличествоСтрок();
	Пока л_ТЗдокМЛист.ПолучитьСтроку() = 1 Цикл
		л_СостояниеЗаявки=глПолучитьСостояниеЗаявки(л_ТЗдокМЛист.Счет,0);
		Если ((л_СостояниеЗаявки.Наименование="Ожидает отгрузки") ИЛИ (л_СостояниеЗаявки.Наименование="Отгружена")) ИЛИ (ПустоеЗначение(л_ТЗдокМЛист.Накладная)=0) Тогда
			л_колГотовые=л_колГотовые+1;
		ИначеЕсли л_ТЗдокМЛист.Счет.ВидЗаявки=Перечисление.ВидыЗаявок.ЗаявкаНаВозврат Тогда
			л_колГотовые=л_колГотовые+1;
		КонецЕсли;		
	КонецЦикла;
	
	Если л_колОбщее<>0 Тогда
		л_Процент=Окр((л_колГотовые/л_колОбщее)*100);
	Иначе
		л_Процент=0;
	КонецЕсли;
	
	Возврат л_Процент;

КонецФункции // СостояниеГотовностиДокумента

//======================================================================
Процедура ЗаполнитьСост()

	л_кол=ит_ДокМаршр.КоличествоСтрок();
	л_сч=0;
	ит_ДокМаршр.ВыбратьСтроки();
	Пока ит_ДокМаршр.ПолучитьСтроку() = 1 Цикл
		л_сч=л_сч+1;
		Сообщить("Обработано документов "+л_сч+"/"+л_кол);
		
		Если ит_ДокМаршр.ДокументПроведён=1 Тогда
			ит_ДокМаршр.СостГотовности=100;
		ИначеЕсли ит_ДокМаршр.ПометкаУдаления=1 Тогда
			ит_ДокМаршр.СостГотовности="";			
		Иначе
			ит_ДокМаршр.СостГотовности=СостояниеГотовностиДокумента(ит_ДокМаршр.Документ);
		КонецЕсли;
		ОчиститьОкноСообщений();
	КонецЦикла;
КонецПроцедуры // ЗаполнитСост

//======================================================================
Функция ПолучитьПроцент(п_Номер)
	Если фл_готовности=1 Тогда
	л_гот=0;
	Если ит_ДокМаршр.КоличествоСтрок()=0 Тогда
		Возврат "";
	КонецЕсли;
	
	рез=ит_ДокМаршр.НайтиСтроку("иДок",п_Номер,,1);
	Если рез>0 Тогда
		л_гот=ит_ДокМаршр.СостГотовности;
	КонецЕсли;


	Возврат л_гот;
	КонецЕсли;
КонецФункции // ПолучитьПроцент

Функция Раскрасить(п_Номер)
	Если фл_готовности=1 Тогда
		рез=ит_ДокМаршр.НайтиСтроку("иДок",п_Номер,,1);
		//Сообщить(рез);
		Если рез>0 Тогда
			л_гот=ит_ДокМаршр.СостГотовности;
			Если л_гот<>"" Тогда
				Если л_гот<100 Тогда
					Возврат "BRUSH["+глПолучитьЦвет(255,50,0)+"]COUNT[3]";	
				КонецЕсли;
				
				Если л_гот=100 Тогда
					Возврат "BRUSH["+глПолучитьЦвет(50,255,0)+"]COUNT[3]";	
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
	Иначе
		
		Если ПустоеЗначение(п_Номер)=0 Тогда
			глЗапросПоМЛСтатус.УстПараметр(1,п_Номер);
			Сост = глЗапросПоМЛСтатус.ВыполнитьСкалярный();
			Если ПустоеЗначение(Сост )=0 Тогда
	//			Форма.лСостояние.Заголовок(Сост.Наименование);
				Возврат "BRUSH["+?(ПустоеЗначение(Сост.ЦветФонаДляЖурнала)=1,"NONE",Сост.ЦветФонаДляЖурнала.НомерЦвета)+"]COUNT[2]";
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
КонецФункции


Функция  ФорматВывода( парам )
	Если парам = "Комментарий" Тогда
		Если ПустоеЗначение(ТекущийДокумент) = 1 Тогда Возврат ""; КонецЕсли;
		Возврат СтрЗаменить(ТекущийДокумент.Комментарий,Симв(13)+Симв(10)," / ");
	КонецЕсли;
КонецФункции

//======================================================================
Процедура ОбновитьДанные()
	Если фл_готовности=1 Тогда
		ЗагрузкаДанныхИзДиапазона(НачалоИнтервала(),КонецИнтервала());
		ЗаполнитьСост();
	КонецЕсли;	
КонецПроцедуры // Обновить

//======================================================================
Процедура ПриОткрытии()
	
	УстановитьИнтервал(ТекущаяДата()-3,ТекущаяДата(),1);
	Если фл_готовности=1 Тогда
		ОбновитьДанные();			
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии

//======================================================================
Процедура ПриУстановкеИнтервала(ДатаНач,ДатаКон)
	Если фл_готовности=1 Тогда
		ЗагрузкаДанныхИзДиапазона(ДатаНач,ДатаКон);
		ЗаполнитьСост();
	КонецЕсли;	
КонецПроцедуры // ПриУстановкеИнтервала

//ит_ДокМаршр=СоздатьОбъект("ТаблицаЗначений");
ит_ДокМаршр=СоздатьОбъект("ИндексированнаяТаблица");
фл_готовности=0;