Перем Сканер Экспорт;
Перем Сост;



Функция ФорматВывода( парам )
	Если парам = "Сумма" Тогда
		Если ПустоеЗначение( ТекущийДокумент ) = 1 Тогда Возврат ""; КонецЕсли;
		Если ТекущийДокумент.Вид() = "СнятиеРезерва" Тогда Возврат ""; КонецЕсли;
		Возврат ФРМ( ТекущийДокумент.Итог("Сумма"), ТекущийДокумент.Валюта, 1 );
	ИначеЕсли парам = "КодКлиента" Тогда
		Если ПустоеЗначение( Клиент ) = 1 Тогда Возврат ""; КонецЕсли;
		Возврат Клиент.Код;
	ИначеЕсли парам = "Состояние" Тогда
		Если флСтатусПоказывать=1 Тогда
			Сост=глПолучитьСостояниеЗаявки(ТекущийДокумент);
			Возврат ?(ПустоеЗначение(Сост)=0,Сост.Наименование,"");
		Иначе
			Возврат "";
		КонецЕсли;
	КонецЕсли;
КонецФункции

//Процедура ПодключитьСканер()
//	Если ФС.СуществуетФайл(КаталогПрограммы()+"\ScanOPOS.dll") = 1 Тогда
//		Попытка
//			Сканер = СоздатьОбъект("AddIn.Scanner");
//			Если Сканер.Подсоединить("Scanner") = 0 Тогда
//				Сканер.ИмяСобытия = "Read";
//				Сканер.Порт = 3;
//				Сканер.УстройствоВключено = 1;
//				Сканер.Занять(1);
//				Сканер.ОчиститьВход();
//				Сканер.ОчиститьВыход();
//				Сканер.ПосылкаДанных = 1;
//			КонецЕсли;
//		Исключение
//			Сообщить("Ошибка подключения сканека!");
//		КонецПопытки;
//	КонецЕсли;
//КонецПроцедуры

Процедура ПриОткрытии()
	ЗакладкиОтбора( "ВидЗаявки",1,1,Перечисление.ВидыЗаявок.СводнаяЗаявка );
		
	спВидПоискаПоШтрихКоду.ТекущаяСтрока(Число(ВосстановитьЗначение("ВидПоискаПоШтрихКоду")));
	
	флСтатусПоказывать = ВосстановитьЗначение("флСтатусПоказывать");
	
	Форма.лСостояние.Видимость(флСтатусПоказывать);
		
	//ПодключитьСканер();
КонецПроцедуры

Процедура ПриЗакрытии()
	СохранитьЗначение("ВидПоискаПоШтрихКоду",спВидПоискаПоШтрихКоду.ТекущаяСтрока());
	СохранитьЗначение("флСтатусПоказывать",флСтатусПоказывать);
	Сканер = "";
КонецПроцедуры

Функция ВводНаОсн( пДок )
	сп = СоздатьОбъект( "СписокЗначений" );
	док = Метаданные.Документ(пДок.Вид());
	Для н = 1 По док.ВводимыеНаОснованииДокументы.Количество() Цикл
		Вид = док.ВводимыеНаОснованииДокументы.Получить( н ).Идентификатор;
		Предст = док.ВводимыеНаОснованииДокументы.Получить( н ).Синоним;
		сп.ДобавитьЗначение(Вид,Предст);
	КонецЦикла;
	Если сп.ВыбратьЗначение(Вид,"Выберите вид документа",,,0) = 1 Тогда
		ОткрытьФорму("Документ."+Вид,,пДок);
	КонецЕсли;
КонецФункции

Процедура НайтиПоШтрихКоду(ШтрихКод)

	док = СоздатьОбъект( "Документ" );

	//поиск по номеру	
	Если Найти(ШтрихКод,"-")>0 Тогда
		ТекстЗапроса="SELECT TOP 1 IDDOC [ТекущийДокумент $Документ.Счет]	
		|			  FROM _1sjourn (NOLOCK)
		|			  WHERE DOCNO=:НомерДок AND DATE_TIME_IDDOC >= :Нач AND IDDOCDEF=$ВидДокумента.Счет
		|			  ORDER BY DATE_TIME_IDDOC DESC
		|";
		
		
		Запрос=СоздатьОбъект("ODBCRecordSet");
		Запрос.УстановитьТекстовыйПараметр("НомерДок",СокрЛП(выбШтрихКод));
		Запрос.УстановитьТекстовыйПараметр("Нач",РабочаяДата()-90);
		ДокТек=Запрос.ВыполнитьСкалярный(ТекстЗапроса);
		
		Если ПустоеЗначение(ДокТек)=0 Тогда
			Док.НайтиДокумент(ДокТек);
			
			Если (ПравоДоступа("ПроведениеДокумента", "Документ.РасходнаяНакладная" ) = 1) И ((спВидПоискаПоШтрихКоду.ТекущаяСтрока()=2) ИЛИ (спВидПоискаПоШтрихКоду.ТекущаяСтрока()=3)) И (Док.ДатаДок>Константа.ДатаЗапретаРедактированияЗаказов) Тогда
				//устанавливаем комплектовщика
				СпрК=СоздатьОбъект("Справочник.Комплектовщики");
				СпрК.НайтиЭлемент(Док.Комплектовщик);
				Если СпрК.Выбрать("Выберите комплектовщика для эл. заявки <"+Док.НомерДок+">","ФормаСписка")=1 Тогда
					Док.Комплектовщик=СпрК.ТекущийЭлемент();
					ОбъектЗаписать(Док,);
				КонецЕсли;
			КонецЕсли;
			
			Если спВидПоискаПоШтрихКоду.ТекущаяСтрока() = 1 Тогда
				ДатаС = ?(НачалоИнтервала() > док.ДатаДок,док.ДатаДок,НачалоИнтервала());
				ДатаПо = ?(КонецИнтервала() < док.ДатаДок,док.ДатаДок,КонецИнтервала());
				УстановитьИнтервал(ДатаС,ДатаПо);
				АктивизироватьОбъект(док.ТекущийДокумент());
				Активизировать("Документ",0);
			ИначеЕсли спВидПоискаПоШтрихКоду.ТекущаяСтрока() = 2 Тогда
				ВводНаОсн( док.ТекущийДокумент() );
			КонецЕсли;
			выбШтрихКод = "";
			
		КонецЕсли;
	Иначе
		//ШтрихКод = СокрЛП(выбШтрихКод);
		//Сообщить("Штрих-код: "+ШтрихКод);
		Если Лев(СокрЛП(ШтрихКод),1)='0' Тогда
		Иначе
			ШтрихКод = Лев(ШтрихКод,СтрДлина(ШтрихКод)-1);
		КонецЕсли;
		ПолныйКод = Прав("0000000000"+СокрЛП(ШтрихКод),17);
		Если док.ВыбратьПоЗначению(,,"IDD",ПолныйКод) = 1 Тогда
			док.ПолучитьДокумент();
			
			Если (ПравоДоступа("ПроведениеДокумента", "Документ.РасходнаяНакладная" ) = 1) И ((спВидПоискаПоШтрихКоду.ТекущаяСтрока()=2) ИЛИ (спВидПоискаПоШтрихКоду.ТекущаяСтрока()=3)) И (Док.ДатаДок>Константа.ДатаЗапретаРедактированияЗаказов) Тогда
				//устанавливаем комплектовщика
				СпрК=СоздатьОбъект("Справочник.Комплектовщики");
				СпрК.НайтиЭлемент(Док.Комплектовщик);
				Если СпрК.Выбрать("Выберите комплектовщика для эл. заявки <"+Док.НомерДок+">","ФормаСписка")=1 Тогда
					Док.Комплектовщик=СпрК.ТекущийЭлемент();
					ОбъектЗаписать(Док,);
				КонецЕсли;
			КонецЕсли;
			
			Если спВидПоискаПоШтрихКоду.ТекущаяСтрока() = 1 Тогда
				ДатаС = ?(НачалоИнтервала() > док.ДатаДок,док.ДатаДок,НачалоИнтервала());
				ДатаПо = ?(КонецИнтервала() < док.ДатаДок,док.ДатаДок,КонецИнтервала());
				УстановитьИнтервал(ДатаС,ДатаПо);
				АктивизироватьОбъект(док.ТекущийДокумент());
				Активизировать("Документ",0);
			ИначеЕсли спВидПоискаПоШтрихКоду.ТекущаяСтрока() = 2 Тогда
				ВводНаОсн( док.ТекущийДокумент() );
			КонецЕсли;
			выбШтрихКод = "";
		Иначе
			Сообщить(Шаблон("Не найден документ по штрих-коду [ПолныйКод]"),"!");
			Активизировать("выбШтрихКод",0);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные)
	//Сообщить(Шаблон("Источник-[Источник] Событие-[Событие] Данные-[Данные]"));
	НайтиПоШтрихКоду( Данные );
КонецПроцедуры

Функция Раскрасить()
	
	Сост = "";

	Если (ТекущийДокумент.Вид()="Счет") И (флСтатусПоказывать=1) Тогда
		
		Сост = глПолучитьСостояниеЗаявки(ТекущийДокумент,0);
		
		Если ПустоеЗначение(Сост)=0 Тогда
//			Форма.лСостояние.Заголовок(Сост.Наименование);
			Возврат "BRUSH["+?(ПустоеЗначение(Сост.ЦветФонаДляЖурнала)=1,"NONE",Сост.ЦветФонаДляЖурнала.НомерЦвета)+"]COUNT[2]";
		КонецЕсли;

		//Если (Сост = "Отменена") ИЛИ (Сост = "Аннулирована") Тогда
		//ИначеЕсли (Сост = "Отгружена") Тогда
		//	Возврат "BRUSH["+глПолучитьЦвет(0,255,0)+"]COUNT[2]";		
		//ИначеЕсли (Сост = "Комплектуется") Тогда
		//	Возврат "BRUSH["+глПолучитьЦвет(192,192,192)+"]COUNT[2]";
		//КонецЕсли;
	КонецЕсли;
КонецФункции

Процедура ОткрытьНеотгруженныеЗаявки()
	Путь = КаталогИБ() + "\ExtForms\ДопЖурналы\ТП_НеотгруженныеЗаявки.ert";
	Если ФС.СуществуетФайл( Путь ) = 0 Тогда Возврат КонецЕсли;
	Конт="";
	ОткрытьФорму( "Обработка", конт, Путь );	
КонецПроцедуры

спВидПоискаПоШтрихКоду.ДобавитьЗначение(1,"поиск документа");
спВидПоискаПоШтрихКоду.ДобавитьЗначение(2,"уст.компл + ввод на основании");
спВидПоискаПоШтрихКоду.ДобавитьЗначение(3,"уст. комплектовщика");