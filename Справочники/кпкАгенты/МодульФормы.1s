Перем ТекПапка;

//******************************************************************************
Процедура УстановитьДоступностьКнопкиОткрытияТиповЦен()
	
	Если ДоступностьТиповЦен =1 Тогда
		Форма.кнОкрытьСписокТиповЦен.Видимость(1); 
	Иначе
		Форма.кнОкрытьСписокТиповЦен.Видимость(0);
	КонецЕсли;
	
КонецПроцедуры

//******************************************************************************
Процедура ВводНового()
	Идентификатор 	= глАПСоздатьИдентификатор();	
КонецПроцедуры // ВводНового()
                                               
//******************************************************************************
Процедура ОбработкаВыбораЗначения(ВыбЗнач, ИдентЭлемДиалога, ФлагСтандОбр) 
	
	Если ИдентЭлемДиалога = "ПланПродаж" Тогда
		Если ВыбЗнач.ЭтоГруппа() = 0 Тогда
			Предупреждение("В качестве плана продаж можно выбирать только группы!",10);
			ФлагСтандОбр = 0;	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры    

//******************************************************************************
Процедура ПриВыбореЗакладки(НомЗак, ЗначЗак)
	
	Если НомЗак = 0 Тогда
	    НомЗак = Форма.Закладки.НайтиЗначение(ЗначЗак);
		Если НомЗак = 0 Тогда
		    НомЗак = 1;
			ЗначЗак = Форма.Закладки.ПолучитьЗначение(НомЗак);
		КонецЕсли;
		Форма.Закладки.ТекущаяСтрока(НомЗак);
	КонецЕсли;
    
	Форма.ИспользоватьСлой(ЗначЗак + ",Общие", 2);			
	
	УстановитьДоступностьКнопкиОткрытияТиповЦен();
		
КонецПроцедуры // ПриВыбореЗакладки()

//******************************************************************************
Процедура ПриЗаписи()  
	
	ЗапрСимволы = "абвгдеёжзийклмнопрстуфхцчшщъыьэюяё!№;%:?*()_+/{}:?><""""""";   
	
	Ошибка = 0;                                                                   
	
	Если (Ссылка.Выбран() = 0) Тогда
		Сообщить("Не заполнено поле ""Агент""!", "!");
		Ошибка = 1;
	КонецЕсли;
	
	// Проверяем папку Агент Плюс СОД на наличие символов "/" и "\"
	Если (Найти(кпкАпсПапка, "/") > 0) или (Найти(кпкАпсПапка, "\") > 0) Тогда
		Сообщить("Введены неверные символы (""/"", ""\"") в поле: ""Папка обмена ""Агент Плюс СОД""",  "!");
		Ошибка = 1;			
	КонецЕсли;  	
		               
	// Проверяем правильность введенной имени папки обмена
	Для Поз = 1 По СтрДлина(КпкАпсПапка) Цикл		
		лСимв = Сред(КпкАпсПапка, Поз, 1);
	    Если Найти (ЗапрСимволы, Нрег(лСимв)) > 0 Тогда
			Сообщить("В качестве названия папки обмена для службы ""Агент Плюс СОД"" нельзя использовать символы на кириллице и ASCII-символыы!", "!");
	    	Ошибка = 1;
			Прервать;
	    КонецЕсли;
	КонецЦикла;       
	
	// Проверяем правильность введенного пароля
	Для Поз = 1 По СтрДлина(кпкПарольZip) Цикл		
		лСимв = Сред(кпкПарольZip, Поз, 1);
		Если Найти (ЗапрСимволы, Нрег(лСимв)) > 0 Тогда
			Сообщить("Пароль ZIP введен неверно. Нельзя использовать символы на кириллице и ASCII-символы!", "!");
			Ошибка = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	  
	// Проверка на дубли
	Спр = СоздатьОбъект("Справочник.кпкАгенты");
	Если Спр.НайтиПоРеквизиту("Ссылка", Ссылка, 1) = 1 Тогда  
		Если Спр.ТекущийЭлемент() <> ТекущийЭлемент() Тогда
			Сообщить("В справочнике уже есть запись для физ. лица: " + Строка(Ссылка) + "!", "!");
			Ошибка = 1;			
		КонецЕсли;
	КонецЕсли;        
	
	Если Ошибка = 1 Тогда	    		
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;  

	Наименование = СокрЛП(Ссылка.Наименование);
	
	Если ТекПапка <>  КпкАпсПапка Тогда		
		Предупреждение("Были изменены настройки обмена. Необходимо сгенерировать настройки для """"Агент Плюс: СОД""");		 
		Ответ = Вопрос("Сформировать настройки сейчас", 3, 60);
		Если Ответ = 6 Тогда                                   
			Если ФС.СуществуетФайл(КаталогИБ() + "ExtForms\КпкАпсГенерацияФайлаНастроек.ert") = 0 Тогда
				Сообщить("Не найден файл для генерации настроек: " + КаталогИБ() + "ExtForms\КПКНастройкаАгентПлюс.ert", "!");				
			Иначе			
				Записать();
				ОткрытьФорму("Отчет", "Генерация", КаталогИБ() + "ExtForms\КпкАпсГенерацияФайлаНастроек.ert");
			КонецЕсли; 			
		КонецЕсли;
	КонецЕсли;  
	
	//Если ТекущийЭлемент().Выбран() = 1 Тогда		
	//	СпрДостТипыЦен = СоздатьОбъект("Справочник.кпкТипыЦенАгентов");
	//	СпрДостТипыЦен.ИспользоватьВладельца(ТекущийЭлемент());
	//	СпрДостТипыЦен.ВыбратьЭлементы(1);
	//	Если СпрДостТипыЦен.ПолучитьЭлемент() = 1 Тогда
	//		ДоступныеТипыЦен = СпрДостТипыЦен.ТекущийЭлемент();  	 			
	//	КонецЕсли;	                        
	//КонецЕсли;
	
КонецПроцедуры //ПриЗаписи 
//
////******************************************************************************
//Процедура ПриЗакрытии() 
//	
//	Если (Ссылка.Выбран() = 1) и (ПустоеЗначение(Наименование) = 1) Тогда
//		Наименование = СокрЛП(Ссылка.Наименование); 	
//		Записать();
//	КонецЕСли;  
//	
//КонецПроцедуры       

//******************************************************************************
Процедура ПриОткрытии() 

	Форма.ИспользоватьЗакладки(1);	
	Форма.Закладки.ДобавитьЗначение("Основной",	  	  "Основные");
	Форма.Закладки.ДобавитьЗначение("Дополнительные", "Дополнительные");	
	Форма.Закладки.ДобавитьЗначение("Обмен",          "Обмен данными");
	
	//Если Константа.кпкИспользоватьГПС = 1 Тогда
	//	Форма.Закладки.ДобавитьЗначение("GPS",    		  "GPS");      
	//КонецЕсли;
	
	ПриВыбореЗакладки(0, "Основные");
	
	ТекПапка = КпкАпсПапка;    
	                            
	Поз = ВыбДоступностьТиповЦен.НайтиЗначение(ДоступностьТиповЦен);
	
	ВыбДоступностьТиповЦен.ТекущаяСтрока(Поз);

КонецПроцедуры   

//******************************************************************************
Процедура кнНастройкиНажатие()    
	    	
	Если МобильноеПриложение.Выбран() = 0 Тогда
		
		Предупреждение("Необходимо указать мобильное приложение, с которым работает агент!", 60);
		СтатусВозврата(0); 
		Возврат;
		
	Иначе   
		
		Если ТекущийЭлемент().Выбран() = 1 Тогда      
			
			Если МобильноеПриложение = Перечисление.кпкМобильныеПриложения.АгентПлюс15 Тогда
				
				Если ФС.СуществуетФайл(КаталогИБ() + "ExtForms\КПКНастройкаАгентПлюс.ert") = 0 Тогда
					Сообщить("Нет файла: " + КаталогИБ() + "ExtForms\КПКНастройкаАгентПлюс.ert", "!");
					Сообщить("Не найдена обработка для настройки ""Агент Плюс 1.5"" на мобильном устройстве!", "!");
				Иначе					
					ОткрытьФормуМодально("Отчет", ТекущийЭлемент(), КаталогИБ() + "ExtForms\КПКНастройкаАгентПлюс.ert");
				КонецЕсли;
				
//+ 2012.10.17
			ИначеЕсли (МобильноеПриложение = Перечисление.кпкМобильныеПриложения.АгентПлюсМТ) или (МобильноеПриложение = Перечисление.кпкМобильныеПриложения.РМК) Тогда				
//- 2012.10.17
				
				СпрНастройки = СоздатьОбъект("Справочник.кпкНастройкиАгентов");		                     
				СпрНастройки.ИспользоватьВладельца(ТекущийЭлемент());
				
				Если СпрНастройки.ВыбратьЭлементы(1) = 1 Тогда			
					Пока СпрНастройки.ПолучитьЭлемент() = 1 Цикл				
						ОткрытьФорму(СпрНастройки.ТекущийЭлемент(),Контекст, 0);			    
					КонецЦикла;      			
				Иначе                                                           			
					ОткрытьФормуМодально("Элемент.кпкНастройкиАгентов", Контекст, , , ТекущийЭлемент());		    
				КонецЕсли;    		
				
			КонецЕсли;  			
			
		Иначе                                                                               		
			Предупреждение("Сначала нужно записать текущий элемент справочника!", 60);      	    			
		КонецЕсли;   		
		
	КонецЕсли;
	
КонецПроцедуры  

//******************************************************************************
Процедура ПриВыбореДоступности()
	
	ДоступностьТиповЦен = ВыбДоступностьТиповЦен.ПолучитьЗначение(ВыбДоступностьТиповЦен.ТекущаяСтрока()); 
	
	УстановитьДоступностьКнопкиОткрытияТиповЦен();
	
КонецПроцедуры  

//******************************************************************************
Процедура ОткрытьСписокТиповЦен()
	
	Если ТекущийЭлемент().Выбран() = 1 Тогда
		
		СпрДостТипыЦен = СоздатьОбъект("Справочник.кпкТипыЦенАгентов");
		СпрДостТипыЦен.ИспользоватьВладельца(ТекущийЭлемент());
		СпрДостТипыЦен.ВыбратьЭлементы();
		Если СпрДостТипыЦен.ПолучитьЭлемент() = 1 Тогда
			ОткрытьФормуМодально(СпрДостТипыЦен.ТекущийЭлемент(), Контекст, , 0, ТекущийЭлемент());  	 			
		Иначе	                                                  
			ОткрытьФормуМодально("Элемент.кпкТипыЦенАгентов", Контекст, , 0, ТекущийЭлемент());  	 
		КонецЕсли;	
		
	Иначе                                                                               		
		
		Предупреждение("Сначала нужно записать текущий элемент справочника!", 60);      	    					

	КонецЕсли;
	
КонецПроцедуры //ОткрытьСписокТиповЦен 

//******************************************************************************

ВыбДоступностьТиповЦен.ДобавитьЗначение(0, "Доступны все типы цен");
ВыбДоступностьТиповЦен.ДобавитьЗначение(1, "Типы цен из списка");
	
ВыбДоступностьТиповЦен.ТекущаяСтрока(1);
