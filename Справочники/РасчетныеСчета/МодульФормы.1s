Перем ВводНового;
Перем Записали;
Перем ВнКонтекст;

//***** 
//
// Возвращаемое значение:
//  0 - если все нормально
//  не 0 - если счет указан неверно.
//
// Функция проверяет правильность указания номера расчетного счета
// по алгоритму проверки правильности расчета контрольного ключа.
// 
Функция ПроверкаСчета( Номер )
	Перем Поз; // счетчик цикла

	// Весовые коэффициенты
	Вес="71371371371371371371371";
		
	КонтрСумма=0;
	
	Для Поз=1 По 23 Цикл
		Произв=Число(Сред(Номер, Поз, 1))*Число(Сред(Вес, Поз, 1));
		МладшийРазряд=Число(Прав(Строка(Произв),1));
		КонтрСумма=КонтрСумма+МладшийРазряд;
	КонецЦикла;
	
	Проверка=КонтрСумма/10-Цел(КонтрСумма/10);
	
	Возврат Проверка;
	
КонецФункции

//*****
//
// Описание:
//  Процедура предназначена для проверки правильности указания номеров расчетного
// и корреспондентских счетов, так как вероятность ошибки при вводе 20-разрядного
// номера велика, и такая проверка будет удобным дополнительным сервисом.
//  Правильность указания банковских реквизитов проверяется по следующим критериям:
//  - длина номера счета должна быть 20 символов;
//  - длина БИК должна быть 9 символов;
//  - БИК должен быть числом (проверять номер счета на число нельзя, так как в случае
//    использования клиринговой валюты в 6-м разряде номера может стоять символ
//    (хотя это редкий случай));
//  - номера счетов и БИК совместно проверяются по алгоритму проверки правильности 
//    расчета контрольного ключа.
//  Если какое-либо из этих условий не выполняется, выдается сообщение в окно сообщений,
// но информация о расчетном счете все равно записывается в справочник.
Процедура КонтрольСчета()
	ПроверятьКлючРасчетногоСчета=Да;
	ПроверятьКлючКоррСчета=Да;
	
    // Проверяем номер счета и реквизиты банка организации
	
	// Длина номера счета должна быть равна 20
	Если ПустаяСтрока( Номер ) = 0 Тогда
		Если СтрДлина( СокрЛП( Номер ) ) <> 20 Тогда
		    Сообщить( "Возможно, номер расчетного счета указан неверно.", "!" );
		    ПроверятьКлючРасчетногоСчета=Нет;
		КонецЕсли;
	Иначе
		ПроверятьКлючРасчетногоСчета=Нет;
	КонецЕсли;
	
	// Длина номера корр. счета должна быть равна 20
	Если ПустаяСтрока( КоррСчетБанка ) = 0 Тогда
		Если СтрДлина( СокрЛП( КоррСчетБанка ) ) <> 20 Тогда
		    Сообщить( "Возможно, номер корсчета банка указан неверно.", "!" );
		    ПроверятьКлючКоррСчета=Нет;
		КонецЕсли;
	Иначе
		ПроверятьКлючКоррСчета=Нет;
	КонецЕсли;
	
	// Если указан БИК, начинаем проверять его
	Если ПустаяСтрока( БИКБанка ) = 0 Тогда
		ВыдатьСообщение=Нет;
		
		// Длина БИК должна быть равна 9
		Если СтрДлина( СокрЛП( БИКБанка ) ) <> 9 Тогда
			ВыдатьСообщение=Да;
		КонецЕсли;
	
		// БИК должен быть числом
		Если Число( БИКБанка ) = 0 Тогда
			ВыдатьСообщение=Да;
		КонецЕсли;
		
		Если ВыдатьСообщение=Да Тогда
	    	Сообщить( "Возможно, БИК указан неверно.", "!" );
	    	ПроверятьКлючРасчетногоСчета=Нет;
	    	ПроверятьКлючКоррСчета=Нет;
		КонецЕсли;
	Иначе
		ПроверятьКлючРасчетногоСчета=Нет;
		ПроверятьКлючКоррСчета=Нет;
	КонецЕсли;
	
	
	Если ПроверятьКлючРасчетногоСчета=Да Тогда
		
		// Для проверки к номеру счета слева добавляются 3 последние цифры БИК
		Если ПроверкаСчета( Прав( БИКБанка, 3 )+Номер ) <> 0 Тогда
		    Сообщить( "Возможно, номер расчетного счета или БИК указаны неверно.", "!" );
		КонецЕсли;
	    
	КонецЕсли;
	
	Если ПроверятьКлючКоррСчета=Да Тогда
		
		// Для проверки к номеру корреспондентского счета слева добавляются 0
		// и 5-й и 6-й разряды БИК
		Если ПроверкаСчета( "0"+ Сред( БИКБанка, 5, 2 ) + КоррСчетБанка ) <> 0 Тогда
		    Сообщить( "Возможно, номер корсчета или БИК указан неверно.", "!" );
		КонецЕсли;

	КонецЕсли;
	

КонецПроцедуры // КонтрольСчета

//*****
Процедура ВключитьРеквизитыРасчетногоБанка( ФлагДоступности )
	
	Форма.Текст_НаименованиеРасчетногоБанка.Доступность( ФлагДоступности );
	Форма.БанкРасчетный.Доступность( ФлагДоступности );
	Форма.Текст_ГородБанкаРасчетного.Доступность( ФлагДоступности );
	Форма.ГородБанкаРасчетного.Доступность( ФлагДоступности );
	Форма.Текст_КоррСчетБанкаРасчетного.Доступность( ФлагДоступности );
	Форма.КоррСчетБанкаРасчетного.Доступность( ФлагДоступности );
	Форма.Текст_БИКБанкаРасчетного.Доступность( ФлагДоступности );
	Форма.БИКБанкаРасчетного.Доступность( ФлагДоступности );

КонецПроцедуры // ВключитьРеквизитыРасчетногоБанка

//*****
Процедура УстановкаРасчетов()
	ПрямыеРасчеты=ФлагРасч;
	ВключитьРеквизитыРасчетногоБанка( ?( ПрямыеРасчеты=0, 1, 0 ) );
КонецПроцедуры

//*****
Процедура ВводНового()
	Наименование="Основной";
	Номер="новый";
    ПрямыеРасчеты=1;
	ВводНового = 1;
КонецПроцедуры 

//*****
Процедура ПриОткрытии()
	Если глФлагРасшифровки=1 Тогда
	    ВнКонтекст=глРасшифровка;
	КонецЕсли;
//	ФлагРасч=ПрямыеРасчеты;
//	ВключитьРеквизитыРасчетногоБанка( ?( ПрямыеРасчеты=0, 1, 0 ) );
КонецПроцедуры

//*****
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи() Далее
//Конец текста, вставленного Инсталлятором МОД
Процедура стар_ПриЗаписи()
//Закомментировано Инсталлятором МОД:Процедура ПриЗаписи()
	КонтрольСчета();
	Наименование=?(ПустЗнач(Наименование)=1,Номер,Наименование); 
	ПрямыеРасчет=ФлагРасч;
	Записали = 1;
КонецПроцедуры
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	ПриИзмененииОбъекта(Контекст, ТекущийЭлемент(), РабочаяДата());
	стар_ПриЗаписи();
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД


//*****
Процедура ПриЗакрытии()
    Если ТипЗначенияСтр(ВнКонтекст)="ГрупповойКонтекст" Тогда
		Если Записали = 1 Тогда
			Если ВводНового=1 Тогда
				ВнКонтекст.СписокСчетов.ДобавитьЗначение(ТекущийЭлемент(),"Р/с № "+СокрЛП(Номер)+" в "+СокрЛП(Банк));
				ВнКонтекст.СписокСчетов.ТекущаяСтрока(ВнКонтекст.СписокСчетов.РазмерСписка());
				ВнКонтекст.Форма.КнИзменить.Доступность(1);
				ВнКонтекст.Форма.КнУдалить.Доступность(1);
			Иначе                                  
				Поз=ВнКонтекст.СписокСчетов.НайтиЗначение(ТекущийЭлемент());
				ВнКонтекст.СписокСчетов.УдалитьЗначение(Поз);
				ВнКонтекст.СписокСчетов.ВставитьЗначение(Поз,ТекущийЭлемент(),"Р/с № "+СокрЛП(Номер)+" в "+СокрЛП(Банк));
				ВнКонтекст.СписокСчетов.ТекущаяСтрока(Поз);
			КонецЕсли;
			ВнКонтекст.Форма.Обновить();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

