Перем ВидСпрСотр;

Функция Доступ()
	
	Если ТипСвязи=1 Тогда
		Форма.СвязьЗадача.Доступность(0);
		Форма.СвязьКомментарий.Доступность(0);
	ИначеЕсли ТипСвязи = 2 Тогда
		Форма.СвязьЗадача.Доступность(1);
		Форма.СвязьКомментарий.Доступность(0);
	ИначеЕсли ТипСвязи = 3 Тогда
		Форма.СвязьЗадача.Доступность(0);
		Форма.СвязьКомментарий.Доступность(1);
	КонецЕсли;

	Форма.кнВвестиРезультат.Доступность(Выбран());
	Возврат "";
КонецФункции

Процедура ПриУстановкеСвязи()
	Если ТипСвязи=1 Тогда
		СвязьЗадача="";
		СвязьКомментарий="";
	ИначеЕсли ТипСвязи = 2 Тогда
		СвязьКомментарий="";
	ИначеЕсли ТипСвязи = 3 Тогда
		СвязьЗадача="";
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ПустоеЗначение(Форма.Параметр)=0 Тогда
		Если Форма.Параметр.Вид()="КомментыОбъектов" Тогда
			СвязьКомментарий=Форма.Параметр;
		Иначе
			СвязьЗадача=Форма.Параметр;
		КонецЕсли;
	КонецЕсли;
	
	Если (ДатаИзм<РабочаяДата()) И (Выбран()=1) Тогда
		Форма.ТолькоПросмотр(1);
	КонецЕсли;

	Если ПустоеЗначение(СвязьЗадача)=0 Тогда
		ТипСвязи=2;
	ИначеЕсли ПустоеЗначение(СвязьКомментарий)=0 Тогда
		ТипСвязи=3;
	Иначе
		ТипСвязи=1;
	КонецЕсли;	
	
КонецПроцедуры
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи() Далее
//Конец текста, вставленного Инсталлятором МОД
Процедура стар_ПриЗаписи()
//Закомментировано Инсталлятором МОД:Процедура ПриЗаписи()
	Если (ПустоеЗначение(ДатаСлед)=0) И (ПустоеЗначение(СодержаниеСлед)=1) Тогда
		Предупреждение("Указывая дату след. укажите описание контакта / задачи!");
		СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	ПриИзмененииОбъекта(Контекст, ТекущийЭлемент(), РабочаяДата());
	стар_ПриЗаписи();
КонецПроцедуры

Процедура ВводНового()
	Ответственный = глПользователь.ФизЛицо;
	ТипСвязи = 1;
	ДатаИзм = РабочаяДата();
	Автор = глПользователь.ФизЛицо;

КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД

Процедура ВыбратьОтветственного()
	ODBCRecordSet = СоздатьОбъект( "ODBCRecordSet" );
	ТекстЗапроса="
	|SELECT
	|	Спр.ID as [Куратор $Справочник."+ВидСпрСотр+"]
	|FROM 
	|	$Справочник."+ВидСпрСотр+" as Спр
	|WHERE
	|	Спр.IsMark = 0
	|	AND $Спр.КураторОбъектов = 1
	|ORDER BY $Спр.ПоАлфавиту
	|";
	табл = ODBCRecordSet.ВыполнитьИнструкцию(ТекстЗапроса);
	сп = СоздатьОбъект("СписокЗначений");
	табл.Выгрузить(сп,,,"Куратор");
	выб = Ответственный;
	Если сп.ВыбратьЗначение(выб,,,,2) = 1 Тогда
		Ответственный = выб;
	КонецЕсли;
КонецПроцедуры


Процедура ПриНачалеВыбораЗначения(Идент,Флаг)

	Если Идент = "Ответственный" Тогда
		Флаг = 0;
        ВыбратьОтветственного();
	ИначеЕсли Идент = "СвязьЗадача" Тогда
		Флаг = 0;
		ODBCRecordSet = СоздатьОбъект( "ODBCRecordSet" );
		ТекстЗапроса="SELECT ЗадачиОбъектов.ID [ТекущийЭлемент $Справочник.ЗадачиОбъектов]
		|					, CONVERT(VARCHAR(30),ЗадачиОбъектов.DESCR) Наименование
		|					, CONVERT(VARCHAR(60),$ЗадачиОбъектов.Описание) Описание
		|					, $ЗадачиОбъектов.ДатаСозд ДатаСозд
		|					, $ЗадачиОбъектов.ДатаВып ДатаВып
		|					, $ЗадачиОбъектов.Автор [Автор $Справочник.ФизЛица]
		|					, $ЗадачиОбъектов.Ответственный [Ответственный $Справочник.ФизЛица]
		|			  FROM $Справочник.ЗадачиОбъектов AS ЗадачиОбъектов
		|			  WHERE ($ЗадачиОбъектов.Сост = $Перечисление.СостоянияЗадачОбъектов.ВРаботе)
		|					AND IsMark = 0 AND ЗадачиОбъектов.PARENTEXT=:Объект
		|			  ORDER BY $ЗадачиОбъектов.ДатаСозд DESC, $ЗадачиОбъектов.ДатаВып DESC
		|";

		ODBCRecordSet.УстановитьТекстовыйПараметр("Объект",Владелец);
		табл = ODBCRecordSet.ВыполнитьИнструкцию(ТекстЗапроса);
		табл.ВидимостьКолонки("ТекущийЭлемент",0);
		поз=0;
		Если табл.ВыбратьСтроку(поз,"Выберите задачу по которой ведется работа")=1 Тогда
			СвязьЗадача=табл.ПолучитьЗначение(поз,"ТекущийЭлемент");
		КонецЕсли;
	ИначеЕсли Идент = "СвязьКомментарий" Тогда
		Флаг = 0;
		ODBCRecordSet = СоздатьОбъект( "ODBCRecordSet" );
		ТекстЗапроса="SELECT КомментыОбъектов.ID [ТекущийЭлемент $Справочник.КомментыОбъектов]
		|					, $КомментыОбъектов.ДатаСлед ДатаСлед
		|					, CONVERT(VARCHAR(60),$КомментыОбъектов.СодержаниеСлед) Задача
		|					, CONVERT(VARCHAR(60),$КомментыОбъектов.Содержание) Результат
		|					, $КомментыОбъектов.Ответственный [Ответственный $Справочник.ФизЛица]
		|			  FROM $Справочник.КомментыОбъектов AS КомментыОбъектов
		|			  WHERE (КомментыОбъектов.PARENTEXT = :Объект)	
		|					AND (($КомментыОбъектов.Ответственный = :Автор) OR ($КомментыОбъектов.Автор = :Автор))
		|			  ORDER BY $КомментыОбъектов.ДатаСлед DESC";

		ODBCRecordSet.УстановитьТекстовыйПараметр("Объект",Владелец);
		ODBCRecordSet.УстановитьТекстовыйПараметр("Автор",глПользователь.ФизЛицо);

		табл = ODBCRecordSet.ВыполнитьИнструкцию(ТекстЗапроса);
		табл.ВидимостьКолонки("ТекущийЭлемент",0);
		поз=0;
		Если табл.ВыбратьСтроку(поз,"Выберите комментарий/контакт на основании которого вводится результат")=1 Тогда
			СвязьКомментарий=табл.ПолучитьЗначение(поз,"ТекущийЭлемент");
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ВвестиРезультат()
	
	Если Выбран()=0 Тогда
		Предупреждение("Ввести результат нельзя на основании нового контакта!");
		Возврат;
	КонецЕсли;
	
	Форма.Закрыть(1);
	Конт=ТекущийЭлемент();
	ОткрытьФормуМодально("Элемент.КомментыОбъектов",Конт,,,Владелец);
КонецПроцедуры


Функция ОписаниеСвязи()
	
	Если ПустоеЗначение(СвязьЗадача)=0 Тогда
		Возврат СвязьЗадача.Описание;
	ИначеЕсли ПустоеЗначение(СвязьКомментарий)=0 Тогда
		Возврат СвязьКомментарий.СодержаниеСлед;
	КонецЕсли;
КонецФункции

ВидСпрСотр=глПользователь.ФизЛицо.Вид();