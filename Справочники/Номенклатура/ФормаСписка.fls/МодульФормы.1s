Перем СписокДействий;
Перем СписокДействийКарта;
Перем стр,стр1; 
Перем СписокПодч;
Перем Расш;
//------------------------------------------------------------------
Процедура ОткрытьКалькуляцию() 	
	КалькКарт=СоздатьОбъект("Документ");
	КалькКарт.ОбратныйПорядок(1);
	КалькКарт.ВыбратьПоЗначению(,РабочаяДата(),"ТоварШапки",ТекущийЭлемент());
	Пока КалькКарт.ПолучитьДокумент()=1 Цикл
		Если КалькКарт.Вид()="КалькуляционнаяКарта" Тогда  
			Если КалькКарт.ПометкаУдаления()=1 Тогда
				Продолжить;
			КонецЕсли;
			ЕстьКалькуляция=1;
			ДокумКальк=КалькКарт;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если  КалькКарт.Проведен()=0 Тогда
		Предупреждение("Калькуляционная карта не проведена !!!");
	КонецЕсли;
	Если ЕстьКалькуляция=1 Тогда
		ОткрытьФорму(ДокумКальк.ТекущийДокумент(),1);
	Иначе
		//ВвестиНовуюКалькуляцию();
	КонецЕсли;
КонецПроцедуры                                                      
//-------------------------------------------------------
Функция СкорироватьЗамену(Докс) 
ДокЗамены=СоздатьОбъект("Документ.ЗаменаИнгредиента");
глСоздатьНовыйОбъект(ДокЗамены);
Докс.ВыбратьСтроки();
Пока Докс.ПолучитьСтроку()=1 Цикл
	ДокЗамены.НоваяСтрока();
	ДокЗамены.Замена=Докс.Замена;
	ДокЗамены.Приор=Докс.Приор;
	ДокЗамены.КоэффициентЗамены=Докс.КоэффициентЗамены;
КонецЦикла;
ОбъектЗаписать(ДокЗамены, );
Если ДокЗамены.Провести()=1  Тогда 
	СписокПодч.ДобавитьЗначение(ДокЗамены,Строка(ДокЗамены));
	Возврат ДокЗамены;
Иначе
	Возврат 0;
КонецЕсли;
КонецФункции
//-------------------------------------------------------     
Процедура КопироватьКалькуляцию(Док)
	ПереноситьЗамены=0; 
    Если Вопрос("Переносить докоменты 'Замены ингредиентов'","Да+Нет")="Да" Тогда
		ПереноситьЗамены=1; 
	КонецЕсли;
	КалькКарт=СоздатьОбъект("Документ.КалькуляционнаяКарта");
	глСоздатьНовыйОбъект(КалькКарт);
	КалькКарт.ТоварШапки=Док.ТоварШапки;
	КалькКарт.КоличествоКалькуляции=КоличествоКалькуляции;
	ПромКолКальк=Док.КоличествоКалькуляции; 
	КалькКарт.НомерРецептур=Док.НомерРецептур;  
	КалькКарт.УровеньВложенности=Док.УровеньВложенности;
	Док.ВыбратьСтроки();
	Пока Док.ПолучитьСтроку()=1 Цикл
		КалькКарт.НоваяСтрока();
		КалькКарт.Ингредиент=Док.Ингредиент;
		КалькКарт.КоличествоНетто=Док.КоличествоНетто*КалькКарт.КоличествоКалькуляции/ПромКолКальк; 
		КалькКарт.Единица=Док.Единица;
		КалькКарт.Коэффициент=Док.Коэффициент;
		КалькКарт.КоэфСписания=Док.КоэфСписания;
		КалькКарт.СезонКоэф=УстановитьСезонныйКоэффициент(КалькКарт.Ингредиент,КалькКарт.ДатаДок);
		Если КалькКарт.КоэфСписания=100 Тогда
			КалькКарт.Количество=0;
		Иначе	
			КоличествоПром=(КалькКарт.КоличествоНетто*100)/(100-КалькКарт.КоэфСписания);
		КонецЕсли;
		Если  КалькКарт.СезонКоэф=100 Тогда
			КалькКарт.Количество=0;
		Иначе	
			КалькКарт.Количество=(КоличествоПром*100)/(100-КалькКарт.СезонКоэф);
		КонецЕсли;
		
		КалькКарт.Наценка=КалькКарт.Ингредиент.НаценкаНаИнгредиент; 
		Если ((ПереноситьЗамены=1) и (ПустоеЗначение(Док.Замена)=0)) Тогда
			ДоксЗамена=СкорироватьЗамену(Док.Замена);
			Если ДоксЗамена=0 Тогда
				Сообщить("Документ "+Док.Замена+" не скопирован. Замена не перенесена");
			КонецЕсли; 
			Если ПустоеЗначение(ДоксЗамена)<>0 Тогда
				КалькКарт.Замена=ДоксЗамена.ТекущийДокумент();	
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	    
	//Закомментировано Инсталлятором МОД:КалькКарт.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(КалькКарт, );
	//Конец текста, вставленного Инсталлятором МОД

	Если СписокПодч.РазмерСписка()>0 Тогда
	ДоксЗам=СоздатьОбъект("Документ.ЗаменаИнгредиента");
	Для i=1 По СписокПодч.РазмерСписка() Цикл
	Если ДоксЗам.НайтиДокумент(СписокПодч.ПолучитьЗначение(i))>0 Тогда
		ДоксЗам.ДокОснование=КалькКарт.ТекущийДокумент();
		//Закомментировано Инсталлятором МОД:ДоксЗам.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(ДоксЗам, );
	//Конец текста, вставленного Инсталлятором МОД

	КонецЕсли;
	КонецЦикла;
	КонецЕсли;
	ОткрытьФорму(КалькКарт.ТекущийДокумент(),1);
КонецПроцедуры	
//------------------------------------------------------------------
Процедура ВвестиНовуюКалькуляцию()
	КалькКарт=СоздатьОбъект("Документ.КалькуляционнаяКарта");
	Если КоличествоКалькуляции=0 Тогда
		КоличествоКалькуляции=1;
	КонецЕсли;
	СписокПараметров=СоздатьОбъект("СписокЗначений");
	СписокПараметров.Установить("КоличествоКалькуляции",КоличествоКалькуляции);
	СписокПараметров.Установить("ТоварШапки",ТекущийЭлемент());
	ОткрытьФорму("Документ.КалькуляционнаяКарта",СписокПараметров);  
КонецПроцедуры                                                      
//------------------------------------------------------------------
Процедура КнопкаНовКалькуляция()
	КалькКарт=СоздатьОбъект("Документ");
	КалькКарт.ОбратныйПорядок(1);
	КалькКарт.ВыбратьПоЗначению(,РабочаяДата(),"ТоварШапки",ТекущийЭлемент());
	Пока КалькКарт.ПолучитьДокумент()=1 Цикл
		Если КалькКарт.Вид()="КалькуляционнаяКарта" Тогда
			Если КалькКарт.Проведен()=0 Тогда
				Продолжить;
			КонецЕсли;	
			ЕстьКалькуляция=1;
			ДокумКальк=КалькКарт;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если ЕстьКалькуляция=1 Тогда
		стр="";
		стр1="";
		СписокДействийКарта.ВыбратьЗначение(стр,,стр1,,1);
		Если стр=2 Тогда
			Если Вопрос("Вы хотитете создать новую Кальк. карту?","Да+Нет")="Да" Тогда
				КопироватьКалькуляцию(ДокумКальк.ТекущийДокумент());  
			Иначе
				СтатусВозврата(0);
				Возврат;
			КонецЕсли; 
		ИначеЕсли стр=1 Тогда
			ОткрытьКалькуляцию();
		КонецЕсли;
	Иначе
		ВвестиНовуюКалькуляцию();
	КонецЕсли;	
КонецПроцедуры	                                                    
//---------------------------
Процедура ОткрытьФормуЭлемента() 
	Если ТекущийЭлемент().ВидТовара=Перечисление.ВидыТоваров.Блюдо Тогда
		СписокДействий.ДобавитьЗначение(2,"Открыть кальк. карту");
	КонецЕсли;                                       
	стр="";
	стр1="";
	СписокДействий.ВыбратьЗначение(стр,,стр1,,1);
	Если стр=1 Тогда
		ОткрытьФорму(ТекущийЭлемент(),,);
	Иначе
		КнопкаНовКалькуляция();	
	КонецЕсли;    
	Если ТекущийЭлемент().ВидТовара=Перечисление.ВидыТоваров.Блюдо Тогда
		СписокДействий.УдалитьЗначение(2);
	КонецЕсли;       	
КонецПроцедуры	
//-------------------------------
Процедура Печать()
	ВТ=0;
	ШТ=0;
	//  Создание Таблицы для выходного отчета
	Таб=СоздатьОбъект("Таблица");
	Тов=СоздатьОбъект("Справочник.Номенклатура");
	ВыбТовар=ТекущийЭлемент();
	Если ВыбТовар.Уровень()=1 Тогда
		Заг="По всем товарам.";
	Иначе
		Тов.ВключатьПодчиненные(1);
		Тов.ИспользоватьРодителя(ВыбТовар.Родитель);
		Заг="По товарам группы "+ВыбТовар.Родитель.Наименование;
	КонецЕсли;
	ЧислоСтрок=0;
	Ном=0;
	Таб.ВывестиСекцию("Отчет");
	Тов.ВыбратьЭлементы();
	Пока Тов.ПолучитьЭлемент()>0 Цикл 
		Если Тов.ПометкаУдаления()=1 Тогда
			Продолжить;
		КонецЕсли;
		Если Тов.ЭтоГруппа()=1 Тогда
			Таб.ВывестиСекцию("Группа");
		Иначе
			ПечПрих=ФРМ(Тов.ЦенаПриобретения,Тов.ВалютаЗакупки,1);
			ПечВал=Тов.ВалютаУчета.Наименование;
			Ном=Ном+1;
			Таб.ВывестиСекцию("Товар");
		КонецЕсли;
		Оживить(1);
	КонецЦикла;
	Таб.ПовторятьПриПечатиСтроки(4,4);
	Таб.ВывестиСекцию("Итог");
	//Вызов выходного отчета в окно просмотра и редактирования.
	Таб.Опции(0,0,4,0,ПарСтрСпр);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Список товаров по каталогу","");
	ВыбТовар=0;
КонецПроцедуры
//--------------------------------------------------------------------      
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриПереносеЭлементаВДругуюГруппу(Спр, Группа)
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	ПриИзмененииОбъекта(Контекст, ТекущийЭлемент(), РабочаяДата());
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	ПриИзмененииОбъекта(Контекст, ТекущийЭлемент(), РабочаяДата());
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД
Процедура ПриОткрытии()
	 ПросмотрИстории( "" );
	 Транслит(Расш,Форма);
КонецПроцедуры
ВыборГруппы(1);  
СписокДействий=СоздатьОбъект("СписокЗначений");
СписокДействийКарта=СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение(1,"Открыть форму ");
СписокДействийКарта.ДобавитьЗначение(1,"Открыть существующую карту "); 
СписокДействийКарта.ДобавитьЗначение(2,"Открыть новую карту "); 
СписокПодч=СоздатьОбъект("СписокЗначений");

Попытка
	Расш=СоздатьОбъект("РасширениеФормы");	
Исключение
	Расш="";
КонецПопытки;