//Не обрабатывать Инсталлятором МОД
Перем глСпр;
Перем ФайлШаблона;
//_____________________________________________________________________________
Процедура СоздатьКаталоги (Конт)
	Возврат;
	КаталогЛинк=КаталогИБ()+"Link";
	Если Фс.СуществуетФайл(КаталогЛинк)=0 Тогда
		Фс.СоздатьКаталог(КаталогЛинк);
	КонецЕсли;
	КаталогВыгрузки=КаталогЛинк+"\Out_";
	КаталогЗагрузки=КаталогЛинк+"\In__";
	Номер=1;
	Пока (Фс.СуществуетФайл(КаталогВыгрузки+Номер)=1)или(Фс.СуществуетФайл(КаталогЗагрузки+Номер)=1) Цикл
		Номер=Номер+1;
	КонецЦикла;
	Фс.СоздатьКаталог(КаталогВыгрузки+Номер);
	Фс.СоздатьКаталог(КаталогЗагрузки+Номер);
	Конт.ПутьКБазеПриВыгрузке=КаталогВыгрузки+Номер;
	Конт.ПутьКБазеПриЗагрузке=КаталогЗагрузки+Номер;
КонецПроцедуры //

//_____________________________________________________________________________

Процедура ПриОткрытии()
	РазрешитьРепликациюМОД=РазрешитьРепликациюМОД-1;
	РедактироватьВДиалоге(1,1);
	Ном=Число(ВосстановитьЗначение("НомерСправочникаЗаполененияПБ"));
	Для ф=1 по Метаданные.Справочник() Цикл
		Справочник.ДобавитьЗначение(СокрЛП(Метаданные.Справочник(ф).Идентификатор),СокрЛП(Метаданные.Справочник(ф).Идентификатор));
	КонецЦикла;
	Если (Ном>0)И(Ном<=Метаданные.Справочник()) Тогда
		Справочник.ТекущаяСтрока(Ном);
	КонецЕсли;
КонецПроцедуры	
//_____________________________________________________________________________
Процедура Запомнить()
	глБуферОбменаДляМОД=ТекущийЭлемент();
КонецПроцедуры
//_____________________________________________________________________________ 


Процедура Вставить()
	Перем Род[9];
	глСпр=глБуферОбменаДляМОД;
	Если ТипЗначения(глСпр)<>11 Тогда
		Возврат;
	КонецЕсли;  
	
	Если глСпр.Вид()<>Вид() Тогда
		Возврат;
	КонецЕсли;  
	
	Если глСпр.Выбран()=0 Тогда
		Возврат;
	КонецЕсли;
	
	Константа_УникальныйIDD=Константа.УникальныйIDD;
	Константа_IDD=Константа.IDD;
	НачатьТранзакцию();
	Спр=СоздатьОбъект("Справочник.ПериферийныеБазы");
	глСоздатьНовыйОбъект(Спр);
	Спр.Родитель=Родитель;
	Спр.Наименование=глСпр.Наименование;
	Для ы=1 по Метаданные.Справочник("ПериферийныеБазы").Реквизит() Цикл
		Спр.УстановитьАтрибут(Метаданные.Справочник("ПериферийныеБазы").Реквизит(ы),глСпр.ПолучитьАтрибут(Метаданные.Справочник("ПериферийныеБазы").Реквизит(ы)));
	КонецЦикла;
	Спр.IDD=Прав("0000000"+Строка(Число(глСпр.IDD)+1),7);
	Спр.НомерПакетаВыгрузки=1;
	Спр.НомерПакетаЗагрузки=1;
	Спр.НомерПодтвержденногоПакетаЗагрузки=0;
	
	Спр.Записать();
	
	Для НомВида=1 По 2 Цикл
		ТекВид=?(НомВида=1,"ПравилаЗагрузки","ПравилаВыгрузки");
		Спр1=СоздатьОбъект("Справочник."+ТекВид);
		Спр2=СоздатьОбъект("Справочник."+ТекВид);
		Спр1.ИспользоватьВладельца(Спр.ТекущийЭлемент());
		Спр2.ИспользоватьВладельца(глСпр.ТекущийЭлемент());
		Спр2.ВыбратьЭлементы();
		Пока Спр2.ПолучитьЭлемент()>0 Цикл
			Рд="";
			Если Спр2.Уровень()>1 Тогда
				Рд=Род[Спр2.Уровень()-1];
			КонецЕсли;
			Если Спр2.ЭтоГруппа()>0 Тогда
				глСоздатьНовуюГруппу(Спр1);
				Спр1.Родитель=Рд;
				Спр1.Наименование=Спр2.Наименование;
				Спр1.Код=Спр2.Код;
				Для ы=1 по Метаданные.Справочник(ТекВид).Реквизит() Цикл
					Спр1.УстановитьАтрибут(Метаданные.Справочник(ТекВид).Реквизит(ы),Спр2.ПолучитьАтрибут(Метаданные.Справочник(ТекВид).Реквизит(ы)));
				КонецЦикла;
				Спр1.Записать();
				Род[Спр2.Уровень()]=Спр1.ТекущийЭлемент();
			Иначе
				глСоздатьНовыйОбъект(Спр1);
				Спр1.Родитель=Рд;
				Спр1.Наименование=Спр2.Наименование;
				Спр1.Код=Спр2.Код;
				Для ы=1 по Метаданные.Справочник(ТекВид).Реквизит() Цикл
					Атрибут=Сокрлп(Метаданные.Справочник(ТекВид).Реквизит(ы));
					Реквизит=Спр2.ПолучитьАтрибут(Атрибут);
					Если (Атрибут="Условие")ИЛИ(Атрибут="Значение") Тогда
						Тип=ТипЗначения(Реквизит);
						СтрТип=ТипЗначенияСтр(Реквизит);
						Точность=0;
						Длина=0;
						Если (Тип>9)И(Тип<13) Тогда   //перечисление, справочник, документ
							СтрТип=СтрТип+"."+Сокрлп(Реквизит.Вид());
						ИначеЕсли Тип=1 Тогда  //число
							//определяем точность
							Пока Реквизит<>Окр(Реквизит,Точность) Цикл
								Точность=Точность+1;    
							КонецЦикла;
							//определяем длину
							Длина=СтрДлина(Сокрлп(Строка(Реквизит)))+1;
						ИначеЕсли Тип=2 Тогда //строка
							//определяем длину
							Длина=СтрДлина(Сокрлп(Строка(Реквизит)))+10;
						КонецЕсли;
						Спр1.НазначитьТип(Атрибут,СтрТип,Длина,Точность);
					КонецЕсли;
					Спр1.УстановитьАтрибут(Атрибут,Реквизит);
				КонецЦикла;
				Спр1.Записать();
			КонецЕсли;
			Константа_УникальныйIDD=Число(Константа_УникальныйIDD)+1;
			Спр1.IDD=Прав("0000000"+СокрЛП(Константа_IDD),7)+прав("0000000000"+СокрЛП(Константа_УникальныйIDD),10);
			Спр1.Записать();
		КонецЦикла;
	КонецЦикла;
	
	Константа.УникальныйIDD=Константа_УникальныйIDD;
	Константа.IDD=Константа_IDD;
	ЗафиксироватьТранзакцию();
КонецПроцедуры

//---------------------------------------------

Процедура ПравилаВыгрузки()
	Если ЭтоГруппа()=0 Тогда
		Если ПравилаОбмена.Выбран()=1 Тогда
			ОткрытьФорму("Справочник.ПравилаВыгрузки#",ПравилаОбмена);
		Иначе
			ОткрытьФорму("Справочник.ПравилаВыгрузки#",ТекущийЭлемент());
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//---------------------------------------------

Процедура ПравилаЗагрузки()
	Если ЭтоГруппа()=0 Тогда
		Если ПравилаОбмена.Выбран()=1 Тогда
			ОткрытьФорму("Справочник.ПравилаЗагрузки#",ПравилаОбмена);
		Иначе
			ОткрытьФорму("Справочник.ПравилаЗагрузки#",ТекущийЭлемент());
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//--------------------------------

Процедура Заполнить()
	СпрНазвание="";
	Справочник.ПолучитьЗначение(Справочник.ТекущаяСтрока(),СпрНазвание);
	Спр=СоздатьОбъект("Справочник."+СпрНазвание);
	Спр1=СоздатьОбъект("Справочник.ПериферийныеБазы");
	Если Спр1.Вид()=Спр.Вид() Тогда
		Возврат;
	КонецЕсли;
	Рез=Вопрос("Вы действительно хотите заполнить список 
	|периферийных баз из справочника "+СпрНазвание+" ?",1);
	Если Рез<>1 Тогда
		Возврат;
	КонецЕсли;
	
	
	Спр.ВыбратьЭлементы();
	НачатьТранзакцию();
	Пока Спр.ПолучитьЭлемент()>0 Цикл
		Если Спр.ЭтоГруппа()=0 Тогда
			Если Спр1.НайтиПоНаименованию(Спр.Наименование,0,1)=0 Тогда
				глСоздатьНовыйОбъект(Спр1);
				Спр1.Выгрузка=0;
				Спр1.РежимВыгрузки=1;
				Спр1.НомерПакетаВыгрузки=1;
				Спр1.ДатаНачалаПриВыгрузке='01.01.1970';
				Спр1.ДатаКонцаПриВыгрузке='01.01.2005';
				Спр1.КоличествоОбъектовВПакете=5000;
				
				Спр1.Загрузка=0;
				Спр1.НомерПакетаЗагрузки=1;
				Спр1.СПодчиненнымиПриВыборочнойВыгрузке=1;
				Спр1.НомерПодтвержденногоПакетаЗагрузки=0;
				
				Спр1.ПриоритетностьБазы=1;
				
				Спр1.КоличествоЦиклов=0;
				Спр1.КоличествоУровнейВложенности=7;
				
				Спр1.Наименование=Спр.Наименование;
				//создаем каталоги обмена
				//		 	 СоздатьКаталоги(Спр1); //не создаем (пока)
				
				
				Спр1.Записать();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ЗафиксироватьТранзакцию();
КонецПроцедуры

//_____________________________________________________________________________
Процедура ПриЗакрытии()
	РазрешитьРепликациюМОД=РазрешитьРепликациюМОД+1;
	СохранитьЗначение("НомерСправочникаЗаполененияПБ",Справочник.ТекущаяСтрока());
КонецПроцедуры //ПриЗакрытии

//_____________________________________________________________________________
Процедура ОткрытьОписаниеБазы()
	Если Сокрлп(Описание)="" Тогда
		Предупреждение("Описание базы не задано");
		Возврат;
	КонецЕсли;
	Если Выбран()=1 Тогда
		Если ЭтоГруппа()=0 Тогда
			Т=СоздатьОбъект("Текст");
			Т.КодоваяСтраница(1);
			Т.ДобавитьСтроку(Описание);
			Т.Показать("");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //ОткрытьОписаниеБазы

//_____________________________________________________________________________

//_____________________________________________________________________________
Функция ВыбратьФайлШаблона(ТипДЗакрыть)
	Перем Каталог,Файл;
	Файл=ФайлШаблона;
	Рез=ФС.ВыбратьФайл(ТипДЗакрыть,Файл,Каталог,"Выберите файл шаблона","Менеджер обмена данными(*.mod)|*.mod","*.mod");
	Если Рез=1 Тогда
		ФайлШаблона=Каталог+Файл;
	КонецЕсли;
	Возврат Рез;
КонецФункции //ВыбратьФайлШаблона

//_____________________________________________________________________________
Процедура Загрузить()
	Если ВыбратьФайлШаблона(0)=1 Тогда
		Т=СоздатьОбъект("Текст");
		Если ФС.СуществуетФайл(ФайлШаблона)=0 Тогда
			Возврат ;
		КонецЕсли;
		Т.Открыть(ФайлШаблона);
		ОписаниеБазы=СтрЗаменить(Т.ПолучитьСтроку(16),"$-Нов.стр-$",РазделительСтрок);
		Если Сокрлп(ОписаниеБазы)="" Тогда
			ОписаниеБазы="Описание шаблона не задано";
		Иначе
			ОписаниеБазы="Описание файла с шаблоном правил:"+РазделительСтрок+РазделительСтрок+ОписаниеБазы;
		КонецЕсли; 
		ОписаниеБазы=ОписаниеБазы+РазделительСтрок+РазделительСтрок+"Продолжить загрузку правил ?";
		Рез=Вопрос(ОписаниеБазы,1);
		Если Рез<>1 Тогда
			Возврат;
		КонецЕсли;
		Спис=СоздатьОбъект("СписокЗначений");
		Спис.ДобавитьЗначение("Загрузка шаблона","Команда");
		Спис.ДобавитьЗначение(ФайлШаблона,"ФайлШаблона");
		//Спис.ДобавитьЗначение(ТекущийЭлемент(),"База");
		ОткрытьФорму("Отчет.ОбменДанными"+"#",Спис);
	КонецЕсли;
КонецПроцедуры //Загрузить

//_____________________________________________________________________________
Процедура Выгрузить()
	Если Выбран()=1 Тогда
		Если ЭтоГруппа()=0 Тогда
			Если ВыбратьФайлШаблона(1)=1 Тогда
				Спис=СоздатьОбъект("СписокЗначений");
				Спис.ДобавитьЗначение("Выгрузка шаблона","Команда");
				Спис.ДобавитьЗначение(ФайлШаблона,"ФайлШаблона");
				Спис.ДобавитьЗначение(ТекущийЭлемент(),"База");
				ОткрытьФорму("Отчет.ОбменДанными"+"#",Спис);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //Выгрузить


ФайлШаблона="shablon.mod";
