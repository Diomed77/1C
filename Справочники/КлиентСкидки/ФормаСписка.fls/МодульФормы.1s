
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Функция СкидкаКлиенту(Контра,Цена,Групповой = 0)
	Если ПустоеЗначение(Контра) = 1 Тогда
		Возврат "";
	КонецЕсли;
	
	ДатаЦены = РабочаяДата();
	
	// акционная скидка клиента, указанного в документе
	СпрАкцСкидкаКлиент = СоздатьОбъект("Справочник.АкционныеСкидкиКлиентов");
	СпрАкцСкидкаКлиент.ИспользоватьВладельца(Контра);
	
	// PR 03.12.07
	Найден=СпрАкцСкидкаКлиент.ВыбратьЭлементыПоРеквизиту("Товар",ТовГруппа,1,0);
	Найден=0;
	Пока СпрАкцСкидкаКлиент.ПолучитьЭлемент() = 1 Цикл
		Если СпрАкцСкидкаКлиент.ПометкаУдаления() = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		//контДата = ?( Конт.Вид() = "РасходнаяНакладная", Конт.ДатаПоставки, Конт.ДатаДок );
		контДата = ДатаЦены;
		Если ( контДата >= СпрАкцСкидкаКлиент.ДатаНачала ) и ( контДата <= СпрАкцСкидкаКлиент.ДатаКонца ) Тогда
			Найден=1; //если найден товар удовлетворяющий условию, то по группам искать не нужно
		КонецЕсли;
	КонецЦикла;
	// PR 03.12.07
	
	Если (Найден = 0) Тогда
		Род=ТовГруппа.Родитель;
		Пока (СпрАкцСкидкаКлиент.ВыбратьЭлементыПоРеквизиту("Товар",Род,1,0)=0) И (Род.Уровень()>1) Цикл 
			Род=Род.Родитель;
		КонецЦикла;
	Иначе
		СпрАкцСкидкаКлиент.ВыбратьЭлементыПоРеквизиту("Товар",ТовГруппа,1,0); //еще раз выберем элементы
	КонецЕсли;
	
	Пока СпрАкцСкидкаКлиент.ПолучитьЭлемент() = 1 Цикл
		Если СпрАкцСкидкаКлиент.ПометкаУдаления() = 1 Тогда
			Продолжить;
		КонецЕсли;
		// сем \\
		контДата = ДатаЦены;
		Если ( контДата >= СпрАкцСкидкаКлиент.ДатаНачала ) и ( контДата <= СпрАкцСкидкаКлиент.ДатаКонца ) Тогда
			Цена = Цена * ( 100 - СпрАкцСкидкаКлиент.ПроцентСкидки ) / 100;
			Если Групповой = 0 Тогда
				Возврат Перечисление.ВидСкидки.АкционныйКлиент;
			Иначе
				Возврат Перечисление.ВидСкидки.АкционнаяГрупп;
			КонецЕсли;
		КонецЕсли;
		// сем //
	КонецЦикла;
	
	// затем обычная скидка клиента, указанного в документе, на определенные товары
	Есть = 0;
	Процент = семПроцентСкидкиКлиентуНаТовар(Контра,ТовГруппа,КатегорияЦены,ДатаЦены,Есть);
	Если Есть = 1 Тогда
		Цена = Цена*(100 - Процент)/100;
		Если Групповой = 0 Тогда
			Возврат Перечисление.ВидСкидки.КлиентТовар;
		Иначе
			Возврат Перечисление.ВидСкидки.ГрупповойКлиентТовар;
		КонецЕсли;
	КонецЕсли;
	
	Если ПустоеЗначение( Контра.ДопКод ) = 0 Тогда
		СкидкаПЛ = семПолучитьСкидкуПЛ( 1, Контра.ДопКод, ДатаЦены );
		Если СкидкаПЛ > 0 Тогда
			Цена = Цена*(100 - СкидкаПЛ)/100;
			Если Групповой = 0 Тогда
				Возврат Перечисление.ВидСкидки.Клиент;
			Иначе
				Возврат Перечисление.ВидСкидки.ГрупповойКлиент;
			КонецЕсли;
		КонецЕсли;
	Иначе
		// затем скидка клиенту вне зависимости от товара (из справочника "Контрагенты")
		Контра.ИспользоватьДату("");
		Если Контра.КлиентСкидка.Получить(ДатаЦены) > 0 Тогда
			Цена = Цена*(100 - Контра.КлиентСкидка.Получить(ДатаЦены))/100;
			Если Групповой = 0 Тогда
				Возврат Перечисление.ВидСкидки.Клиент;
			Иначе
				Возврат Перечисление.ВидСкидки.ГрупповойКлиент;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// и апофеоз поиска скидок клиенту - это скидка для так называемого КлГруппа
	Если (Групповой = 0) и (Контра <> Контра.КлГруппа) Тогда
		Возврат СкидкаКлиенту(Контра.КлГруппа,Цена,1);
	КонецЕсли;
	
	// похоже, что клиент не получит никакой скидки...
	Возврат "";
КонецФункции


Функция ЦенаСоСкидкой(Цена, Режим = 0)
	// получим дату для расчета цены
	ДатаЦены = РабочаяДата();
	
	// проверяем, можно ли давать скидку на выбранный товар
	СпрЦен=СоздатьОбъект("Справочник.Цены");
	СпрЦен.ИспользоватьВладельца(ТовГруппа);
	Если СпрЦен.НайтиПоРеквизиту("КатегорияЦены",КатегорияЦены,0) = 1 Тогда
		Если СпрЦен.ЗапретСкидки=1 Тогда
			Возврат ""; //Для конкретной категории цены товара установлен Запрет скидки
		КонецЕсли;
	КонецЕсли;
	
	СкидкаПр=ПолучитьАкцСкидкуТовара(ТовГруппа,КатегорияЦены,ДатаЦены);
	Если СкидкаПр>0 Тогда
		Цена = Цена*(100 - СкидкаПр)/100;
		Возврат Перечисление.ВидСкидки.АкционныйТовар;
	КонецЕсли;
	//
	//// затем скидки клиенту, указанному в документе
	Возврат СкидкаКлиенту(Владелец,Цена);
КонецФункции

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Функция ФорматВывода( парам )
	Если парам = "КодТовара" Тогда
		Возврат ?( ТовГруппа.Выбран() = 1, ТовГруппа.Код, "" );
	ИначеЕсли парам = "Пиктограмма" Тогда
		Если ПустоеЗначение(ТовГруппа) = 1 Тогда Возврат 0; КонецЕсли;
		Возврат ?(ТовГруппа.ЭтоГруппа() = 1,4,1);
	ИначеЕсли парам = "ЦенаОпт" Тогда
		Если ТовГруппа.ЭтоГруппа()=0 Тогда
			Возврат Формат( ЦенаТовараПоКатегорииДляТовара(ТовГруппа,КатегорияЦены,выбВалюта,КурсДляВалюты(выбВалюта,РабочаяДата())),"Ч15.2 ");
		Иначе
			Возврат "-";
		КонецЕсли;
	ИначеЕсли парам = "ЦенаКлиенту" Тогда
		Если ТовГруппа.ЭтоГруппа()=0 Тогда
			ЦенаТовара=ЦенаТовараПоКатегорииДляТовара(ТовГруппа,КатегорияЦены,выбВалюта,КурсДляВалюты(выбВалюта,РабочаяДата()))*(1-ПроцентСкидки/100);
			//ВидСкидки=ЦенаСоСкидкой(ЦенаТовара);
			Возврат Формат( ЦенаТовара,"Ч15.2 ");
		Иначе
			Возврат "-";
		КонецЕсли;
	КонецЕсли;
КонецФункции
                      
Процедура ПриРедактированииНовойСтроки()
	КатегорияЦены=Владелец.КатегорияЦены;
КонецПроцедуры

Функция семПроверка()
	Если ТовГруппа.Выбран() = 0 Тогда
		Сообщить("Ошибка записи.","!");
		Сообщить("Не выбран товар или группа.","I");
		Возврат 0;
	КонецЕсли;
	Если КатегорияЦены.Выбран() = 0 Тогда
		Сообщить("Ошибка записи.","!");
		Сообщить("Не выбрана категория цены.","I");
		Возврат 0;
	КонецЕсли;
	спр = СоздатьОбъект( "Справочник.КлиентСкидки" );
	спр.ИспользоватьВладельца( Владелец );
	Если спр.ВыбратьЭлементыПоРеквизиту("ТовГруппа",ТовГруппа,1,0) = 1 Тогда
		Пока спр.ПолучитьЭлемент() = 1 Цикл
			Если спр.КатегорияЦены = КатегорияЦены Тогда
				Если спр.ТекущийЭлемент() <> ТекущийЭлемент() Тогда
					Сообщить("Ошибка записи.","!");
					Сообщить(Шаблон("Скидка на категорию цен [КатегорияЦены] для данного товара(группуы) уже установлена"),"I");
					Возврат 0;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат 1;
КонецФункции

//Начало текста, вставленного Инсталлятором МОД
Процедура ПриПереносеЭлементаВДругуюГруппу(Спр, Группа)
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	ПриИзмененииОбъекта(Контекст, ТекущийЭлемент(), РабочаяДата());
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	ПриИзмененииОбъекта(Контекст, ТекущийЭлемент(), РабочаяДата());

	Если семПроверка() = 0 Тогда
		СтатусВозврата( 0 ); Возврат;
	КонецЕсли;
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД

Процедура кнУдалитьНулевые()
	
	Если Вопрос("Вы уверены, что хотите удалить все нулевые скидки по данному клиенту?","Да+Нет")="Да" Тогда
		Запрос=СоздатьОбъект("ODBCRecordSet");
		Спр=СоздатьОбъект("Справочник.КлиентСкидки");
		Спр.ИспользоватьВладельца(Владелец);
		Спр.ВыбратьЭлементы(1);
		Пока Спр.ПолучитьЭлемент()=1 Цикл
			Если Спр.ПометкаУдаления()=1 Тогда
				Спр.Удалить(1);
				Продолжить;
			КонецЕсли;
			
			Если  Спр.ПроцентСкидки.Получить(РабочаяДата())=0 Тогда
				Спр.Удалить(1);
			КонецЕсли;
		КонецЦикла;
		
		Форма.Обновить(1);
	Иначе
		Возврат;
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьУровень()
	Если (ПустоеЗначение(ТовГруппа)=0) И (ТовГруппа.Уровень()<=1)  Тогда
		//можно выбирать группы любого уровня
//		Предупреждение("Можно выбирать группы только ниже 1-го уровня!");
//		ТовГруппа="";
	КонецЕсли;
КонецПроцедуры

//**************************************
Процедура НайтиКод()
	
	ИерархическийСписок(1,1);
	
	Запрос=СоздатьОбъект("ODBCRecordSet");
	ТекстЗапроса="SELECT СпрКС.ID [Элемент $Справочник.КлиентСкидки]
	|			  FROM $Справочник.КлиентСкидки СпрКС 
	|			  INNER JOIN $Справочник.Номенклатура СпрН ON СпрН.ID=$СпрКС.ТовГруппа AND СпрН.CODE=:КодПоиска
	|			  WHERE СпрКС.PARENTEXT=:Владелец
	|";
	Запрос.УстановитьТекстовыйПараметр("КодПоиска",сокрЛП(ПоискКод));
	Запрос.УстановитьТекстовыйПараметр("Владелец",Владелец);
	
	Элем=Запрос.ВыполнитьСкалярный(ТекстЗапроса);
	
	Если ПустоеЗначение(Элем)=1 Тогда
		Предупреждение("Код товара не найден в списке!");
		Активизировать("ПоискКод");
		Возврат;
	КонецЕсли;
	
	АктивизироватьОбъект(Элем);
	
КонецПроцедуры

//======================================================================
Процедура кнКопироватьСкидки()
	Если Вопрос("Все записи будут удалены. Продолжить?","Да+Нет")="Да" Тогда
		СпрК=СоздатьОбъект("Справочник.Контрагенты");
		СпрК2=СоздатьОбъект("Справочник.Контрагенты");

		Если СпрК.Выбрать("Выберите клиента откуда копировать","ФормаСписка")=1 Тогда
			Если СпрК2.Выбрать("Выберите клиента куда копировать","ФормаСписка")=1 Тогда
			Иначе
				Возврат;
			КонецЕсли;
			
			Спр=СоздатьОбъект("Справочник.КлиентСкидки");
			СпрСК=СоздатьОбъект("Справочник.КлиентСкидки");
			Спр.ИспользоватьВладельца(СпрК2.ТекущийЭлемент());
			Спр.ВыбратьЭлементы();
			Пока Спр.ПолучитьЭлемент() = 1 Цикл
				ОбъектУдалить(Спр,0);
			КонецЦикла;

			
			СпрСК.ИспользоватьВладельца(СпрК2.ТекущийЭлемент());
			
			Спр.ИспользоватьВладельца(СпрК.ТекущийЭлемент());
			Спр.ВыбратьЭлементы();
			Пока Спр.ПолучитьЭлемент() = 1 Цикл
				Если Спр.ПометкаУдаления()=1 Тогда
					Продолжить;
				КонецЕсли;
				СпрСК.Новый();
				СпрСК.ИспользоватьДату(РабочаяДата());
				СпрСК.Наименование = Спр.Наименование;
				СпрСК.ТовГруппа = Спр.ТовГруппа;
				СпрСК.ПроцентСкидкиОпт = Спр.ПроцентСкидкиОпт;
				СпрСК.ПроцентСкидкиРозн = Спр.ПроцентСкидкиРозн;
				СпрСК.КатегорияЦены = Спр.КатегорияЦены;
				СпрСК.ПроцентСкидки = Спр.ПроцентСкидки;
				ОбъектЗаписать(СпрСК,);
			КонецЦикла;
			
		КонецЕсли;

	КонецЕсли;	
	
КонецПроцедуры // кнКопироватьСкидки

Процедура ПослеОткрытия()
	
//	Если ПустоеЗначение(Владелец)=0 Тогда
		выбВалюта = ?(ПустоеЗначение(Владелец.ВалютаВзаиморасчетов)=1,Константа.ОсновнаяВалюта,Владелец.ВалютаВзаиморасчетов);
	//Иначе
	//	выбВалюта = ?(ПустоеЗначение(глФирма.ОсновнаяВалюта)=1,Константа.ОсновнаяВалюта,глФирма.ОсновнаяВалюта);
	//КонецЕсли;
	
	КлиентВладелец=Владелец;
КонецПроцедуры

//======================================================================
Процедура ПриОткрытии()
	
КонецПроцедуры // ПриОткрытии
Форма.ТовГруппа.ВыборГруппы(1);
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

