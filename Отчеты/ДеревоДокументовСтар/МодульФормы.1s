Перем Расшифровка;
Перем Обновить;
Перем Таб;
Перем СписокЗащитыОтЗацикливания;
//--------------
Функция УстановитьРасшифровку(Докум)
	Расшифровка=СоздатьОбъект("СписокЗначений");
	Расшифровка.ДобавитьЗначение(Докум,"ДокументЖурнала");
	Возврат Расшифровка;
КонецФункции
//--------------
Функция ПредставлениеДокумента(Док,ДокОснования)
	ВидДок=Док.Вид();
	ПечДок=""+глНазваниеДокументаВЖурнале(Док)+" № "+Док.НомерДок+" от "+Док.ДатаДок;
	                 
	ПечСумма = глСуммаДокументаВЖурнале(Док);
	
	Если ВидДок="ДвиженияДенежныхСредств" Тогда
		ПечСумма=0;
		Если ПустоеЗначение(ДокОснования)=0 Тогда
			Док.ВыбратьСтроки();
			Пока Док.ПолучитьСтроку()=1 Цикл
				Если Док.ДокументОснование=ДокОснования Тогда
					Если Док.ВидДвижения=Перечисление.ВидыДвиженийПоРасчетномуСчету.Зачисление Тогда
						ПечСумма=Док.Приход;
					Иначе
						ПечСумма=Док.Расход;
					КонецЕсли;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Если ПустоеЗначение(ПечСумма) = 0 Тогда
		Если глЕстьРеквизитШапки("Валюта",ВидДок)=1 Тогда
			ПечСумма = "" + ПечСумма + " "+Док.Валюта.Наименование;
		КонецЕсли;
		ПечДок= ПечДок + РазделительСтрок+" Сумма: " + ПечСумма;
	КонецЕсли;
	
	Если Док.Проведен()=0 Тогда
		ПечДок=ПечДок+" (Не проведен!)";
	КонецЕсли;   
	
	Если Док.ПометкаУдаления()=1 Тогда
		ПечДок=ПечДок+"(Помечен на удаление!)";
	КонецЕсли;	
	
	Возврат ПечДок;
КонецФункции
//--------------
Функция НайтиКорень(Док)
	// Эта Функция помогает формировать Дерево подчиненных документов
	
	СписокЗащитыОтЗацикливания.ДобавитьЗначение(Док);
	
	ВД=Док.Вид();
	КореньДок=0;
	
	Для Н=1 По Метаданные.Документ(ВД).РеквизитШапки() Цикл
		РеквДок=Док.ПолучитьАтрибут(Метаданные.Документ(ВД).РеквизитШапки(Н));
		Если ТипЗначенияСтр(РеквДок)="Документ" Тогда
			Если ПустоеЗначение(РеквДок)=0 Тогда
				Если СписокЗащитыОтЗацикливания.НайтиЗначение(РеквДок)>0 Тогда
					Продолжить;
				КонецЕсли;
				КореньДок=РеквДок;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ПустоеЗначение(КореньДок)=1 Тогда
		Возврат Док;
	Иначе
		Возврат НайтиКорень(КореньДок);
	КонецЕсли;
КонецФункции

//--------------
Процедура ВывестиПодчиненные(Докум,ДокОснования,Док,Последний,Уровень,Уровни)
	// Эта процедура помогает формировать Дерево подчиненных документов
	// подчиненные документы:
	ДокПодч = СоздатьОбъект("Документ");
	// для проверки наличия следующего элемента в выборке
	// создадим еще один объект!
	ПровДокПодч = СоздатьОбъект("Документ");
	
	Таб.ВывестиСекцию("GrEmpty|Empty");
	// если это первый уровень...
	Если Уровень=1 Тогда
		//...выведем Г-образную линию...
		Если Последний=1 Тогда
			Таб.ПрисоединитьСекцию("GrHook|Lines");
			// ...или Т-образную линию
		Иначе
			Таб.ПрисоединитьСекцию("GrTSect|Lines");
		КонецЕсли;
	Иначе
		// для первого уровня выведем линию или пустоту
		Если Уровни.ПолучитьЗначение(1)=1 Тогда
			Таб.ПрисоединитьСекцию("GrLine|Lines");
		Иначе
			Таб.ПрисоединитьСекцию("GrEmpty|Lines");
		КонецЕсли;
		// для остальных уровней присоединим линию или пустоту
		Для Сч=2 По Уровень-1 Цикл
			Если Уровни.ПолучитьЗначение(Сч)=1 Тогда
				Таб.ПрисоединитьСекцию("GrLine|Lines");
			Иначе
				Таб.ПрисоединитьСекцию("GrEmpty|Lines");
			КонецЕсли;
		КонецЦикла;
		Если Последний=1 Тогда
			Таб.ПрисоединитьСекцию("GrHook|Lines");
		Иначе
			Таб.ПрисоединитьСекцию("GrTSect|Lines");
		КонецЕсли;
	КонецЕсли;   
	// только теперь - присоединим секцию документа
	ПечДок=ПредставлениеДокумента(Док,ДокОснования);
	Если Докум=Док Тогда
		Таб.ПрисоединитьСекцию("ТекДок|Body");
	Иначе    
		//*******Завьялов А.****19.01.2005***Начало*** 
		//При пометке удаления в структуре подчиненности, данная ифа выводится дополнительно
		Пер1 = 0;
		Если Прав(ПечДок,22) = "(Помечен на удаление!)" Тогда  
			ПечДок = СтрЗаменить(ПечДок,"(Помечен на удаление!)",""); 
			Пер1 = 1;
		КонецЕсли;
		Таб.ПрисоединитьСекцию("Group|Body");
		Если Пер1 = 1 Тогда  
			ПометкаУдаления = "(Помечен на удаление!)";
			Пер2 = 1;
			Для Пер2 = 1 По Уровень Цикл   
				Если Пер2 = 1 Тогда
					Таб.ВывестиСекцию("ПомеченНаУдаление|Empty");
				Иначе
					Таб.ПрисоединитьСекцию("ПомеченНаУдаление|Lines");
				КонецЕсли;
			КонецЦикла; 
			Если Уровень > 1 Тогда
				Если (Пер2-Уровень)=1 Тогда 
					Таб.ПрисоединитьСекцию("ПомеченНаУдаление|Lines");
				ИначеЕсли Пер2 <= Уровень Тогда
					Таб.ПрисоединитьСекцию("Секция1|Lines");
				КонецЕсли;
			Иначе    
				Таб.ПрисоединитьСекцию("Секция1|Lines");
			КонецЕсли;
			Таб.ПрисоединитьСекцию("ПомеченНаУдаление|Body");	
		КонецЕсли;
		//*******Завьялов А.****19.01.2005***Завершение***
	КонецЕсли;
	Уровень=Уровень+1;
	ДокПодч.ВыбратьПодчиненныеДокументы(,,Док);
	ПровДокПодч.ВыбратьПодчиненныеДокументы(,,Док);
	Начало=1;
	Пока ДокПодч.ПолучитьДокумент()=1 Цикл
		Если СписокЗащитыОтЗацикливания.НайтиЗначение(ДокПодч.ТекущийДокумент())>0 Тогда
			Продолжить;
		КонецЕсли;
		СписокЗащитыОтЗацикливания.ДобавитьЗначение(ДокПодч.ТекущийДокумент());
		Если Начало=1 Тогда
			А=ПровДокПодч.ПолучитьДокумент();
			Начало=0;
		КонецЕсли;
		Если Док=ДокПодч.ТекущийДокумент() Тогда
			А=ПровДокПодч.ПолучитьДокумент();
			Продолжить;
		КонецЕсли;
		Если ПровДокПодч.ПолучитьДокумент()=1 Тогда
			Если Док=ПровДокПодч.ТекущийДокумент() Тогда
				Уровни.УстановитьЗначение(Уровень,0);
				Последний=1;
			Иначе
				Уровни.УстановитьЗначение(Уровень,1);
				Последний=0;
			КонецЕсли;
		Иначе
			Уровни.УстановитьЗначение(Уровень,0);
			Последний=1;
		КонецЕсли;
		ВывестиПодчиненные(Докум,Док,ДокПодч.ТекущийДокумент(),Последний,Уровень,Уровни);
	КонецЦикла;
	Уровень=Уровень-1;
КонецПроцедуры
//--------------
Процедура СформироватьДерево()
	начЛог = семЗаписатьЛогНач( "Отчет", "Дерево документов", "Обработка", "Формирование отчета" );
	СписокЗащитыОтЗацикливания=СоздатьОбъект("СписокЗначений");
	// Эта процедура формирует Дерево подчиненных документов
	Докум=ВыбДокумент;
	Если ПустоеЗначение(Докум)=1 Тогда
		Предупреждение("Не указан документ для построения структуры подчиненности!", 60);
		Возврат;
	КонецЕсли;
	
	Если Обновить = 2 Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "ДеревоДокументов");
	Расшифровка.Установить("Док", ВыбДокумент);
	Расшифровка.Установить("Обновить", 1);
	
	// сначала поднимемся по подчиненности вверх и найдем корень
	КореньДок=НайтиКорень(Докум);
	
	// теперь от корня спускаемся вниз, показывая все на своем пути
	
	// сначала заполним массив уровней нулями
	
	Уровень=0;
	Уровни=СоздатьОбъект("СписокЗначений");
	Для Сч=1 По 20 Цикл
		Уровни.ДобавитьЗначение(0);
	КонецЦикла;
	
	// И почистим список защиты, чтобы ничего не пропустить
	СписокЗащитыОтЗацикливания.УдалитьВсе();               
	
	Если (ТипЗначенияСтр(Таб) <> "Таблица") или (Обновить = 0) Тогда
		Таб=СоздатьОбъект("Таблица");
	Иначе
		Таб.Очистить();
	КонецЕсли;
	
	Таб.ИсходнаяТаблица("ДеревоДокументов");
	Таб.ВывестиСекцию("Кнопки");
	// подчиненные документы
	ДокПодч=СоздатьОбъект("Документ");
	// для проверки наличия следующего элемента в выборке
	// создадим еще один объект!
	ПровДокПодч=СоздатьОбъект("Документ");
	
	ДокПодч.ВыбратьПодчиненныеДокументы(,,КореньДок);
	ПровДокПодч.ВыбратьПодчиненныеДокументы(,,КореньДок);
	
	Уровень=1;
	ПечДок=ПредставлениеДокумента(КореньДок,КореньДок);
	Если Докум=КореньДок Тогда
		Таб.ВывестиСекцию("КореньТекДок");
	Иначе
		Таб.ВывестиСекцию("Header");
	КонецЕсли;
	Начало=1;
	Пока ДокПодч.ПолучитьДокумент()=1 Цикл
		Если Начало=1 Тогда
			А=ПровДокПодч.ПолучитьДокумент();
			Начало=0;
		КонецЕсли;
		Если КореньДок=ДокПодч.ТекущийДокумент() Тогда
			А=ПровДокПодч.ПолучитьДокумент();
			Продолжить;
		КонецЕсли;
		Если ПровДокПодч.ПолучитьДокумент()=1 Тогда
			Если КореньДок=ПровДокПодч.ТекущийДокумент() Тогда
				Уровни.УстановитьЗначение(1,0);
				Последний=1;
			Иначе
				Уровни.УстановитьЗначение(1,1);
				Последний=0;
			КонецЕсли;
		Иначе
			Уровни.УстановитьЗначение(1,0);
			Последний=1;
		КонецЕсли;
		ВывестиПодчиненные(Докум,КореньДок,ДокПодч.ТекущийДокумент(),Последний,Уровень,Уровни);
	КонецЦикла;
	// Вывод заполненной формы
	Таб.Опции(0, 0, 3, 0,"ДеревоДокументов", "ДеревоДокументов");
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Дерево подчиненности документов",);
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры

//-------------------------------
Процедура ПриОткрытии()
	Если ТипЗначенияСтр(Форма.Параметр)="Документ" Тогда
		ВыбДокумент=Форма.Параметр;
		СформироватьДерево();
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	Обновить = 0;
	Если глФлагРасшифровки = 1 Тогда
		Обновить = Число(глРасшифровка.Получить("Обновить"));
		ВыбДокумент = глРасшифровка.Получить("Док");
		
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;
		
		Если Обновить <> 2 Тогда
			СформироватьДерево();
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
//-------------------------------
