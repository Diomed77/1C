Перем спУсловий;
Перем выбСклад;

Процедура УстСписокСкладов()
	Запрос=СоздатьОбъект("ODBCRecordSet");
	ТекстЗапроса="SELECT МестаХранения.ID [Ссылка $Справочник.МестаХранения]
	|			  FROM $Справочник.МестаХранения AS МестаХранения
	|			  WHERE ($МестаХранения.УпрАналитика IN (SELECT Val FROM #Аналитика))";
	сзАналитика=СоздатьОбъект("СписокЗначений");
	сзАналитика.ДобавитьЗначение(ВыбАналитика);
	Запрос.УложитьСписокОбъектов(сзАналитика,"#Аналитика","УпрАналитика");
	выбСклад=СоздатьОбъект("СписокЗначений");	
	Запрос.ВыполнитьИнструкцию(ТекстЗапроса,выбСклад);
КонецПроцедуры

Процедура РазобратьАдресТаблицы( пАдрес, пСтрока = 0, пКол = 0 )
	разд = Найти( пАдрес, "C" );
	пСтрока = Сред(пАдрес, 2, разд-2 );
	пКол = Сред(пАдрес, разд+1, СтрДлина(пАдрес)-разд );
КонецПроцедуры

Функция ЗапросПоЗапасам()
	
	ТекстЗапроса = "SELECT Запасы.PARENTEXT [Товар $Справочник.Номенклатура]
	|					, SUM($Запасы.МинЗапас) МинЗапас
	|				FROM $Справочник.Запасы AS Запасы (NOLOCK)
	|				WHERE ($Запасы.УпрАналитика = :ВыбАналитика)
	|						AND (Запасы.ISMARK = 0)
	|				GROUP BY Запасы.PARENTEXT";
	
	ЗапросСКЛ = СоздатьОбъект("ODBCRecordSet");
	ЗапросСКЛ.УстановитьТекстовыйПараметр("ВыбАналитика",выбАналитика);
	итТабл = СоздатьОбъект("ИндексированнаяТаблица");
	ЗапросСКЛ.ВыполнитьИнструкцию(ТекстЗапроса,итТабл);
	итТабл.ДобавитьИндекс("иТовар","*Товар");
	Возврат итТабл;
	
КонецФункции

Функция ТекстЗапроса()
	
	Если флПроизводствоИПереработка=1 Тогда
		ДопУсловие="или ( (Фл = 1) и (Ко = ""Ф"") )	или ((Фл <> 66) и (Ко = ""z""))";
	КонецЕсли;
	
	ТекстЗапроса = "
	|//{{ЗАПРОС(Продажи)
	|Период с ДатаС по ДатаПо;
	|Товар = Регистр.ПартииТоваров.Товар;";
	Если выбАналитика.Выбран() = 1 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Склад = Регистр.ПартииТоваров.Склад;";	
	КонецЕсли;
	Если выбПоставщик.Выбран() = 1 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Поставщик = Регистр.ПартииТоваров.Товар.Поставщик;";	
	КонецЕсли; ТекстЗапроса = ТекстЗапроса + "
	|Ко = Регистр.ПартииТоваров.КодОперации;
	|Фл = Регистр.ПартииТоваров.ФлагУчета;
	|ВидТовара = Регистр.ПартииТоваров.Товар.ВидТовара;
	|Закупщик = Регистр.ПартииТоваров.Товар.Закупщик;
	|Кол = Регистр.ПартииТоваров.ОстатокТовара;
	|Функция Продажа = Расход( Кол )  когда ( ( (Фл = 1) и (Ко = ""П"") )  или ( (Фл = 1) и (Ко = ""-"") ) или ( (Фл = 1) и (Ко = ""Д"")) или ( (Фл = 51) и (Ко = ""С"") ) "+ДопУсловие+"); 
	|Группировка Товар без групп;
	|Группировка Неделя Все;
	|Условие ( ( ВидТовара = Перечисление.ВидыТоваров.Товар ) или ( ВидТовара = Перечисление.ВидыТоваров.Ингредиент ) );
	|Условие ( ( (Фл = 1) и (Ко = ""П"") )  или ( (Фл = 1) и (Ко = ""-"") ) или ( (Фл = 1) и (Ко = ""Д"") ) или ( (Фл = 51) и (Ко = ""С"") )"+ДопУсловие+" );";
	Если выбТовар.Выбран() = 0 Тогда 
	спУсловий.ДобавитьЗначение("По всем товарам.");
	ИначеЕсли выбТовар.ЭтоГруппа() = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Товар = выбТовар );";
		спУсловий.ДобавитьЗначение(Шаблон("По товару ([выбТовар.Код]) [выбТовар.Наименование]."));
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Товар в выбТовар );";
		спУсловий.ДобавитьЗначение(Шаблон("По группе товаров ([выбТовар.Код]) [выбТовар.Наименование]."));
	КонецЕсли;
	Если выбАналитика.Выбран() = 0 Тогда 
		спУсловий.ДобавитьЗначение("По всей аналитике.");
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Склад в выбСклад );";
		спУсловий.ДобавитьЗначение(Шаблон("По аналитике: [ВыбАналитика.Наименование]."));
	КонецЕсли;
	Если выбПоставщик.Выбран() = 0 Тогда 
	спУсловий.ДобавитьЗначение("По всем поставщикам.");
	ИначеЕсли выбПоставщик.ЭтоГруппа() = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Поставщик = выбПоставщик );";
		спУсловий.ДобавитьЗначение(Шаблон("По поставщику ([выбПоставщик.Код]) [выбПоставщик.Наименование]."));
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Поставщик в выбПоставщик );";
		спУсловий.ДобавитьЗначение(Шаблон("По группе поставщиков ([выбПоставщик.Код]) [выбПоставщик.Наименование]."));
	КонецЕсли;
	
	Если выбЗакупщик.Выбран() = 0 Тогда 
	спУсловий.ДобавитьЗначение("По всем закупщикам.");
	ИначеЕсли выбЗакупщик.ЭтоГруппа() = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Закупщик = выбЗакупщик );";
		спУсловий.ДобавитьЗначение(Шаблон("По закупщику ([выбЗакупщик.Код]) [выбЗакупщик.Наименование]."));
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Закупщик в выбЗакупщик);";
		спУсловий.ДобавитьЗначение(Шаблон("По группе закупщиков ([выбЗакупщик.Код]) [выбЗакупщик.Наименование]."));
	КонецЕсли;
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаОстатки()
	ТекстЗапроса = "
	|//{{ЗАПРОС(Продажи)
	|Товар = Регистр.ПартииТоваров.Товар;";
	Если выбАналитика.Выбран() = 1 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Склад = Регистр.ПартииТоваров.Склад;";	
	КонецЕсли; ТекстЗапроса = ТекстЗапроса + "
	|ВидТовара = Регистр.ПартииТоваров.Товар.ВидТовара;
	|Закупщик = Регистр.ПартииТоваров.Товар.Закупщик;
	|Кол = Регистр.ПартииТоваров.ОстатокТовара;
	|Функция Остаток = КонОст( Кол ); 
	|Группировка Товар без групп;
	|Условие ( ( ВидТовара = Перечисление.ВидыТоваров.Товар ) или ( ВидТовара = Перечисление.ВидыТоваров.Ингредиент ) );";
	Если выбТовар.Выбран() = 0 Тогда 
	ИначеЕсли выбТовар.ЭтоГруппа() = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Товар = выбТовар );";
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Товар в выбТовар );";
	КонецЕсли;
	Если выбАналитика.Выбран() = 0 Тогда 
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Склад в выбСклад );";
	КонецЕсли;
	
	Если выбЗакупщик.Выбран() = 0 Тогда 
	ИначеЕсли выбЗакупщик.ЭтоГруппа() = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Закупщик = выбЗакупщик );";
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Закупщик в выбЗакупщик);";
	КонецЕсли;
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаЗаказы()
	ТекстЗапроса = "
	|//{{ЗАПРОС(Заказы)
	|Товар = Регистр.ЗаказыПоставщикам.Товар;";
	Если выбАналитика.Выбран() = 1 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Склад = Регистр.ЗаказыПоставщикам.Склад;";	
	КонецЕсли; ТекстЗапроса = ТекстЗапроса + "
	|ВидТовара = Регистр.ЗаказыПоставщикам.Товар.ВидТовара;
	|Закупщик = Регистр.ЗаказыПоставщикам.Товар.Закупщик;
	|Кол = Регистр.ЗаказыПоставщикам.Количество;
	|Функция Заказ = КонОст( Кол ); 
	|Группировка Товар без групп;
	|Условие ( ( ВидТовара = Перечисление.ВидыТоваров.Товар ) или ( ВидТовара = Перечисление.ВидыТоваров.Ингредиент ) );";
	Если выбТовар.Выбран() = 0 Тогда 
	ИначеЕсли выбТовар.ЭтоГруппа() = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Товар = выбТовар );";
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Товар в выбТовар );";
	КонецЕсли;
	Если выбАналитика.Выбран() = 0 Тогда 
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Склад в выбСклад );";
	КонецЕсли;
	
	Если выбЗакупщик.Выбран() = 0 Тогда 
	ИначеЕсли выбЗакупщик.ЭтоГруппа() = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Закупщик = выбЗакупщик );";
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Закупщик в выбЗакупщик);";
	КонецЕсли;
	
	Возврат ТекстЗапроса;
КонецФункции

Процедура ЗаказыДетально( пТовар )
	Если пТовар = "" Тогда Возврат; КонецЕсли;
	ТекстЗапроса = "
	|//{{ЗАПРОС(Заказы)
	|Товар = Регистр.ЗаказыПоставщикам.Товар;";
	Если выбАналитика.Выбран() = 1 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Склад = Регистр.ЗаказыПоставщикам.Склад;";	
	КонецЕсли; ТекстЗапроса = ТекстЗапроса + "
	|СрокПоставки = Регистр.ЗаказыПоставщикам.СрокПоставки;
	|ПоЗаказу = Регистр.ЗаказыПоставщикам.ПоЗаказу;
	|Кол = Регистр.ЗаказыПоставщикам.Количество;
	|Функция Заказ = КонОст( Кол ); 
	|Группировка СрокПоставки;
	|Группировка ПоЗаказу;
	|Условие ( Товар = пТовар );";
	Если выбАналитика.Выбран() = 0 Тогда 
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Склад в выбСклад );";
	КонецЕсли;
	//нач = ТекущееВремя();
	Запрос = СоздатьОбъект( "Запрос" );
	Если Запрос.Выполнить( ТекстЗапроса ) = 0 Тогда Возврат; КонецЕсли;
	//Сообщить( "ЗаказыДетально "+семПрошлоВремени( нач, ТекущееВремя() ) );
	
	таб = СоздатьОбъект( "Таблица" );
	таб.ИсходнаяТаблица( "Заказы" );
	пТовар = пТовар;
	пТА = ПолучитьДатуТА();
	таб.ВывестиСекцию( "Заголовок" );		
	таб.ВывестиСекцию( "Шапка" );		
	таб.Опции( 0, 0, таб.ВысотаТаблицы(), 0 );
	
	Пока Запрос.Группировка( "СрокПоставки" ) = 1 Цикл
		пДата = Запрос.СрокПоставки;
		пКол = Запрос.Заказ;
		таб.ВывестиСекцию( "Дата" );		
		Пока Запрос.Группировка( "ПоЗаказу" ) = 1 Цикл
			пДок = Запрос.ПоЗаказу;
			пКол = Запрос.Заказ;
			таб.ВывестиСекцию( "Документ" );		
		КонецЦикла;
	КонецЦикла;
	пКол = Запрос.Заказ;
	таб.ВывестиСекцию( "Итог" );		
	таб.ТолькоПросмотр( 1 );
	таб.Показать( "Ожидаемый приход" ); 
КонецПроцедуры

Процедура ОбработкаЯчейкиТаблицы( пЗнач, пФлаг, пТаб, пАдрес )
	пФлаг = 0; текКол = 0;
	РазобратьАдресТаблицы( пАдрес,,текКол );
//	Если Число(текКол) = 20 Тогда
		ЗаказыДетально( пЗнач );
//	КонецЕсли;
КонецПроцедуры

Функция ПолучитьПроцент( послКол, текКол );
	Если послКол <= 0 Тогда  Возврат 0; КонецЕсли;
	Возврат Окр( ( ( текКол / послКол ) - 1 ) * 100,0,1);
КонецФункции

Процедура Сформировать()
	начЛог = семЗаписатьЛогНач( "Отчет", "Отчет по изменениям продаж", "Обработка", "Формирование отчета" );
	спУсловий = СоздатьОбъект( "СписокЗначений" );
	//нач = ТекущееВремя();
	
	итТаблЗапасы = ЗапросПоЗапасам();
	
	Запрос = СоздатьОбъект( "Запрос" );
	Если Запрос.Выполнить( ТекстЗапроса() ) = 0 Тогда Возврат; КонецЕсли;
	//Сообщить( "Продажи "+семПрошлоВремени( нач, ТекущееВремя() ) );

	//нач = ТекущееВремя();
	ЗапросОстатки = СоздатьОбъект( "Запрос" );
	Если ЗапросОстатки.Выполнить( ТекстЗапросаОстатки() ) = 0 Тогда Возврат; КонецЕсли;
	//Сообщить( "Остатки "+семПрошлоВремени( нач, ТекущееВремя() ) );

	//нач = ТекущееВремя();
	ЗапросЗаказы = СоздатьОбъект( "Запрос" );
	Если ЗапросЗаказы.Выполнить( ТекстЗапросаЗаказы() ) = 0 Тогда Возврат; КонецЕсли;
	//Сообщить( "Остатки "+семПрошлоВремени( нач, ТекущееВремя() ) );
	//табл = СоздатьОбъект( "ТаблицаЗначений" );
	//Запрос.Выгрузить(табл,1,0);
	//табл.ВыбратьСтроку();
	//Возврат;
	таб = СоздатьОбъект( "Таблица" );
	таб.ИсходнаяТаблица( "Таблица" );
	таб.ВывестиСекцию( "Заголовок" );		
	пУсловие = "";
	Для н = 1 по спУсловий.РазмерСписка() Цикл
		пУсловие = пУсловие + спУсловий.ПолучитьЗначение(н) + " ";
	КонецЦикла;
	таб.ВывестиСекцию("Условие");
	таб.ВывестиСекцию( "Шапка|Товар" );		
	Пока Запрос.Группировка( "Товар" ) = 1 Цикл 
		Пока Запрос.Группировка( "Неделя" ) = 1 Цикл 
			пПериод = Шаблон("[Запрос.Неделя] - [КонНедели(Запрос.Неделя)]");
			таб.ПрисоединитьСекцию( "Шапка|Период" );
		КонецЦикла;
		Прервать;
	КонецЦикла;
	пТА = ПолучитьДатуТА();
	таб.ПрисоединитьСекцию( "Шапка|Доп" );
	таб.Опции( 0, 0, таб.ВысотаТаблицы(), 0 );
        
	Всего = 0; н = 0;
	Пока Запрос.Группировка( "Товар" ) = 1 Цикл 
		Всего = Всего + 1;
	КонецЦикла; 
	Пока Запрос.Группировка( "Товар" ) = 1 Цикл н = н + 1; Состояние( Шаблон("Обработано [н] из [Всего] товаров.") );
		Товар = Запрос.Товар;
		пТовар = Шаблон("[Товар.Код] [Товар.Наименование]");
		пЕд = Товар.БазоваяЕдиницаИзмерения;
		таб.ВывестиСекцию( "Строка|Товар" );
		послКол = 0;
		Пока Запрос.Группировка( "Неделя" ) = 1 Цикл
			пКол = Запрос.Продажа;
			Процент = ПолучитьПроцент( послКол, пКол );
			
			Если ( пКол = 0 ) или (послКол = 0) Тогда
				пПроцент = "???";
				таб.ПрисоединитьСекцию( "Строка|Период" );
				послКол = пКол;
				Продолжить
			КонецЕсли;
			послКол = пКол;

			Если флОгрПроцент = 1 Тогда
				модПроцент = ?(Процент < 0,Процент*(-1),Процент);
				Если модПроцент <= выбПроц Тогда 
					таб.ПрисоединитьСекцию( "Пустая|Период" );
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Если Процент = 0 Тогда
				пПроцент = "";
				таб.ПрисоединитьСекцию( "Строка|Период" );
			ИначеЕсли Процент > 0 Тогда
				пПроцент = "+"+Окр(Процент,0)+" %";
				таб.ПрисоединитьСекцию( "Увелич|Период" );
			ИначеЕсли Процент < 0 Тогда
				пПроцент = ""+Окр(Процент,0)+" %";
				таб.ПрисоединитьСекцию( "Умен|Период" );
			КонецЕсли;
		КонецЦикла;
		пОст = ?(ЗапросОстатки.Получить(Запрос.Товар)=1,ЗапросОстатки.Остаток,0);
		пЗаказ = ?(ЗапросЗаказы.Получить(Запрос.Товар)=1,ЗапросЗаказы.Заказ,0);
		
		пМинЗапас = 0;
		Если итТаблЗапасы.НайтиСтроку("иТовар",Запрос.Товар,,1)>0 Тогда
			пМинЗапас = итТаблЗапасы.МинЗапас;
		КонецЕсли;
		пРасш = ?(пЗаказ<>0,Товар,"");
		таб.ПрисоединитьСекцию( "Строка|Доп" );
	КонецЦикла;
	таб.ТолькоПросмотр( 1 );
	таб.Показать( "Отчет по изменениям продаж" );
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры

Процедура ПриОткрытии()
	//Если НазваниеНабораПрав() = "Администратор" Тогда
	//ИначеЕсли ИмяПользователя() = "Krilova" Тогда
	//ИначеЕсли ИмяПользователя() = "Atausha" Тогда
	//Иначе 
	//	Предупреждение( "Нет прав на использование данного отчета." );
	//	СтатусВозврата( 0 ); Возврат;
	//КонецЕсли; 
	
	глПриОткрытии(Контекст,"ОтчетПоИзмПродаж");
	
КонецПроцедуры

Форма.выбТовар.ВыборГруппы(1);
Форма.выбАналитика.ВыборГруппы(1);