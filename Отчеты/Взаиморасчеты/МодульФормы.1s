//#ЗагрузитьИзФайла Текст1.txt
Перем ДокумОплаты[3000],ВыбФирма;
Перем СумОплаты[3000];
Перем Слои[4], Назв[4], СтНомер;
//-------------------------------
Функция ФорматЛит(КакаяТоДата)
	Рез=Формат(КакаяТоДата,"ДГГГГММДД");
	Рез=Лев(Рез,4)+"."+Сред(Рез,5,2)+"."+Сред(Рез,7,2);
	Возврат Рез;
КонецФункции
//-------------------------------
Процедура Очистить()
	ВыбКлиент=0;
	ВыбАгент=0;
КонецПроцедуры
//-------------------------------
Процедура ПриВыбореЗакладки(Номер,Значение)
	Форма.ИспользоватьСлой(слои[СтНомер],0);
	Форма.ИспользоватьСлой(слои[Номер],1);
	СтНомер=Номер;
КонецПроцедуры
//---------------------
Процедура ПриОткрытии()
	слои[1]="Взаиморасчеты";
	слои[2]="АктыСверки";
	Назв[1]="Взаиморасчеты"; 	Назв[2]="Акты сверки";
	Форма.ИспользоватьЗакладки(1);
	Для i = 1 По 2  Цикл
		Форма.Закладки.ДобавитьЗначение(i,Назв[i]);
	КонецЦикла;
	Форма.ИспользоватьСлой(слои[1],1);
	Форма.ИспользоватьСлой(слои[2],0);
	СтНомер=1;
КонецПроцедуры
//------------------------------------------------------
Процедура ДенежныйОборот(Режим)
	//  Создание Таблицы для выходного отчета
	начЛог = семЗаписатьЛогНач( "Отчет", "Взаиморасчеты", "Обработка", Шаблон("Денежный оборот ([Режим])") );
	Заг="";
	Запрос=СоздатьОбъект("Запрос");
	
	Если ДатаКонец>=ПолучитьДатуТА() Тогда
		ДатаКон=ПолучитьДатуТА();
	Иначе
		ДатаКон=ДатаКонец;
	КонецЕсли;
	ТекстЗапроса = "ПЕРИОД С ДатаНачала";
	ТекстЗапроса=ТекстЗапроса+" По ДатаКон;";
	ТекстЗапроса = ТекстЗапроса +
	"//{{ЗАПРОС(ДенежныйОборот)
	|Сумм=Документ.ДвиженияДенежныхСредств.Приход,Документ.ДвиженияДенежныхСредств.Расход,
	|Документ.ПриходныйОрдерТБ.Сумма,Документ.РасходныйОрдерТБ.Сумма,
	|Документ.ПриходнаяНакладная.Сумма,Документ.РасходнаяНакладнаяНал.Сумма;
	|Клн=Документ.ДвиженияДенежныхСредств.Клиент,
	|Документ.ПриходныйОрдерТБ.Клиент,Документ.РасходныйОрдерТБ.Клиент,
	|Документ.ПриходнаяНакладная.Клиент,Документ.РасходнаяНакладнаяНал.Клиент;
	|Валюта=Документ.ДвиженияДенежныхСредств.Валюта,
	|Документ.ПриходныйОрдерТБ.Валюта,Документ.РасходныйОрдерТБ.Валюта,
	|Документ.ПриходнаяНакладная.Валюта,Документ.РасходнаяНакладнаяНал.Валюта;";
//	|Курс=Документ.ДвиженияДенежныхСредств.Курс,
//	|Документ.ПриходныйОрдерТБ.Курс,Документ.РасходныйОрдерТБ.Курс,
//	|Документ.ПриходнаяНакладная.Курс,Документ.РасходнаяНакладнаяНал.Курс;";
	ТекстЗапроса=ТекстЗапроса+"
	|Группировка Документ;";
	Если ВыбКлиент.Выбран()=0 Тогда
		Заг1 = "Visi klienti";
	ИначеЕсли ВыбКлиент.ЭтоГруппа()=1 Тогда
		ТекстЗапроса = ТекстЗапроса +
		"Условие (Клн в ВыбКлиент);";
		Заг = "Klienti no grupas " +ВыбКлиент.Код+" "+ ВыбКлиент.Наименование;
	Иначе
		ТекстЗапроса = ТекстЗапроса + "Условие (Клн = ВыбКлиент);";
		Заг1="Klients"+ВыбКлиент.Код+" " + ВыбКлиент.Наименование;
	КонецЕсли;
	Если Запрос.Выполнить(ТекстЗапроса) = 0 тогда
		Возврат; // "Запрос по Кредиту не выполнился!!!";
	КонецЕсли;
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Таблица2");
	Таб.ВывестиСекцию("Отчет");
	СуммаПрих=0;
	СуммаРасх=0;
	ВсегоПрих=0;
	ВсегоРасх=0;
	Пока Запрос.Группировка("Документ")=1 Цикл
		Если Запрос.Документ.Проведен()=0 Тогда
			Продолжить;
		КонецЕсли;
		НайденныйДок=Запрос.Документ;
		Вал=Константа.ВалютаВзаиморасчетов;
		Если Режим <>"Подробно" Тогда
			Если (НайденныйДок.Вид()="ДвиженияДенежныхСредств") Тогда
				Влт=Константа.БазоваяВалюта;		// все денежные операции в латах
				НайденныйДок.ВыбратьСтроки();
				Пока НайденныйДок.ПолучитьСтроку()>0 Цикл
					Если НайденныйДок.Приход=0 Тогда
						СуммаРасх=СуммаРасх+НайденныйДок.Расход;  
						продолжить;
					КонецЕсли;
					//							СуммаПрих=СуммаПрих+Пересчет(НайденныйДок.Сумма,Влт,НайденныйДок.Курс,Вал,1.0);
					СуммаПрих=СуммаПрих+НайденныйДок.Приход;
				КонецЦикла;
			ИначеЕсли (НайденныйДок.Вид()="ПриходныйОрдерТБ") Тогда
				Влт=НайденныйДок.Валюта;
				Курс=КурсДляВалюты(Вал,НайденныйДок.ДатаДок);
				СуммаПрих=СуммаПрих+Пересчет(НайденныйДок.Сумма,Влт,Курс,Вал,1.0);
			ИначеЕсли (НайденныйДок.Вид()="РасходныйОрдерТБ") Тогда
				Влт=НайденныйДок.Валюта;
				Курс=КурсДляВалюты(Вал,НайденныйДок.ДатаДок);
				СуммаРасх=СуммаРасх+Пересчет(НайденныйДок.Сумма,Влт,Курс,Вал,1.0);
			ИначеЕсли (НайденныйДок.Вид()="ПриходнаяНакладная") Тогда
				Влт=НайденныйДок.Валюта;
				Курс=НайденныйДок.Курс;
				СуммаРасх=СуммаРасх+Пересчет(НайденныйДок.Итог("Сумма")+НайденныйДок.Итог("НДС"),Влт,Курс,Вал,1.0);
			ИначеЕсли (НайденныйДок.Вид()="РасходнаяНакладнаяНал") Тогда
				Влт=НайденныйДок.Валюта;
				Курс=НайденныйДок.Курс;
				СуммаПрих=СуммаПрих+Пересчет(НайденныйДок.Итог("Сумма")+НайденныйДок.Итог("НДС"),Влт,Курс,Вал,1.0);
			ИначеЕсли (НайденныйДок.Вид()="Платежка") Тогда
				СуммаРасх=СуммаРасх+НайденныйДок.Сумма;
			КонецЕсли;
		Иначе
			Если (НайденныйДок.Вид()="ДвиженияДенежныхСредств") Тогда
				Влт=Константа.БазоваяВалюта;
				НайденныйДок.ВыбратьСтроки();
				Пока НайденныйДок.ПолучитьСтроку()>0 Цикл 
					Если НайденныйДок.Приход=0 Тогда
						Влт=Константа.БазоваяВалюта;
						СуммаРасх=СуммаРасх+НайденныйДок.Расход;
						Документ=ПеревестиНаГосЯзык(НайденныйДок.Вид())+" Nr. "+СокрЛП(НайденныйДок.НомерДок);
						Клиент=НайденныйДок.Клиент.ПолноеНаименование;
						Прих="";
						Расх=Формат(НайденныйДок.Расход,"Ч12.2");
						Таб.ВывестиСекцию("Движение");  
						продолжить;
					КонецЕсли;
					Документ=ПеревестиНаГосЯзык(НайденныйДок.Вид())+" Nr. "+НайденныйДок.НомерДок;
					ДатаДок=НайденныйДок.ДатаДок;
					//						СуммаПрих=СуммаПрих+Пересчет(НайденныйДок.Сумма,Влт,НайденныйДок.Курс,Вал,1.0);
					СуммаПрих=СуммаПрих+НайденныйДок.Приход;
					Клиент=НайденныйДок.Клиент.ПолноеНаименование;
					Прих=Формат(НайденныйДок.Приход, "Ч12.2");
					//                                                Прих=Формат(Пересчет(НайденныйДок.Сумма,Влт,НайденныйДок.Курс,Вал,1.0), "Ч12.2");
					Расх="";
					Таб.ВывестиСекцию("Движение");
				КонецЦикла;
			ИначеЕсли (НайденныйДок.Вид()="ПриходныйОрдерТБ") Тогда
				Влт=НайденныйДок.Валюта;
				Курс=КурсДляВалюты(Вал,НайденныйДок.ДатаДок);
				СуммаПрих=СуммаПрих+Пересчет(НайденныйДок.Сумма,Влт,Курс,Вал,1.0);
				Документ=ПеревестиНаГосЯзык(НайденныйДок.Вид())+" Nr. "+СокрЛП(НайденныйДок.НомерДок);
				Клиент=НайденныйДок.Клиент.ПолноеНаименование;
				Расх="";
				Прих=Формат(Пересчет(НайденныйДок.Сумма,Влт,Курс,Вал,1.0), "Ч12.2");
				Таб.ВывестиСекцию("Движение");
			ИначеЕсли (НайденныйДок.Вид()="РасходныйОрдерТБ") Тогда
				Влт=НайденныйДок.Валюта;
				Курс=КурсДляВалюты(Вал,НайденныйДок.ДатаДок);
				СуммаРасх=СуммаРасх+Пересчет(НайденныйДок.Сумма,Влт,Курс,Вал,1.0);
				Документ=ПеревестиНаГосЯзык(НайденныйДок.Вид())+" Nr. "+СокрЛП(НайденныйДок.НомерДок);
				Клиент=НайденныйДок.Клиент.ПолноеНаименование;
				Прих="";
				Расх=Формат(Пересчет(НайденныйДок.Сумма,Влт,Курс,Вал,1.0), "Ч12.2");
				Таб.ВывестиСекцию("Движение");
			ИначеЕсли (НайденныйДок.Вид()="ПриходнаяНакладная") Тогда
				Влт=НайденныйДок.Валюта;
				Курс=НайденныйДок.Курс;
				СуммаРасх=СуммаРасх+Пересчет(НайденныйДок.Итог("Сумма")+НайденныйДок.Итог("НДС"),Влт,Курс,Вал,1.0);
				Документ=ПеревестиНаГосЯзык(НайденныйДок.Вид())+" Nr. "+СокрЛП(НайденныйДок.НомерДок);
				Клиент=НайденныйДок.Клиент.ПолноеНаименование;
				Прих="";
				Расх=Формат(Пересчет(НайденныйДок.Итог("Сумма")+НайденныйДок.Итог("НДС"),Влт,Курс,Вал,1.0), "Ч12.2");
				Таб.ВывестиСекцию("Движение");
			ИначеЕсли (НайденныйДок.Вид()="РасходнаяНакладнаяНал") Тогда
				Влт=НайденныйДок.Валюта;
				Курс=НайденныйДок.Курс;
				СуммаПрих=СуммаПрих+Пересчет(НайденныйДок.Итог("Сумма")+НайденныйДок.Итог("НДС"),Влт,Курс,Вал,1.0);
				Документ=ПеревестиНаГосЯзык(НайденныйДок.Вид())+" Nr. "+СокрЛП(НайденныйДок.НомерДок);
				Клиент=НайденныйДок.Клиент.ПолноеНаименование;
				Расх="";
				Прих=Формат(Пересчет(НайденныйДок.Итог("Сумма")+НайденныйДок.Итог("НДС"),Влт,Курс,Вал,1.0), "Ч12.2");
				Таб.ВывестиСекцию("Движение");
			ИначеЕсли (НайденныйДок.Вид()="Платежка") Тогда
				Влт=Константа.БазоваяВалюта;
				СуммаРасх=СуммаРасх+НайденныйДок.Сумма;
				Документ=ПеревестиНаГосЯзык(НайденныйДок.Вид())+" Nr. "+СокрЛП(НайденныйДок.НомерДок);
				Клиент=НайденныйДок.Клиент.ПолноеНаименование;
				Прих="";
				Расх=Формат(НайденныйДок.Сумма,"Ч12.2");
				Таб.ВывестиСекцию("Движение");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ВсегоПрих=ВсегоПрих+СуммаПрих;
	ВсегоРасх=ВсегоРасх+СуммаРасх;
	Таб.ВывестиСекцию("Итоги");
	//ОстатокК=ОстатокН+ВсегоПрих-ВсегоРасх;
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,0,0,);
	Таб.Показать("Konta saturs","");
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры     
//__________________
//Функция КонвертацияСуммы(ДатаКурса,ВалютаКонвертации,СуммаДляКонвертации) 
//	Перем Курс,СуммаЛат;
//	СпрВал=СоздатьОбъект("Справочник.Валюты");
//	СпрВал.НайтиЭлемент(ВалютаКонвертации);
//	Курс=СпрВал.Курс.Получить(ДатаКурса);
//	СуммаЛат=ОКР((СуммаДляКонвертации*Курс),2);
//	Возврат СуммаЛат;
//КонецФункции
Функция семКонвертацияСуммы( пДок,пСумма) 
	//Сообщить("пДок - " + пДок);
	//Сообщить("пСумма - " + пСумма);
    промВалюта = ?(глЕстьРеквизитШапки("Валюта", пДок.Вид()) = 1,пДок.Валюта,Рубли);
    промДатаКурса = ?(глЕстьРеквизитШапки("Дата_Курса", пДок.Вид()) = 1,пДок.Дата_курса,пДок.ДатаДок);
	//Сообщить("промВалюта - " + промВалюта);
	//Сообщить("промДатаКурса - " + промДатаКурса);
	//промКурс = ?(глЕстьРеквизитШапки("Курс", пДок.Вид()) = 1,пДок.Курс,КурсДляВалюты(промВалюта,промДатаКурса));
	ф = Пересчет(пСумма,промВалюта,промДатаКурса,Рубли,промДатаКурса);
	//Сообщить( " = "+ф );
    Возврат ф;
КонецФункции

//__________________
Процедура Взаиморасчеты(Режим)
	
	Перем ВозвратОтПокупателя, ВозвратПоставщику;
	начЛог = семЗаписатьЛогНач( "Отчет", "Взаиморасчеты", "Обработка", Шаблон("Взаиморасчеты по покупателям ([Режим])") );
	//  Создание Таблицы для выходного отчета
	
	Заг=" ";
	Запрос=СоздатьОбъект("Запрос");
	
	//	ВозвратОтПокупателя=глПолучитьПризнакНакладной(Перечисление.ПризнПрихНакл.ВозвратОтПокупателя);
	//	ВозвратПоставщику=глПолучитьПризнакНакладной(Перечисление.ПризнРасхНакл.ВозвратПоставщику);
	
	Если ДатаКонец>=ПолучитьДатуТА() Тогда
		ДатаКон=0;
		ДатаКонец=ПолучитьДатуТА();
	Иначе
		ДатаКон=ДатаКонец;
	КонецЕсли;
	
	Заг="";
	ТекстЗапроса = "ПЕРИОД С ДатаНачала";
	
	Если Не(ДатаКон=0) Тогда
		ТекстЗапроса=ТекстЗапроса+" По ДатаКон;";
	Иначе
		ТекстЗапроса=ТекстЗапроса+";";
	КонецЕсли;
	
	Если ФлКод=1 Тогда
		ТекстЗапроса = ТекстЗапроса +
		"//{{ЗАПРОС(Взаиморасчеты1)
		|Фирма  =Регистр.ВзаиморасчетыПокупателей.Фирма;
		|Клиент  =Регистр.ВзаиморасчетыПокупателей.Клиент;
		|Страна  =Регистр.ВзаиморасчетыПокупателей.Клиент.Страна;
		|ВидТорговли  =Регистр.ВзаиморасчетыПокупателей.КодОперации;
		//		|ВидКлиента  =Регистр.ВзаиморасчетыПокупателей.ВидКлиента;
		|Дилер  =Регистр.ВзаиморасчетыПокупателей.Клиент.Агент;
		|Баз_сум =Регистр.ВзаиморасчетыПокупателей.Долг;
		|Докум   =Регистр.ВзаиморасчетыПокупателей.ТекущийДокумент;  
		|КредДокумент=Регистр.ВзаиморасчетыПокупателей.КредДокумент;
		|Вал_сум =Регистр.ВзаиморасчетыПокупателей.Долг;
		|Функция КонБаз  = КонОст(Баз_сум);
		|Функция КонВал  = КонОст(Вал_сум);
		|Функция НачБаз  = НачОст(Баз_сум);
		|Функция НачВал  = НачОст(Вал_сум);
		|Функция ПрихБаз = Расход(Баз_сум);
		|Функция ПрихВал = Расход(Вал_сум);
		|Функция ВозвратБаз = Расход(Баз_сум) Когда ((ВидТорговли=ВозвратОтПокупателяНеоплаченногоТовара)или(ВидТорговли=ВозвратОтПокупателяОплаченногоТовара));
		|Функция ВозвратВал = Расход(Вал_сум) Когда ((ВидТорговли=ВозвратОтПокупателяНеоплаченногоТовара)или(ВидТорговли=ВозвратОтПокупателяОплаченногоТовара));
		//		|Функция ВозвратПостБаз = Расход(Баз_сум) Когда (ВидТорговли=ВозвратПоставщику);
		//		|Функция ВозвратПостВал = Расход(Вал_сум) Когда (ВидТорговли=ВозвратПоставщику);
		|Функция РасхВал = Приход(Вал_сум);
		|Функция РасхБаз = Приход(Баз_сум);
		|Группировка Клиент упорядочить по Клиент.Код;
		|"//}}ЗАПРОС
		;
	Иначе
		ТекстЗапроса = ТекстЗапроса +
		"//{{ЗАПРОС(Взаиморасчеты2)
		|Фирма  =Регистр.ВзаиморасчетыПокупателей.Фирма;
		|Клиент  =Регистр.ВзаиморасчетыПокупателей.Клиент;
		|Страна  =Регистр.ВзаиморасчетыПокупателей.Клиент.Страна;
		|ВидТорговли  =Регистр.ВзаиморасчетыПокупателей.КодОперации;
		//		|ВидКлиента  =Регистр.Взаиморасчеты.ВидКлиента; 
		|Дилер  =Регистр.ВзаиморасчетыПокупателей.Клиент.Агент;
		|ВалютаКредита =Регистр.ВзаиморасчетыПокупателей.Клиент.ВалютаКредита;
		|Баз_сум =Регистр.ВзаиморасчетыПокупателей.Долг;
		|Докум   =Регистр.ВзаиморасчетыПокупателей.ТекущийДокумент;
		|КредДокумент=Регистр.ВзаиморасчетыПокупателей.КредДокумент;
		|Вал_сум =Регистр.ВзаиморасчетыПокупателей.Долг;
		|Функция КонБаз  = КонОст(Баз_сум);
		|Функция КонВал  = КонОст(Вал_сум);
		|Функция НачБаз  = НачОст(Баз_сум);
		|Функция НачВал  = НачОст(Вал_сум);
		|Функция ПрихБаз = Расход(Баз_сум);
		|Функция ПрихВал = Расход(Вал_сум);
		|Функция РасхБаз = Приход(Баз_сум);
		|Функция РасхВал = Приход(Вал_сум);
		|Функция ВозвратБаз = Расход(Баз_сум) Когда ((ВидТорговли=ВозвратОтПокупателяНеоплаченногоТовара)или(ВидТорговли=ВозвратОтПокупателяОплаченногоТовара));
		|Функция ВозвратВал = Расход(Вал_сум) Когда ((ВидТорговли=ВозвратОтПокупателяНеоплаченногоТовара)или(ВидТорговли=ВозвратОтПокупателяОплаченногоТовара));
		|Группировка Клиент упорядочить по Клиент.ПоАлфавиту без групп;
		|"//}}ЗАПРОС
		;
	КонецЕсли;                     
	
	//	ТекстЗапроса = ТекстЗапроса + "Условие (ВидКлиента = Перечисление.ВидыКлиентов.Покупатель);";
	ТекстЗапроса = ТекстЗапроса + "Условие (Фирма=ВыбФирма);";

	Если ТолькоРезиденты=1 Тогда
	    ТекстЗапроса = ТекстЗапроса + "Условие (Страна=Константа.СтранаРезидент);";
	КонецЕсли;
	
//	Если Режим="Подробно" Тогда
		ТекстЗапроса = ТекстЗапроса +"Группировка Докум;";
//	КонецЕсли;
	
	Если ВыбКлиент.Выбран()=0 Тогда
		Заг = "Visi klienti";
	ИначеЕсли ВыбКлиент.ЭтоГруппа()=1 Тогда
		ТекстЗапроса = ТекстЗапроса +
		"Условие (Клиент в ВыбКлиент);";
		Заг = "Klienti no grupas " +ВыбКлиент.Код+" "+ ВыбКлиент.Наименование;
	Иначе
		ТекстЗапроса = ТекстЗапроса + "Условие (Клиент = ВыбКлиент);";
		      
		Если семТекСтрана()="LV" Тогда
			печКл="Klients: ";
		ИначеЕсли семТекСтрана()="LT" Тогда
			печКл="Klientas: ";
		ИначеЕсли семТекСтрана()="EE" Тогда
			печКл="Klient: ";
		КонецЕсли;
		Заг=печКл+ВыбКлиент.Код+" "+ВыбКлиент.ПолноеНаименование;
	КонецЕсли;     
	
	Если ВыбАгент.Выбран()=0 Тогда
		Заг1 = "";
	ИначеЕсли ВыбАгент.ЭтоГруппа()=1 Тогда
		ТекстЗапроса = ТекстЗапроса +
		"Условие (Дилер в ВыбАгент);";
		Заг1= "AЄenti no grupas " +ВыбАгент.Код+" "+ ВыбАгент.Наименование;
	Иначе
		ТекстЗапроса = ТекстЗапроса + "Условие (Дилер = ВыбАгент);";
		Заг1="AЄent  " + ВыбАгент.Наименование;
	КонецЕсли;
	Если Запрос.Выполнить(ТекстЗапроса) = 0 тогда
		Возврат; // "Запрос по Кредиту не выполнился!!!";
	КонецЕсли;
	
	//тзрез=СоздатьОбъект("ТаблицаЗначений");
	//Запрос.Выгрузить(тзрез,1);
	//тзрез.ВыбратьСтроки();
	//Пока тзрез.ПолучитьСтроку() = 1 Цикл   
	//	Сообщить(тзрез.КредДокумент);
	//	Сообщить(тзрез.КредДокумент.Валюта);
	//КонецЦикла;
	
	
	Если ФлКр=1 Тогда
		//Создание объекта типа Запрос
		// Получение информации по кредитной линии
		ЗапросО = СоздатьОбъект("Запрос");
		ТекстЗап = "Период с ДатаНачала";
		Если ДатаКонец>=ПолучитьДатуТА() Тогда
			ДатаКонца=ПолучитьДатуТА();
			ДатаКон=ДатаКонец;
			ТекстЗап= ТекстЗап+";";
		Иначе
			ТекстЗап= ТекстЗап+" по ДатаКонец;";
		КонецЕсли;
		ТекстЗап = ТекстЗап +
		"//{{ЗАПРОС(Кредиты)
		|Фирма  =Регистр.ВзаиморасчетыПокупателей.Фирма;
		|Клиент=Регистр.ВзаиморасчетыПокупателей.Клиент;   
		|Докум   =Регистр.ВзаиморасчетыПокупателей.ТекущийДокумент;
		|КредДокумент=Регистр.ВзаиморасчетыПокупателей.КредДокумент;
		|Долг=Регистр.ВзаиморасчетыПокупателей.Долг;
		|Группировка Клиент Без групп;
		|Группировка КредДокумент;
		|Функция КонДолг= КонОст(Долг);
		|Функция РасхДолг= Приход(Долг);
		|Функция ПрихДолг= Расход(Долг);
		|"//}}ЗАПРОС
		;
		ТекстЗап = ТекстЗап + "Условие (Фирма=ВыбФирма);";
		
		Если ВыбКлиент.Выбран() = 0 Тогда
		ИначеЕсли ВыбКлиент.ЭтоГруппа() = 1 Тогда
			ТекстЗап = ТекстЗап + "Условие (Клиент в ВыбКлиент);";
		Иначе
			ТекстЗап = ТекстЗап + "Условие (Клиент = ВыбКлиент);";
		КонецЕсли;
		// Если ошибка в запросе, то выход из процедуры
		Если ЗапросО.Выполнить(ТекстЗап)=0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Режим="Excel" Тогда
		// Создаем объект Excel и присвоим его переменной языка
		ОкноExcel = СоздатьОбъект("Excel.Application");
		// устанавливаем имя окна Excel
		ОкноExcel.Caption="Взаиморасчеты с клиентами";
		// создадим новую рабочую книгу
		НовыеРабочиеКниги= ОкноExcel.Workbooks;
		РабочаяКнига= НовыеРабочиеКниги.Add();
		Страница=РабочаяКнига.Worksheets(1);
		
		СтрокаНаименований = Страница.Rows(1);
		// Установим ширину столбцов в строке наименований
		СтрокаНаименований.ColumnWidth=25;
		СтрокаЗначений = Страница.Rows(2);
		// Установим выравнивание строки значений
		СтрокаЗначений.HorizontalAlignment=КонстантаExcel("xlLeft");
		
		Ряд=0;
		Столбец=0;
		ЧислоСтолбцов=0;
		ЧислоЗначений=0;
		Пока Запрос.Группировка("Клиент") = 1 Цикл
			Если Запрос.Клиент.ЭтоГруппа()=1 Тогда
				Продолжить;
			КонецЕсли;
			// проставим названия строк
			Ряд=1;
			Ячейка= ОкноExcel.Cells(Ряд +1,1);
			Ячейка.Value="Долг";
			// проставим названия столбцов
			Столбец=Столбец+1;
			ЧислоСтолбцов=Столбец;
			Ячейка = ОкноExcel.Cells(1, Столбец +1);
			Ячейка.Value=Запрос.Клиент.Наименование;
			// заполним ячейки таблицы значениями
			Ячейка = ОкноExcel.Cells(Ряд +1, Столбец +1);
			Ячейка.Value= Запрос.КонВал;
			ЧислоЗначений=ЧислоЗначений+1;
			Состояние("Для диаграммы сформировано "+ЧислоЗначений+" значений.");
		КонецЦикла;
		Состояние("Формируется диаграмма");
		ЧислоРядов=Ряд;
		// выделим область в таблице и присвоим ее переменной языка
		Область= ОкноExcel.Range(ОкноExcel.Cells(1,1), ОкноExcel.Cells(ЧислоРядов +1, ЧислоСтолбцов +1));
		// зададим имя выделенной области
		Область.Name = "ОбластьДанных";
		
		// определим рамку выделенной области и  присвоим ее переменной языка
		Рамка= Область.Borders;
		// установим стили для рамки выделенной области
		Рамка.LineStyle=1;
		Рамка.ColorIndex = 3;
		
		Лист=РабочаяКнига.Worksheets(1);
		ДиагрОбъект= Лист.ChartObjects;
		Диаграмма = ДиагрОбъект.Add(5,5+Область.Top+Область.Height,420,250);//Область.Width,Область.Height);
		МояДиаграмма= Диаграмма.Chart;
		МояДиаграмма.ChartWizard("ОбластьДанных",КонстантаExcel("xlColumn"),6,1,1,1,1,"Взаиморасчеты с клиентами","",Константа.ВалютаВзаиморасчетов.Наименование);
		МояДиаграмма.HasLegend=0;
		МояДиаграмма.AutoFormat(КонстантаExcel("xlColumn"),6);
		// сделаем окно Excel активным
		ОкноExcel.Visible=1;
		
	Иначе
		
		// теперь в запросе собраны все Документы по клиенту
		//  Создание Таблицы для выходного отчета
		ЧислоСтрок=0;
		Таб=СоздатьОбъект("Таблица");
		Если ФлКр=1 Тогда
			Таб.ИсходнаяТаблица("КрДолг");
		Иначе
			Таб.ИсходнаяТаблица("Таблица1"+семТекСтрана());
		КонецЕсли;
		Если Режим = "Развернуто" Тогда
			ЗаголовокОтчета = "Savstarp§ji nor§°ini ar pirc§jiem";
			Таб.ИсходнаяТаблица("Развернуто");
		КонецЕсли;
		Таб.ВывестиСекцию("Отчет2");
		Оживить(4);
		ИтогНашДолгБаз=0;
		ИтогНашДолгВал=0;
		ИтогДолгКлиентаБаз=0;
		ИтогДолгКлиентаВал=0;
		ИтогНашДолгБазН=0;
		ИтогНашДолгВалН=0;
		ИтогДолгКлиентаБазН=0;
		ИтогДолгКлиентаВалН=0;
		ИтогПрихБаз=0;
		ИтогВозвБаз=0;
		ИтогРасхБаз=0;
		ИтогКредит=0;      

		Пока Запрос.Группировка("Клиент") = 1 Цикл
			Если Запрос.Клиент.Выбран()=0 Тогда
				Продолжить;
			КонецЕсли;
			Если Запрос.Клиент.ЭтоГруппа()=1 Тогда
				Таб.ВывестиСекцию("Группа2");
				Оживить(1);
				Продолжить;
			Иначе                  
				
				ВалютаКредита = Запрос.ВалютаКредита;
				
				ПрБаз=0;
				РсБаз=0;
				ВзБаз=0;
				ВзВал=0;					

				//Если СокрЛП(Запрос.КредДокумент.Валюта.Наименование) <> "LVL" Тогда 
				//Если Запрос.КредДокумент.Влюта <> Рубли Тогда -- нельзя проверить валюту, т.к. нет детализации по кред. документу
					//Если Запрос.КонБаз<0 Тогда
					//	НашДолгБаз=-Запрос.КонБаз; //семКонвертацияСуммы(Запрос.КредДокумент,Запрос.КонБаз);
					//	ДолгКлиентаБаз=0;
					//Иначе
					//	НашДолгБаз=0;  
					//	ДолгКлиентаБаз=Запрос.КонБаз;//семКонвертацияСуммы(Запрос.КредДокумент,Запрос.КонБаз);
					//КонецЕсли;
					//Если Запрос.КонВал<0 Тогда 
					//	НашДолгВал=-Запрос.КонВал;//семКонвертацияСуммы(Запрос.КредДокумент,Запрос.КонВал);
					//	ДолгКлиентаВал=0;
					//Иначе
					//	НашДолгВал=0;
					//	ДолгКлиентаВал=Запрос.КонВал;//семКонвертацияСуммы(Запрос.КредДокумент,Запрос.КонВал);
					//КонецЕсли;
					//Если Запрос.НачБаз<0 Тогда 
					//	НашДолгБазН=-Запрос.НачБаз;//семКонвертацияСуммы(Запрос.КредДокумент,Запрос.НачБаз);
					//	ДолгКлиентаБазН=0;
					//Иначе
					//	НашДолгБазН=0;
					//	ДолгКлиентаБазН=Запрос.НачБаз;//семКонвертацияСуммы(Запрос.КредДокумент,Запрос.НачБаз);
					//КонецЕсли;
					//Если Запрос.НачВал<0 Тогда   
					//	НашДолгВалН=-Запрос.НачВал;//семКонвертацияСуммы(Запрос.КредДокумент,Запрос.НачВал);
					//	ДолгКлиентаВалН=0;
					//Иначе
					//	НашДолгВалН=0;
					//	ДолгКлиентаВалН=Запрос.НачВал;//семКонвертацияСуммы(Запрос.КредДокумент,Запрос.НачВал);
					//КонецЕсли;					
					//ПрБаз=Запрос.ПрихБаз;//семКонвертацияСуммы(Запрос.КредДокумент,Запрос.ПрихБаз);
					//РсБаз=Запрос.РасхБаз;//семКонвертацияСуммы(Запрос.КредДокумент,Запрос.РасхБаз);
					//ВзБаз=Запрос.ВозвратБаз;//семКонвертацияСуммы(Запрос.КредДокумент,Запрос.ВозвратБаз);
					//ВзВал=Запрос.ВозвратВал;//семКонвертацияСуммы(Запрос.КредДокумент,Запрос.ВозвратВал);					
//				Иначе
					Если Запрос.КонБаз<0 Тогда
						НашДолгБаз=-Пересчет(Запрос.КонБаз,ВалютаКредита,ДатаКонец,Рубли,1);
						ДолгКлиентаБаз=0;
					Иначе
						НашДолгБаз=0;
						ДолгКлиентаБаз=Пересчет(Запрос.КонБаз,ВалютаКредита,ДатаКонец,Рубли,1);
					КонецЕсли;
					Если Запрос.КонВал<0 Тогда
						НашДолгВал=-Запрос.КонВал;
						ДолгКлиентаВал=0;
					Иначе
						НашДолгВал=0;
						ДолгКлиентаВал=Запрос.КонВал;
					КонецЕсли;
					Если Запрос.НачБаз<0 Тогда
						НашДолгБазН=-Пересчет(Запрос.НачБаз,ВалютаКредита,ДатаКонец,Рубли,1);
						ДолгКлиентаБазН=0;
					Иначе
						НашДолгБазН=0;
						ДолгКлиентаБазН=Пересчет(Запрос.НачБаз,ВалютаКредита,ДатаКонец,Рубли,1);
					КонецЕсли;
					Если Запрос.НачВал<0 Тогда
						НашДолгВалН=-Запрос.НачВал;
						ДолгКлиентаВалН=0;
					Иначе
						НашДолгВалН=0;
						ДолгКлиентаВалН=Запрос.НачВал;
					КонецЕсли;    
					ИмеетсяТекДок=0; 
					//пРсБаз = 0;
					Пока Запрос.Группировка("Докум") = 1 Цикл 
						Док=Запрос.Докум;
						Если Док <> Запрос.КредДокумент Тогда
							Если глЕстьРеквизитШапки("Валюта",Док.Вид())=1 Тогда
								Если Док.Валюта <> Рубли Тогда   
									РсБаз=РсБаз+семКонвертацияСуммы(Док,Запрос.РасхБаз);
									Пер=семКонвертацияСуммы(Док,НашДолгБаз);
									НашДолгБаз=Пер;
									Если РсБаз > 0 Тогда ИмеетсяТекДок=1; КонецЕсли;
								Иначе
								//								
								КонецЕсли;	
							КонецЕсли;
						КонецЕсли;
					  КонецЦикла;
					Если ИмеетсяТекДок=0 Тогда
						РсБаз=Запрос.РасхБаз;
					КонецЕсли;
					ПрБаз=Пересчет(Запрос.ПрихБаз,ВалютаКредита,ДатаКонец,Рубли,1);
					ВзБаз=Пересчет(Запрос.ВозвратБаз,ВалютаКредита,ДатаКонец,Рубли,1);
					ВзВал=Запрос.ВозвратВал;					
//				КонецЕсли;
				// Получим кредитный долг
				Если ФлКр=1 Тогда
					ДолгКредит=?(ЗапросО.Получить(Запрос.Клиент.ТекущийЭлемент(),)=1,ЗапросО.КонДолг,0);
					ИтогКредит=ИтогКредит+ДолгКредит;
				КонецЕсли;
				Если Ноль=1 Тогда
					Если (ПрБаз<>0) Или (РсБаз<>0) Тогда
						Таб.ВывестиСекцию("Клиент2");
						ИтогНашДолгБазН=ИтогНашДолгБазН+НашДолгБазН;
						ИтогНашДолгВалН=ИтогНашДолгВалН+НашДолгВалН;
						ИтогНашДолгБаз=ИтогНашДолгБаз+НашДолгБаз;
						ИтогНашДолгВал=ИтогНашДолгВал+НашДолгВал;
						ИтогДолгКлиентаБаз =ИтогДолгКлиентаБаз + ДолгКлиентаБаз;
						ИтогДолгКлиентаВал=ИтогДолгКлиентаВал+ДолгКлиентаВал;
						ИтогДолгКлиентаБазН = ИтогДолгКлиентаБазН + ДолгКлиентаБазН;
						ИтогДолгКлиентаВалН=ИтогДолгКлиентаВалН+ДолгКлиентаВалН;
						ИтогПрихБаз=ИтогПрихБаз+ПрБаз;
						ИтогВозвБаз=ИтогВозвБаз+ВзБаз;
						ИтогРасхБаз=ИтогРасхБаз+РсБаз;
					КонецЕсли;
				Иначе
					Таб.ВывестиСекцию("Клиент2");
					ИтогНашДолгБазН=ИтогНашДолгБазН+НашДолгБазН;
					ИтогНашДолгВалН=ИтогНашДолгВалН+НашДолгВалН;
					ИтогНашДолгБаз=ИтогНашДолгБаз+НашДолгБаз;
					ИтогНашДолгВал=ИтогНашДолгВал+НашДолгВал;
					ИтогДолгКлиентаБаз =ИтогДолгКлиентаБаз + ДолгКлиентаБаз;
					ИтогДолгКлиентаВал=ИтогДолгКлиентаВал+ДолгКлиентаВал;
					ИтогДолгКлиентаБазН = ИтогДолгКлиентаБазН + ДолгКлиентаБазН;
					ИтогДолгКлиентаВалН=ИтогДолгКлиентаВалН+ДолгКлиентаВалН;
					ИтогПрихБаз=ИтогПрихБаз+ПрБаз;
					ИтогВозвБаз=ИтогВозвБаз+ВзБаз;
					ИтогРасхБаз=ИтогРасхБаз+РсБаз;
				КонецЕсли;
				Оживить(2);
			КонецЕсли;
			Если Режим="Подробно" Тогда
				Если ФлСорт=1 Тогда
					// Отсортируем проплаты по накладным.Пройдемся по всем документам клиента и
					// запишем отсортированные проплаты по накладным в списки значений
					ПервДокум=СоздатьОбъект("СписокЗначений");
					ВидПервДок=СоздатьОбъект("СписокЗначений"); // Документ по приходу или расходу
					ДвБазСум=СоздатьОбъект("СписокЗначений");
					ДвВозв=СоздатьОбъект("СписокЗначений");
					Для Инд=1 По 2000 Цикл     // Зарезервировали место для
						// 1000 документов по одному клиенту
						ДокумОплаты[Инд]=СоздатьОбъект("СписокЗначений");
						СумОплаты[Инд]=СоздатьОбъект("СписокЗначений");
					КонецЦикла;
					Пока Запрос.Группировка("Докум") = 1 Цикл
						Док=Запрос.Докум;
						ДокВид=Док.Вид();
						Если НЕ(Запрос.ПрихБаз=0) Тогда                       // Документы по приходу
							Дв_Баз_Сум=Запрос.ПрихБаз;
							Дв_Вал_Сум=Запрос.ПрихВал;
							Дв_Возв_Баз=Запрос.ВозвратБаз;
							Дв_Возв_Вал=Запрос.ВозвратВал;
							Если (ДокВид="ПриходнаяНакладная") ИЛИ           // Первичные документы
							(ДокВид="РасходнаяНакладнаяНал") ИЛИ
							(ДокВид="ПриходнаяКредит") ИЛИ
							(ДокВид="РасходнаяНакладная") ИЛИ
							(ДокВид="ПриходнаяРеализ") ИЛИ
							(ДокВид="РасходнаяРеализ")   Тогда
								// Запишем документ в список значений
								ПервДокум.ДобавитьЗначение(Док,ДокВид); //Документ
								ВидПервДок.ДобавитьЗначение("Приход");
								// Запишем  данные по документу
								ДвБазСум.ДобавитьЗначение(Дв_Баз_Сум,Дв_Баз_Сум); // Сумма по документу
								ДвВозв.ДобавитьЗначение(Дв_Возв_Баз,Дв_Возв_Баз); // Возврат
								//Проверим  документы оплаты
							ИначеЕсли (ДокВид="ПриходныйОрдерТБ")   Тогда
								Если Док.ДокументОснование.Выбран()=1 Тогда
									// Найдем первичный документ в списке значений
									Поз=ПервДокум.НайтиЗначение(Док.ДокументОснование);
									Если Поз=0 Тогда      // Первичный док. не найден,записываем текущий док.
										// в основной список
										ПервДокум.ДобавитьЗначение(Док,ДокВид); //Документ
										ВидПервДок.ДобавитьЗначение("Приход");
										ДвБазСум.ДобавитьЗначение(Дв_Баз_Сум,Дв_Баз_Сум); // Сумма по документу
										ДвВозв.ДобавитьЗначение(Дв_Возв_Баз,Дв_Возв_Баз); // Возврат
									Иначе
										ДокумОплаты[Поз].ДобавитьЗначение(Док,ДокВид); //Документ
										СумОплаты[Поз].ДобавитьЗначение(Дв_Баз_Сум,Дв_Баз_Сум); //Сумма
									КонецЕсли;
								Иначе     // Не указан документ-основание,
									// запишем этот документ в общий список первичных документов
									ПервДокум.ДобавитьЗначение(Док,ДокВид); //Документ
									ВидПервДок.ДобавитьЗначение("Приход");
									ДвБазСум.ДобавитьЗначение(Дв_Баз_Сум,Дв_Баз_Сум); // Сумма по документу
									ДвВозв.ДобавитьЗначение(Дв_Возв_Баз,Дв_Возв_Баз); // Возврат
								КонецЕсли;
							ИначеЕсли (ДокВид="ДвиженияДенежныхСредств") Тогда
								Док.ВыбратьСтроки();
								ФлДокумОплаты=0;// Запись документа оплаты
								Пока Док.ПолучитьСтроку()=1 Цикл
									Если Док.Сумма=0 Тогда
										Продолжить;
									КонецЕсли;
									Если Док.ДокументОснование.Выбран()=1 Тогда
										// Найдем первичный документ в списке значений
										Поз=ПервДокум.НайтиЗначение(Док.ДокументОснование);
										Если Поз<>0 Тогда
											ДокумОплаты[Поз].ДобавитьЗначение(Док,ДокВид); //Документ
											СумОплаты[Поз].ДобавитьЗначение(Док.Сумма,Док.Сумма); //Сумма
											ФлДокумОплаты=1;
										Иначе
											// первичный документ не найден
											// запишем строку документа в основной список
											ПервДокум.ДобавитьЗначение(Док,ДокВид); //Документ
											ВидПервДок.ДобавитьЗначение("Приход");
											ДвБазСум.ДобавитьЗначение(Док.Сумма,Док.Сумма); // Сумма по документу
											ДвВозв.ДобавитьЗначение(0,0); // Возврат
										КонецЕсли;
									Иначе
										// нет документа-основания,запишем документ в основной список
										// сумму берем из данной строки документа
										ПервДокум.ДобавитьЗначение(Док,ДокВид); //Документ
										ВидПервДок.ДобавитьЗначение("Приход");
										ДвБазСум.ДобавитьЗначение(Док.Сумма,Док.Сумма); // Сумма по документу
										ДвВозв.ДобавитьЗначение(0,0); // Возврат
									КонецЕсли;
								КонецЦикла;
							ИначеЕсли (ДокВид="ДвиженияДенежныхСредств") Тогда
								Док.ВыбратьСтроки();
								ФлДокумОплаты=0;// Запись документа оплаты
								Пока Док.ПолучитьСтроку()=1 Цикл                                                   
									Если (Док.ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление) ИЛИ 
									(Док.ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.КредитнаяНотаПокупатель) Тогда
									Иначе
										Продолжить;
									КонецЕсли;
									
									Если Док.ДокументОснование.Выбран()=1 Тогда
										// Найдем первичный документ в списке значений
										Поз=ПервДокум.НайтиЗначение(Док.ДокументОснование);
										Если Поз<>0 Тогда
											ДокумОплаты[Поз].ДобавитьЗначение(Док,ДокВид); //Документ
											СумОплаты[Поз].ДобавитьЗначение(Док.ПриходПогаш,Док.ПриходПогаш); //Сумма
											ФлДокумОплаты=1;
										Иначе
											// первичный документ не найден
											// запишем строку документа в основной список
											ПервДокум.ДобавитьЗначение(Док,ДокВид); //Документ
											ВидПервДок.ДобавитьЗначение("Приход");
											ДвБазСум.ДобавитьЗначение(Док.ПриходПогаш,Док.ПриходПогаш); // Сумма по документу
											ДвВозв.ДобавитьЗначение(0,0); // Возврат
										КонецЕсли;
									Иначе
										// нет документа-основания,запишем документ в основной список
										// сумму берем из данной строки документа
										ПервДокум.ДобавитьЗначение(Док,ДокВид); //Документ
										ВидПервДок.ДобавитьЗначение("Приход");
										ДвБазСум.ДобавитьЗначение(Док.ПриходПогаш,Док.ПриходПогаш); // Сумма по документу
										ДвВозв.ДобавитьЗначение(0,0); // Возврат
									КонецЕсли;
								КонецЦикла;
								
							КонецЕсли;
						КонецЕсли;
						Если НЕ(Запрос.РасхБаз=0) Тогда                    // Документы по расходу
							Дв_Баз_Сум=Запрос.РасхБаз;
							Дв_Вал_Сум=Запрос.РасхВал;
							Дв_Возв_Баз=Запрос.ВозвратБаз;
							Дв_Возв_Вал=Запрос.ВозвратВал;
							Если (ДокВид="ПриходнаяНакладная") ИЛИ           // Первичные документы
							(ДокВид="РасходнаяНакладнаяНал") ИЛИ
							(ДокВид="ПриходнаяКредит") ИЛИ
							(ДокВид="РасходнаяНакладная") ИЛИ
							(ДокВид="ПриходнаяРеализ") ИЛИ
							(ДокВид="РасходнаяРеализ")   Тогда
								// Запишем документ в список значений
								ПервДокум.ДобавитьЗначение(Док,ДокВид); //Документ
								ВидПервДок.ДобавитьЗначение("Расход");
								// Запишем  данные по документу
								ДвБазСум.ДобавитьЗначение(Дв_Баз_Сум,Дв_Баз_Сум); // Сумма по документу
								ДвВозв.ДобавитьЗначение(Дв_Возв_Баз,Дв_Возв_Баз); // Возврат
								//Проверим  документы оплаты
							ИначеЕсли (ДокВид="РасходныйОрдерТБ")  Тогда
								Если Док.ДокументОснование.Выбран()=1 Тогда
									// Найдем первичный документ в списке значений
									Поз=ПервДокум.НайтиЗначение(Док.ДокументОснование);
									Если Поз=0 Тогда      // Первичный док. не найден,записываем текущий док.
										// в основной список
										ПервДокум.ДобавитьЗначение(Док,ДокВид); //Документ
										ВидПервДок.ДобавитьЗначение("Расход");
										ДвБазСум.ДобавитьЗначение(Дв_Баз_Сум,Дв_Баз_Сум); // Сумма по документу
										ДвВозв.ДобавитьЗначение(Дв_Возв_Баз,Дв_Возв_Баз); // Возврат
									Иначе
										ДокумОплаты[Поз].ДобавитьЗначение(Док,ДокВид); //Документ
										СумОплаты[Поз].ДобавитьЗначение(Дв_Баз_Сум,Дв_Баз_Сум); //Сумма
									КонецЕсли;
								Иначе     // Не указан документ-основание,
									// запишем этот документ в общий список первичных документов
									ПервДокум.ДобавитьЗначение(Док,ДокВид); //Документ
									ВидПервДок.ДобавитьЗначение("Расход");
									ДвБазСум.ДобавитьЗначение(Дв_Баз_Сум,Дв_Баз_Сум); // Сумма по документу
									ДвВозв.ДобавитьЗначение(Дв_Возв_Баз,Дв_Возв_Баз); // Возврат
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
					// Теперь распечатаем отсортированные списки
					КоличДокум=ПервДокум.РазмерСписка();
					Если КоличДокум>0 Тогда
						Для Поз=1 По  КоличДокум Цикл
							Предс="";
							Док=ПервДокум.ПолучитьЗначение(Поз,Предс);
							ДокВид=Док.Вид();
							Если ДокВид="РасходнаяНакладная" Тогда
								Если Док.ПризнакНакладной=Перечисление.ПризнРасхНакл.КредитнаяНота Тогда
									ПечДокум="   "+Док.ДатаДок+"     "+"Kred.note Nr. "+СокрП(Док.НомерДок);
//								ИначеЕсли Док.ПризнакНакладной=Перечисление.ПризнРасхНакл.SodaNauda Тогда
//									ПечДокум="   "+Док.ДатаДок+"     "+"SodaNauda Nr. "+СокрП(Док.НомерДок);
								Иначе
									ПечДокум="   "+Док.ДатаДок+"     "+СокрП(ПеревестиНаГосЯзык(ДокВид))+" Nr. "+СокрП(Док.НомерДок);
								КонецЕсли;
							Иначе
								ПечДокум="   "+Док.ДатаДок+"     "+СокрП(ПеревестиНаГосЯзык(ДокВид))+" Nr. "+СокрП(Док.НомерДок);
							КонецЕсли;
							ВидДвижения=ВидПервДок.ПолучитьЗначение(Поз,Предс);
							Если (ВидДвижения="Приход") Тогда
								Дв_Баз_Сум=ДвБазСум.ПолучитьЗначение(Поз,Предс);
								Дв_Возв_Баз=ДвВозв.ПолучитьЗначение(Поз,Предс);
								Таб.ВывестиСекцию("Приход2");
								Если (ДокВид="ПриходнаяНакладная") ИЛИ           // Первичные документы
								(ДокВид="РасходнаяНакладнаяНал") ИЛИ
								(ДокВид="ПриходнаяКредит") ИЛИ
								(ДокВид="РасходнаяНакладная") ИЛИ
								(ДокВид="ПриходнаяРеализ") ИЛИ
								(ДокВид="РасходнаяРеализ")   Тогда
									// Проверим наличие проплат по документам
									ДлСпОплат=ДокумОплаты[Поз].РазмерСписка();
									Если ДлСпОплат>0 Тогда
										Для Инд=1 По ДлСпОплат Цикл
											ОплДок=ДокумОплаты[Поз].ПолучитьЗначение(Инд,Предс);
											ОплДокум=СокрП(ПеревестиНаГосЯзык(ОплДок.Вид()))+" Nr. "+СокрП(ОплДок.НомерДок) +" no "+ОплДок.ДатаДок ;
											Дв_Баз_Сум=СумОплаты[Поз].ПолучитьЗначение(Инд,Предс);
											Таб.ВывестиСекцию("Проплата1");
											Оживить(1);
										КонецЦикла;
									КонецЕсли;
								ИначеЕсли (ДокВид="ПриходныйОрдерТБ")   Тогда
									Если Док.ДокументОснование.Выбран()=1 Тогда
										ОплДокум="Pamat.: "+СокрП(ПеревестиНаГосЯзык(Док.ДокументОснование.Вид()))+" Nr. "+СокрП(Док.ДокументОснование.НомерДок) +" no "+Док.ДокументОснование.ДатаДок ;
										Таб.ВывестиСекцию("Проплата");
										Оживить(1);
									КонецЕсли;
								ИначеЕсли (ДокВид="ДвиженияДенежныхСредств") Тогда
									
									Док.ВыбратьСтроки();
									Пока Док.ПолучитьСтроку()=1 Цикл
										Если Док.Сумма=Дв_Баз_Сум Тогда
											Если Док.ДокументОснование.Выбран()=1 Тогда
												ОплДокум="Pamat.: "+СокрП(ПеревестиНаГосЯзык(Док.ДокументОснование.Вид()))+" Nr. "+СокрП(Док.ДокументОснование.НомерДок) +" no "+Док.ДокументОснование.ДатаДок ;
												Таб.ВывестиСекцию("Проплата");
												Оживить(1);
											КонецЕсли;
											Прервать;
										КонецЕсли;
									КонецЦикла;
									
								ИначеЕсли (ДокВид="ДвиженияДенежныхСредств") Тогда
									
									Док.ВыбратьСтроки();
									Пока Док.ПолучитьСтроку()=1 Цикл
										Если Док.ПриходПогаш=Дв_Баз_Сум Тогда
											Если Док.ДокументОснование.Выбран()=1 Тогда
												ОплДокум="Pamat.: "+СокрП(ПеревестиНаГосЯзык(Док.ДокументОснование.Вид()))+" Nr. "+СокрП(Док.ДокументОснование.НомерДок) +" no "+Док.ДокументОснование.ДатаДок ;
												Таб.ВывестиСекцию("Проплата");
												Оживить(1);
											КонецЕсли;
											Прервать;
										КонецЕсли;
									КонецЦикла;
									
								КонецЕсли;
							КонецЕсли;
							Если (ВидДвижения="Расход") Тогда
								Дв_Баз_Сум=ДвБазСум.ПолучитьЗначение(Поз,Предс);
								Таб.ВывестиСекцию("Расход2");
								Если (ДокВид="ПриходнаяНакладная") ИЛИ           // Первичные документы
								(ДокВид="РасходнаяНакладнаяНал") ИЛИ
								(ДокВид="ПриходнаяКредит") ИЛИ
								(ДокВид="РасходнаяНакладная") ИЛИ
								(ДокВид="ПриходнаяРеализ") ИЛИ
								(ДокВид="РасходнаяРеализ")   Тогда
									// Проверим наличие проплат по документам
									ДлСпОплат=ДокумОплаты[Поз].РазмерСписка();
									Если ДлСпОплат>0 Тогда
										Для Инд=1 По ДлСпОплат Цикл
											ОплДок=ДокумОплаты[Поз].ПолучитьЗначение(Инд,Предс);
											ОплДокум=СокрП(ПеревестиНаГосЯзык(ОплДок.Вид()))+" Nr. "+СокрП(ОплДок.НомерДок) +" no "+ОплДок.ДатаДок ;
											Дв_Баз_Сум=СумОплаты[Поз].ПолучитьЗначение(Инд,Предс);
											Таб.ВывестиСекцию("Проплата1");
											Оживить(1);
										КонецЦикла;
									КонецЕсли;
								ИначеЕсли (ДокВид="РасходныйОрдерТБ")  Тогда
									Если Док.ДокументОснование.Выбран()=1 Тогда
										ОплДокум="Pamat.: "+СокрП(ПеревестиНаГосЯзык(Док.ДокументОснование.Вид()))+" Nr. "+СокрП(Док.ДокументОснование.НомерДок) +" no "+Док.ДокументОснование.ДатаДок ;
										Таб.ВывестиСекцию("Проплата");
										Оживить(1);
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
							Оживить(1);
						КонецЦикла;
					КонецЕсли;
				Иначе
					// Обычный режим распечатки "Подробно"
					Пока Запрос.Группировка("Докум") = 1 Цикл
						Док=Запрос.Докум;
						ДокВид=Док.Вид();
						Если ДокВид="РасходнаяНакладная" Тогда
							Если Док.ПризнакНакладной=Перечисление.ПризнРасхНакл.КредитнаяНота Тогда
								ПечДокум="   "+Док.ДатаДок+"     "+"Kred.note Nr. "+СокрП(Док.НомерДок);
//							ИначеЕсли Док.ПризнакНакладной=Перечисление.ПризнРасхНакл.SodaNauda Тогда
//								ПечДокум="   "+Док.ДатаДок+"     "+"SodaNauda Nr. "+СокрП(Док.НомерДок);
							Иначе
								ПечДокум="   "+Док.ДатаДок+"     "+СокрП(ПеревестиНаГосЯзык(ДокВид))+" Nr. "+СокрП(Док.НомерДок);
							КонецЕсли;
						Иначе
							ПечДокум="   "+Док.ДатаДок+"     "+СокрП(ПеревестиНаГосЯзык(ДокВид))+" Nr. "+СокрП(Док.НомерДок);
						КонецЕсли;
						Если НЕ(Запрос.ПрихБаз=0) Тогда
							Дв_Баз_Сум=Запрос.ПрихБаз;
							Дв_Вал_Сум=Запрос.ПрихВал;
							Дв_Возв_Баз=Запрос.ВозвратБаз;
							Дв_Возв_Вал=Запрос.ВозвратВал;
							Таб.ВывестиСекцию("Приход2");
							Если (ДокВид="ПриходныйОрдерТБ")   Тогда
								Если Док.ДокументОснование.Выбран()=1 Тогда
									ОплДокум="Pamat.: "+СокрП(ПеревестиНаГосЯзык(Док.ДокументОснование.Вид()))+" Nr. "+СокрП(Док.ДокументОснование.НомерДок) +" no "+Док.ДокументОснование.ДатаДок ;
									Таб.ВывестиСекцию("Проплата");
									Оживить(1);
								КонецЕсли;
							ИначеЕсли (ДокВид="ДвиженияДенежныхСредств") Тогда
								Док.ВыбратьСтроки();
								Пока Док.ПолучитьСтроку()=1 Цикл
									Если Док.ДокументОснование.Выбран()=1 Тогда
										ОплДокум="Pamat.: "+СокрП(ПеревестиНаГосЯзык(Док.ДокументОснование.Вид()))+" Nr. "+СокрП(Док.ДокументОснование.НомерДок) +" no "+Док.ДокументОснование.ДатаДок ;
										Таб.ВывестиСекцию("Проплата");
										Оживить(1);
									КонецЕсли;
								КонецЦикла;
							ИначеЕсли (ДокВид="ДвиженияДенежныхСредств") Тогда
								Док.ВыбратьСтроки();
								Пока Док.ПолучитьСтроку()=1 Цикл
									Если Док.ДокументОснование.Выбран()=1 Тогда
										ОплДокум="Pamat.: "+СокрП(ПеревестиНаГосЯзык(Док.ДокументОснование.Вид()))+" Nr. "+СокрП(Док.ДокументОснование.НомерДок) +" no "+Док.ДокументОснование.ДатаДок ;
										Таб.ВывестиСекцию("Проплата");
										Оживить(1);
									КонецЕсли;
								КонецЦикла;
								
							КонецЕсли;
						КонецЕсли;
						Если НЕ(Запрос.РасхБаз=0) Тогда
							Дв_Баз_Сум=Запрос.РасхБаз;
							Дв_Вал_Сум=Запрос.РасхВал;
							Таб.ВывестиСекцию("Расход2");
							Если (ДокВид="РасходныйОрдерТБ")  Тогда
								Если Док.ДокументОснование.Выбран()=1 Тогда
									ОплДокум="Pamat.: "+СокрП(ПеревестиНаГосЯзык(Док.ДокументОснование.Вид()))+" Nr. "+СокрП(Док.ДокументОснование.НомерДок) +" no "+Док.ДокументОснование.ДатаДок ;
									Таб.ВывестиСекцию("Проплата");
									Оживить(1);
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
						Оживить(1);
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
			Если Режим = "Развернуто" Тогда
				НачСальдо = Запрос.НачБаз;
				Если НачСальдо < 0 Тогда
					СальдоПлюс = -НачСальдо;
					СальдоМинус = 0;
				Иначе
					СальдоПлюс = 0;
					СальдоМинус = НачСальдо;
				КонецЕсли;
				Таб.ВывестиСекцию("НачСальдо");
				Пока Запрос.Группировка("Докум") = 1 Цикл
					Таб.ВывестиСекцию("Докум");	
				КонецЦикла;
				КонСальдо = Запрос.КонБаз;
				Таб.ВывестиСекцию("Оборот");	
				Таб.ВывестиСекцию("Итоги");		
			КонецЕсли;
		КонецЦикла;
		Если Режим <> "Развернуто" Тогда
			Таб.ВывестиСекцию("Итоги");
		КонецЕсли;
		Оживить(2);
		
		//Вызов выходного отчета в окно просмотра и редактирования.
		Таб.Опции(0,0,5,0,ПарСтрОтчДлинн); 
		таб.ПараметрыСтраницы(1,100,5,5,5,5,,,,1);
		Таб.Защита(Константа.ФлагЗащитыТаблиц);
		Таб.ТолькоПросмотр(1);
		Таб.Показать("Взаиморасчеты с клиентами","");
	КонецЕсли;
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры

//-------------------------------
Процедура ВзаиморасчетыПоПоставщикам(Режим)
	//  Создание Таблицы для выходного отчета
	начЛог = семЗаписатьЛогНач( "Отчет", "Взаиморасчеты", "Обработка", Шаблон("Взаиморасчеты с поставщиками ([Режим])") );
	Заг=" ";
	Запрос=СоздатьОбъект("Запрос");
	
	Если ДатаКонец>=ПолучитьДатуТА() Тогда
		ДатаКон=0;
		ДатаКонец=ПолучитьДатуТА();
	Иначе
		ДатаКон=ДатаКонец;
	КонецЕсли;
	
	Заг="";
	ТекстЗапроса = "ПЕРИОД С ДатаНачала";
	
	Если Не(ДатаКон=0) Тогда
		ТекстЗапроса=ТекстЗапроса+" По ДатаКон;";
	Иначе
		ТекстЗапроса=ТекстЗапроса+";";
	КонецЕсли;
	ПрНакл="ПриходнаяНакладная";
	ТекстЗапроса = ТекстЗапроса +
	"//{{ЗАПРОС(Взаиморасчеты)
	|Фирма  =Регистр.ВзаиморасчетыПоставщиков.Фирма;
	|Клиент  =Регистр.ВзаиморасчетыПоставщиков.Клиент;
	|Страна  =Регистр.ВзаиморасчетыПоставщиков.Клиент.Страна;

	//		|ВидКлиента  =Регистр.ВзаиморасчетыПоставщиков.ВидКлиента;
	|Долг =Регистр.ВзаиморасчетыПоставщиков.Долг;
	|Докум   =Регистр.ВзаиморасчетыПоставщиков.ТекущийДокумент;
	//		|ФлагУчета=Регистр.ВзаиморасчетыПоставщиков.ФлагУчета;
	|Группировка Клиент упорядочить по Клиент."+?(ФлКод=1,"Код","ПоАлфавиту")+" без групп;
	|Группировка Докум;
	|Функция КонБаз  = КонОст(Долг);
	|Функция НачБаз  = НачОст(Долг);
	|Функция ПрихБаз = Приход(Долг);
	|Функция ПрихБаз1 = Приход(Долг) Когда ((Докум.Вид()=ПрНакл)и ((Докум.ПризнакНакладной=Перечисление.ПризнПрихНакл.Закупка) ИЛИ (Докум.ПризнакНакладной=Перечисление.ПризнПрихНакл.ПриемИмпорта)));
	|Функция ВозвратБаз = Расход(Долг) Когда ((Докум.Вид()=ПрНакл)и((Докум.ПризнакНакладной=Перечисление.ПризнРасхНакл.ВозвратПоставщику) ИЛИ (Докум.ПризнакНакладной=Перечисление.ПризнРасхНакл.ЭкспортныйВозврат)));
	|Функция РасхБаз = Расход(Долг);
	|"//}}ЗАПРОС
	;
	
	//	ТекстЗапроса = ТекстЗапроса + "Условие (ВидКлиента = Перечисление.ВидыКлиентов.Поставщик);";
	                   
	Если ТолькоРезиденты=1 Тогда
	    ТекстЗапроса = ТекстЗапроса + "Условие (Страна=Константа.СтранаРезидент);";
	КонецЕсли;
	
	Если ВыбКлиент.Выбран()=0 Тогда
		Заг = "Visi klienti";
	ИначеЕсли ВыбКлиент.ЭтоГруппа()=1 Тогда
		ТекстЗапроса = ТекстЗапроса +
		"Условие (Клиент в ВыбКлиент);";
		Заг = "Klienti no grupas " +ВыбКлиент.Код+" "+ ВыбКлиент.Наименование;
	Иначе
		ТекстЗапроса = ТекстЗапроса + "Условие (Клиент = ВыбКлиент);";
		Заг="Klients  "+ВыбКлиент.Код+" " + ВыбКлиент.Наименование;
	КонецЕсли;          
	
	Если ВыбАгент.Выбран()=0 Тогда
		Заг1 = "";
	ИначеЕсли ВыбАгент.ЭтоГруппа()=1 Тогда
		ТекстЗапроса = ТекстЗапроса +
		"Условие (Клиент.Дилер в ВыбАгент);";
		Заг1= "AЄenti no grupas " +ВыбАгент.Код+" "+ ВыбАгент.Наименование;
	Иначе
		ТекстЗапроса = ТекстЗапроса + "Условие (Клиент.Дилер = ВыбАгент);";
		Заг1="AЄent  " + ВыбАгент.Наименование;
	КонецЕсли;
	
	Если Запрос.Выполнить(ТекстЗапроса) = 0 тогда
		Возврат; // "Запрос по Кредиту не выполнился!!!";
	КонецЕсли;
	// теперь в запросе собраны все Документы по клиенту
	//  Создание Таблицы для выходного отчета
	ЧислоСтрок=0;
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("ПоПоставщикам");
	Если Режим = "Развернуто" Тогда
		ЗаголовокОтчета = "Savstarp§ji nor§°ini ar piegўdўtўjiem";
		Таб.ИсходнаяТаблица("Развернуто");
	КонецЕсли;
	Таб.ВывестиСекцию("Отчет2");
	Оживить(6);
	ИтогНашДолгБаз=0;
	ИтогНашДолгВал=0;
	ИтогДолгКлиентаБаз=0;
	ИтогДолгКлиентаВал=0;
	ИтогНашДолгБазН=0;
	ИтогНашДолгВалН=0;
	ИтогДолгКлиентаБазН=0;
	ИтогДолгКлиентаВалН=0;
	ИтогПрихБаз=0;
	ИтогПрихБаз1=0;
	ИтогВозвБаз=0;
	ИтогРасхБаз=0;
	ИтогВалРазн=0;
	KopaAtlaide=0;
	ИтогКредит=0;
	Пока Запрос.Группировка("Клиент") = 1 Цикл
		
		Если Запрос.Клиент.Выбран()=0 Тогда
			Продолжить;
		КонецЕсли;
		
		Клиент=Запрос.Клиент;
		Если Запрос.Клиент.ЭтоГруппа()=1 Тогда
			Таб.ВывестиСекцию("Группа2");
			Оживить(1);
			Продолжить;
		Иначе
			
			ВалютаКредита=Клиент.ВалютаКредитаПоставщика;
			Если НЕ(Клиент.СуммаКредитаПоставщика=0) Тогда
				Глубина=Клиент.ГлубинаКредитаПоставщика;
				СуммаКрд=Клиент.СуммаКредитаПоставщика;
			Иначе
				Глубина=0;
				СуммаКрд=0;
			КонецЕсли;
			
			Если ВалютаКредита.Выбран()=0 Тогда
				ВалютаКредита=Клиент.ВалютаВзаиморасчетов;
			КонецЕсли;
			Если ВалютаКредита.Выбран()=0 Тогда
				ВалютаКредита=Константа.ВалютаВзаиморасчетов;
			КонецЕсли;
			ДатаВалютыКредита=ДатаКонец;
			КурсКред=ВалютаКредита.Курс;
			
			Если Запрос.КонБаз>0 Тогда
				НашДолгБаз=Запрос.КонБаз;
				ДолгКлиентаБаз=0;
			Иначе
				НашДолгБаз=0;
				ДолгКлиентаБаз=-Запрос.КонБаз;
			КонецЕсли;

			Если Запрос.НачБаз>0 Тогда
				НашДолгБазН=Запрос.НачБаз;
				ДолгКлиентаБазН=0;
			Иначе
				НашДолгБазН=0;
				ДолгКлиентаБазН=-Запрос.НачБаз;
			КонецЕсли;
			         
			ПрБаз=Запрос.ПрихБаз;
			ПрБаз1=Запрос.ПрихБаз1;
			РсБаз=Запрос.РасхБаз;
			ВзБаз=Запрос.ВозвратБаз;

			Если Ноль=1 Тогда
				Если (ПрБаз<>0) Или (ПрБаз1<>0) Или (РсБаз<>0) Тогда
					Таб.ВывестиСекцию("Клиент2");
					ИтогНашДолгБазН=ИтогНашДолгБазН+НашДолгБазН;
					ИтогНашДолгБаз=ИтогНашДолгБаз+НашДолгБаз;
					ИтогДолгКлиентаБаз =ИтогДолгКлиентаБаз + ДолгКлиентаБаз;
					ИтогДолгКлиентаБазН = ИтогДолгКлиентаБазН + ДолгКлиентаБазН;
					ИтогПрихБаз=ИтогПрихБаз+ПрБаз;
					ИтогПрихБаз1=ИтогПрихБаз1+ПрБаз1;
					ИтогВозвБаз=ИтогВозвБаз+ВзБаз;
					ИтогРасхБаз=ИтогРасхБаз+РсБаз;
				КонецЕсли;
			Иначе
				Таб.ВывестиСекцию("Клиент2");
				ИтогНашДолгБазН=ИтогНашДолгБазН+НашДолгБазН;
				ИтогНашДолгБаз=ИтогНашДолгБаз+НашДолгБаз;
				ИтогДолгКлиентаБаз =ИтогДолгКлиентаБаз + ДолгКлиентаБаз;
				ИтогДолгКлиентаБазН = ИтогДолгКлиентаБазН + ДолгКлиентаБазН;
				ИтогПрихБаз=ИтогПрихБаз+ПрБаз;
				ИтогПрихБаз1=ИтогПрихБаз1+ПрБаз1;
				ИтогВозвБаз=ИтогВозвБаз+ВзБаз;
				ИтогРасхБаз=ИтогРасхБаз+РсБаз;
			КонецЕсли;
			Оживить(2);
		КонецЕсли;
		Если (Режим="Подробно") Тогда
			// Обычный режим распечатки "Подробно"
			Пока Запрос.Группировка("Докум") = 1 Цикл
				Док=Запрос.Докум;
				ДокВид=Док.Вид();
				Если ДокВид="РасходнаяНакладная" Тогда
					Если Док.ПризнакНакладной=Перечисление.ПризнРасхНакл.КредитнаяНота Тогда
						ПечДокум="   "+Док.ДатаДок+"     "+"Kred.note Nr. "+СокрП(Док.НомерДок);
					Иначе
						ПечДокум="   "+Док.ДатаДок+"     "+СокрП(ПеревестиНаГосЯзык(ДокВид))+" Nr. "+СокрП(Док.НомерДок);
					КонецЕсли;
				Иначе
					ПечДокум="   "+Док.ДатаДок+"     "+СокрП(ПеревестиНаГосЯзык(ДокВид))+" Nr. "+СокрП(Док.НомерДок);
				КонецЕсли;
				
				Если НЕ(Запрос.ПрихБаз=0) Тогда
					Дв_Баз_Сум=Запрос.ПрихБаз;
					Если (ДокВид="ДвиженияДенежныхСредств") ИЛИ (ДокВид="Взаимозачет") Тогда
						Таб.ВывестиСекцию("ПриходДенег");
					Иначе
						Таб.ВывестиСекцию("Приход2");
					КонецЕсли;
					
					Если (ДокВид="Счет_фактура") Тогда
						Если Док.ВидКлиента=Перечисление.ВидыКлиентов.Поставщик Тогда
							Таб.ВывестиСекцию("ПриходДенег");
						Иначе
							Таб.ВывестиСекцию("Приход2");
						КонецЕсли;
					Иначе
						Таб.ВывестиСекцию("Приход2");
					КонецЕсли;
					
					
					Если (ДокВид="ПриходныйОрдерТБ")   Тогда
						Если Док.ДокументОснование.Выбран()=1 Тогда
							ДокументОснование=Док.ДокументОснование;
							ОплДокум="Pamat.: "+СокрП(ПеревестиНаГосЯзык(Док.ДокументОснование.Вид()))+" Nr. "+СокрП(Док.ДокументОснование.НомерДок) +" no "+Док.ДокументОснование.ДатаДок ;
							Таб.ВывестиСекцию("Проплата");
							Оживить(1);
						КонецЕсли;
					ИначеЕсли (ДокВид="ДвиженияДенежныхСредств") Тогда
						Док.ВыбратьСтроки();
						Пока Док.ПолучитьСтроку()=1 Цикл
							Если Док.ДокументОснование.Выбран()=1 Тогда
								ДокументОснование=Док.ДокументОснование;
								ОплДокум="Pamat.: "+СокрП(ПеревестиНаГосЯзык(Док.ДокументОснование.Вид()))+" Nr. "+СокрП(Док.ДокументОснование.НомерДок) +" no "+Док.ДокументОснование.ДатаДок ;
								Таб.ВывестиСекцию("Проплата");
								Оживить(1);
							КонецЕсли;
						КонецЦикла;
					ИначеЕсли (ДокВид="Взаимозачет") Тогда
						Док.ВыбратьСтроки();
						Пока Док.ПолучитьСтроку()=1 Цикл
							Если Док.ВидДолга=Перечисление.ВидыДолгаВзаимозачетов.Поставщику Тогда
								ДокументОснование=Док.Документ;
								ОплДокум="Pamat.: "+СокрП(ПеревестиНаГосЯзык(Док.Документ.Вид()))+" Nr. "+СокрП(Док.Документ.НомерДок) +" no "+Док.Документ.ДатаДок ;
								Таб.ВывестиСекцию("Проплата");
								Оживить(1);
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
				
				Если НЕ(Запрос.РасхБаз=0) Тогда
					Дв_Баз_Сум=Запрос.РасхБаз;
					Дв_Возв_Баз=Запрос.ВозвратБаз;
					Таб.ВывестиСекцию("Расход2");
					Если (ДокВид="РасходныйОрдерТБ") ИЛИ (ДокВид="Платежка") Тогда
						Если Док.ДокументОснование.Выбран()=1 Тогда
							ДокументОснование=Док.ДокументОснование;							
							ОплДокум="Pamat.: "+СокрП(ПеревестиНаГосЯзык(Док.ДокументОснование.Вид()))+" Nr. "+СокрП(Док.ДокументОснование.НомерДок) +" no "+Док.ДокументОснование.ДатаДок ;
							Таб.ВывестиСекцию("Проплата");
							Оживить(1);
						КонецЕсли;
					ИначеЕсли  (ДокВид="ДвиженияДенежныхСредств") Тогда
						Док.ВыбратьСтроки();
						Пока Док.ПолучитьСтроку()=1 Цикл
							Если Док.ДокументОснование.Выбран()=1 Тогда
								Если Док.Приход<>0 Тогда
									продолжить;
								КонецЕсли;
								ДокументОснование=Док.ДокументОснование;
								ОплДокум="Pamat.: "+СокрП(ПеревестиНаГосЯзык(Док.ДокументОснование.Вид()))+" Nr. "+СокрП(Док.ДокументОснование.НомерДок) +" no "+Док.ДокументОснование.ДатаДок ;
								Таб.ВывестиСекцию("Проплата");
								Оживить(1);
							КонецЕсли;
						КонецЦикла;   
					ИначеЕсли (ДокВид="Взаимозачет") Тогда
						Док.ВыбратьСтроки();
						Пока Док.ПолучитьСтроку()=1 Цикл
							Если Док.ВидДолга=Перечисление.ВидыДолгаВзаимозачетов.Покупателя Тогда
								ДокументОснование=Док.Документ;
								ОплДокум="Pamat.: "+СокрП(ПеревестиНаГосЯзык(Док.Документ.Вид()))+" Nr. "+СокрП(Док.Документ.НомерДок) +" no "+Док.Документ.ДатаДок ;
								Таб.ВывестиСекцию("Проплата");
								Оживить(1);
							КонецЕсли;
						КонецЦикла;
						
					КонецЕсли;
				КонецЕсли;
				Оживить(1);
			КонецЦикла;
		ИначеЕсли (Режим = "Развернуто") Тогда	
			НачСальдо = Запрос.НачБаз;
			Если НачСальдо > 0 Тогда
				СальдоПлюс = НачСальдо;
				СальдоМинус = 0;
			Иначе
				СальдоПлюс = 0;
				СальдоМинус = -НачСальдо;
			КонецЕсли;
			Таб.ВывестиСекцию("НачСальдо");
			Пока Запрос.Группировка("Докум") = 1 Цикл
				Таб.ВывестиСекцию("Докум");	
			КонецЦикла;
			КонСальдо = -Запрос.КонБаз;
			Таб.ВывестиСекцию("Оборот");	
			Таб.ВывестиСекцию("Итоги");		
		КонецЕсли;
	КонецЦикла;
	Если Режим <> "Развернуто" Тогда
		Таб.ВывестиСекцию("Итоги");
	КонецЕсли;
	Оживить(2);
	
	//Вызов выходного отчета в окно просмотра и редактирования.
	Таб.Опции(0,0,6,0,ПарСтрОтчДлинн);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Взаиморасчеты с поставщиками","");
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры

//======================================================================
Процедура Сверка()
	Меню = СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение("С поставщиками");
	Меню.ДобавитьЗначение("С покупателями");
	Зн = 0;
	Если Меню.ВыбратьЗначение(,,Зн,,1) = 0 Тогда
		Возврат;
	КонецЕсли;
	Если Зн=1 Тогда
		ВзаиморасчетыПоПоставщикам("Развернуто");
	Иначе
		Взаиморасчеты("Развернуто");
	КонецЕсли;
КонецПроцедуры // Сверка

//-------------------------------
Процедура УстДата()
	Если ДатаКонец>ПолучитьДатуТА() Тогда
		Предупреждение("Нельзя устанавливать дату конца периода больше Точки Актуальности!!!");
		ДатаКонец=ПолучитьДатуТА();
	КонецЕсли;
КонецПроцедуры
//-------------------------------
Процедура ПостроитьГрафик(График,Запрос)
	ОбластьПостроения=График.Application;
	ОбластьДанных=ОбластьПостроения.DataSheet;
	Столбец=2;
	Ряд=2;
	ЧислоЗначений=0;
	Пока Запрос.Группировка("Клиент") = 1 Цикл
		Если Запрос.Клиент.ЭтоГруппа()=1 Тогда
			Продолжить;
		КонецЕсли;
		// проставим названия строк
		Ячейка= ОбластьДанных.Cells(1,Столбец);
		Ячейка.Value=Запрос.Клиент.Наименование;
		// проставим названия столбцов
		Ячейка = ОбластьДанных.Cells(Ряд,1);
		Ячейка.Value="Долг";
		// заполним ячейки таблицы значениями
		Ячейка = ОбластьДанных.Cells(Ряд,Столбец);
		Ячейка.Value= Запрос.КонВал;
		ЧислоЗначений=ЧислоЗначений+1;
		Столбец=Столбец+1;
		Состояние("Для диаграммы сформировано "+ЧислоЗначений+" значений.");
	КонецЦикла;
КонецПроцедуры
////-------------------------------
Процедура АктыСверки()
	//  Создание Таблицы для выходного отчета
	начЛог = семЗаписатьЛогНач( "Отчет", "Взаиморасчеты", "Обработка", "Акт сверки" );
	Запрос=СоздатьОбъект("Запрос");
	Если ДатаНачала1>=ПолучитьДатуТА() Тогда
		ДатаКон=0;
		ДатаНач=ПолучитьДатуТА()-30;
	Иначе
		ДатаНач=ДатаНачала1-30;
		ДатаКон=ДатаНачала1;
	КонецЕсли;
	
	ТекстЗапроса = "ПЕРИОД С ДатаНач";
	Если Не(ДатаКон=0) Тогда
		ТекстЗапроса=ТекстЗапроса+" По ДатаКон;";
	Иначе
		ТекстЗапроса=ТекстЗапроса+";";
	КонецЕсли;
	Если ФлКод1=1 Тогда
		ТекстЗапроса = ТекстЗапроса +
		"//{{ЗАПРОС(Взаиморасчеты)
		|Клиент  =Регистр.ВзаиморасчетыПокупателей.Клиент;
//		|ВидКлиента  =Регистр.ВзаиморасчетыПокупателей.ВидКлиента;
		|Баз_сум =Регистр.ВзаиморасчетыПокупателей.Долг;
		|Группировка Клиент упорядочить по Клиент.Код;
		|Функция КонБаз  = КонОст(Баз_сум);
		|Функция ПризБаз= Приход(Баз_сум);
		|Функция РасхБаз = Расход(Баз_сум);
		|"//}}ЗАПРОС
		;
	Иначе
		ТекстЗапроса = ТекстЗапроса +
		"//{{ЗАПРОС(Взаиморасчеты)
		|Клиент  =Регистр.ВзаиморасчетыПокупателей.Клиент;
//		|ВидКлиента  =Регистр.ВзаиморасчетыПокупателей.ВидКлиента;
		|Баз_сум =Регистр.ВзаиморасчетыПокупателей.Долг;
		|Группировка Клиент упорядочить по Клиент.Наименование;
		|Функция КонБаз  = КонОст(Баз_сум);
		|Функция ПризБаз= Приход(Баз_сум);
		|Функция РасхБаз = Расход(Баз_сум);
		|"//}}ЗАПРОС
		;
	КонецЕсли;        
	
//	ТекстЗапроса = ТекстЗапроса + "Условие (ВидКлиента = Перечисление.ВидыКлиентов.Покупатель);";
	
	Если ВыбКлиент1.Выбран()=0 Тогда
	ИначеЕсли ВыбКлиент1.ЭтоГруппа()=1 Тогда
		ТекстЗапроса = ТекстЗапроса + "Условие (Клиент в ВыбКлиент1);";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "Условие (Клиент = ВыбКлиент1);";
	КонецЕсли;
	Если Запрос.Выполнить(ТекстЗапроса) = 0 тогда
		Возврат;
	КонецЕсли;
	// теперь в запросе собраны все Документы по клиенту
	//  Создание Таблицы для выходного отчета
	ЧислоСтрок=0;
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("АктыСверки"+семТекСтрана());
	ФлНовСтр=1;
	Пока Запрос.Группировка("Клиент") = 1 Цикл
		Если Запрос.Клиент.ЭтоГруппа()=1 Тогда
			Продолжить;
		Иначе
			Если ФлНовСтр=1 Тогда
				Таб.НоваяСтраница();
				ФлНовСтр=0;
			Иначе
				ФлНовСтр=1;
			КонецЕсли;
			Таб.ВывестиСекцию("Шапка");
			Оживить(1);
			Если Запрос.КонБаз>=0 Тогда
				Сум1=Запрос.КонБаз;
				ДолгКлиентаБаз=0;
				Таб.ВывестиСекцию("Информ1");
				Оживить(1);
			Иначе
				НашДолгБаз=0;
				Сум1=-Запрос.КонБаз;
				Таб.ВывестиСекцию("Информ2");
				Оживить(1);
			КонецЕсли;
			Таб.ВывестиСекцию("Итог");
			Оживить(2);
			Таб.ВывестиСекцию("Подвал");
			Оживить(6);
		КонецЕсли;
	КонецЦикла;
	//Вызов выходного отчета в окно просмотра и редактирования.
	Таб.Опции(0,0,0,0,ПарСтрОтчДлинн);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Взаиморасчеты с клиентами","");
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры
//-------------------------------
//ФлагДиаграммы=0;
ДатаКонец=РабочаяДата();
Если ДатаКонец>ПолучитьДатуТА() Тогда
	ДатаКонец=ПолучитьДатуТА();
КонецЕсли;
ДатаНачала=НачМесяца(РабочаяДата());
Если Число(ДатаНачала)=0 Тогда
	ДатаНачала='01.07.98';
Конецесли;
ВыбФирма=глФирма;
