Перем ТК_;
Перем Авто;

Процедура семПриВыбореКлиента(пКлиент)
	Если ПустоеЗначение(пКлиент) = 0 Тогда
		табл = семПолучитьСписокПодчКлиентов( пКлиент );
		флГлКлиент = ?(табл.КоличествоСтрок() > 0,1,0);
		Форма.флГлКлиент.Доступность(?(табл.КоличествоСтрок() > 0,1,0));
	Иначе
		флГлКлиент = 0;
		Форма.флГлКлиент.Доступность(0);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаВыбораЗначения( пЗнач, пЭлем, пФлаг )
	Если пЭлем = "ВыбКлиент" Тогда
		семПриВыбореКлиента(пЗнач);
	КонецЕсли;
КонецПроцедуры

//*******************************************
// Процедура генерации запроса КлиентыАгентов.
//
Процедура КлиентыАгентов()
	Перем Запрос, ТекстЗапроса, Таб;
	//Создание объекта типа Запрос
	начЛог = семЗаписатьЛогНач( "Отчет", "Клиенты агентов", "Обработка", "Клиенты агентов" );
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса =
	"//{{ЗАПРОС(КлиентыАгентов)
	|Клиент = Справочник.Контрагенты.ТекущийЭлемент;
	|Агент = Справочник.Контрагенты.Агент;
	|Группировка Агент упорядочить по Агент.Наименование;
	|Группировка Клиент упорядочить по Клиент.ПоАлфавиту без групп;
	|"//}}ЗАПРОС
	;                     
	
	Если ВыбАгент.Выбран()=0 Тогда
	ИначеЕсли ВыбАгент.ЭтоГруппа()=1 Тогда
		ТекстЗапроса = ТекстЗапроса + "Условие (Агент в ВыбАгент);";
	Иначе
	    ТекстЗапроса = ТекстЗапроса + "Условие (Агент = ВыбАгент);";
	КонецЕсли;
	
	Если ВыбКлиент.Выбран()=0 Тогда
	ИначеЕсли ВыбКлиент.ЭтоГруппа()=1 Тогда
		ТекстЗапроса = ТекстЗапроса + "Условие (Клиент в ВыбКлиент);";
	Иначе
		Если флГлКлиент = 1 Тогда
			табл = семПолучитьСписокПодчКлиентов( ВыбКлиент );
			сп = СоздатьОбъект( "СписокЗначений" );
			табл.Выгрузить(сп,,,"Клиент");
			сп.ДобавитьЗначение(ВыбКлиент);
			ТекстЗапроса = ТекстЗапроса + "Условие (Клиент в сп);";
		Иначе
			ТекстЗапроса=ТекстЗапроса+"Условие (Клиент=ВыбКлиент);";
		КонецЕсли;
	КонецЕсли;

	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;

	// Подготовка к заполнению выходных форм данными запроса
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("КлиентыАгентов");
	// Заполнение полей "Заголовок"
	Таб.ВывестиСекцию("Заголовок");
	Состояние("Заполнение выходной таблицы...");
	Таб.Опции(0,0,Таб.ВысотаТаблицы(),0);
	Пока Запрос.Группировка(1) = 1 Цикл
		// Заполнение полей Дилер
		если Запрос.ЭтоГруппа("Агент")=1 Тогда
			Таб.ВывестиСекцию("Группа");
			продолжить;
		КонецЕсли;

		Если Запрос.Агент.Выбран()=0 Тогда
			Агент="Неизвестный агент";
		Иначе
			Агент=Запрос.Агент;
		КонецЕсли;


		Таб.ВывестиСекцию("Дилер");
		Пока Запрос.Группировка(2) = 1 Цикл
			// Заполнение полей Клиент
			Таб.ВывестиСекцию("Клиент");
		КонецЦикла;
	КонецЦикла;
	// Вывод заполненной формы
	Таб.ТолькоПросмотр(1);
	Таб.Показать("КлиентыАгентов","");
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры  

//*******************************************
// Процедура генерации запроса Клиенты.
//
Процедура Клиенты()
	Перем Запрос, ТекстЗапроса, Таб;
	начЛог = семЗаписатьЛогНач( "Отчет", "Клиенты агентов", "Обработка", "Клиенты" );
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(Клиенты)
	|Клиенты = Справочник.Клиенты.ТекущийЭлемент;
	|Группировка Клиенты;
	|Условие(Клиенты в ВыбКлиент);
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;

	// Подготовка к заполнению выходных форм данными запроса
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Клиенты");
	// Заполнение полей "Заголовок"
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Клиенты");
	Таб.ВывестиСекцию("Заголовок");
	Состояние("Заполнение выходной таблицы...");
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);
	Пока Запрос.Группировка(1) = 1 Цикл
		// Заполнение полей Клиенты
		Таб.ВывестиСекцию("Клиенты");
	КонецЦикла;
	// Вывод заполненной формы
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Клиенты", "");
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры  


//*******************************************
// Процедура генерации запроса ЗадолженностьКлиентов.
//
Процедура ЗадолженностьПоНакладным()
	начЛог = семЗаписатьЛогНач( "Отчет", "Клиенты агентов", "Обработка", "Задолженность по накладным" );
    Если ВыбКлиент.Выбран() = 0 Тогда
		Заг = "Pa visўm klientiem. ";
	ИначеЕсли ВыбКлиент.ЭтоГруппа() = 1 Тогда
		Заг ="Кlientu  grupa " + ВыбКлиент.Наименование;
	Иначе
		Заг ="Klients " + ВыбКлиент.Код+"  " + ВыбКлиент.Наименование+". ";
	КонецЕсли; 
	
	// Подготовка к заполнению выходных форм данными запроса
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("ЗадолженностиПоНакладным");
	// Заполнение полей "Заголовок"
	Таб.ВывестиСекцию("Отчет");
	Состояние("Заполнение выходной таблицы...");
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);   
	Таб.ПараметрыСтраницы(2,100,,,,,,,,1);

	Состояние("Формирование таблицы по Накладным...");
	ТК_.ВыбратьСтроки();
	Пока ТК_.ПолучитьСтроку() = 1 Цикл

		Если ВыбАгент.Выбран()=0 Тогда
		ИначеЕсли ВыбАгент.ЭтоГруппа()=1 Тогда
			Если ТК_.Агент.ПринадлежитГруппе(ВыбАгент)=0 Тогда
				ТК_.УдСтр=1;
			КонецЕсли;
		ИначеЕсли ТК_.Агент<>ВыбАгент Тогда
			ТК_.УдСтр=1;
		КонецЕсли;
		
		Если ВыбКлиент.Выбран()=0 Тогда
		ИначеЕсли ВыбКлиент.ЭтоГруппа()=1 Тогда
			Если (ТК_.Клиент.ПринадлежитГруппе(ВыбКлиент)=0) Тогда
				ТК_.УдСтр=1;
			КонецЕсли;
		Иначе
			ТК_.УдСтр = ?( (ТК_.Клиент<>ВыбКлиент) И (ТК_.КлГруппа<>ВыбКлиент),1,0);
		КонецЕсли;
	КонецЦикла;

	ТК_.Сортировать("-УдСтр");
	ТК_.ВыбратьСтроки();
	ТК_.ПолучитьСтроку();
	
	Пока ТК_.УдСтр=1 Цикл
		ТК_.УдалитьСтроку();
	КонецЦикла;
	
	ПредАгент="";
	ПредКлиент="";

	ТК=СоздатьОбъект("ТаблицаЗначений");
	ТКАгенты=СоздатьОбъект("ТаблицаЗначений");
	
	ТК_.Выгрузить(ТК);
	ТК_.Выгрузить(ТКАгенты);

	ТК.НоваяКолонка("КлиентПоАлфавиту","Строка",100);
	ТК.НоваяКолонка("КодКлиента","Строка",10);
	
	ТК.ВыбратьСтроки();
	Пока ТК.ПолучитьСтроку() = 1 Цикл
		ТК.КлиентПоАлфавиту=ТК.Клиент.ПоАлфавиту;
		ТК.КодКлиента=ТК.Клиент.Код;
	КонецЦикла;         
	
	ТК.Сортировать("Агент,КлиентПоАлфавиту,КредДокумент",1);
	
	ТКАгенты.Свернуть("Агент","СуммаДок,НашДолг,ДолгКлиента,ПросроченныйДолг");
	ТКАгенты.Сортировать("Агент");
	
	ТК.ВыбратьСтроки();
	Пока ТК.ПолучитьСтроку() = 1 Цикл
		
		Если ПредАгент<>ТК.Агент Тогда                
			рез=0;
			ТКАгенты.НайтиЗначение(ТК.Агент,рез,"Агент");
			ТКАгенты.ПолучитьСтрокуПоНомеру(рез);
		    Таб.ВывестиСекцию("Агент");
			ПредКлиент="";
		КонецЕсли;
		
		Если ПредКлиент<>ТК.Клиент Тогда
		    Таб.ВывестиСекцию("Клиент");
		КонецЕсли;           
		
		Если ПустоеЗначение(ТК.КредДокумент)=0 Тогда
		    Таб.ВывестиСекцию("Документ");
		КонецЕсли;
		
		ПредАгент=ТК.Агент;
		ПредКлиент=ТК.Клиент;
		
	КонецЦикла;      
    
	// Заполнение полей "Итого"
	Таб.ВывестиСекцию("Итоги");
	// Вывод заполненной формы
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Задолженность по накладным", "");
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры  



//*******************************************
// Процедура генерации запроса ЗадолженностьКлиентов.
//
Процедура ЗадолженностьКлиентов()
	Перем Запрос, ТекстЗапроса, Таб;
	Перем Месяц_[3];
	начЛог = семЗаписатьЛогНач( "Отчет", "Клиенты агентов", "Обработка", "Задолженность по клиентам" );
	//Создание объекта типа Запрос   
	
	Меню=СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение(1,"Структура задолженности");
	Меню.ДобавитьЗначение(2,"По накладным");

	Если ТК_.КоличествоСтрок()>0 Тогда
		рез=0;
		Если Меню.ВыбратьЗначение(1,,рез,,1)=0 Тогда
		    Возврат;
		КонецЕсли;  
		
		Если рез=2 Тогда
		    ЗадолженностьПоНакладным();
		КонецЕсли;
	КонецЕсли;
	
	Запрос = СоздатьОбъект("Запрос");
        
	ТекстЗапроса ="";
	
 	Если ВыбКонПериода>=ПолучитьДатуТА() Тогда
		ВыбКонПериода=ПолучитьДатуТА();
	Иначе
		ТекстЗапроса =ТекстЗапроса +"Период с ВыбНачПериода по ВыбКонПериода;";
	КонецЕсли; 
	                              
	Запрос=СоздатьОбъект("ODBCRecordSet"); 
	ТекстЗапроса2 = ТекстЗапроса2 +"SELECT Рег.Клиент [Клиент $Справочник.Контрагенты],
	|									 Рег.КредДокумент [КредДокумент $Документ],                      
	|									 Рег.ДолгОстаток Долг
	|							   FROM $РегистрОстатки.ВзаиморасчетыПокупателей(:Кон~,
	|																			 INNER JOIN $Справочник.Контрагенты СпрК, --соединение
	|																			 ($СпрК.флНеОтчетКлиентыАгентов=0) ";
    
	Если ВыбКлиент.Выбран() = 0 Тогда
		//Заг1 = "Pa visўm klientiem. ";
	ИначеЕсли ВыбКлиент.ЭтоГруппа() = 1 Тогда
		ТекстЗапроса2 = ТекстЗапроса2 + "AND (Клиент IN (SELECT Val FROM #Клиенты))";
		Запрос.УложитьСписокОбъектов(ВыбКлиент,"#Клиенты","Контрагенты");
	Иначе
		ТекстЗапроса2=ТекстЗапроса2+"AND (Клиент=:ВыбКлиент)";
		Запрос.УстановитьТекстовыйПараметр("ВыбКлиент",ВыбКлиент);
	КонецЕсли; 
	
	ТекстЗапроса2=ТекстЗапроса2+" 												 (Клиент,КредДокумент),
	|																			 (Долг) ) as Рег         ";

	Если (ПросроченоДней>0) Тогда
        ТекстЗапроса2 = ТекстЗапроса2+"INNER JOIN $Документ.РасходнаяНакладная ДокР (NOLOCK) ON ДокР.IDDOC=RIGHT(Рег.КредДокумент,9) ";
		Если (чТочноДней=1) Тогда
			ТекстЗапроса2=ТекстЗапроса2+"WHERE DATEDIFF(day, $ДокР.ДатаОплаты, CAST(:Кон as SmallDateTime))=:ПросроченоДней";
		Иначе
			ТекстЗапроса2=ТекстЗапроса2+"WHERE DATEDIFF(day, $ДокР.ДатаОплаты, CAST(:Кон as SmallDateTime))>=:ПросроченоДней";
		КонецЕсли;
	КонецЕсли;
	
	Запрос.УстановитьТекстовыйПараметр("Кон",ВыбКонПериода);
	               
	тт=СоздатьОбъект("ТаблицаЗначений");
	тт=Запрос.ВыполнитьИнструкцию(ТекстЗапроса2);
	тт.ВыбратьСтроку();
	
	Возврат;                    
	
	ТекстЗапроса = ТекстЗапроса+
	"//{{ЗАПРОС(ЗадолженностьКлиентов)
	|Клиент = Регистр.ВзаиморасчетыПокупателей.Клиент;
	|НеУчитывать = Регистр.ВзаиморасчетыПокупателей.Клиент.флНеОтчетКлиентыАгентов;
	|КредДокумент = Регистр.ВзаиморасчетыПокупателей.КредДокумент;
	|Долг = Регистр.ВзаиморасчетыПокупателей.Долг;
	|Функция ДолгКон = КонОст(Долг);
	|Группировка КредДокумент;
	|Условие ( НеУчитывать = 0 );
	|"//}}ЗАПРОС
	;                  

    Если ВыбКлиент.Выбран() = 0 Тогда
		//Заг1 = "Pa visўm klientiem. ";
	ИначеЕсли ВыбКлиент.ЭтоГруппа() = 1 Тогда
		Заг ="Кlientu  grupa " + ВыбКлиент.Наименование;
		ТекстЗапроса = ТекстЗапроса + "Условие (Клиент в ВыбКлиент);";
	Иначе
		Заг ="Klients " + ВыбКлиент.Код+"  " + ВыбКлиент.Наименование+". ";
		ТекстЗапроса=ТекстЗапроса+"Условие (Клиент=ВыбКлиент);";
	КонецЕсли; 
	
	Если (чТочноДней=1) Тогда
		ТекстЗапроса = ТекстЗапроса + "Условие ((КредДокумент.Вид()=""РасходнаяНакладная"") и (Число(ВыбКонПериода-КредДокумент.ДатаОплаты)=ПросроченоДней));";
	ИначеЕсли (ПросроченоДней>0) Тогда //Выводить только те документы у которых кол-во просроченных дней >= условию на форме
		ТекстЗапроса = ТекстЗапроса + "Условие ((КредДокумент.Вид()=""РасходнаяНакладная"") и (Число(ВыбКонПериода-КредДокумент.ДатаОплаты)>=ПросроченоДней));";
	КонецЕсли;
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
              
	            
	Месяц_[1]=КонМесяца(ДобавитьМесяц(ВыбКонПериода,0));
	Месяц_[2]=КонМесяца(ДобавитьМесяц(ВыбКонПериода,1));
	Месяц_[3]=КонМесяца(ДобавитьМесяц(ВыбКонПериода,2));
	
	
	ТК=СоздатьОбъект("ТаблицаЗначений");
	ТКВрем=СоздатьОбъект("ТаблицаЗначений");
                    
	ТК_.УдалитьСтроки();
	Запрос.Выгрузить(ТК_);

	ТК_.НоваяКолонка("Клиент","Справочник.Контрагенты");
	ТК_.НоваяКолонка("КлГруппа","Справочник.Контрагенты");
	ТК_.НоваяКолонка("СуммаДок","Число",17,2);
	ТК_.НоваяКолонка("ДатаОплаты","Дата");
	ТК_.НоваяКолонка("Агент","Справочник.Сотрудники");
	ТК_.НоваяКолонка("НашДолг","Число",17,2);
	ТК_.НоваяКолонка("ДолгКлиента","Число",17,2);
	ТК_.НоваяКолонка("СуммаКредита","Число",17,2);
	ТК_.НоваяКолонка("ПросроченныйДолг","Число",17,2);
	ТК_.НоваяКолонка("ПросроченныйДолг1_3","Число",17,2);
	ТК_.НоваяКолонка("ПросроченныйДолг4_7","Число",17,2);
	ТК_.НоваяКолонка("ПросроченныйДолг8_14","Число",17,2);
	ТК_.НоваяКолонка("ПросроченныйДолг15_30","Число",17,2);
	ТК_.НоваяКолонка("ПросроченныйДолг31_90","Число",17,2);
	ТК_.НоваяКолонка("ПросроченныйДолг90_","Число",17,2);
	ТК_.НоваяКолонка("ОплатаПлан","Число",17,2);
	ТК_.НоваяКолонка("ОплатаПлан1","Число",17,2);
	ТК_.НоваяКолонка("ОплатаПлан2","Число",17,2);
	ТК_.НоваяКолонка("ОплатаПлан3","Число",17,2);
	ТК_.НоваяКолонка("УдСтр","Число",1,0);
	
	ТКАгенты=СоздатьОбъект("ТаблицаЗначений");
	
	ТКАгенты.НоваяКолонка("Агент","Справочник.Сотрудники");
	ТКАгенты.НоваяКолонка("НашДолг","Число",17,2);
	ТКАгенты.НоваяКолонка("ДолгКлиента","Число",17,2);
	ТКАгенты.НоваяКолонка("СуммаКредита","Число",17,2);
	ТКАгенты.НоваяКолонка("ПросроченныйДолг","Число",17,2);
	ТКАгенты.НоваяКолонка("ПросроченныйДолг1_3","Число",17,2);
	ТКАгенты.НоваяКолонка("ПросроченныйДолг4_7","Число",17,2);
	ТКАгенты.НоваяКолонка("ПросроченныйДолг8_14","Число",17,2);
	ТКАгенты.НоваяКолонка("ПросроченныйДолг15_30","Число",17,2);
	ТКАгенты.НоваяКолонка("ПросроченныйДолг31_90","Число",17,2);
	ТКАгенты.НоваяКолонка("ПросроченныйДолг90_","Число",17,2);
	ТКАгенты.НоваяКолонка("ОплатаПлан","Число",17,2);
	ТКАгенты.НоваяКолонка("ОплатаПлан1","Число",17,2);
	ТКАгенты.НоваяКолонка("ОплатаПлан2","Число",17,2);
	ТКАгенты.НоваяКолонка("ОплатаПлан3","Число",17,2);

	ТКАгенты.НоваяКолонка("Клиенты");

	ТККлиенты=СоздатьОбъект("ТаблицаЗначений");
	ТККлиенты.НоваяКолонка("КлГруппа","Справочник.Контрагенты");
	ТККлиенты.НоваяКолонка("Клиент","Справочник.Контрагенты");
	ТККлиенты.НоваяКолонка("НашДолг","Число",17,2);
	ТККлиенты.НоваяКолонка("ДолгКлиента","Число",17,2);
	ТККлиенты.НоваяКолонка("СуммаКредита","Число",17,2);
	ТККлиенты.НоваяКолонка("ПросроченныйДолг","Число",17,2);
	ТККлиенты.НоваяКолонка("ПросроченныйДолг1_3","Число",17,2);
	ТККлиенты.НоваяКолонка("ПросроченныйДолг4_7","Число",17,2);
	ТККлиенты.НоваяКолонка("ПросроченныйДолг8_14","Число",17,2);
	ТККлиенты.НоваяКолонка("ПросроченныйДолг15_30","Число",17,2);
	ТККлиенты.НоваяКолонка("ПросроченныйДолг31_90","Число",17,2);
	ТККлиенты.НоваяКолонка("ПросроченныйДолг90_","Число",17,2);
	ТККлиенты.НоваяКолонка("Документы");
	
	Всего=ТК_.КоличествоСтрок();
	с=0;
    
	ТК_.УдалитьСтроку(1);
	ТК_.ВыбратьСтроки();
	Пока ТК_.ПолучитьСтроку()=1 Цикл
                //ДолгКонЛат = Пересчет( ТК_.ДолгКон, ТК_.Клиент.ВалютаКредита, ТК_.КредДокумент.ДатаДок, Рубли, 1 );
		~Прод:

		с=с+1;
		Состояние("Обработано: "+Окр(с/Всего*100,0)+"%");
		Попытка
			Если ПустоеЗначение(ТК_.КредДокумент.Клиент)=0 Тогда
				ТК_.Клиент=ТК_.КредДокумент.Клиент;
			Иначе                                          
				Док=ТК_.КредДокумент;
				Док.ПолучитьСтрокуПоНомеру(1);
				ТК_.Клиент=Док.Клиент;
			КонецЕсли;
		Исключение
		КонецПопытки;
		Если глЕстьРеквизитШапки( "Валюта", ТК_.КредДокумент.Вид() ) = 1 Тогда
			Если глЕстьРеквизитШапки( "Курс", ТК_.КредДокумент.Вид() ) = 1 Тогда
				ТК_.ДолгКон = Пересчет( ТК_.ДолгКон, ТК_.КредДокумент.Валюта, ТК_.КредДокумент.Курс, Рубли, 1 );
			Иначе
				ТК_.ДолгКон = Пересчет( ТК_.ДолгКон, ТК_.КредДокумент.Валюта, ТК_.КредДокумент.ДатаДок, Рубли, 1 );
			КонецЕсли;
		КонецЕсли;
		Если (Найти(ТК_.КредДокумент.Вид(),"Расходная")=1) ИЛИ (Найти(ТК_.КредДокумент.Вид(),"Приходная")=1) ИЛИ (ТК_.КредДокумент.Вид()="ВводОстатковКредита") Тогда
			
			ТК_.Агент=ТК_.КредДокумент.Агент;
			
			Если ПустоеЗначение(ТК_.Агент)=1 Тогда
			    ТК_.Агент=ТК_.Клиент.Агент;
			КонецЕсли;
			
			ТК_.ДатаОплаты=ТК_.КредДокумент.ДатаОплаты;
			
			ТК_.СуммаДок=ТК_.КредДокумент.Итог("Сумма")+?(глЕстьРеквизитМнЧ("НДС",ТК_.КредДокумент.Вид())=1,ТК_.КредДокумент.Итог("НДС"),0);
			ТК_.СуммаДок=Пересчет( ТК_.СуммаДок, ТК_.Клиент.ВалютаВзаиморасчетов, ТК_.КредДокумент.ДатаДок, Рубли, 1 );
			// сем \\
			//Если глЕстьРеквизитШапки( "Валюта", ТК_.КредДокумент.Вид() ) = 1 Тогда
			//	Если глЕстьРеквизитШапки( "Курс", ТК_.КредДокумент.Вид() ) = 1 Тогда
			//		ТК_.ДолгКон = Пересчет( ТК_.ДолгКон, ТК_.КредДокумент.Валюта, ТК_.КредДокумент.Курс, Рубли, 1 );
			//	Иначе
			//		ТК_.ДолгКон = Пересчет( ТК_.ДолгКон, ТК_.КредДокумент.Валюта, ТК_.КредДокумент.ДатаДок, Рубли, 1 );
			//	КонецЕсли;
			//КонецЕсли;
			ТК_.ДолгКон = Пересчет( ТК_.ДолгКон, ТК_.Клиент.ВалютаВзаиморасчетов, ТК_.КредДокумент.ДатаДок, Рубли, 1 );
			// сем //
			Просрочено=ВыбКонПериода-ТК_.ДатаОплаты;
//			Если (Просрочено>=ПросроченоДней) И (ПросроченоДней>0) Тогда
//				ТК_.УдСтр=1;
//				Продолжить;				    
//			КонецЕсли;                           
			
//			Если (чТочноДней=1) и (Просрочено<>ПросроченоДней) Тогда
//				ТК_.УдСтр=1;
//				Продолжить;    
//			КонецЕсли;
			
			Если (ТК_.ДатаОплаты<ВыбКонПериода) И (ТК_.ДолгКон>0) Тогда
				//ТК_.ПросроченныйДолг=ТК_.ДолгКон;
				ТК_.ПросроченныйДолг = ТК_.ДолгКон;
				ДнейПросрочено=ВыбКонПериода-ТК_.ДатаОплаты;
				 
				Если (ДнейПросрочено>=1) И (ДнейПросрочено<=3)  Тогда
				    ТК_.ПросроченныйДолг1_3=ТК_.ДолгКон;
				ИначеЕсли (ДнейПросрочено>=4) И (ДнейПросрочено<=7)  Тогда
				    ТК_.ПросроченныйДолг4_7=ТК_.ДолгКон;
				ИначеЕсли (ДнейПросрочено>=8) И (ДнейПросрочено<=14)  Тогда
				    ТК_.ПросроченныйДолг8_14=ТК_.ДолгКон;
				ИначеЕсли (ДнейПросрочено>=15) И (ДнейПросрочено<=30)  Тогда
				    ТК_.ПросроченныйДолг15_30=ТК_.ДолгКон;
				ИначеЕсли (ДнейПросрочено>=31) И (ДнейПросрочено<=90)  Тогда
				    ТК_.ПросроченныйДолг31_90=ТК_.ДолгКон;
				ИначеЕсли (ДнейПросрочено>90) Тогда
				    ТК_.ПросроченныйДолг90_=ТК_.ДолгКон;
				КонецЕсли;
				
			ИначеЕсли (ТК_.ДатаОплаты>ВыбКонПериода) И (ТК_.ДолгКон>0) Тогда 
				КонДата=КонМесяца(ТК_.ДатаОплаты);
				МесяцОплаты=ДатаМесяц(ТК_.ДатаОплаты);
				ГодОплаты=ДатаГод(ТК_.ДатаОплаты);
				
				Для т=0 По 2 Цикл
					Если (КонДата>НачМесяца(ДобавитьМесяц(ВыбКонПериода,т))) И (КонДата<=КонМесяца(ДобавитьМесяц(ВыбКонПериода,т))) Тогда
						ТК_.УстановитьЗначение(ТК_.НомерСтроки,"ОплатаПлан"+(т+1),ТК_.ДолгКон);
					КонецЕсли;
				КонецЦикла;
				
				ТК_.ОплатаПлан=ТК_.ДолгКон;
					                        
			КонецЕсли;
	                               
		Иначе
			ТК_.Агент=ТК_.Клиент.Агент;
			Если (чТочноДней=1) Тогда //все авансы удаляем из отчетов
				ТК_.УдСтр=1;
				Продолжить;    
			КонецЕсли;
		КонецЕсли;                         
		
		Если ТК_.ДолгКон>0 Тогда
			//ТК_.ДолгКлиента=ТК_.ДолгКон;
			ТК_.ДолгКлиента = ТК_.ДолгКон;
		Иначе
			//ТК_.НашДолг=ТК_.ДолгКон;
			ТК_.НашДолг = ТК_.ДолгКон;
		КонецЕсли;

		КлГруппа=ТК_.Клиент.КлГруппа;
		Если ПустоеЗначение(КлГруппа)=0 Тогда
			ТК_.КлГруппа=КлГруппа;
		Иначе
			ТК_.КлГруппа=ТК_.Клиент;
		КонецЕсли;
		
		Если ВыбАгент.Выбран()=0 Тогда
		ИначеЕсли ВыбАгент.ЭтоГруппа()=1 Тогда
			Если ТК_.Агент.ПринадлежитГруппе(ВыбАгент)=0 Тогда
				ТК_.УдСтр=1;

//				с=с+1;
//				Если (ТК_.КоличествоСтрок()>с) Тогда
//			    	Перейти ~Прод;
//				Иначе
//					Прервать;
//				КонецЕсли;
//					Продолжить;
			КонецЕсли;
		ИначеЕсли ТК_.Агент<>ВыбАгент Тогда
			ТК_.УдСтр=1;
			
//			с=с+1;
//			Если (с<Всего) Тогда
//		    	Перейти ~Прод;
//			Иначе
//				Прервать;
//			КонецЕсли;
		КонецЕсли;
		
		
//		ТК.СуммаКредита=ТК.Клиент.СуммаКредита.Получить(ВыбКонПериода);
		
	КонецЦикла;
           
	ТК_.Сортировать("-УдСтр");
	ТК_.ВыбратьСтроки();
	ТК_.ПолучитьСтроку();
	
	Пока ТК_.УдСтр=1 Цикл
		ТК_.УдалитьСтроку();	    
	КонецЦикла;
	
	ТК_.Выгрузить(ТК);
	ТК_.Выгрузить(ТКАгенты);
	
	ТК.Свернуть("Агент,Клиент","НашДолг,ДолгКлиента,ПросроченныйДолг,ПросроченныйДолг1_3,ПросроченныйДолг4_7,ПросроченныйДолг8_14,ПросроченныйДолг15_30,ПросроченныйДолг31_90,ПросроченныйДолг90_,ОплатаПлан,ОплатаПлан1,ОплатаПлан2,ОплатаПлан3");

	ТК.НоваяКолонка("КлиентПоАлфавиту","Строка",100);
	ТК.НоваяКолонка("КодКлиента","Строка",10);
	ТК.НоваяКолонка("КлГруппа","Справочник.Контрагенты");
	ТК.НоваяКолонка("СуммаКредита","Число",17,2);
	
	ТК.ВыбратьСтроки();
	Пока ТК.ПолучитьСтроку() = 1 Цикл
		
		КлГруппа=ТК.Клиент.КлГруппа;
		Если ПустоеЗначение(КлГруппа)=0 Тогда
			ТК.КлГруппа=КлГруппа;
		Иначе
			ТК.КлГруппа=ТК.Клиент;
		КонецЕсли;
		
		ТК.КлиентПоАлфавиту=ТК.Клиент.ПоАлфавиту;
		ТК.КодКлиента=ТК.Клиент.Код;
		Если ТК.Клиент=ТК.КлГруппа Тогда
		    //ТК.СуммаКредита=ТК.КлГруппа.СуммаКредита.Получить(ВыбКонПериода);
			ТК.СуммаКредита=Пересчет( ТК.КлГруппа.СуммаКредита.Получить(ВыбКонПериода), ТК.КлГруппа.ВалютаКредита, ВыбКонПериода, Рубли, 1 );
		КонецЕсли;
	КонецЦикла;         
	
	ТК.Сортировать("Агент,КлиентПоАлфавиту");

	ТКАгенты.Свернуть("Агент","НашДолг,ДолгКлиента,СуммаДок,ПросроченныйДолг,ПросроченныйДолг1_3,ПросроченныйДолг4_7,ПросроченныйДолг8_14,ПросроченныйДолг15_30,ПросроченныйДолг31_90,ПросроченныйДолг90_,ОплатаПлан,ОплатаПлан1,ОплатаПлан2,ОплатаПлан3");
	ТКАгенты.Сортировать("Агент");
    
	Если Авто=1 Тогда            
		глРасшифровка=СоздатьОбъект("СписокЗначений");

		глРасшифровка.ДобавитьЗначение(ТКАгенты,"ТаблицаАгентов");
		глРасшифровка.ДобавитьЗначение(ТККлиенты,"ТаблицаКлиентов");
	    Возврат;
	КонецЕсли;
	// Подготовка к заполнению выходных форм данными запроса
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("ЗадолженностьКлиентов");
	// Заполнение полей "Заголовок"
	Таб.ВывестиСекцию("Отчет");
	Состояние("Заполнение выходной таблицы...");
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);   
	Таб.ПараметрыСтраницы(2,100,,,,,,,,1);

	ПредАгент="";
	ПредКлиент="";
	
	ТК.ВыбратьСтроки();
	Пока ТК.ПолучитьСтроку() = 1 Цикл
		
		Если ПредАгент<>ТК.Агент Тогда                
			рез=0;
			ТКАгенты.НайтиЗначение(ТК.Агент,рез,"Агент");
			ТКАгенты.ПолучитьСтрокуПоНомеру(рез);
		    Таб.ВывестиСекцию("Агент");
			ПредКлиент="";
		КонецЕсли;
		
		Если ПредКлиент<>ТК.Клиент Тогда
		    Таб.ВывестиСекцию("Клиент");
		КонецЕсли;
		    
		ПредАгент=ТК.Агент;
		ПредКлиент=ТК.Клиент;
		
//		Пока Запрос.Группировка(2) = 1 Цикл
//			// Заполнение полей КредДокумент
//			Таб.ВывестиСекцию("КредДокумент");
//		КонецЦикла;
	КонецЦикла;      
    
	// Заполнение полей "Итого"
	Таб.ВывестиСекцию("Итоги");
	// Вывод заполненной формы
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Задолженность по клиентам", "");
	семЗаписатьЛогКон( начЛог );	
	ЗадолженностьПоНакладным();	
КонецПроцедуры

Процедура семПриВходеАгента()
	Если ПустоеЗначение( Пользователь ) = 1 Тогда Возврат; КонецЕсли;
	Если ПустоеЗначение( Пользователь.АгентФильтр ) = 1 Тогда Возврат; КонецЕсли;
	выбАгент = Пользователь.АгентФильтр;
	Форма.выбАгент.Доступность( 0 );
	//Форма.кнОчВыбАгент.Доступность( 0 );
КонецПроцедуры

Процедура ПриОткрытии()
	Если Найти(НазваниеНабораПрав(), "СпециалистПоПродаже")>0 Тогда
		семПриВходеАгента();
	КонецЕсли;
	Авто=0;
	Если СокрЛП(Форма.Параметр)<>"" Тогда
		Если ТипЗначенияСтр(Форма.Параметр)="СписокЗначений" Тогда
			ВыбНачПериода=Форма.Параметр.Получить("ДатаОтчета")-1;
			ВыбКонПериода=ВыбНачПериода;
			ВыбАгент=Форма.Параметр.Получить("Агент");
			ВыбКлиент=Форма.Параметр.Получить("Клиент");
			Авто=1;
			ЗадолженностьКлиентов();
			СтатусВозврата(0);
		КонецЕсли;         
	КонецЕсли;
	семПриВыбореКлиента(выбКлиент);
КонецПроцедуры


ВыбНачПериода=НачМесяца(ПолучитьДатуТА());
ВыбКонПериода=ПолучитьДатуТА();

//Если Пользователь.Агент=1 Тогда
 //   ВыбАгент=Пользователь;
//КонецЕсли;

ТК_=СоздатьОбъект("ТаблицаЗначений");