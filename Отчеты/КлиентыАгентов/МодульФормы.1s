Перем ТК_,ТК;
Перем Авто;             
Перем Расшифровка_;
Перем Таб;
Перем СтрокЧисло;

Процедура ВывестиИТ( таб, пИТ, Группа, Ур)
	пИТ.Сортировать(Группа);

	пИТ.ВыбратьСтроки();
	Пока пИТ.ПолучитьСтроку() = 1 Цикл                
	
		ЕстьГруппы=пИТ.НомерКолонки("__ЭтоГруппа__");
		Если ЕстьГруппы>0 Тогда
			Если пИТ.__ЭтоГруппа__ = 1 Тогда
				текУровень = ?(Число(пИТ.__Уровень__) = 0,Ур+1,пИТ.__Уровень__);
				печУровень = Формат(" ","С"+(текУровень)*2+"");
				таб.ВывестиСекцию("Группа"+Группа);
				Состояние("В отчет выведено "+СтрокЧисло+" строк.");
				СтрокЧисло=СтрокЧисло+1;
				Если ПустоеЗначение(пИТ.тзПотомки) = 0 Тогда
					ВывестиИТ( таб, пИТ.тзПотомки,Группа,текУровень);
				КонецЕсли;
			Иначе
				таб.ВывестиСекцию(Группа);
				Состояние("В отчет выведено "+СтрокЧисло+" строк.");
				СтрокЧисло=СтрокЧисло+1;
				Если пИТ.НомерКолонки("тзПотомки") <> 0 Тогда
					Если ПустоеЗначение(пИТ.тзПотомки) = 0 Тогда
						ВывестиИТ( таб, пИТ.тзПотомки,?(Группа = "Агент","Клиент","Агент"),текУровень);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;			
		Иначе
			таб.ВывестиСекцию(Группа);
			Состояние("В отчет выведено "+СтрокЧисло+" строк.");
			СтрокЧисло=СтрокЧисло+1;

			Если пИТ.НомерКолонки("тзПотомки") <> 0 Тогда
				Если ПустоеЗначение(пИТ.тзПотомки) = 0 Тогда
					ВывестиИТ( таб, пИТ.тзПотомки,?(Группа = "Агент","Клиент","Агент"),текУровень);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;			

		
	КонецЦикла;
КонецПроцедуры


Процедура семПриВыбореКлиента(пКлиент)
	Если ПустоеЗначение(пКлиент) = 0 Тогда
		табл = семПолучитьСписокПодчКлиентов( пКлиент );
		флГлКлиент = ?(табл.КоличествоСтрок() > 0,1,0);
		Форма.флГлКлиент.Доступность(?(табл.КоличествоСтрок() > 0,1,0));
	Иначе
		флГлКлиент = 0;
		Форма.флГлКлиент.Доступность(0);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаВыбораЗначения( пЗнач, пЭлем, пФлаг )
	Если пЭлем = "ВыбКлиент" Тогда
		семПриВыбореКлиента(пЗнач);
	КонецЕсли;
КонецПроцедуры

//*******************************************
// Процедура генерации запроса КлиентыАгентов.
//
Процедура КлиентыАгентов()
	Перем Запрос, ТекстЗапроса, Таб;
	//Создание объекта типа Запрос
	начЛог = семЗаписатьЛогНач( "Отчет", "Клиенты агентов", "Обработка", "Клиенты агентов" );
	
	ЗапросСКЛ = СоздатьОбъект("ODBCRecordSet");

	Условие="";
	спУсловий=СоздатьОбъект("СписокЗначений");
	глДобавитьФильтр(ЗапросСКЛ,Условие,спУсловий,"$Контрагенты","Специализация",ВыбСпециализация,"СпециализацииКлиентов");
	глДобавитьФильтр(ЗапросСКЛ,Условие,спУсловий,"$Контрагенты","Агент",ВыбАгент,"Сотрудники");
	
	
//	глДобавитьФильтр(ЗапросСКЛ,Условие,спУсловий,"$Контрагенты","КатегорияКредитаТек",ВыбКатегория,"");
	глДобавитьФильтр(ЗапросСКЛ,Условие,спУсловий,"","ID",ВыбКлиент,"Контрагенты");

	УсловиеОбороты="";
	глДобавитьФильтр(ЗапросСКЛ,УсловиеОбороты,,"$СпрК","Специализация",ВыбСпециализация,"СпециализацииКлиентов");
	//.глДобавитьФильтр(ЗапросСКЛ,УсловиеОбороты,,"$СпрК","КатегорияКредитаТек",ВыбКатегория,"");
	глДобавитьФильтр(ЗапросСКЛ,УсловиеОбороты,,"$СпрК","Агент",ВыбАгент,"Сотрудники");
	
	
	ТекстЗапроса = "SELECT Контрагенты.ID [Клиент $Справочник.Контрагенты]
	|						, Контрагенты.PARENTID [Клиент_Родитель $Справочник.Контрагенты]
	|						, Контрагенты.CODE Код
	|						, Контрагенты.DESCR Наименование
	|						, $Контрагенты.ПоАлфавиту ПоАлфавиту 
	|						, $Контрагенты.Агент [Агент $Справочник.Сотрудники]
	|						, ОборотыКлиентовТек.СуммаПЦЧОборот СуммаПрод1
	|						, ОборотыКлиентовПред.СуммаПЦЧОборот СуммаПрод2
	|						, ОборотыКлиентовПред2.СуммаПЦЧОборот СуммаПрод3
	|				FROM $Справочник.Контрагенты AS Контрагенты (NOLOCK)
	|				LEFT JOIN $РегистрОбороты.ОборотыТоваров(:Нач,:Кон~,Период,INNER JOIN $Справочник.Контрагенты СпрК (NOLOCK) ON СпрК.ID = Клиент,
	|																			(Фирма = :ВыбФирма AND ВидОперации = '-'"+УсловиеОбороты+"),Клиент,СуммаПЦЧ) ОборотыКлиентовТек ON ОборотыКлиентовТек.Клиент = Контрагенты.ID 
	|				LEFT JOIN $РегистрОбороты.ОборотыТоваров(:Нач2,:Кон2~,Период,INNER JOIN $Справочник.Контрагенты СпрК (NOLOCK) ON СпрК.ID = Клиент,
	|																			(Фирма = :ВыбФирма AND ВидОперации = '-'"+УсловиеОбороты+"),Клиент,СуммаПЦЧ) ОборотыКлиентовПред ON ОборотыКлиентовПред.Клиент = Контрагенты.ID
	|				LEFT JOIN $РегистрОбороты.ОборотыТоваров(:Нач3,:Кон3~,Период,INNER JOIN $Справочник.Контрагенты СпрК (NOLOCK) ON СпрК.ID = Клиент,
	|																			(Фирма = :ВыбФирма AND ВидОперации = '-'"+УсловиеОбороты+"),Клиент,СуммаПЦЧ) ОборотыКлиентовПред2 ON ОборотыКлиентовПред2.Клиент = Контрагенты.ID

	|				WHERE ISMARK = 0  AND $Контрагенты.ПоАлфавиту NOT LIKE :АрхивСимв "+Условие+"
	|";

	Если ПустоеЗначение(ВыбКатегория)=0 Тогда
		ТекстЗапроса=ТекстЗапроса+" AND $ПоследнееЗначение.Контрагенты.КатегорияКредита(Контрагенты.ID,:Кон) "+?(флВыбКатИсключить=1,"<>","=")+" :ВыбКатегория";
		ЗапросСКЛ.УстановитьТекстовыйПараметр("ВыбКатегория",ВыбКатегория);
	КонецЕсли;
	

	Если чНеАктивныеКлиенты=1 Тогда
		ТекстЗапроса = ТекстЗапроса + " AND ID NOT IN (SELECT Клиент 
		|											   FROM $РегистрОбороты.ОборотыТоваров(:Нач,:Кон~,Период,
		|																					INNER JOIN $Справочник.Контрагенты СпрК (NOLOCK) ON СпрК.ID = Клиент,
		|																					(Фирма = :ВыбФирма AND ВидОперации = '-'"+УсловиеОбороты+"),Клиент,Количество)
		|											  )" 
	КонецЕсли;

//	ТекстЗапроса = ТекстЗапроса + "ORDER BY $Контрагенты.ПоАлфавиту";
	
	итКлиенты = СоздатьОбъект("ИндексированнаяТаблица");
	ЗапросСКЛ.УстановитьТекстовыйПараметр("Нач",ВыбНачПериода);
	ЗапросСКЛ.УстановитьТекстовыйПараметр("Кон",ВыбКонПериода);
	ЗапросСКЛ.УстановитьТекстовыйПараметр("Нач2",ДобавитьМесяц(ВыбНачПериода,-1));
	ЗапросСКЛ.УстановитьТекстовыйПараметр("Кон2",ДобавитьМесяц(ВыбКонПериода,-1));
	ЗапросСКЛ.УстановитьТекстовыйПараметр("Нач3",ДобавитьМесяц(ВыбНачПериода,-2));
	ЗапросСКЛ.УстановитьТекстовыйПараметр("Кон3",ДобавитьМесяц(ВыбКонПериода,-2));
	ЗапросСКЛ.УстановитьТекстовыйПараметр("АрхивСимв",Константа.СимволАрхивТоваров+"%");	
	
	ЗапросСКЛ.УстановитьТекстовыйПараметр("ВыбФирма",глФирма);
//	ЗапросСКЛ.Отладка(1);
	ЗапросСКЛ.ВыполнитьИнструкцию(ТекстЗапроса,итКлиенты);
	//итКлиенты.Показать("");
	итКлиенты.Сортировать("Агент,ПоАлфавиту");
	итКлиенты.Группировать("Агент : &Агент; Клиент : &Клиент","СуммаПрод1,СуммаПрод2,СуммаПрод3",0);
	
	//{ Стар запрос
	//Запрос = СоздатьОбъект("Запрос");
	//ТекстЗапроса =
	//"//{{ЗАПРОС(КлиентыАгентов)
	//|Клиент = Справочник.Контрагенты.ТекущийЭлемент;
	//|Агент = Справочник.Контрагенты.Агент;
	//|Специализация = Справочник.Контрагенты.Специализация;
	//|Группировка Агент упорядочить по Агент.Наименование;
	//|Группировка Клиент упорядочить по Клиент.ПоАлфавиту без групп;
	//|"//}}ЗАПРОС
	//;                     
	
//	Если ВыбАгент.Выбран()=0 Тогда
//	ИначеЕсли ВыбАгент.ЭтоГруппа()=1 Тогда
//		ТекстЗапроса = ТекстЗапроса + "Условие (Агент в ВыбАгент);";
//	Иначе
//	    ТекстЗапроса = ТекстЗапроса + "Условие (Агент = ВыбАгент);";
//	КонецЕсли;
//
//	Если ВыбСпециализация.Выбран()=0 Тогда
//	ИначеЕсли ВыбСпециализация.ЭтоГруппа()=1 Тогда
//		ТекстЗапроса = ТекстЗапроса + "Условие (Специализация в ВыбСпециализация);";
//	Иначе
//	    ТекстЗапроса = ТекстЗапроса + "Условие (Специализация = ВыбСпециализация);";
//	КонецЕсли;

	
	//Если ВыбКлиент.Выбран()=0 Тогда
	//ИначеЕсли ВыбКлиент.ЭтоГруппа()=1 Тогда
	//	ТекстЗапроса = ТекстЗапроса + "Условие (Клиент в ВыбКлиент);";
	//Иначе
	//	Если флГлКлиент = 1 Тогда
	//		табл = семПолучитьСписокПодчКлиентов( ВыбКлиент );
	//		сп = СоздатьОбъект( "СписокЗначений" );
	//		табл.Выгрузить(сп,,,"Клиент");
	//		сп.ДобавитьЗначение(ВыбКлиент);
	//		ТекстЗапроса = ТекстЗапроса + "Условие (Клиент в сп);";
	//	Иначе
	//		ТекстЗапроса=ТекстЗапроса+"Условие (Клиент=ВыбКлиент);";
	//	КонецЕсли;
	//КонецЕсли;

	//// Если ошибка в запросе, то выход из процедуры
	//Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	//	Возврат;
	//КонецЕсли;
	//}

	ПечПериод="За период с "+ВыбНачПериода+" по "+ВыбКонПериода;

	
	// Подготовка к заполнению выходных форм данными запроса
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("КлиентыАгентов");
	// Заполнение полей "Заголовок"
	Таб.ВывестиСекцию("Заголовок");

	Состояние("Заполнение выходной таблицы...");
	Таб.Опции(0,0,Таб.ВысотаТаблицы(),0);
	СтрокЧисло=2;
	Оживить(СтрокЧисло);
	ВывестиИТ(Таб,итКлиенты,"Агент",0);

	// Вывод заполненной формы
	Таб.ТолькоПросмотр(1);
	Таб.Показать("КлиентыАгентов","");
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры  

//*******************************************
// Процедура генерации запроса Клиенты.
//
Процедура Клиенты()
	Перем Запрос, ТекстЗапроса, Таб;
	начЛог = семЗаписатьЛогНач( "Отчет", "Клиенты агентов", "Обработка", "Клиенты" );
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(Клиенты)
	|Клиенты = Справочник.Клиенты.ТекущийЭлемент;
	|Группировка Клиенты;
	|Условие(Клиенты в ВыбКлиент);
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;

	// Подготовка к заполнению выходных форм данными запроса
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Клиенты");
	// Заполнение полей "Заголовок"
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Клиенты");
	Таб.ВывестиСекцию("Заголовок");
	Состояние("Заполнение выходной таблицы...");
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);
	Пока Запрос.Группировка(1) = 1 Цикл
		// Заполнение полей Клиенты
		Таб.ВывестиСекцию("Клиенты");
	КонецЦикла;
	// Вывод заполненной формы
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Клиенты", "");
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры  


//*******************************************
// Процедура генерации запроса ЗадолженностьКлиентов.
//
Процедура ЗадолженностьПоНакладным()
	начЛог = семЗаписатьЛогНач( "Отчет", "Клиенты агентов", "Обработка", "Задолженность по накладным" );
    Если ВыбКлиент.Выбран() = 0 Тогда
		Заг = "Pa visўm klientiem. ";
	ИначеЕсли ВыбКлиент.ЭтоГруппа() = 1 Тогда
		Заг ="Кlientu  grupa " + ВыбКлиент.Наименование;
	Иначе
		Заг ="Klients " + ВыбКлиент.Код+"  " + ВыбКлиент.Наименование+". ";
	КонецЕсли; 
	
	// Подготовка к заполнению выходных форм данными запроса
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("ЗадолженностиПоНакладным");
	// Заполнение полей "Заголовок"
	Таб.ВывестиСекцию("Отчет");
	Состояние("Заполнение выходной таблицы...");
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);   
	Таб.ПараметрыСтраницы(2,100,,,,,,,,1);

	Состояние("Формирование таблицы по Накладным...");
	ТК.Сортировать("Агент");
	ТК.ВыбратьСтроки();
	Пока ТК.ПолучитьСтроку() = 1 Цикл    
		                                                 
        Таб.ВывестиСекцию("Агент");

		ТККлиентыГруппа=ТК.тзПотомки;
		ТККлиентыГруппа.Сортировать("Клиент");
		ТККлиентыГруппа.ВыбратьСтроки();
		Пока ТККлиентыГруппа.ПолучитьСтроку()=1 Цикл
		    Таб.ВывестиСекцию("КлиентГруппа");

			ТККлиенты=ТККлиентыГруппа.тзПотомки;
			ТККлиенты.Сортировать("Клиент");
			ТККлиенты.ВыбратьСтроки();
			Пока ТККлиенты.ПолучитьСтроку()=1 Цикл
			    Таб.ВывестиСекцию("Клиент");
				ТКДок=ТККлиенты.тзПотомки;
				ТКДок.Сортировать("КредДокумент");
				ТКДок.ВыбратьСтроки();
				Пока ТКДок.ПолучитьСтроку()=1 Цикл
					Таб.ВывестиСекцию("Документ");
				КонецЦикла;		
			КонецЦикла;		
		КонецЦикла;
		    
	КонецЦикла;      
	
	// Заполнение полей "Итого"
	Таб.ВывестиСекцию("Итоги");
	// Вывод заполненной формы
	Таб.ТолькоПросмотр(1);  
	Таб.ПараметрыСтраницы(1,100,,,,,,,,1);
	Таб.Показать("Задолженность по накладным", "");
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры  



//*******************************************
// Процедура генерации запроса ЗадолженностьКлиентов.
//
Процедура ЗадолженностьКлиентов()
	Перем Запрос, ТекстЗапроса, Таб;
	Перем Месяц_[3];
	начЛог = семЗаписатьЛогНач( "Отчет", "Клиенты агентов", "Обработка", "Задолженность по клиентам" );
	//Создание объекта типа Запрос   
	
	Меню=СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение(1,"Структура задолженности");
	Меню.ДобавитьЗначение(2,"По накладным");

	Если ТК_.КоличествоСтрок()>0 Тогда
		рез=0;
		Если Меню.ВыбратьЗначение(1,,рез,,1)=0 Тогда
		    Возврат;
		КонецЕсли;  
		
		Если рез=2 Тогда
		    ЗадолженностьПоНакладным();
		КонецЕсли;
	КонецЕсли;
	
//	Запрос = СоздатьОбъект("Запрос");
        
	//ТекстЗапроса ="";
	//
 	//Если ВыбКонПериода>=ПолучитьДатуТА() Тогда
	//	ВыбКонПериода=ПолучитьДатуТА();
	//Иначе
	//	ТекстЗапроса =ТекстЗапроса +"Период с ВыбНачПериода по ВыбКонПериода;";
	//КонецЕсли; 
	глУдалениеВременнойТаблицыSQL("#Клиенты");
	
	Запрос=СоздатьОбъект("ODBCRecordSet");
	
	ТекстЗапросаКатКлиентов="SELECT ID, $Спр.КлГруппа КлГруппа
	|						 INTO #Клиенты
	|						 FROM $Справочник.Контрагенты Спр 
	|						 WHERE $Спр.флНеОтчетКлиентыАгентов=0 AND ISMARK = 0 AND $Спр.ПоАлфавиту NOT LIKE 'AA%' AND $Спр.ПоАлфавиту NOT LIKE :АрхивСимв";
	
	Заг2 ="";
	Запрос.УстановитьТекстовыйПараметр("АрхивСимв",Константа.СимволАрхивТоваров+"%");	
	
	Если ПустоеЗначение(ВыбКатегория)=0 Тогда
		Заг2 ="Кlientu  kategorija " + ВыбКатегория.Наименование;
		ТекстЗапросаКатКлиентов=ТекстЗапросаКатКлиентов+" AND $ПоследнееЗначение.Контрагенты.КатегорияКредита(Спр.ID,:Кон) "+?(флВыбКатИсключить=1,"<>","=")+" :ВыбКатегория";
		Запрос.УстановитьТекстовыйПараметр("ВыбКатегория",ВыбКатегория);
	КонецЕсли;

	Если ВыбАгент.Выбран()=0 Тогда
	ИначеЕсли ВыбАгент.ЭтоГруппа() = 1 Тогда
		ТекстЗапросаКатКлиентов = ТекстЗапросаКатКлиентов + " AND $Спр.Агент IN (SELECT Val FROM #АгентыКлиентов)";
		Запрос.УложитьСписокОбъектов(ВыбАгент,"#АгентыКлиентов","Сотрудники");
	Иначе
		ТекстЗапросаКатКлиентов = ТекстЗапросаКатКлиентов + " AND $Спр.Агент=:ВыбАгент";
		Запрос.УстановитьТекстовыйПараметр("ВыбАгент",ВыбАгент);
	КонецЕсли; 

	Если ВыбСпециализация.Выбран()=0 Тогда
	ИначеЕсли ВыбСпециализация.ЭтоГруппа() = 1 Тогда
		ТекстЗапросаКатКлиентов = ТекстЗапросаКатКлиентов + " AND $Спр.Специализация IN (SELECT Val FROM #СпециализацииКлиентов)";
		Запрос.УложитьСписокОбъектов(ВыбСпециализация,"#СпециализацииКлиентов","СпециализацииКлиентов");
	Иначе
		ТекстЗапросаКатКлиентов = ТекстЗапросаКатКлиентов + " AND $Спр.Специализация=:ВыбСпециализация";
		Запрос.УстановитьТекстовыйПараметр("ВыбСпециализация",ВыбСпециализация);
	КонецЕсли; 


	Заг="";	
	Если ВыбКлиент.Выбран() = 0 Тогда
		//Заг1 = "Pa visўm klientiem. ";
	ИначеЕсли ВыбКлиент.ЭтоГруппа() = 1 Тогда
		Заг ="Кlientu  grupa " + ВыбКлиент.Наименование;
		ТекстЗапросаКатКлиентов = ТекстЗапросаКатКлиентов + " AND Спр.ID IN (SELECT Val FROM #ГруппаКлиентов)";
		Запрос.УложитьСписокОбъектов(ВыбКлиент,"#ГруппаКлиентов","Контрагенты");
	Иначе
		Заг ="Klients " + ВыбКлиент.Код+"  " + ВыбКлиент.Наименование+". ";
		ТекстЗапросаКатКлиентов=ТекстЗапросаКатКлиентов+" AND (Спр.ID=:ВыбКлиент OR $Спр.КлГруппа=:ВыбКлиент)";
		Запрос.УстановитьТекстовыйПараметр("ВыбКлиент",ВыбКлиент);
	КонецЕсли; 

	Запрос.УстановитьТекстовыйПараметр("Кон",ВыбКонПериода);
	Запрос.ВыполнитьСкалярный(ТекстЗапросаКатКлиентов);

	//добавляем групповых клиентов, если они не попали в список
	ТекстЗапросаКатКлиентов="INSERT INTO #Клиенты
	|						 SELECT DISTINCT КлГруппа, $ПустойИД
	|						 FROM #Клиенты 
	|						 WHERE КлГруппа NOT IN (SELECT ID FROM #Клиенты) AND КлГруппа<> $ПустойИД";
	
	Запрос.ВыполнитьСкалярный(ТекстЗапросаКатКлиентов);
	//{ Запрос по долгам клиентам общий
	
	ТекстЗапросаКлиент = "SELECT Рег.Клиент [Клиент $Справочник.Контрагенты],                                                                       
	|							$СпрК2.ПоАлфавиту ПоАлфавиту,
	|							СпрК2.Code КодКлиента,
	|							NULLIF($ПоследнееЗначение.Контрагенты.ДатаОплатыДолга(Рег.Клиент,:Кон),'17530101') [ДатаОплатыДолга],
	|							CASE WHEN $СпрК2.КлГруппа=$ПустойИД THEN  Рег.Клиент ELSE $СпрК2.КлГруппа END [КлГруппа $Справочник.Контрагенты],
	|							$СпрК2.Агент [Агент $Справочник.Сотрудники],
	|							Рег.ДолгОстаток * CASE WHEN $СпрК2.ВалютаВзаиморасчетов<>:БазВалюта THEN $ПоследнееЗначение.Валюты.Курс($СпрК2.ВалютаВзаиморасчетов,GETDATE()) ELSE 1 END ДолгКон,
	|							$СпрК2.ВалютаВзаиморасчетов [ВалютаВзаиморасчетов $Справочник.Валюты],
	|							$СпрК2.ВалютаКредита [ВалютаКредита $Справочник.Валюты],
	|							CASE WHEN $СпрК2.ВалютаКредита<>:БазВалюта THEN $ПоследнееЗначение.Валюты.Курс($СпрК2.ВалютаКредита,GETDATE()) ELSE 1 END* $ПоследнееЗначение.Контрагенты.СуммаКредита(Рег.Клиент,:Кон) СуммаКредита
	|							FROM $РегистрОстатки.ВзаиморасчетыПокупателей(:Кон~
	|																			 ,INNER JOIN #Клиенты СпрК ON СпрК.ID=Клиент, 
	|							 												 ,(Клиент)
	|																			 ,Долг ) as Рег         
	|							INNER JOIN $Справочник.Контрагенты СпрК2 (NOLOCK) ON СпрК2.ID=Рег.Клиент ";
	
	
	Если чТолькоПревышениеЛимитаКредита=1 Тогда
		ТекстЗапросаКлиент=ТекстЗапросаКлиент+"WHERE (Рег.ДолгОстаток * CASE WHEN $СпрК2.ВалютаВзаиморасчетов<>:БазВалюта THEN $ПоследнееЗначение.Валюты.Курс($СпрК2.ВалютаВзаиморасчетов,GETDATE()) ELSE 1 END) > (CASE WHEN $СпрК2.ВалютаКредита<>:БазВалюта THEN $ПоследнееЗначение.Валюты.Курс($СпрК2.ВалютаКредита,GETDATE()) ELSE 1 END* $ПоследнееЗначение.Контрагенты.СуммаКредита(Рег.Клиент,:Кон))";
		Если ПустоеЗначение(Заг)=0 Тогда
			Заг =Заг+РазделительСтрок;
		КонецЕсли;
		Заг =Заг+"Клиенты с превышением лимита кредита по договору";
	КонецЕсли;
	
	Запрос.УстановитьТекстовыйПараметр("Кон",ВыбКонПериода);
	Запрос.УстановитьТекстовыйПараметр("БазВалюта",Константа.ВалютаВзаиморасчетов);
	итКлиентыДолг=СоздатьОбъект("ИндексированнаяТаблица");
	итАгентыДолг=СоздатьОбъект("ИндексированнаяТаблица");

	Состояние("Выполняется запрос...");
	Запрос.ВыполнитьИнструкцию(ТекстЗапросаКлиент,итКлиентыДолг);    
	итКлиентыДолг.ДобавитьИндекс("иКлиент","*Клиент");
	сзКлиенты=СоздатьОбъект("СписокЗначений");
	итКлиентыДолг.Выгрузить(сзКлиенты,"иКлиент","Клиент",1);
	Запрос.УложитьСписокОбъектов(сзКлиенты,"#КлиентыФильтр");
	
	итАгентыДолг.Загрузить(итКлиентыДолг);
	итАгентыДолг.Свернуть("Агент","ДолгКон");
	итАгентыДолг.ДобавитьИндекс("иАгент","*Агент");
	
	//итКлиентыДолг.Сортировать("Клиент");
	//итКлиентыДолг.Показать("");
	//}
	
	КлиентРекв=?(чПоГлавнымКлиентам=1,"Рег.Клиент","COALESCE($ДокР2.Клиент,$ДокПН.Клиент,$ДокВО.Клиент,$ДокСФ.Клиент,$ДокОР.Клиент,Рег.Клиент)");
	
	ТекстЗапроса2 = "SELECT Рег.Клиент [КлиентГл $Справочник.Контрагенты],
	|						"+КлиентРекв+" [Клиент $Справочник.Контрагенты], 
	|						$СпрК2.ПоАлфавиту ПоАлфавиту,
	|						СпрК2.Code КодКлиента,
	|						$ПоследнееЗначение.Контрагенты.КатегорияКредита(Рег.Клиент,:Кон) [КатегорияКредита $Справочник.КатегорииКредитовКлиентов],
	|						NULLIF($ПоследнееЗначение.Контрагенты.ДатаОплатыДолга("+КлиентРекв+",:Кон),'17530101') [ДатаОплатыДолга],
	|						$ПоследнееЗначение.Контрагенты.КомментарийДляКредита("+КлиентРекв+",:Кон) КомментарийДляКредита,
	|						$ПоследнееЗначение.Контрагенты.КомментарийДляКредитаАгенту("+КлиентРекв+",:Кон) КомментарийДляКредитаАгенту,
	|						CASE WHEN $СпрК2.КлГруппа=$ПустойИД THEN  Рег.Клиент ELSE $СпрК2.КлГруппа END [КлГруппа $Справочник.Контрагенты],
	|						Рег.КредДокумент [КредДокумент $Документ],   
	|						Журн.IDDOCDEF [КредДокумент_вид $ВидДокумента],
	|						NULLIF(COALESCE($ДокР2.ДатаОплаты,$ДокПН.ДатаОплаты,$ДокВО.ДатаОплаты,$ДокСФ.ДатаОплаты,$ДокОР.ДатаОплаты),'17530101') ДатаОплаты,                  
	|						NULLIF(COALESCE($ДокР2.ДатаОплаты,$ДокПН.ДатаОплаты,$ДокВО.ДатаОплаты,$ДокСФ.ДатаОплаты,$ДокОР.ДатаОплаты),'17530101') ДатаПервойОплаты,                  
	|						$СпрК2.Агент [АгентГл $Справочник.Сотрудники],
	| 						"+?(чПоГлавнымКлиентам=1,"$СпрК2.Агент","COALESCE($ДокР2.Агент,$ДокПН.Агент,$ДокВО.Агент,$ДокСФ.Агент,$ДокОР.Агент,$СпрК2.Агент,$СпрК2.Агент)")+" [Агент $Справочник.Сотрудники],
	|						COALESCE($ДокР2.Клиент,$ДокПН.Клиент,$ДокВО.Клиент,$ДокСФ.Клиент,$ДокОР.Клиент,Рег.Клиент) [КлиентДок $Справочник.Контрагенты],
	|						COALESCE($ДокР2.ВсегоСуммаШ,$ДокПН.ВсегоСуммаШ,$ДокВО.Сумма,$ДокСФ.ВсегоСуммаШ,$ДокОР.ВсегоСуммаШ,0) СуммаДок,
	|						Рег.ДолгОстаток ДолгКон,                                              
	|						CASE WHEN COALESCE($ДокР2.ДатаОплаты,$ДокПН.ДатаОплаты,$ДокВО.ДатаОплаты,$ДокСФ.ДатаОплаты,$ДокОР.ДатаОплаты)<:Кон THEN Рег.ДолгОстаток ELSE 0 END ПросроченныйДолг,
	|						$ПоследнееЗначение.Контрагенты.СуммаКредита(Рег.Клиент,:Кон) СуммаКредита,                                                      
	|						$ПоследнееЗначение.Контрагенты.Глубина(Рег.Клиент,:Кон) Глубина,                                                      
	|						COALESCE($ДокР2.Валюта,$ДокПН.Валюта,$ДокВО.Валюта,$ДокСФ.Валюта,$ДокОР.Валюта,:БазВалюта) [Валюта $Справочник.Валюты],
	|						COALESCE($ДокР2.Курс,$ДокПН.Курс,$ДокВО.Курс,$ДокСФ.Курс,$ДокОР.Курс,1) Курс,
	|						$СпрК2.ВалютаВзаиморасчетов [ВалютаВзаиморасчетов $Справочник.Валюты],
	|						$СпрК2.ВалютаКредита [ВалютаКредита $Справочник.Валюты],
	|						CASE WHEN $СпрК2.ВалютаВзаиморасчетов<>:БазВалюта THEN $ПоследнееЗначение.Валюты.Курс($СпрК2.ВалютаВзаиморасчетов,CAST(LEFT(Журн.DATE_TIME_IDDOC,8) as SmallDateTime)) ELSE 1 END КурсВал,
	|						CASE WHEN $СпрК2.ВалютаКредита<>:БазВалюта THEN $ПоследнееЗначение.Валюты.Курс($СпрК2.ВалютаКредита,CAST(LEFT(Журн.DATE_TIME_IDDOC,8) as SmallDateTime)) ELSE 1 END КурсВалКредита,
	|						CAST(LEFT(Журн.DATE_TIME_IDDOC,8) as SmallDateTime) ДатаДок,
	|						DATEDIFF(day, COALESCE($ДокР2.ДатаОплаты,$ДокПН.ДатаОплаты,$ДокВО.ДатаОплаты,$ДокСФ.ДатаОплаты,$ДокОР.ДатаОплаты,CAST(:Кон as SmallDateTime) ), CAST(:Кон as SmallDateTime)) ПросроченоДней
	|						FROM $РегистрОстатки.ВзаиморасчетыПокупателей(:Кон~
	|																			 ,INNER JOIN #Клиенты СпрК ON СпрК.ID=Клиент, ";
	
	Если (ПросроченоДней>0) Тогда
//        ТекстЗапроса2 = ТекстЗапроса2+" INNER JOIN $Документ.РасходнаяНакладная ДокР (NOLOCK) ON ДокР.IDDOC=RIGHT(КредДокумент,9)";
	КонецЕсли;                           

	
//	ТекстЗапроса2 = ТекстЗапроса2 + "                                    		 , ";


	Заг3 ="";
	Если ПросроченоДней>0 Тогда
		Заг3="Просрочено дней >= "+ПросроченоДней;
	КонецЕсли;
	
	Если ПросроченаСумма>0 Тогда
		Заг3=Заг3+"  Просрочена сумма >= "+ПросроченаСумма;
	КонецЕсли;


	ТекстЗапроса2=ТекстЗапроса2+" 												 ,(Клиент,КредДокумент)
	|																			 ,Долг ) as Рег         ";

	ВидСвязки=" LEFT ";
	
	ТекстЗапроса2 = ТекстЗапроса2 +ВидСвязки+" JOIN $Документ.РасходнаяНакладная ДокР2 (NOLOCK) ON ДокР2.IDDOC=RIGHT(Рег.КредДокумент,9) 
	|" +ВидСвязки+" JOIN $Документ.ПриходнаяНакладная ДокПН (NOLOCK) ON ДокПН.IDDOC=RIGHT(Рег.КредДокумент,9) 
	|" +ВидСвязки+" JOIN $Документ.ВводОстатковКредита ДокВО (NOLOCK) ON ДокВО.IDDOC=RIGHT(Рег.КредДокумент,9) 
	|" +ВидСвязки+" JOIN $Документ.Счет_фактура ДокСФ (NOLOCK) ON ДокСФ.IDDOC=RIGHT(Рег.КредДокумент,9) 
	|" +ВидСвязки+" JOIN $Документ.ОтчетРеализатора ДокОР (NOLOCK) ON ДокОР.IDDOC=RIGHT(Рег.КредДокумент,9) 
	|" +" INNER JOIN _1sjourn Журн (NOLOCK) ON Журн.IDDOC=RIGHT(Рег.КредДокумент,9) 
	|" +" INNER JOIN $Справочник.Контрагенты СпрК2 (NOLOCK) ON СпрК2.ID=Рег.Клиент 
	|  INNER JOIN #КлиентыФильтр ON #КлиентыФильтр.Val = Рег.Клиент ";

	Условие="WHERE ";
	Соединение="";
	Если (ПросроченаСумма>0) и (чПоНакладной=1) Тогда
    	ТекстЗапроса2 = ТекстЗапроса2+Условие+" Рег.ДолгОстаток>:ПросроченаСумма";
		Соединение=" AND ";
		Условие="";
		Запрос.УстановитьТекстовыйПараметр("ПросроченаСумма",ПросроченаСумма);		
	КонецЕсли;	                  

	//Если ВыбАгент.Выбран() = 0 Тогда
	//ИначеЕсли ВыбАгент.ЭтоГруппа() = 1 Тогда
	//	ТекстЗапроса2 = ТекстЗапроса2 + Условие+Соединение+" COALESCE($ДокР2.Агент,$ДокПН.Агент,$ДокВО.Агент,$СпрК2.Агент) IN (SELECT Val FROM #Агенты)";
	//	Запрос.УложитьСписокОбъектов(ВыбАгент,"#Агенты","Сотрудники");
	//	Соединение=" AND ";
	//	Условие="";
	//Иначе
	//	ТекстЗапроса2=ТекстЗапроса2+Условие+Соединение+" COALESCE($ДокР2.Агент,$ДокПН.Агент,$ДокВО.Агент,$СпрК2.Агент)=:ВыбАгент";
	//	Запрос.УстановитьТекстовыйПараметр("ВыбАгент",ВыбАгент);
	//	Соединение=" AND ";
	//	Условие="";
	//КонецЕсли; 

// не работает	
	Если (ПросроченоДней>0) Тогда
		Если (чТочноДней=1) Тогда
			ТекстЗапроса2=ТекстЗапроса2+Условие+Соединение+" COALESCE($ДокР2.ДатаОплаты,$ДокСФ.ДатаОплаты,$ДокОР.ДатаОплаты,CAST(:Кон as SmallDateTime)))=CAST(:ПросроченоДней as SmallDateTime) AND Рег.ДолгОстаток>0";
		Иначе                           
			ТекстЗапроса2=ТекстЗапроса2+Условие+Соединение+" COALESCE($ДокР2.ДатаОплаты,$ДокСФ.ДатаОплаты,$ДокОР.ДатаОплаты, CAST(:Кон as SmallDateTime))<=CAST(:ПросроченоДней as SmallDateTime) AND Рег.ДолгОстаток>0";
		КонецЕсли;

		Соединение=" AND ";
		Условие="";
		                                                                                 
		//определим дату с которой сравнивать
		Запрос.УстановитьТекстовыйПараметр("ПросроченоДней",ВыбКонПериода-ПросроченоДней);
	КонецЕсли;                           
	
	Запрос.УстановитьТекстовыйПараметр("Кон",ВыбКонПериода);
	Запрос.УстановитьТекстовыйПараметр("БазВалюта",Константа.ВалютаВзаиморасчетов);
	                                    
	//Сообщить(ТекстЗапроса2);
	
	//Запрос.Отладка(1);
	ТК__=СоздатьОбъект("ИндексированнаяТаблица");
	ТК_=СоздатьОбъект("ТаблицаЗначений");    

	Состояние("Выполняется запрос...");
	Запрос.ВыполнитьИнструкцию(ТекстЗапроса2,ТК__);
	//ТК__.ВыбратьСтроку("");                              
	 
	//сначала отбираем клиентов по просроченным суммам
	Если ((ПросроченаСумма>0) и (чПоНакладной=0)) ИЛИ (чТолькоПревышениеЛимитаКредита=1) Тогда
		Состояние("Фильтруем по просроченным суммам...");
		//первоначальные данные для фильтрации по клиенту
		ТК2__=СоздатьОбъект("ИндексированнаяТаблица");
		ТК2_=СоздатьОбъект("ИндексированнаяТаблица");
		ТК2_.Загрузить(ТК__);
		ТК2_.ДобавитьИндекс("Клиент","*Клиент"); 

		ТККл=СоздатьОбъект("ИндексированнаяТаблица");
		ТККл.Загрузить(ТК__);
		ТККл.ДобавитьИндекс("Клиент","*Клиент"); 
		ТККл.Свернуть("Клиент","ПросроченныйДолг","Клиент");  
		ТККл.ДобавитьИндекс("ПросроченныйДолг","ПросроченныйДолг");                
		//отбираем по фильтру
		ТККл.УстановитьФильтр(ПросроченаСумма,9999999,"ПросроченныйДолг");
		ТККл.Выгрузить(ТК2__,"ПросроченныйДолг"); //выгружаем фильтрованные записи
		ТК2__.ДобавитьИндекс("Клиент","*Клиент");
		//делаем пересечение для исключения лишних накладных
		ТК2_.Пересечение(ТК2__,"Клиент","Клиент",0);        
		ТК2_.Выгрузить(ТК__);
		
	КонецЕсли;                                     

	
	//сначала отбираем клиентов по просроченным суммам
	Если (чТолькоАвансовыеСуммы=1) Тогда
		Состояние("Фильтруем по авансовым суммам...");
		//первоначальные данные для фильтрации по клиенту
		ТК2__=СоздатьОбъект("ИндексированнаяТаблица");
		ТК2_=СоздатьОбъект("ИндексированнаяТаблица");
		ТК2_.Загрузить(ТК__);
		ТК2_.ДобавитьИндекс("Клиент","*Клиент"); 

		ТККл=СоздатьОбъект("ИндексированнаяТаблица");
		ТККл.Загрузить(ТК__);
		ТККл.ДобавитьИндекс("Клиент","*Клиент"); 
		ТККл.Свернуть("Клиент","ДолгКон","Клиент");  
		ТККл.ДобавитьИндекс("ДолгКон","ДолгКон");                
		//отбираем по фильтру
		ТККл.УстановитьФильтр(-9999999,-0.01,"ДолгКон");
		ТККл.Показать("ДолгКон");
		ТККл.Выгрузить(ТК2__,"ДолгКон"); //выгружаем фильтрованные записи
		ТК2__.ДобавитьИндекс("Клиент","*Клиент");
		//делаем пересечение для исключения лишних накладных
		ТК2_.Пересечение(ТК2__,"Клиент","Клиент",0);        
		ТК2_.Выгрузить(ТК__);
		
	КонецЕсли;                                     
	
	
	//теперь фильтруем накладные по просроченным дням
	//Если ПросроченоДней>0 Тогда
	//	Состояние("Фильтруем по просроченным дням...");
	//	
	//	ТКФ=СоздатьОбъект("ИндексированнаяТаблица");
	//	ТКФ_=СоздатьОбъект("ИндексированнаяТаблица");
	//	ТКФ.Загрузить(ТК__);
	//	ТКФ.ДобавитьИндекс("ПросроченоДней","ПросроченоДней");        
	//	ТКФ.УстановитьФильтр(ПросроченоДней,?(чТочноДней=1,ПросроченоДней,9999999),"ПросроченоДней");
	//	ТКФ.Выгрузить(ТКФ_,"ПросроченоДней"); //выгружаем фильтрованные записи
	//	ТКФ_.ДобавитьИндекс("КредДокумент","*КредДокумент");
	//	ТК__.ДобавитьИндекс("КредДокумент","*КредДокумент");
	//	ТК__.Пересечение(ТКФ_,"КредДокумент","КредДокумент",0);
	//КонецЕсли;

	ТК__.Выгрузить(ТК_); //выгружаем все записи

	Месяц_[1]=КонМесяца(ДобавитьМесяц(ВыбКонПериода,0));
	Месяц_[2]=КонМесяца(ДобавитьМесяц(ВыбКонПериода,1));
	Месяц_[3]=КонМесяца(ДобавитьМесяц(ВыбКонПериода,2));
	
	//ТК__.Показать("");
	ТК=СоздатьОбъект("ИндексированнаяТаблица");
	ТКВрем=СоздатьОбъект("ТаблицаЗначений");
                    
//	ТК_.НоваяКолонка("Клиент","Справочник.Контрагенты");
//	ТК_.НоваяКолонка("КлГруппа","Справочник.Контрагенты");
//	ТК_.НоваяКолонка("СуммаДок","Число",17,2);
	//ТК_.НоваяКолонка("ДатаОплаты","Дата");
	//ТК_.НоваяКолонка("Агент","Справочник.Сотрудники");
	ТК_.НоваяКолонка("НашДолг","Число",17,2);
	ТК_.НоваяКолонка("ДолгКлиента","Число",17,2);
	ТК_.НоваяКолонка("ДнейПросрочено","Число",10,0);
//	ТК_.НоваяКолонка("СуммаКредита","Число",17,2);
//	ТК_.НоваяКолонка("ПросроченныйДолг","Число",17,2);
	ТК_.НоваяКолонка("ПросроченныйДолг1_2","Число",17,2);
	ТК_.НоваяКолонка("ПросроченныйДолг3_5","Число",17,2);
	ТК_.НоваяКолонка("ПросроченныйДолг6_10","Число",17,2);
	ТК_.НоваяКолонка("ПросроченныйДолг11_20","Число",17,2);
	ТК_.НоваяКолонка("ПросроченныйДолг21_30","Число",17,2);
	ТК_.НоваяКолонка("ПросроченныйДолг31_90","Число",17,2);
	ТК_.НоваяКолонка("ПросроченныйДолг90_","Число",17,2);
	ТК_.НоваяКолонка("ОплатаПлан","Число",17,2);
	ТК_.НоваяКолонка("ОплатаПлан1","Число",17,2);
	ТК_.НоваяКолонка("ОплатаПлан2","Число",17,2);
	ТК_.НоваяКолонка("ОплатаПлан3","Число",17,2);
	ТК_.НоваяКолонка("УдСтр","Число",1,0);
	
	Всего=ТК_.КоличествоСтрок();
	Если Всего=0 Тогда
		Сообщить("Нет данных для отчета!");
		Возврат;
	КонецЕсли;
	с=0;
    
	ТК_.ВыбратьСтроки();
	Пока ТК_.ПолучитьСтроку()=1 Цикл
		~Прод:

		с=с+1;
		Состояние("Обработано: "+Окр(с/Всего*100,0)+"%"+" - "+ТК_.НомерСтроки+"/"+Всего+" ------- "+ТК_.Агент );
		Если ПустоеЗначение(ТК_.Валюта)=1 Тогда
			Сообщить("Не определена валюты у документа: "+ТК_.КредДокумент);
		КонецЕсли;
		
		Если ТК_.Валюта<>Рубли Тогда
			ТК_.СуммаДок=ТК_.СуммаДок * ТК_.Курс;
		КонецЕсли;

		Если ПустоеЗначение(ТК_.ВалютаВзаиморасчетов)=1 Тогда
			Сообщить("Не определена валюты взаиморасчеттов у клиента: "+ТК_.Клиент);
		КонецЕсли;
		
		Если ТК_.ВалютаВзаиморасчетов<>Рубли Тогда
			//ТК_.ДолгКон = Пересчет( ТК_.ДолгКон, ТК_.ВалютаВзаиморасчетов, ТК_.ДатаДок, Рубли, 1 );
			ТК_.ДолгКон = ТК_.ДолгКон * ТК_.КурсВал;
			ТК_.ПросроченныйДолг= ТК_.ПросроченныйДолг * ТК_.КурсВал;
		КонецЕсли;

		Если ТК_.ВалютаВзаиморасчетов<>Рубли Тогда
			ТК_.СуммаКредита = ТК_.СуммаКредита * ТК_.КурсВалКредита;
		КонецЕсли;
		
		Если (Найти(ТК_.КредДокумент.Вид(),"Расходная")=1) ИЛИ (Найти(ТК_.КредДокумент.Вид(),"Приходная")=1) ИЛИ (ТК_.КредДокумент.Вид()="ВводОстатковКредита") ИЛИ (ТК_.КредДокумент.Вид()="Счет_фактура") ИЛИ (ТК_.КредДокумент.Вид()="ОтчетРеализатора") Тогда
			
			Просрочено=ВыбКонПериода-ТК_.ДатаОплаты;
			ТК_.ДатаПервойОплаты=Мин(ТК_.ДатаОплаты,ТК_.ДатаПервойОплаты);
			
			Если (ТК_.ДатаОплаты<ВыбКонПериода) И (ТК_.ДолгКон>0) Тогда
				//ТК_.ПросроченныйДолг = ТК_.ДолгКон;
				ДнейПросрочено=Просрочено;
				ТК_.ДнейПросрочено=Просрочено;
				 
				Если (ДнейПросрочено>=1) И (ДнейПросрочено<=4)  Тогда
				    ТК_.ПросроченныйДолг1_2=ТК_.ДолгКон;
				ИначеЕсли (ДнейПросрочено>=5) И (ДнейПросрочено<=10)  Тогда
				    ТК_.ПросроченныйДолг3_5=ТК_.ДолгКон;
				ИначеЕсли (ДнейПросрочено>=11) И (ДнейПросрочено<=20)  Тогда
				    ТК_.ПросроченныйДолг6_10=ТК_.ДолгКон;
				ИначеЕсли (ДнейПросрочено>=21) И (ДнейПросрочено<=30)  Тогда
				    ТК_.ПросроченныйДолг11_20=ТК_.ДолгКон;
				ИначеЕсли (ДнейПросрочено>=31) И (ДнейПросрочено<=60)  Тогда
				    ТК_.ПросроченныйДолг21_30=ТК_.ДолгКон;
				ИначеЕсли (ДнейПросрочено>=61) И (ДнейПросрочено<=90)  Тогда
				    ТК_.ПросроченныйДолг31_90=ТК_.ДолгКон;
				ИначеЕсли (ДнейПросрочено>90) Тогда
				    ТК_.ПросроченныйДолг90_=ТК_.ДолгКон;
				КонецЕсли;
				
			ИначеЕсли (ТК_.ДатаОплаты>ВыбКонПериода) И (ТК_.ДолгКон>0) Тогда 
				//КонДата=КонМесяца(ТК_.ДатаОплаты);
				//МесяцОплаты=ДатаМесяц(ТК_.ДатаОплаты);
				//ГодОплаты=ДатаГод(ТК_.ДатаОплаты);
				//
				//Для т=0 По 2 Цикл
				//	Если (КонДата>НачМесяца(ДобавитьМесяц(ВыбКонПериода,т))) И (КонДата<=КонМесяца(ДобавитьМесяц(ВыбКонПериода,т))) Тогда
				//		ТК_.УстановитьЗначение(ТК_.НомерСтроки,"ОплатаПлан"+(т+1),ТК_.ДолгКон);
				//	КонецЕсли;
				//КонецЦикла;
				//
				//ТК_.ОплатаПлан=ТК_.ДолгКон;
					                        
			КонецЕсли;
	                               
		Иначе   
			ТК_.ДатаОплаты="";
			ТК_.ДатаПервойОплаты="";
//			ТК_.Агент=ТК_.Клиент.Агент;
			Если (чТочноДней=1) Тогда //все авансы удаляем из отчетов
				ТК_.УдСтр=1;
				Продолжить;    
			КонецЕсли;
		КонецЕсли;                         
		
		Если ТК_.ДолгКон>0 Тогда
			ТК_.ДолгКлиента = ТК_.ДолгКон;
		Иначе
			ТК_.НашДолг = ТК_.ДолгКон;
		КонецЕсли;
		
	КонецЦикла;
	
	ТККлиенты=СоздатьОбъект("ИндексированнаяТаблица");
	ТК.Загрузить(ТК_);
	ТК.Выгрузить(ТККлиенты);
	ТК.Группировать("Агент : *Агент;Клиент : *Клиент; КлиентДок : *КлиентДок; КредДокумент : *КредДокумент; Валюта : *Валюта","СуммаДок,НашДолг,ДолгКлиента,ПросроченныйДолг,ПросроченныйДолг1_2,ПросроченныйДолг3_5,ПросроченныйДолг6_10,ПросроченныйДолг11_20,ПросроченныйДолг21_30,ПросроченныйДолг31_90,ПросроченныйДолг90_,ОплатаПлан,ОплатаПлан1,ОплатаПлан2,ОплатаПлан3");
    
	Если Авто=1 Тогда            
		глРасшифровка=СоздатьОбъект("СписокЗначений");

		глРасшифровка.ДобавитьЗначение(ТК,"ТаблицаАгентов");
		ТККлиенты.Группировать("Клиент : *Клиент; Агент : *Агент; КредДокумент : *КредДокумент","НашДолг,ДолгКлиента,ПросроченныйДолг,ПросроченныйДолг1_2,ПросроченныйДолг3_5,ПросроченныйДолг6_10,ПросроченныйДолг11_20,ПросроченныйДолг21_30,ПросроченныйДолг31_90,ПросроченныйДолг90_,ОплатаПлан,ОплатаПлан1,ОплатаПлан2,ОплатаПлан3");
		глРасшифровка.ДобавитьЗначение(ТККлиенты,"ТаблицаКлиентов");
	    Возврат;
	КонецЕсли;
	// Подготовка к заполнению выходных форм данными запроса
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("ЗадолженностьКлиентов");
	// Заполнение полей "Заголовок"
	Таб.ВывестиСекцию("Отчет");
	Состояние("Заполнение выходной таблицы...");
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);   
	Таб.ПараметрыСтраницы(2,100,,,,,,,,1);

	пер=СоздатьОбъект("Периодический");
	ТК.Сортировать("Агент");
	ТК.ВыбратьСтроки();
	Пока ТК.ПолучитьСтроку() = 1 Цикл    

		ПечАгент 		= ТК.Агент.Наименование;
		ПечНашДолг 		= ТК.НашДолг;
		ПечДолгКлиента 	= ТК.ДолгКлиента;
		
		Если итАгентыДолг.НайтиСтроку("иАгент",ТК.Агент,,1)>0 Тогда
			ПечОбшийДолгПоАгенту=итАгентыДолг.ДолгКон;
		Иначе
			ПечОбшийДолгПоАгенту=0;
		КонецЕсли;
		
		
        Таб.ВывестиСекцию("Агент");
		
		ТККлиенты=ТК.тзПотомки;
		ТККлиенты.Сортировать("Клиент");
		ТККлиенты.ВыбратьСтроки();
		Пока ТККлиенты.ПолучитьСтроку()=1 Цикл
			Если итКлиентыДолг.НайтиСтроку("иКлиент",ТККлиенты.КлиентГл,,1)=0 Тогда
				ПечКлиентОбщийДолг=0;
			Иначе
				ПечКлиентОбщийДолг=итКлиентыДолг.ДолгКон;
			КонецЕсли;
			
			//Выводи последние 5 комментариев от агента по клиенту
			ПечКомментарийДляКредитаАгенту="";
			
			ТекКомментарий=ТККлиенты.Клиент.КомментарийДляКредитаАгенту.Получить(ВыбКонПериода);
			
			Если (ПустоеЗначение(ТекКомментарий)=0) И ((ТККлиенты.ПросроченныйДолг>0) ИЛИ (ТККлиенты.НашДолг<>0)) Тогда
				//заполняем комментарии только если последний не пустой
				пер.ИспользоватьОбъект("КомментарийДляКредитаАгенту",ТККлиенты.Клиент);
				пер.ОбратныйПорядок(1);
				пер.ВыбратьЗначения(ВыбКонПериода-180,ВыбКонПериода);
				Сч=0;
				
				Пока пер.ПолучитьЗначение()=1 Цикл
					Сч=Сч+1;
					Если ПустоеЗначение(ПечКомментарийДляКредитаАгенту)=0 Тогда
						ПечКомментарийДляКредитаАгенту=ПечКомментарийДляКредитаАгенту+РазделительСтрок;
					КонецЕсли;
					ПечКомментарийДляКредитаАгенту=ПечКомментарийДляКредитаАгенту+Строка(пер.ДатаЗнач)+" "+СокрЛП(пер.Значение);
					Если Сч=5 Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		    Таб.ВывестиСекцию("Клиент");
		КонецЦикла;		
		    
	КонецЦикла;      
    
	// Заполнение полей "Итого"
	Таб.ВывестиСекцию("Итоги");
	// Вывод заполненной формы
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Задолженность по клиентам", "");
	семЗаписатьЛогКон( начЛог );	
	
	Если Вопрос("Выводить накладные?","Да+Нет")="Да" Тогда
		ЗадолженностьПоНакладным();	
	КонецЕсли;
	
КонецПроцедуры

Процедура семПриВходеАгента(Сброс=0)
	
	Если ПустоеЗначение( Пользователь ) = 1 Тогда Возврат; КонецЕсли;
	Если ПустоеЗначение( Пользователь.АгентФильтр ) = 1 Тогда 
		Если Сброс=1 Тогда
			ВыбАгент="";
		КонецЕсли;
		Возврат; 
	КонецЕсли;
	выбАгент = Пользователь.АгентФильтр;
//	Форма.выбАгент.Доступность( 0 );
	//Форма.кнОчВыбАгент.Доступность( 0 );
КонецПроцедуры

Процедура ПриОткрытии()
	семПриВходеАгента();
	Авто=0;
	
	СпрКК = СоздатьОбъект("Справочник.КатегорииКредитовКлиентов");
	СпрКК.НайтиПоКоду(1);
	Если СпрКК.Выбран()=1 Тогда
		ВыбКатегория = СпрКК.ТекущийЭлемент();
		флВыбКатИсключить = 1;
	КонецЕсли;
	
	Если СокрЛП(Форма.Параметр)<>"" Тогда
		Если ТипЗначенияСтр(Форма.Параметр)="СписокЗначений" Тогда
			ВыбНачПериода=Форма.Параметр.Получить("ДатаОтчета")-1;
			ВыбКонПериода=ВыбНачПериода;
			ВыбАгент=Форма.Параметр.Получить("Агент");
			ВыбКлиент=Форма.Параметр.Получить("Клиент");
			Авто=1;
			ЗадолженностьКлиентов();
			СтатусВозврата(0);
		КонецЕсли;         
	КонецЕсли;
	семПриВыбореКлиента(выбКлиент);
КонецПроцедуры
                                     
              
//**********************************
Процедура ОбработкаЯчейкиТаблицы( пЗнач, пФлаг, пТаб, пАдрес )
	Если ТипЗначенияСтр(пЗнач)="СписокЗначений" Тогда
		Клиент_=пЗнач.Получить("Клиент");		

		АгентКлиента=0;
		Если Пользователь.АгентФильтр.Выбран()=0 Тогда
		ИначеЕсли Пользователь.АгентФильтр.ЭтоГруппа() = 1 Тогда
			Если Клиент_.Агент.ПринадлежитГруппе(Пользователь.АгентФильтр) = 1 Тогда
				АгентКлиента=1;
			КонецЕсли;		
		ИначеЕсли Клиент_.Агент=Пользователь.АгентФильтр Тогда
			АгентКлиента=1;
		КонецЕсли;

		Если (Пользователь.ТекущийЭлемент().РазрРедКредитДатаОплатыДолга=1) ИЛИ (АгентКлиента=1) Тогда
			ЕстьДоступКДатеОплаты=1;
		Иначе
			ЕстьДоступКДатеОплаты=0;
		КонецЕсли;                  
		
		Если ЕстьДоступКДатеОплаты=1 Тогда
			Поле=пЗнач.Получить("Поле");
			СпрК=СоздатьОбъект("Справочник.Контрагенты");
			СпрК.НайтиЭлемент(Клиент_);
			Если Поле="ДатаОплаты" Тогда
				ТекЗнач=Клиент_.ДатаОплатыДолга.Получить(ВыбКонПериода);
				Если ВвестиДату(ТекЗнач,"Введите дату оплаты долга")=1 Тогда
					СпрК.ДатаОплатыДолга.Установить(РабочаяДата(),ТекЗнач);
					ЗаписьЖурналаРегистрации("Контрагенты ДатаОплатыДолга","Справочники","Значение реквизита справочника записано",Клиент_,2);
					пТаб.Область(пАдрес).Текст=ТекЗнач;
				КонецЕсли;                      
			ИначеЕсли Поле="Комментарий" Тогда                              
				ТекЗнач=Клиент_.КомментарийДляКредитаАгенту.Получить(ВыбКонПериода);
				Если ВвестиСтроку(ТекЗнач,"Введите комментарий",200)=1 Тогда
					СпрК.КомментарийДляКредитаАгенту.Установить(РабочаяДата(),ТекЗнач);
					ЗаписьЖурналаРегистрации("Контрагенты КомментарийДляКредитаАгенту","Справочники","Значение реквизита справочника записано",Клиент_,2);
					пТаб.Область(пАдрес).Текст=ТекЗнач;
				КонецЕсли;                      
				
			КонецЕсли;
//			Сообщить("Клиент: "+Клиент_);
//			Сообщить("Поле: "+Поле);
			
		КонецЕсли;
	Иначе
		Если ТипЗначенияСтр(пЗнач)="Справочник" Тогда
			Если пЗнач.Вид()="Контрагенты" Тогда
				Меню=СоздатьОбъект("СписокЗначений");
				Меню.ДобавитьЗначение(1,"Открыть карточку клиента");
				Меню.ДобавитьЗначение(2,"Открыть историю Комментарий для кредита агента");
				Меню.ДобавитьЗначение(3,"Открыть историю Комментарий для кредита");
				выб=1;
				Если Меню.ВыбратьЗначение(выб,,,,1)=1 Тогда
					Если выб=1 Тогда
						ОткрытьФорму(пЗнач);
					ИначеЕсли (выб=2) ИЛИ (выб=3) Тогда
						ДатаНач=НачМесяца(РабочаяДата());
						ДатаКон=РабочаяДата();
						Если ВвестиПериод(ДатаНач,ДатаКон,"Введите период")=1 Тогда
						Иначе
							Возврат;
						КонецЕсли;

						Пер=СоздатьОбъект("Периодический");
						Пер.ИспользоватьОбъект(?(выб=2,"КомментарийДляКредитаАгенту","КомментарийДляКредита"),пЗнач);
						Пер.ВыбратьЗначения(ДатаНач,ДатаКон);
						тПер=СоздатьОбъект("ТаблицаЗначений");
						тПер.НоваяКолонка("Дата","Дата");
						тПер.НоваяКолонка("Комментарий","Строка",200);
						тПер.НоваяКолонка("Кол","Число",3);
						Пока Пер.ПолучитьЗначение() = 1 Цикл
							тПер.НоваяСтрока();
							тПер.Дата = Пер.ДатаЗнач;
							тПер.Комментарий = Пер.Значение;
							тПер.Кол = 1;
						КонецЦикла;
						
						СписокПоказателей=СоздатьОбъект( "СписокЗначений" );
			    		СписокПоказателей.ДобавитьЗначение("Кол");
						//
						глПечатьТЗ(Контекст, тПер, СписокПоказателей);			
						
					КонецЕсли;
				КонецЕсли;
			Иначе
				ОткрытьФорму(пЗнач);

			КонецЕсли;
		Иначе
			ОткрытьФорму(пЗнач);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры  

Функция Расшифровать(пЗнач, Поле)
	глРасшифровка=СоздатьОбъект("СписокЗначений");
	глРасшифровка.ДобавитьЗначение(пЗнач,"Клиент");
	глРасшифровка.ДобавитьЗначение(Поле,"Поле");   
	Возврат глРасшифровка;
КонецФункции

Процедура ПриНачалеВыбораЗначения(Элем,ФлагСт)
	
	Если Элем="ВыбАгент" Тогда
		Если ПустоеЗначение(Пользователь.АгентФильтр)=1 Тогда
		ИначеЕсли Пользователь.АгентФильтр.Выбран()=1 Тогда
			ФлагСт=0;
			
			ПромАгент = глВыборАгента(Пользователь.АгентФильтр);
			Если ПустоеЗначение(ПромАгент)=0 Тогда
				ВыбАгент = ПромАгент;
			КонецЕсли;
			//Спр=СоздатьОбъект("Справочник.Сотрудники");
			//Спр.ИспользоватьРодителя(Пользователь.АгентФильтр,0);
			//Если Спр.Выбрать("Выберите агента","ФормаСписка")=1 Тогда
			//	ВыбАгент=Спр.ТекущийЭлемент();
			//КонецЕсли;
		Иначе
			ФлагСт=0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

ВыбНачПериода=НачМесяца(ПолучитьДатуТА());
ВыбКонПериода=ПолучитьДатуТА();

//Если Пользователь.Агент=1 Тогда
 //   ВыбАгент=Пользователь;
//КонецЕсли;

ТК_=СоздатьОбъект("ТаблицаЗначений");
