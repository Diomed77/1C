Перем ЧислоРабочихДнейВНеделе,Список,таблГр;
Перем выбФирма, выбСклад;

//======================================================================
Функция НайтиГруппуСпр(п_Номер)
	л_СпрГруппа=СоздатьОбъект("Справочник.МестаХранения");
	л_СпрГруппа.НайтиПоКоду(п_Номер);
	
	Возврат л_СпрГруппа;
КонецФункции // НайтиГруппуСпр

//******************************************************************************
// функция ищет в списке значений элемент справочника с учетом групп
// 1 - есть элемент, 0 - нет
Функция НайтиВСписке(сп,Эл)
	Если сп.РазмерСписка()=0 Тогда Возврат 0; КонецЕсли;    
	Для н=1 По сп.РазмерСписка() Цикл
		Зн = сп.ПолучитьЗначение(н);
		Если Зн.ЭтоГруппа()=1 Тогда
			Если Эл.ПринадлежитГруппе(Зн)=1 Тогда Возврат 1; КонецЕсли;          
		Иначе
			Если Зн = Эл Тогда Возврат 1; КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат 0;
КонецФункции
// Добавляет элемент справочника в список значений
// сп - список значений, Тип - тип справочника, Режим - 1 - одиночный выбор, 2 - множественный
Процедура ДобавитьВСписок(сп,Тип,Режим) Экспорт
	спр = СоздатьОбъект(Тип);
	Если сп.РазмерСписка() > 0 Тогда
		спр.НайтиЭлемент(сп.ПолучитьЗначение(сп.ТекущаяСтрока()));
	КонецЕсли;
	Результат = 1;
	Пока Результат = 1 Цикл 
		спр.ВыборГруппы(1);
		выб = спр.Выбрать("Выбор","ДляВыбора");
		Результат = ?(Режим = 1,0,Мин(Выб,Результат));
		Если Выб = 0 Тогда Продолжить; КонецЕсли;
		Если НайтиВСписке(сп,спр.ТекущийЭлемент())=1 Тогда
			Предупреждение("Этот элемент в списке уже есть!!!");
			Продолжить;
		КонецЕсли;
		сп.ДобавитьЗначение(спр.ТекущийЭлемент());
		сп.ТекущаяСтрока(сп.РазмерСписка());
	КонецЦикла;
КонецПроцедуры
// Удоляет элементы из список значений
// сп - список значений, Режим - 1 - удаляет выбранное значение, 2 - удоляет всё
Процедура УдалитьИзСписка(сп,Режим) Экспорт
	Если сп.РазмерСписка()=0 Тогда Возврат; КонецЕсли;
	Если Режим = 1 Тогда 
		н = сп.ТекущаяСтрока(); 
		сп.УдалитьЗначение(сп.ТекущаяСтрока());
		Если н > 1 Тогда
			сп.ТекущаяСтрока(н-1);
		Иначе
			Если сп.РазмерСписка()>0 Тогда
				сп.ТекущаяСтрока(1);
			КонецЕсли;
		КонецЕсли;
	Иначе
		сп.УдалитьВсе();
	КонецЕсли;		
КонецПроцедуры 

//******************************************************************************
// ПроверитьКорректностьДат()
// Параметры: Нет
// Возвращаемое значение: Нет
// Вызывается из формул элементов диалога: поля с датами отчета
// Описание: проверяет даты на корректность (превышение ТА, дата конца закупок должна 
//	быть не меньше даты конца анализа продаж)
Процедура ПроверитьКорректностьДат()           
	Если ДатаКонца>ПолучитьДатуТА() Тогда
//		Предупреждение("Нельзя устанавливать дату анализа продаж больше Точки Актуальности!", 60);
//		ДатаКонца = ПолучитьДатуТА();
		ДатаНачала = Мин(ДатаНачала,ДатаКонца);
	КонецЕсли;                                 
	Если ДатаНачала>ДатаКонца Тогда
		Предупреждение("Нельзя устанавливать дату начала анализа продаж больше даты конца!", 60);
		ДатаНачала = ДатаКонца;
	КонецЕсли;	
	Если ДатаНачалаЗак > ДатаКонцаЗак Тогда
		Предупреждение("Нельзя устанавливать дату начала периода закупки больше даты конца!", 60);
		ДатаНачалаЗак = ДатаКонцаЗак;
	КонецЕсли;	
	Если ПустоеЗначение(ДатаНачалаЗак) = 1 Тогда
		ДатаНачалаЗак = ?(ПустоеЗначение(ДатаКонца)=0,ДатаКонца+1,ПолучитьДатуТА()+1);
	КонецЕсли;		
	Если ПустоеЗначение(ДатаКонцаЗак) > 0 Тогда
		ДатаКонцаЗак = ДатаНачалаЗак;
	КонецЕсли;	
	
	Если флЗаказПоставщику=1 Тогда
		ДатаНачалаЗак=РабочаяДата()+1;
	КонецЕсли;
КонецПроцедуры // ПроверитьКорректностьДат()

//******************************************************************************
// ЯвляетсяРабочимДнем(Д)
// Параметры: Д - дата
// Возвращаемое значение: 1, если Д является рабочим днем 0, иначе
// Описание:
//  Проверяет, является ли дата рабочим днем в соответсвии с настройкой рабочей недели
Функция ЯвляетсяРабочимДнем(Д)
	Если НомерДняНедели(Д)>ЧислоРабочихДнейВНеделе Тогда
		Возврат 0;
	Иначе
		Возврат 1;
	КонецЕсли;	
КонецФункции	// ЯвляетсяРабочимДнем()

//******************************************************************************
// ЧислоРабочихДнейМежду(Д1,Д2)
// Параметры: Д1 и Д2 - даты
// Возвращаемое значение: Число рабочих дней между Д1 и Д2 включительно
// Описание:
//  Расчет количества рабочих дней между датами в соответствии с установленной
//  длиной рабочей недели.
//  
Функция ЧислоРабочихДнейМежду(Д1,Д2)
	Перем ОбщееЧислоДней, ЧислоПолныхНедель, ЧислоДнейВНеполнойНеделе;     
	Перем ЧислоРабочихДней;
	// если дата конца меньше даты начала, то число дней = 0
	Если Д1>Д2 Тогда
		Возврат 0;
	КонецЕсли;
	ОбщееЧислоДней = (Д2-Д1)+1;                                      
	ЧислоДнейВНеполнойНеделе = ОбщееЧислоДней % 7;
	ЧислоПолныхНедель = Окр((ОбщееЧислоДней - ЧислоДнейВНеполнойНеделе)/7);
	ЧислоРабочихДней = ЧислоРабочихДнейВНеделе*ЧислоПолныхНедель;
	Для Индекс = 0 По (ЧислоДнейВНеполнойНеделе-1) Цикл
		ЧислоРабочихДней = ЧислоРабочихДней + ЯвляетсяРабочимДнем(Д2-Индекс);
	КонецЦикла;	
	Возврат ЧислоРабочихДней;           
КонецФункции	// ЧислоРабочихДнейМежду()        

Процедура ПечатьУсловий( таб )
	Если спТоваров.РазмерСписка() > 0 Тогда пУсловие = "По товарам: ";
		Для н = 1 по спТоваров.РазмерСписка() Цикл
			зн = спТоваров.ПолучитьЗначение( н );
			пУсловие = пУсловие + ?( зн.ЭтоГруппа() = 1, "Гр.", "" ) + Шаблон("([зн.Код]) [зн]");
		КонецЦикла;
		таб.ВывестиСекцию( "Условие" );
	КонецЕсли;
	Если спПоставщиков.РазмерСписка() > 0 Тогда пУсловие = "По поставщикам: ";
		Для н = 1 по спПоставщиков.РазмерСписка() Цикл
			зн = спПоставщиков.ПолучитьЗначение( н );
			пУсловие = пУсловие + ?( зн.ЭтоГруппа() = 1, "Гр.", "" ) + Шаблон("([зн.Код]) [зн]");
		КонецЦикла;
		таб.ВывестиСекцию( "Условие" );
	КонецЕсли;
	Если спСкладов.РазмерСписка() > 0 Тогда пУсловие = "По складам: ";
		Для н = 1 по спСкладов.РазмерСписка() Цикл
			зн = спСкладов.ПолучитьЗначение( н );
			пУсловие = пУсловие + ?( зн.ЭтоГруппа() = 1, "Гр.", "" ) + Шаблон("([зн.Код]) [зн]");
		КонецЦикла;
		таб.ВывестиСекцию( "Условие" );
	КонецЕсли;
	Если спСкладовИскл.РазмерСписка() > 0 Тогда 
		//PR 11.09.14 - отключен вывод складов исключения из-за очень большого списка
		//пУсловие = "Исключены склады: ";
		//Для н = 1 по спСкладовИскл.РазмерСписка() Цикл
		//	зн = спСкладовИскл.ПолучитьЗначение( н );
		//	пУсловие = пУсловие + ?( зн.ЭтоГруппа() = 1, "Гр.", "" ) + Шаблон("([зн.Код]) [зн]");
		//КонецЦикла;
		//таб.ВывестиСекцию( "Условие" );
	КонецЕсли;
	Если выбАналитика.Выбран() = 1 Тогда
		пУсловие = "По упр. аналитике "+ Шаблон( "[выбАналитика].");
		таб.ВывестиСекцию( "Условие" );
	КонецЕсли;
	Если выбЗакупщик.Выбран() = 1 Тогда
		пУсловие = "По закупщику " + Шаблон( "[выбЗакупщик].");
		таб.ВывестиСекцию( "Условие" );
	КонецЕсли;
КонецПроцедуры

Процедура Сформировать()
	Если ( спТоваров.РазмерСписка() = 0 ) и ( спПоставщиков.РазмерСписка() = 0 ) и (ВыбСпецКод.Выбран()=0) И (флЗаказПоставщику=0) Тогда
		Сообщить("Выберите фильтр по товару, поставщику, спец-коду или создание заказов","!");
		Возврат;
	КонецЕсли;

	Если (флЗаказПоставщику=1) и (ПустоеЗначение(выбАналитика)=1) Тогда
		Предупреждение("Автоматическое формирование заказов поставщику может быть 
		|				осуществлено только при выбранной аналитике!");
		Возврат;
	КонецЕсли;

	глУдалениеВременнойТаблицыSQL("#СкладыАналитики");
	ТекстЗапроса="SELECT МестаХранения.ID ID
	|			  INTO #СкладыАналитики
	|			  FROM $Справочник.МестаХранения AS МестаХранения (NOLOCK)
	|			  WHERE ($МестаХранения.УпрАналитика = :ВыбАналитика)
	|";
	
	ODBCRecordSet = СоздатьОбъект( "ODBCRecordSet" );
	ODBCRecordSet.УстановитьТекстовыйПараметр("ВыбАналитика",выбАналитика);
	ODBCRecordSet.ВыполнитьСкалярный(ТекстЗапроса);
	
	ЧислоРабочихДнейВНеделе = 4 + спКолРабДней.ТекущаяСтрока();

	ПроверитьКорректностьДат(); Форма.Обновить( 0 );
	
	Если (ПустоеЗначение(выбАссортимент)=1) И (флЗаказПоставщику=1) Тогда
		ВыбСпецКод = Перечисление.СпецкодыТоваров.S;
		чИсклСпецКод = 1;
	КонецЕсли;
	 
	сВидыТоваров=СоздатьОбъект("СписокЗначений");
	сВидыТоваров.ДобавитьЗначение(Перечисление.ВидыТоваров.Товар);
	сВидыТоваров.ДобавитьЗначение(Перечисление.ВидыТоваров.Блюдо);
	сВидыТоваров.ДобавитьЗначение(Перечисление.ВидыТоваров.Ингредиент);
	
	
	// создание таблицы товаров для дальнейшего отбора
	Если ( спБратьПост.ТекущаяСтрока() = 2 ) и (спПоставщиков.РазмерСписка() > 0) Тогда
		ТекстЗапроса="-- поиск товаров закупаемых по поставщику за последние 180 дней
		|SELECT DISTINCT 
		|	$Рег.Товар as ID
		|FROM
		|	$Регистр.ПартииТоваров as Рег (nolock)
		|INNER JOIN
		|	$Справочник.Номенклатура Спр ON $Рег.Товар = Спр.ID
		|LEFT JOIN $Справочник.Контрагенты СпрК (NOLOCK) ON СпрК.ID = $Спр.Поставщик
		|WHERE
		|	AND Рег.Date_Time_IDDoc BETWEEN :Нач AND :Кон~
		|	AND $Рег.КодОперации = :Закупка
		|	AND $Спр.ВидТовара IN (SELECT Val FROM #ВидыТоваров)
		|	AND $Рег.Контрагент IN (SELECT Val FROM #Поставщик)
		|	AND NOT($Спр.ПоАлфавиту LIKE :СимвАрх)
		|";
		ODBCRecordSet.УложитьСписокОбъектов(спПоставщиков, "#Поставщик", "Контрагенты");
		Если (выбЗакупщик.Выбран() = 1) И (флТолькоПоставщикиЗакупщика=0) Тогда 
			ТекстЗапроса=ТекстЗапроса+"
			|	AND $Спр.Закупщик IN (SELECT Val FROM #Закупщик)";
			ODBCRecordSet.УложитьСписокОбъектов(выбЗакупщик, "#Закупщик", "Сотрудники");
		ИначеЕсли (выбЗакупщик.Выбран() = 1) И (флТолькоПоставщикиЗакупщика=1) Тогда 
			ТекстЗапроса=ТекстЗапроса+"
			|	AND $СпрК.Закупщик IN (SELECT Val FROM #Закупщик)";
			ODBCRecordSet.УложитьСписокОбъектов(выбЗакупщик, "#Закупщик", "Сотрудники");
		ИначеЕсли (флТолькоПоставщикиЗакупщика=1) Тогда 
			ТекстЗапроса=ТекстЗапроса+"
			|	AND $СпрК.Закупщик = :ВыбЗакупщик";
			ODBCRecordSet.УстановитьТекстовыйПараметр("ВыбЗакупщик",Пользователь.Сотрудник);
		КонецЕсли;
		
		Если спТоваров.РазмерСписка() > 0 Тогда ТекстЗапроса=ТекстЗапроса+"
			|	AND Спр.ID IN (SELECT Val FROM #Товар)";
			ODBCRecordSet.УложитьСписокОбъектов(спТоваров, "#Товар", "Номенклатура");
		КонецЕсли;
		
		Если выбАссортимент.Выбран() = 1 Тогда ТекстЗапроса=ТекстЗапроса+"
			|	AND $Спр.Ассортимент "+?(чИсклАссортимент=1,"<>","=")+" :Ассортимент";
			ODBCRecordSet.УстановитьТекстовыйПараметр("Ассортимент", выбАссортимент);
		КонецЕсли;
		
		Если ВыбСпецКод.Выбран() = 1 Тогда ТекстЗапроса=ТекстЗапроса+"
			|	AND $Спр.ПризнакСпецКода "+?(чИсклСпецКод=1,"<>","=")+" :ВыбСпецКод";
			ODBCRecordSet.УстановитьТекстовыйПараметр("ВыбСпецКод", ВыбСпецКод);
		КонецЕсли;

		Если выбВидТовара.Выбран() = 1 Тогда ТекстЗапроса=ТекстЗапроса+"
			|	AND $Спр.ВидТовара = :ВидТовара";
			ODBCRecordSet.УстановитьТекстовыйПараметр("ВидТовара", выбВидТовара);
		КонецЕсли;
		
		
		Если флЗаказПоставщику=1 Тогда
			ТекстЗапроса=ТекстЗапроса+" AND $СпрК.АвтоЗаказПоставщику=1";
		КонецЕсли;
		
		
		
		//Если спПоставщиков.РазмерСписка() > 0 Тогда ТекстЗапроса=ТекстЗапроса+"
		//КонецЕсли;
		ODBCRecordSet.УстановитьТекстовыйПараметр("Нач", ДатаНачала-180);
		ODBCRecordSet.УстановитьТекстовыйПараметр("Кон", ДатаНачала);
//		ODBCRecordSet.УстановитьТекстовыйПараметр("ВидТовара", Перечисление.ВидыТоваров.Товар);
		ODBCRecordSet.УложитьСписокОбъектов(сВидыТоваров, "#ВидыТоваров");
		ODBCRecordSet.УстановитьТекстовыйПараметр("Закупка", "З");
		ODBCRecordSet.УстановитьТекстовыйПараметр("СимвАрх",Константа.СимволАрхивТоваров+"%");
	Иначе 
		ТекстЗапроса="-- поиск товаров в справочнике
		|SELECT  
		|	Спр.ID as ID
		|FROM
		|	$Справочник.Номенклатура as Спр (nolock)
		|LEFT JOIN $Справочник.Контрагенты СпрК (NOLOCK) ON СпрК.ID = $Спр.Поставщик
		|WHERE 
		|	$Спр.ВидТовара IN (SELECT Val FROM #ВидыТоваров)
		|	AND NOT($Спр.ПоАлфавиту LIKE :СимвАрх)";
		
		Если (выбЗакупщик.Выбран() = 1) И (флТолькоПоставщикиЗакупщика=0) Тогда 
			ТекстЗапроса=ТекстЗапроса+"
			|	AND $Спр.Закупщик IN (SELECT Val FROM #Закупщик)";
			ODBCRecordSet.УложитьСписокОбъектов(выбЗакупщик, "#Закупщик", "Сотрудники");
		ИначеЕсли (выбЗакупщик.Выбран() = 1) И (флТолькоПоставщикиЗакупщика=1) Тогда 
			ТекстЗапроса=ТекстЗапроса+"
			|	AND $СпрК.Закупщик IN (SELECT Val FROM #Закупщик)";
			ODBCRecordSet.УложитьСписокОбъектов(выбЗакупщик, "#Закупщик", "Сотрудники");
		ИначеЕсли (флТолькоПоставщикиЗакупщика=1) Тогда 
			ТекстЗапроса=ТекстЗапроса+"
			|	AND $СпрК.Закупщик = :ВыбЗакупщик";
			ODBCRecordSet.УстановитьТекстовыйПараметр("ВыбЗакупщик",Пользователь.Сотрудник);
		КонецЕсли;
		
		Если спТоваров.РазмерСписка() > 0 Тогда ТекстЗапроса=ТекстЗапроса+"
			|	AND Спр.ID IN (SELECT Val FROM #Товар)";
			ODBCRecordSet.УложитьСписокОбъектов(спТоваров, "#Товар", "Номенклатура");
		КонецЕсли; 
		Если спПоставщиков.РазмерСписка() > 0 Тогда ТекстЗапроса=ТекстЗапроса+"
			|	AND $Спр.Поставщик IN (SELECT Val FROM #Поставщик)";
			ODBCRecordSet.УложитьСписокОбъектов(спПоставщиков, "#Поставщик", "Контрагенты");
		КонецЕсли;
		
		Если выбАссортимент.Выбран() = 1 Тогда ТекстЗапроса=ТекстЗапроса+"
			|	AND $Спр.Ассортимент "+?(чИсклАссортимент=1,"<>","=")+" :Ассортимент";
			ODBCRecordSet.УстановитьТекстовыйПараметр("Ассортимент", выбАссортимент);
		КонецЕсли;                             

		Если выбВидТовара.Выбран() = 1 Тогда ТекстЗапроса=ТекстЗапроса+"
			|	AND $Спр.ВидТовара = :ВидТовара";
			ODBCRecordSet.УстановитьТекстовыйПараметр("ВидТовара", выбВидТовара);
		КонецЕсли;
		
		Если ВыбСпецКод.Выбран() = 1 Тогда 
			ТекстЗапроса=ТекстЗапроса+" AND $Спр.ПризнакСпецКода "+?(чИсклСпецКод=1,"<>","=")+" :ВыбСпецКод";
			ODBCRecordSet.УстановитьТекстовыйПараметр("ВыбСпецКод", ВыбСпецКод);
		КонецЕсли;
		
		Если флЗаказПоставщику=1 Тогда
			ТекстЗапроса=ТекстЗапроса+" AND $СпрК.АвтоЗаказПоставщику=1";
		КонецЕсли;
		
		ODBCRecordSet.УстановитьТекстовыйПараметр("СимвАрх",Константа.СимволАрхивТоваров+"%");
		ODBCRecordSet.УложитьСписокОбъектов(сВидыТоваров, "#ВидыТоваров");
//		ODBCRecordSet.УстановитьТекстовыйПараметр("ВидТовара", Перечисление.ВидыТоваров.Товар);
	//	ODBCRecordSet.УстановитьТекстовыйПараметр("Ассортимент", выбАссортимент);
	КонецЕсли;
	
	//ODBCRecordSet.Отладка(1);
	табл = ODBCRecordSet.ВыполнитьИнструкцию(ТекстЗапроса);

	ТекстЗапроса="-- удаление временной таблицы
	|IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE 
	|ID=OBJECT_ID('tempdb..#TempTab') AND sysstat & 0xf = 3 )
	|DROP TABLE #TempTab;";
	ODBCRecordSet.ВыполнитьСкалярный(ТекстЗапроса);

	ТекстЗапроса="-- создание временной таблицы
	|CREATE TABLE #TempTab (ID CHAR(9));";
	ODBCRecordSet.ВыполнитьСкалярный(ТекстЗапроса);

	ТекстЗапроса="INSERT INTO #TempTab VALUES (?)";
	ODBCRecordSet.Подготовить(ТекстЗапроса);
	ODBCRecordSet.ВыполнитьSQL_ИзТЗ(табл);

	ТекстЗапроса="-- запрос движения товаров
	|SELECT
	|	$Спр.Поставщик as [Поставщик $Справочник.Контрагенты],
	|	Товар as [Товар $Справочник.Номенклатура],
	//|	$Спр.БазоваяЕдиницаИзмерения as [Единица $Перечисление.ЕдиницыИзмерения],
	|	$Спр.ЗакупКол as ЗакупКол,
	|	$Спр.ЛогистикаКолВУпаковке as ЛогистикаКолВУпаковке,
	|	Продажа as Продажа,
	|	Возврат as Возврат,
	|      Списание as Списание,
	|      Производство as Производство,
	|      Перемещение as Перемещение,
	|      Остаток as Остаток,
	|      Резерв as Резерв,
	|      Заказ as Заказ,
	|      МинЗапас as МинЗапас
	|FROM (
	|SELECT
	|	Товар as Товар,
	|	SUM( Продажа ) as Продажа,
	|	SUM( Возврат ) as Возврат,
	|      SUM( Списание ) as Списание,
	|      SUM( Производство ) as Производство,
	|      SUM( Перемещение ) as Перемещение,
	|      SUM( Остаток ) as Остаток,
	|      SUM( Резерв) as Резерв,
	|      SUM( Заказ ) as Заказ,
	|      SUM( МинЗапас ) as МинЗапас
	|FROM (
	|
	|-- запрос по товарам
	|SELECT
	|	Товары.ID as Товар,
	|	0 as Продажа,
	|	0 as Возврат,
	|	0 as Списание,
	|	0 as Производство,
	|	0 as Перемещение,
	|	0 as Остаток,
	|	0 as Резерв,
	|	0 as Заказ,
	|	0 as МинЗапас
	|FROM
	|	#TempTab as Товары
	|UNION ALL
	|
	|-- запрос по продажам
	|SELECT
	|	$РегПродажи.Товар as Товар,
	|	CASE WHEN $РегПродажи.Количество > 0 THEN $РегПродажи.Количество ELSE 0 END as Продажа,
	|	CASE WHEN $РегПродажи.Количество < 0 THEN $РегПродажи.Количество*(-1) ELSE 0 END as Возврат,
	|	0 as Списание,
	|	0 as Производство,
	|	0 as Перемещение,
	|	0 as Остаток,
	|	0 as Резерв,
	|	0 as Заказ,
	|	0 as МинЗапас
	|FROM
	|	$Регистр.ОборотыТоваров as РегПродажи (nolock)
	|WHERE
	|	РегПродажи.Date_Time_IDDoc BETWEEN :Нач AND :Кон~
	|	AND $РегПродажи.Товар IN (SELECT ID FROM #TempTab)
	|	AND $РегПродажи.ВидОперации = :ВидОперации
	|	AND $РегПродажи.ФлагУчета = 0";
	
	Если спСкладов.РазмерСписка() > 0 Тогда 
		ТекстЗапроса=ТекстЗапроса+"	AND $РегПродажи.Склад IN (SELECT Val FROM #Склады)";
	ИначеЕсли выбАналитика.Выбран()=1 Тогда
		ТекстЗапроса=ТекстЗапроса+"	AND $РегПродажи.Склад IN (SELECT ID FROM #СкладыАналитики)";
	КонецЕсли; 
	
	Если спСкладовИскл.РазмерСписка() > 0 Тогда ТекстЗапроса=ТекстЗапроса+"
		|	AND $РегПродажи.Склад NOT IN (SELECT Val FROM #СкладыИскл)";
	КонецЕсли; ТекстЗапроса=ТекстЗапроса+"
	|UNION ALL
	|
	|-- запрос по списаниям по 1-й категории
	|SELECT
	|	$РегСписания.Товар as Товар,
	|	0 as Продажа,
	|	0 as Возврат,
	|	$РегСписания.Количество as Списание,
	|	0 as Производство,
	|	0 as Перемещение,
	|	0 as Остаток,
	|	0 as Резерв,
	|	0 as Заказ,
	|	0 as МинЗапас
	|FROM
	|	$Регистр.ОборотыТоваров as РегСписания (nolock)
	|INNER JOIN
	|	$Документ.Списание Док ON РегСписания.IDDOC = Док.IDDOC
	|WHERE
	|	РегСписания.Date_Time_IDDoc BETWEEN :Нач AND :Кон~
	|	AND $РегСписания.Товар IN (SELECT ID FROM #TempTab)
	|	AND $Док.КатегорияСписания = :КатегорияСписания
	|	AND $РегСписания.ВидОперации = :ВидОперации
	|	AND $РегСписания.ФлагУчета = 4";
	
	Если спСкладов.РазмерСписка() > 0 Тогда 
		ТекстЗапроса=ТекстЗапроса+"	AND $РегСписания.Склад IN (SELECT Val FROM #Склады)";
	ИначеЕсли выбАналитика.Выбран()=1 Тогда
		ТекстЗапроса=ТекстЗапроса+"	AND $РегСписания.Склад IN (SELECT ID FROM #СкладыАналитики)";
	КонецЕсли; 
	
	Если спСкладовИскл.РазмерСписка() > 0 Тогда ТекстЗапроса=ТекстЗапроса+"
		|	AND $РегСписания.Склад NOT IN (SELECT Val FROM #СкладыИскл)";
	КонецЕсли; ТекстЗапроса=ТекстЗапроса+"
	|UNION ALL
	|
	|-- запрос по производству
	|SELECT
	|	$РегПроизводство.Товар as Товар,
	|	0 as Продажа,
	|	0 as Возврат,
	|	0 as Списание,
	|	$РегПроизводство.ОстатокТовара as Производство,
	|	0 as Перемещение,
	|	0 as Остаток,
	|	0 as Резерв,
	|	0 as Заказ,
	|	0 as МинЗапас
	|FROM
	|	$Регистр.ПартииТоваров as РегПроизводство (nolock)
	|WHERE
	|	РегПроизводство.Date_Time_IDDoc BETWEEN :Нач AND :Кон~
	|	AND $РегПроизводство.Товар IN (SELECT ID FROM #TempTab)
	|	AND РегПроизводство.DEBKRED = 1
	|	AND $РегПроизводство.КодОперации = :Производство
	|	AND $РегПроизводство.ФлагУчета <> 66";
	
	Если спСкладов.РазмерСписка() > 0 Тогда 
		ТекстЗапроса=ТекстЗапроса+"	AND $РегПроизводство.Склад IN (SELECT Val FROM #Склады)";
	ИначеЕсли выбАналитика.Выбран()=1 Тогда
		ТекстЗапроса=ТекстЗапроса+"	AND $РегПроизводство.Склад IN (SELECT ID FROM #СкладыАналитики)";
	КонецЕсли; 
	
	Если спСкладовИскл.РазмерСписка() > 0 Тогда ТекстЗапроса=ТекстЗапроса+"
		|	AND $РегПроизводство.Склад NOT IN (SELECT Val FROM #СкладыИскл)";
	КонецЕсли; 
	
	ТекстЗапроса=ТекстЗапроса+"
	|UNION ALL
	|
	|-- запрос по перемещениям (внешним)
	|SELECT
	|	$РегПеремешения.Товар as Товар,
	|	0 as Продажа,
	|	0 as Возврат,
	|	0 as Списание,
	|	0 as Производство,
	|	$РегПеремешения.ОстатокТовара as Перемещение,
	|	0 as Остаток,
	|	0 as Резерв,
	|	0 as Заказ,
	|	0 as МинЗапас
	|FROM
	|	$Регистр.ПартииТоваров as РегПеремешения (nolock)
	|WHERE
	|	РегПеремешения.Date_Time_IDDoc BETWEEN :Нач AND :Кон~
	|	AND $РегПеремешения.Товар IN (SELECT ID FROM #TempTab)
	|	AND РегПеремешения.DEBKRED = 1
	//|	AND $РегПроизводство.КодОперации = :Перемещение
	|	AND $РегПеремешения.ФлагУчета = 7
	|	AND IDDOCDEF = $ВидДокумента.ПеремещениеНаСкладГотовойПродукции";
	
	Если спСкладов.РазмерСписка() > 0 Тогда 
		ТекстЗапроса=ТекстЗапроса+"	AND $РегПеремешения.Склад IN (SELECT Val FROM #Склады)";
	ИначеЕсли выбАналитика.Выбран()=1 Тогда
		ТекстЗапроса=ТекстЗапроса+"	AND $РегПеремешения.Склад IN (SELECT ID FROM #СкладыАналитики)";
	КонецЕсли; 
	
	Если спСкладовИскл.РазмерСписка() > 0 Тогда ТекстЗапроса=ТекстЗапроса+"
		|	AND $РегПеремешения.Склад NOT IN (SELECT Val FROM #СкладыИскл)";
	КонецЕсли; 

	
	Если ПустоеЗначение(выбАналитика)=0 Тогда
		
		ТекстЗапроса=ТекстЗапроса+"
		|UNION ALL
		|
		|-- запрос по перемещениям (внутренним между складами разной аналитики)
		|SELECT
		|	$РегПеремешения.Товар as Товар,
		|	0 as Продажа,
		|	0 as Возврат,
		|	0 as Списание,
		|	0 as Производство,
		|	$РегПеремешения.ОстатокТовара as Перемещение,
		|	0 as Остаток,
		|	0 as Резерв,
		|	0 as Заказ,
		|	0 as МинЗапас
		|FROM
		|	$Регистр.ПартииТоваров as РегПеремешения (nolock)
		|LEFT JOIN $Документ.Перемещение ДокП (NOLOCK) ON ДокП.IDDOC=РегПеремешения.IDDOC AND РегПеремешения.IDDOCDEF = $ВидДокумента.Перемещение
		|LEFT JOIN $Документ.ПеремещениеНаСкладГотовойПродукции ДокПГП (NOLOCK) ON ДокПГП.IDDOC=РегПеремешения.IDDOC AND РегПеремешения.IDDOCDEF = $ВидДокумента.ПеремещениеНаСкладГотовойПродукции
		|WHERE
		|	РегПеремешения.Date_Time_IDDoc BETWEEN :Нач AND :Кон~
		|	AND $РегПеремешения.Товар IN (SELECT ID FROM #TempTab)
		|	AND РегПеремешения.DEBKRED = 1
		//|	AND $РегПроизводство.КодОперации = :Перемещение
		|	AND $РегПеремешения.ФлагУчета = 3
		|	AND РегПеремешения.IDDOCDEF IN ($ВидДокумента.Перемещение, $ВидДокумента.ПеремещениеНаСкладГотовойПродукции)
		|	AND $РегПеремешения.Склад IN (SELECT ID FROM #СкладыАналитики)
		|	AND COALESCE($ДокП.СкладПолучатель,$ДокПГП.СкладКонечный) NOT IN (SELECT ID FROM #СкладыАналитики)
		|";
		
		Если спСкладовИскл.РазмерСписка() > 0 Тогда ТекстЗапроса=ТекстЗапроса+"
			|	AND $РегПеремешения.Склад NOT IN (SELECT Val FROM #СкладыИскл)";
		КонецЕсли; 
	КонецЕсли;
	
	
	//добавляем также возвраты с отв. хранения
	Если флВозвратыОтвХранения=1 Тогда
		

		ТекстЗапроса=ТекстЗапроса+"
		|UNION ALL
		|
		|-- запрос по возвратам со склада отв. хранения
		|SELECT
		|	$РегВозвратыСХранения.Товар as Товар,
		|	$РегВозвратыСХранения.ОстатокТовара as Продажа,
		|	0 as Возврат,
		|	0 as Списание,
		|	0 as Производство,
		|	0 as Перемещение,
		|	0 as Остаток,
		|	0 as Резерв,
		|	0 as Заказ,
		|	0 as МинЗапас
		|FROM
		|	$Регистр.ПартииТоваров as РегВозвратыСХранения (nolock)
		|WHERE
		|	РегВозвратыСХранения.Date_Time_IDDoc BETWEEN :Нач AND :Кон~
		|	AND $РегВозвратыСХранения.Товар IN (SELECT ID FROM #TempTab)
		|	AND РегВозвратыСХранения.DEBKRED = 1
		|	AND $РегВозвратыСХранения.КодОперации = :ВозвратСХранения
		|	AND $РегВозвратыСХранения.ФлагУчета = 1";
		
		Если спСкладов.РазмерСписка() > 0 Тогда 
			ТекстЗапроса=ТекстЗапроса+"	AND $РегВозвратыСХранения.Склад IN (SELECT Val FROM #Склады)";
		ИначеЕсли выбАналитика.Выбран()=1 Тогда
			ТекстЗапроса=ТекстЗапроса+"	AND $РегВозвратыСХранения.Склад IN (SELECT ID FROM #СкладыАналитики)";
		КонецЕсли; 
		
		Если спСкладовИскл.РазмерСписка() > 0 Тогда ТекстЗапроса=ТекстЗапроса+"
			|	AND $РегВозвратыСХранения.Склад NOT IN (SELECT Val FROM #СкладыИскл)";
		КонецЕсли; ТекстЗапроса=ТекстЗапроса+"

		
	КонецЕсли;	
	
	ТекстЗапроса=ТекстЗапроса+"
	|UNION ALL
	|
	|-- запрос по остаткам
	|SELECT
	|	РегОстатки.Товар as Товар,
	|	0 as Продажа,
	|	0 as Возврат,
	|	0 as Списание,
	|	0 as Производство,
	|	0 as Перемещение,
	|	РегОстатки.ОстатокТовараОстаток as Остаток,
	|	0 as Резерв,
	|	0 as Заказ,
	|	0 as МинЗапас
	|FROM
	|	$РегистрОстатки.ПартииТоваров(,,
	|	Товар IN (SELECT ID FROM #TempTab) AND Статус <> :Статус AND Склад <> $ПустойИД";
	
	Если спСкладов.РазмерСписка() > 0 Тогда 
		ТекстЗапроса=ТекстЗапроса+"	AND Склад IN (SELECT Val FROM #Склады)";
	ИначеЕсли выбАналитика.Выбран()=1 Тогда
		ТекстЗапроса=ТекстЗапроса+"	AND Склад IN (SELECT ID FROM #СкладыАналитики)";
	КонецЕсли; 
	
	Если спСкладовИскл.РазмерСписка() > 0 Тогда ТекстЗапроса=ТекстЗапроса+"
		|	AND Склад NOT IN (SELECT Val FROM #СкладыИскл)";
	КонецЕсли; ТекстЗапроса=ТекстЗапроса+"
	|	,(Товар), (ОстатокТовара)) as РегОстатки 
	|UNION ALL
	|
	|-- запрос по резервам
	|SELECT
	|	РегРезервы.Товар as Товар,
	|	0 as Продажа,
	|	0 as Возврат,
	|	0 as Списание,
	|	0 as Производство,
	|	0 as Перемещение,
	|	0 as Остаток,
	|	РегРезервы.РезервТовараОстаток as Резерв,
	|	0 as Заказ,
	|	0 as МинЗапас
	|FROM
	|	$РегистрОстатки.РезервыТоваров(,INNER JOIN $Документ.Счет ДокС(NOLOCK) ON ДокС.IDDOC=ПоСчету,
	|	Товар IN (SELECT ID FROM #TempTab)";

	Если спСкладов.РазмерСписка() > 0 Тогда 
		ТекстЗапроса=ТекстЗапроса+"	AND $ДокС.Склад IN (SELECT Val FROM #Склады)";
	ИначеЕсли выбАналитика.Выбран()=1 Тогда
		ТекстЗапроса=ТекстЗапроса+"	AND $ДокС.Склад IN (SELECT ID FROM #СкладыАналитики)";
	КонецЕсли; 
	
	Если спСкладовИскл.РазмерСписка() > 0 Тогда ТекстЗапроса=ТекстЗапроса+"
		|	AND $ДокС.Склад NOT IN (SELECT Val FROM #СкладыИскл)";
	КонецЕсли; 
	ТекстЗапроса=ТекстЗапроса+"
	|	AND $ДокС.ДатаПоставки <= :НачЗак
	|	,(Товар), (РезервТовара)) as РегРезервы
	|UNION ALL
	|
	|-- запрос по заказам
	|SELECT
	|	РегЗаказы.Товар as Товар,
	|	0 as Продажа,
	|	0 as Возврат,
	|	0 as Списание,
	|	0 as Производство,
	|	0 as Перемещение,
	|	0 as Остаток,
	|	0 as Резерв,
	|	РегЗаказы.КоличествоОстаток as Заказ,
	|	0 as МинЗапас
	|FROM
	|	$РегистрОстатки.ТоварыВПути(,INNER JOIN $Документ.ЗаказПоставщику ДокЗ (NOLOCK) ON ДокЗ.IDDOC = RIGHT(ПоЗаказу,9)
	|									   INNER JOIN $Справочник.МестаХранения СпрМХ (NOLOCK) ON СпрМХ.ID = $ДокЗ.Склад,
	|	Товар IN (SELECT ID FROM #TempTab)";

	Если спСкладов.РазмерСписка() > 0 Тогда 
		ТекстЗапроса=ТекстЗапроса+"	AND СпрМХ.ID IN (SELECT Val FROM #Склады)";
	ИначеЕсли выбАналитика.Выбран()=1 Тогда
		ТекстЗапроса=ТекстЗапроса+"	AND СпрМХ.ID IN (SELECT ID FROM #СкладыАналитики)";
	КонецЕсли; 
	
	Если спСкладовИскл.РазмерСписка() > 0 Тогда ТекстЗапроса=ТекстЗапроса+"
		|	AND СпрМХ.ID NOT IN (SELECT Val FROM #СкладыИскл)";
	КонецЕсли; 

	Если флЗаказПоставщику=0 Тогда
		Если флТолькоОжПоставкиНаНачалоЗакупки=1 Тогда
			ТекстЗапроса=ТекстЗапроса+"	AND СрокПоставки < :НачЗак";
		КонецЕсли;
	КонецЕсли;
	
	ТекстЗапроса=ТекстЗапроса+"
	|	,(Товар), (Количество)) as РегЗаказы 
	|UNION ALL
	|
	|-- запрос по мин. запасам
	|SELECT
	|	СпрЗапасы.PARENTEXT as Товар,
	|	0 as Продажа,
	|	0 as Возврат,
	|	0 as Списание,
	|	0 as Производство,
	|	0 as Перемещение,
	|	0 as Остаток,
	|	0 as Резерв,
	|	0 as Заказ,
	|	$СпрЗапасы.МинЗапас as МинЗапас
	|FROM
	|	$Справочник.Запасы as СпрЗапасы (NOLOCK)
	|INNER JOIN $Справочник.УпрАналитика СпрАналитика (NOLOCK) ON $СпрЗапасы.УпрАналитика = СпрАналитика.ID AND $СпрАналитика.НеУчитыватьМинЗапас = 0
	|WHERE
	|	PARENTEXT IN (SELECT ID FROM #TempTab)";
	Если выбАналитика.Выбран() = 1 Тогда ТекстЗапроса=ТекстЗапроса+"
		|	AND $СпрЗапасы.УпрАналитика IN (SELECT Val FROM #УпрАналитика)";
		ODBCRecordSet.УложитьСписокОбъектов(выбАналитика, "#УпрАналитика", "УпрАналитика");
	КонецЕсли; 
	ТекстЗапроса=ТекстЗапроса+"
	|) as Регистры
	|GROUP BY
	|	Регистры.Товар WITH ROLLUP
	|) as Итоги
	|LEFT OUTER JOIN
	|	$Справочник.Номенклатура as Спр ON Спр.ID = Товар";
	ODBCRecordSet.УстановитьТекстовыйПараметр("Нач", ДатаНачала);
	ODBCRecordSet.УстановитьТекстовыйПараметр("Кон", ДатаКонца);
	ODBCRecordSet.УстановитьТекстовыйПараметр("НачЗак", ДатаНачалаЗак);
	ODBCRecordSet.УстановитьТекстовыйПараметр("ДатаТА", ПолучитьДатуТА()-1);
	ODBCRecordSet.УстановитьТекстовыйПараметр("ВидОперации", "-");
	ODBCRecordSet.УстановитьТекстовыйПараметр("КатегорияСписания", Перечисление.КатегорииСписания.Категория1);
	ODBCRecordSet.УстановитьТекстовыйПараметр("Производство", "z");
	ODBCRecordSet.УстановитьТекстовыйПараметр("Закупка", "З");
	ODBCRecordSet.УстановитьТекстовыйПараметр("ВозвратСХранения", ВозвратТовараСХранения);
	ODBCRecordSet.УстановитьТекстовыйПараметр("Статус", Отданный);
	
	Если спСкладов.РазмерСписка() > 0 Тогда
		ODBCRecordSet.УложитьСписокОбъектов(спСкладов, "#Склады", "МестаХранения");
	КонецЕсли; 
	
	Если спСкладовИскл.РазмерСписка() > 0 Тогда
		ODBCRecordSet.УложитьСписокОбъектов(спСкладовИскл, "#СкладыИскл", "МестаХранения");
	КонецЕсли;

//	ODBCRecordSet.Отладка(1);
	//нач = ТекущееВремя();
	табл = ODBCRecordSet.ВыполнитьИнструкцию(ТекстЗапроса);
	//Сообщить( "Получено строк: "+табл.КоличествоСтрок() );
	//Сообщить( "Время выполнения запроса: "+ семПрошлоВремени(нач,ТекущееВремя()) );
        
	//{ запрос для получения сроков годности по складу по товару		
	ТекстЗапроса = "SELECT ПартииТоваровОстатки.Склад [Склад $Справочник.МестаХранения]
	|					, NullIf(ПартииТоваровОстатки.СрокРеализации, '17530101') СрокРеализации
	|					, ПартииТоваровОстатки.ПрихДокумент [ПрихДокумент $Документ]
	|					, Жур.IDDOCDEF [ПрихДокумент_вид $ВидДокумента]
	|					, ПартииТоваровОстатки.ОстатокТовараОстаток Ост
	|				FROM $РегистрОстатки.ПартииТоваров(,,
	|													(Фирма = :Фирма)
	|													AND Товар IN (SELECT ID FROM #TempTab)
	|													AND (Статус <> :Статус) 
//	|				WHERE ПартииТоваровОстатки.ОстатокТовараОстаток>0 -- не выводим отрицательные остатки 
	|";
	
	
	Если спСкладов.РазмерСписка() > 0 Тогда 
		ТекстЗапроса=ТекстЗапроса+"	AND Склад IN (SELECT Val FROM #Склады)";
	ИначеЕсли выбАналитика.Выбран()=1 Тогда
		ТекстЗапроса=ТекстЗапроса+"	AND Склад IN (SELECT ID FROM #СкладыАналитики)";
	КонецЕсли; 
	
	Если спСкладовИскл.РазмерСписка() > 0 Тогда ТекстЗапроса=ТекстЗапроса+"
		|	AND Склад NOT IN (SELECT Val FROM #СкладыИскл)";
	КонецЕсли;	

	ТекстЗапроса=ТекстЗапроса+"	,(Склад, ПрихДокумент, СрокРеализации),
	|													ОстатокТовара) AS ПартииТоваровОстатки
	|				INNER JOIN _1sjourn Жур (NOLOCK) ON Жур.IDDOC = RIGHT(ПартииТоваровОстатки.ПрихДокумент,9)
	|";
	
	//}

		
	//сп = СоздатьОбъект( "СписокЗначений" );
	//сп.Установить("Данные",табл);
	//Имя = "ПечатьТаблицыЗначений.ert"; Путь = "";
	//РасположениеФайла(Путь);
	//ОткрытьФорму("Отчет",сп,Путь+Имя);

	ТекстЗапроса = "
	|-- запрос по дням продажи
	|SELECT
	|	Рег.Товар as [Товар $Справочник.Номенклатура],
	|	Рег.Период as Период,
	|	Рег.ОстатокТовараНачальныйОстаток as НачОст,
	|	Рег.ОстатокТовараПриход as Прих,
	|	Рег.ОстатокТовараРасход as Расх,
	|	Рег.ОстатокТовараКонечныйОстаток as КонОст
	|FROM
	|      $РегистрОстаткиОбороты.ПартииТоваров(:Нач, :Кон~, День,
	|	ДвиженияИГраницыПериода,
	|	,Товар IN (SELECT ID FROM #TempTab) AND Статус <> :Статус AND Склад <> $ПустойИД";
	
	Если спСкладов.РазмерСписка() > 0 Тогда 
		ТекстЗапроса=ТекстЗапроса+"	AND Склад IN (SELECT Val FROM #Склады)";
	ИначеЕсли выбАналитика.Выбран()=1 Тогда
		ТекстЗапроса=ТекстЗапроса+"	AND Склад IN (SELECT ID FROM #СкладыАналитики)";
	КонецЕсли; 
	
	Если спСкладовИскл.РазмерСписка() > 0 Тогда ТекстЗапроса=ТекстЗапроса+"
		|	AND Склад NOT IN (SELECT Val FROM #СкладыИскл)";
	КонецЕсли; ТекстЗапроса=ТекстЗапроса+"
	|	,(Товар),(ОстатокТовара)) as Рег (nolock)
	|ORDER BY
	|	1, 2";
	ODBCRecordSet.УстановитьТекстовыйПараметр("Нач", ДатаНачала);
	ODBCRecordSet.УстановитьТекстовыйПараметр("Кон", ДатаКонца);
	ODBCRecordSet.УстановитьТекстовыйПараметр("Статус", Отданный);
	Если спСкладов.РазмерСписка() > 0 Тогда
		ODBCRecordSet.УложитьСписокОбъектов(спСкладов, "#Склады", "МестаХранения");
	КонецЕсли; 
	Если спСкладовИскл.РазмерСписка() > 0 Тогда
		ODBCRecordSet.УложитьСписокОбъектов(спСкладовИскл, "#СкладыИскл", "МестаХранения");
	КонецЕсли;
	//ODBCRecordSet.Отладка(1);
	//нач = ТекущееВремя();
	таблДнейПродажи = ODBCRecordSet.ВыполнитьИнструкцию(ТекстЗапроса);
	//Сообщить( "Получено строк: "+таблДнейПродажи.КоличествоСтрок() );
	//Сообщить( "Время выполнения запроса: "+ семПрошлоВремени(нач,ТекущееВремя()) );
	
	//сп = СоздатьОбъект( "СписокЗначений" );
	//сп.Установить("Данные",таблДнейПродажи);
	//Имя = "ПечатьТаблицыЗначений.ert"; Путь = "";
	//РасположениеФайла(Путь);
	//ОткрытьФорму("Отчет",сп,Путь+Имя);
	//
	//Возврат;
	
	ТекстЗапросаЗаказыПоставщиков="-- выбираем последние даты заказов поставщикам для авто поставщиков
	|							   SELECT Контрагенты.ID [Поставщик $Справочник.Контрагенты]
	|									  , COALESCE((SELECT TOP 1 $НачалоПериода.День(ЗаказыПоставщикам.DATE_TIME_IDDOC,Строка) 
	|									     FROM $Регистр.ЗаказыПоставщикам AS ЗаказыПоставщикам (NOLOCK)
	|										 INNER JOIN $Справочник.Номенклатура Спр (NOLOCK) ON Спр.ID=$ЗаказыПоставщикам.Товар
	|									     WHERE (ЗаказыПоставщикам.DEBKRED = 0) AND $ЗаказыПоставщикам.Клиент = Контрагенты.ID 
	|"+?(выбАссортимент.Выбран() = 1,"AND $Спр.Ассортимент "+?(чИсклАссортимент=1,"<>","=")+" :Ассортимент","")+"
	|									     ORDER BY DATE_TIME_IDDOC DESC
	|										 ),'17530101') ДатаЗаказа
	|							   FROM $Справочник.Контрагенты AS Контрагенты (NOLOCK)
	|							   WHERE ($Контрагенты.АвтоЗаказПоставщику = 1) 
	|";

	Запрос=СоздатьОбъект("ODBCRecordSet");
	
	Если выбАссортимент.Выбран() = 1 Тогда 
		Запрос.УстановитьТекстовыйПараметр("Ассортимент", выбАссортимент);
	КонецЕсли;                             

	итЗаказыПоставщикам=СоздатьОбъект("ИндексированнаяТаблица");
	Запрос.ВыполнитьИнструкцию(ТекстЗапросаЗаказыПоставщиков,итЗаказыПоставщикам);
	итЗаказыПоставщикам.ДобавитьИндекс("иПоставщик","*Поставщик");
	
	таблГр = СоздатьОбъект( "ТаблицаГруппировок" );
	табл.Выгрузить(таблГр.ПолучитьБазовыйКласс());
	таблГр.НоваяКолонка("КолвоДней","Число");
	таблГр.НоваяКолонка("Скорость","Число");
	таблГр.НоваяКолонка("ОжОстаток","Число");
	таблГр.НоваяКолонка("ОбеспДней","Число");
	таблГр.НоваяКолонка("ПланПродаж","Число");           
	таблГр.НоваяКолонка("НеобхЗак","Число");
	таблГр.НоваяКолонка("ВозмЗак","Число");
	таблГр.НоваяКолонка("КолУп","Число");
	таблГр.НоваяКолонка("Удалить","Число");
	
	таблГр.ВыбратьСтроки();
	Пока таблГр.ПолучитьСтроку() = 1 Цикл
		
		пПродажа = таблГр.Продажа;
		пВозврат = таблГр.Возврат;
		пСписание = таблГр.Списание;
		пПроизв = таблГр.Производство;
		пПерем = таблГр.Перемещение;
		
		промДата = ДатаНачала;
		промОстаток = 0;
		НомСтр = 0;
		пКолвоЗаписей = 0;
		Если таблДнейПродажи.НайтиЗначение(таблГр.Товар,НомСтр,"Товар") = 1 Тогда
			пКолвоДней = 0;
			таблДнейПродажи.ТекущаяСтрока(НомСтр);
			Пока таблДнейПродажи.ПолучитьЗначение(НомСтр,"Товар") = таблГр.Товар Цикл
				пКолвоЗаписей = пКолвоЗаписей + 1;
				промТовар = таблДнейПродажи.ПолучитьЗначение(НомСтр,"Товар");
				промПериод = таблДнейПродажи.ПолучитьЗначение(НомСтр,"Период");
				промНачОст = таблДнейПродажи.ПолучитьЗначение(НомСтр,"НачОст");
				промКонОст = таблДнейПродажи.ПолучитьЗначение(НомСтр,"КонОст");
				Если промНачОст > 0 Тогда
					пКолвоДней = пКолвоДней + ЧислоРабочихДнейМежду( промДата, промПериод );
				Иначе
					Если промКонОст > 0 Тогда
						пКолвоДней = пКолвоДней + ЧислоРабочихДнейМежду( промДата, промДата );
					КонецЕсли;
				КонецЕсли;
				промДата = промПериод+1;
				НомСтр = НомСтр + 1;
				Если НомСтр > таблДнейПродажи.КоличествоСтрок() Тогда Прервать; КонецЕсли;
			КонецЦикла;
			Если пКолвоЗаписей = 1 Тогда
				Если промКонОст > 0 Тогда
					пКолвоДней = ЧислоРабочихДнейМежду( ДатаНачала, ДатаКонца );
				КонецЕсли;
			КонецЕсли;
		Иначе
			пКолвоДней = 0;
		КонецЕсли;
		таблГр.КолвоДней = пКолвоДней;
		
		пТекОстаток = таблГр.Остаток;//?( ЗапросОстатки.Получить( Товар ) = 1, ЗапросОстатки.КонОст, 0 );
		
		пСкорость = ?( пКолвоДней = 0, 0, ( пПродажа + пСписание + пПроизв + пПерем ) / пКолвоДней );
		таблГр.Скорость = пСкорость;
		пОжОстаток = Макс( пТекОстаток - пСкорость * ЧислоРабочихДнейМежду( ПолучитьДатуТА(), ДатаНачалаЗак-1 ) + таблГр.Заказ , 0 );
		таблГр.ОжОстаток = пОжОстаток;
		
		пМинЗапас = таблГр.МинЗапас;//?( ЗапросМинЗапасы.Получить( Товар ) = 1, ЗапросМинЗапасы.фМинЗапас, 0 );
		
		пОбеспДней = ?( пСкорость = 0, 0, пОжОстаток / пСкорость );
		таблГр.ОбеспДней = пОбеспДней;

		Если (флЗаказПоставщику=1) и (ПустоеЗначение(таблГр.Поставщик)=0) Тогда
			// если стоит признак автом. закупки - тогда рассчитываем период закупки для каждого поставщика отдельно
			Если итЗаказыПоставщикам.НайтиСтроку("иПоставщик",таблГр.Поставщик,,1)>0 Тогда
				ДатаНачалаЗак=итЗаказыПоставщикам.ДатаЗаказа+таблГр.Поставщик.АвтоЗаказПериодичность+1;
				//проверяем на тот случай, если периодичность пропущена и дата начала закупки оказывается до текущей даты
				Если ДатаНачалаЗак<РабочаяДата() Тогда 
					ДатаНачалаЗак=РабочаяДата()+1;
				КонецЕсли;
			Иначе
				Сообщить("Для поставщика <"+таблГр.Поставщик+"> не найден последний документ <Заказ поставщику>!","!!");
			КонецЕсли;
			
			ДатаКонцаЗак=ДатаНачалаЗак+таблГр.Поставщик.АвтоЗаказПериодичность-1;
		КонецЕсли;		
		
		пПланПродаж = Макс( пСкорость * ЧислоРабочихДнейМежду( ДатаНачалаЗак, ДатаКонцаЗак ), 0 );
		таблГр.ПланПродаж = пПланПродаж;
		
		пНеобхЗак = Мин( пОжОстаток - пПланПродаж - пМинЗапас, 0 ) * (-1);
		таблГр.НеобхЗак = пНеобхЗак;
		
		Если ( пНеобхЗак = 0 ) и ( флТолькоНеобх = 1 ) Тогда  
			таблГр.Удалить = 1;
		Иначе
			таблГр.Удалить = 0;
		КонецЕсли;
		
		МинЗакКол = таблГр.ЗакупКол;
		
		Если МинЗакКол = 0 Тогда
			пВозмЗак = пНеобхЗак;
		Иначе
			пВозмЗак = Окр( пНеобхЗак / МинЗакКол, 0, 1 ) * МинЗакКол;
			пВозмЗак = пВозмЗак + ?(пВозмЗак<пНеобхЗак,МинЗакКол,0);
		КонецЕсли;
		таблГр.ВозмЗак = пВозмЗак;
		
		КолВУп = таблГр.ЛогистикаКолВУпаковке;
		КолУп = ?( КолВУп = 0, 0, пВозмЗак / КолВУп );
		таблГр.КолУп = КолУп;
		
		//удалим итог полученный в результате SQL запроса
		Если ПустоеЗначение( таблГр.Товар ) = 1 Тогда
			таблГр.Удалить = 1;
		КонецЕсли;
	КонецЦикла;

	таблГр.Сортировать("-Удалить");
	таблГр.ВыбратьСтроки();
	таблГр.ПолучитьСтроку();
	Пока таблГр.Удалить=1 Цикл
		таблГр.УдалитьСтроку();
	КонецЦикла;

	//сп = СоздатьОбъект( "СписокЗначений" );
	//сп.Установить("Данные",табл);
	//Имя = "ПечатьТаблицыЗначений.ert"; Путь = "";
	//РасположениеФайла(Путь);
	//ОткрытьФорму("Отчет",сп,Путь+Имя);

	таблГр.Сгруппировать("Поставщик,Товар",
					 "Продажа,Возврат,Списание,Производство,Перемещение,Остаток,Резерв,Заказ, МинЗапас,
					 |КолвоДней,Скорость,ОжОстаток,ОбеспДней,ПланПродаж,НеобхЗак,ВозмЗак,КолУп,ЗакупКол",
					 "Товар",
					 "Номенклатура");

	таб = СоздатьОбъект( "Таблица" );
	
	Если флРасшОтчет=1 Тогда
		таб.ИсходнаяТаблица( "ТаблицаРасш" );
	Иначе
		таб.ИсходнаяТаблица( "Таблица" );
	КонецЕсли;
	
	
	пПериод = Шаблон("За период с [ДатаНачала] по [ДатаКонца] "
	+ "([ЧислоРабочихДнейМежду(ДатаНачала,ДатаКонца)] раб. дн.). "
	+ "Закупка с [ДатаНачалаЗак] по [ДатаКонцаЗак] "
	+ "([ЧислоРабочихДнейМежду(ДатаНачалаЗак,ДатаКонцаЗак)] раб. дн.).");
	
	таб.ВывестиСекцию( "Заголовок" );
	ПечатьУсловий( таб );
	пШапкаСрок = ?(спВыводСрока.ТекущаяСтрока()=1,"Недель"+РазделительСтрок+"продажи","Дней"+РазделительСтрок+"продажи");
	пШапкаОбесп = ?(спВыводСрока.ТекущаяСтрока()=1,"Обесп."+РазделительСтрок+"ост. нед.","Обесп."+РазделительСтрок+"ост. дней");
	
	таб.ВывестиСекцию( "Шапка" );		
	таб.Опции( 0, 0, таб.ВысотаТаблицы(), 1 );
        таб.ПовторятьПриПечатиСтроки(1,таб.ВысотаТаблицы());
	таблГр.ВНачалоВыборки();
	Пока таблГр.Группировка("Поставщик")=1 Цикл
		//Если ПустоеЗначение(таблГр.ТекущееЗначение) = 1 Тогда
		//	Сообщить("ПустоеЗначение = "+ПустоеЗначение(таблГр.ТекущееЗначение));
		//	Продолжить;
		//КонецЕсли;
		
		
		Поставщик = таблГр.ТекущееЗначение;

		Если флЗаказПоставщику=1 Тогда
			// если стоит признак автом. закупки - тогда рассчитываем период закупки для каждого поставщика отдельно
			Если итЗаказыПоставщикам.НайтиСтроку("иПоставщик",таблГр.Поставщик,,1)>0 Тогда
				ДатаНачалаЗак=итЗаказыПоставщикам.ДатаЗаказа+таблГр.Поставщик.АвтоЗаказПериодичность+1;
				//проверяем на тот случай, если периодичность пропущена и дата начала закупки оказывается до текущей даты
				Если ДатаНачалаЗак<РабочаяДата() Тогда 
					ДатаНачалаЗак=РабочаяДата()+1;
				КонецЕсли;
			КонецЕсли;
			ДатаКонцаЗак=ДатаНачалаЗак+Поставщик.АвтоЗаказПериодичность-1;
			пДатаОжОстатка="на "+ДатаНачалаЗак;
		КонецЕсли;		
		
		пПоставщик = Шаблон( "[Поставщик.Код] [Поставщик] - [Поставщик.ВалютаКредитаПоставщика] " );
		пПериодЗакупки = Шаблон("Закупка с [ДатаНачалаЗак] по [ДатаКонцаЗак] "
								+ "([ЧислоРабочихДнейМежду(ДатаНачалаЗак,ДатаКонцаЗак)] раб. дн.).");
		таб.ВывестиСекцию( ?(таблГр.ВозмЗак = 0,"ПоставщикБезЗак","Поставщик" ) );		
		СтрокаПоставщика=Таб.ВысотаТаблицы();
		ИтогоСуммаЗак = 0;
		
		Пока таблГр.Группировка("Товар")=1 Цикл
			Если ПустоеЗначение(таблГр.ТекущееЗначение) = 1 Тогда
				Продолжить;
			КонецЕсли;
			Товар = таблГр.ТекущееЗначение;
			пТовар = Шаблон( "[Товар.Код] [Товар]" );
			пRetail=?(Товар.RETAIL=1,"R","");
			пКодПост = Товар.КодПоставщика;
			пЕдИзм = Товар.БазоваяЕдиницаИзмерения; 
			
			Если таблГр.ЭтоГруппа=1 Тогда
				пОтступ = СокрЛ( Лев( "- - - - - - - - - -", ( таблГр.Уровень - 1 ) * 2 ) );
				пТовар = пОтступ + Шаблон( "[Товар.Код] [Товар.НаименованиеLV]" );
				таб.ВывестиСекцию( "Группа" );		
				Продолжить;
			КонецЕсли;
			
			пПродажа = таблГр.Продажа;
			пВозврат = таблГр.Возврат;
			пСписание = таблГр.Списание;
			пПроизв = таблГр.Производство;
			пПерем = таблГр.Перемещение;
			//пКолвоДней = таблГр.КолвоДней;
			//пКолвоНедель = таблГр.КолвоДней / ЧислоРабочихДнейВНеделе;
			пСрок = ?(спВыводСрока.ТекущаяСтрока()=1,Окр(таблГр.КолвоДней / ЧислоРабочихДнейВНеделе,2,1),таблГр.КолвоДней);
			пТекОстаток = таблГр.Остаток;
			пТекРезерв = таблГр.Резерв;
			пТекВПути = таблГр.Заказ;
			пСкорость = таблГр.Скорость;
			пОжОстаток = таблГр.ОжОстаток;
			пМинЗапас = таблГр.МинЗапас;
			//пОбеспДней = таблГр.ОбеспДней;
			//пОбеспНедель = пОбеспДней / ЧислоРабочихДнейВНеделе;
			пОбесп = ?(спВыводСрока.ТекущаяСтрока()=1,Окр(таблГр.ОбеспДней / ЧислоРабочихДнейВНеделе,2,1),таблГр.ОбеспДней);
			пПланПродаж = таблГр.ПланПродаж;
			пНеобхЗак = таблГр.НеобхЗак;
			пМинЗакКол = таблГр.ЗакупКол;
			пВозмЗак = таблГр.ВозмЗак;
			пВозмСуммаЗак = пВозмЗак*Пересчет(Товар.ЦенаПриобретения,Товар.ВалютаЗакупки,РабочаяДата(),Поставщик.ВалютаКредитаПоставщика,РабочаяДата());
			ИтогоСуммаЗак = ИтогоСуммаЗак + пВозмСуммаЗак;
			пКолУп = таблГр.КолУп;

			печСроки="";
			Если флСрокиТоваров=1 Тогда
				
				Запрос.УстановитьТекстовыйПараметр("Фирма",Константа.ОсновнаяФирма);
				Запрос.УстановитьТекстовыйПараметр("Товар",Товар);
				Запрос.УстановитьТекстовыйПараметр("Статус",Отданный);
				итСроки = СоздатьОбъект("ИндексированнаяТаблица");
				Запрос.ВыполнитьИнструкцию(ТекстЗапроса,итСроки);
			
				итСроки.Свернуть("Склад,СрокРеализации","Ост");
				итСроки.Группировать("СрокРеализации:СрокРеализации;","Ост");

				//итСрокиРеализации = итСроки.тзПотомки;
				итСроки.ВыбратьСтроки();
				Пока итСроки.ПолучитьСтроку() = 1 Цикл
					Если итСроки.Ост<=0 Тогда
						Продолжить;
					КонецЕсли;
					Если ПустоеЗначение(печСроки)=0 Тогда
						печСроки=печСроки+РазделительСтрок;
					КонецЕсли;
					печСроки=печСроки+""+итСроки.СрокРеализации+" - "+итСроки.Ост;
				КонецЦикла;
				
			КонецЕсли;
			
			
			Если флРасшОтчет=1 Тогда
				
				пМинЗапасОпт=0;
				пМинЗапасMC=0;
				пМинЗапасBriv=0;
				пМинЗапасCC=0;
				
				//минзапасы
				Спр=СоздатьОбъект("Справочник.Запасы");
				Спр.ИспользоватьВладельца(Товар);
				Спр.ВыбратьЭлементы();
				Пока Спр.ПолучитьЭлемент()=1  Цикл
					Если Спр.ПометкаУдаления()=1 Тогда
						Продолжить;
					КонецЕсли;
					Если Спр.УпрАналитика.Код="00001" Тогда //Опт
						пМинЗапасОпт=Спр.МинЗапас;
					ИначеЕсли Спр.УпрАналитика.Код="00002" Тогда //МС
						пМинЗапасMC=Спр.МинЗапас;
					ИначеЕсли Спр.УпрАналитика.Код="00003" Тогда //Briv
						пМинЗапасBriv=Спр.МинЗапас;
					ИначеЕсли Спр.УпрАналитика.Код="00004" Тогда	//C&C						
						пМинЗапасCC=Спр.МинЗапас;
					КонецЕсли;
				КонецЦикла;

				л_УнакНаПалете=Товар.ЛогистикаКолУпакНаЕвроПалете * Товар.ЛогистикаКолУпакНаПалетеВРяду;
				Если л_УнакНаПалете=0 Тогда
					пПалет=0;
				Иначе
					пПалет = пКолУп/л_УнакНаПалете;
				КонецЕсли;
				
				Запрос=СоздатьОбъект("ODBCRecordSet");
				ИТ=СоздатьОбъект("ИндексированнаяТаблица");
				
				ТекстЗапроса = "				
				|	SELECT ОстаткиТоваровОстатки.Товар [Товар $Справочник.Номенклатура]
				|, ОстаткиТоваровОстатки.Склад [Склад $Справочник.МестаХранения]
				|	, ОстаткиТоваровОстатки.ОстатокТовараОстаток
				|FROM $РегистрОстатки.ОстаткиТоваров(,,
				|		(Товар = :пТовар),
				|		(Товар, Склад),) AS ОстаткиТоваровОстатки
				|";		
				
				Запрос.УстановитьТекстовыйПараметр("пТовар",Товар);
				Запрос.ВыполнитьИнструкцию(ТекстЗапроса,ИТ);
				
				
				пОстОпт=0;
				пОстMC=0;
				пОстBriv=0;
				пОстCC=0;
				
//				ИТ.Показать();
				ИТ.ВыбратьСтроки();
				Пока ИТ.ПолучитьСтроку() = 1 Цикл
				
					Спр=СоздатьОбъект("Справочник.МестаХранения");
					Спр.НайтиЭлемент(ИТ.Склад);
				
					л_СпрГруппа=СоздатьОбъект("Справочник.МестаХранения");
					
			
					Если (Спр.Код="35")или (Спр.Код="37")или (Спр.Код="369")или (Спр.Код="368")или (Спр.Код="373")или (Спр.Код="374")или (Спр.Код="377") Тогда //Опт
						пОстОпт=пОстОпт+ИТ.ОстатокТовараОстаток;
					ИначеЕсли Спр.ПринадлежитГруппе(НайтиГруппуСпр(93))=1 Тогда //МС
						Если Спр.Код<>"85" Тогда
							пОстMC=пОстMC+ИТ.ОстатокТовараОстаток;
						КонецЕсли;
					ИначеЕсли Спр.ПринадлежитГруппе(НайтиГруппуСпр(131))=1 Тогда //Briv
						Если Спр.Код<>"159" Тогда
							пОстBriv=пОстBriv+ИТ.ОстатокТовараОстаток;
						КонецЕсли;	
					ИначеЕсли Спр.Код="40" Тогда	//C&C						
						пОстCC=пОстCC+ИТ.ОстатокТовараОстаток;
					КонецЕсли;
				КонецЦикла;
				
				
				
			КонецЕсли;
			
			
			Таб.ВывестиСекцию("Товар");
		КонецЦикла; //по товарам
		
		пИтогоСуммаЗак=Шаблон("[ИтогоСуммаЗак #Ч015.2] [Поставщик.ВалютаКредитаПоставщика]");
		таб.Область(СтрокаПоставщика-1,21,СтрокаПоставщика-1,21).Текст=пИтогоСуммаЗак;
		
	КонецЦикла;
	таб.ТолькоПросмотр( 1 );
	таб.Показать( "Планирование закупок" );
	//сп = СоздатьОбъект( "СписокЗначений" );
	//сп.Установить("Данные",таблГр);
	//Имя = "ПечатьТаблицыЗначений.ert"; Путь = "";
	//РасположениеФайла(Путь);
	//ОткрытьФорму("Отчет",сп,Путь+Имя);
КонецПроцедуры


Процедура ОбновитьМинЗапас()
	
	//устанавливаем фикс период для анализа - расчет делаем каждую неделю за пред. месяц
	ДатаКонца=НачНедели(РабочаяДата())-1;
	ДатаНачала=НачНедели(РабочаяДата())-14;
	ДатаНачалаЗак=РабочаяДата()+1;
	ДатаКонцаЗак=РабочаяДата()+1;
	
	
	Запрос=СоздатьОбъект("ODBCRecordSet");
	ТекстЗапроса="-- получим аналитику для расчета 
	|			  SELECT DISTINCT $Запасы.УпрАналитика [УпрАналитика $Справочник.УпрАналитика]
	|			  FROM $Справочник.Запасы AS Запасы
	|			  WHERE ($Запасы.РасчетМинЗапаса = 1)
	|					AND (Запасы.ISMARK = 0)
	|";
	
	тАналитика=Запрос.ВыполнитьИнструкцию(ТекстЗапроса);
	
	Если (тАналитика.КоличествоСтрок()=0) Тогда
		Предупреждение("Отсутствую товары с автоматическим расчетом мин. полки!");
		Возврат;
	КонецЕсли;

	тАналитика.ВыбратьСтроки();
	Пока тАналитика.ПолучитьСтроку()=1 Цикл
		
		пАналитика=тАналитика.УпрАналитика;

		глУдалениеВременнойТаблицыSQL("#СкладыАналитики");
		ТекстЗапроса="SELECT МестаХранения.ID ID
		|			  INTO #СкладыАналитики
		|			  FROM $Справочник.МестаХранения AS МестаХранения (NOLOCK)
		|			  WHERE ($МестаХранения.УпрАналитика = :ВыбАналитика)
		|";
		
		ODBCRecordSet = СоздатьОбъект( "ODBCRecordSet" );
		ODBCRecordSet.УстановитьТекстовыйПараметр("ВыбАналитика",пАналитика);
		ODBCRecordSet.ВыполнитьСкалярный(ТекстЗапроса);
		
	
		ЧислоРабочихДнейВНеделе = 4 + спКолРабДней.ТекущаяСтрока();

		ПроверитьКорректностьДат(); Форма.Обновить( 0 );
	
		сВидыТоваров=СоздатьОбъект("СписокЗначений");
		сВидыТоваров.ДобавитьЗначение(Перечисление.ВидыТоваров.Товар);
		сВидыТоваров.ДобавитьЗначение(Перечисление.ВидыТоваров.Блюдо);
		сВидыТоваров.ДобавитьЗначение(Перечисление.ВидыТоваров.Ингредиент);
	
		ТекстЗапроса="-- отбираем только товары с автоматическим расчетом мин. полки и по аналитике
		|SELECT  
		|	Спр.ID as ID
		|FROM
		|	$Справочник.Номенклатура as Спр (nolock)
		|INNER JOIN $Справочник.Запасы СпрЗ (NOLOCK) ON СпрЗ.PARENTEXT = Спр.ID AND $СпрЗ.УпрАналитика=:ВыбАналитика AND $СпрЗ.РасчетМинЗапаса=1
		|INNER JOIN $Справочник.УпрАналитика СпрАналитика (NOLOCK) ON $СпрЗ.УпрАналитика = СпрАналитика.ID AND $СпрАналитика.НеУчитыватьМинЗапас = 0
		|INNER 
		|WHERE 
		|	$Спр.ВидТовара IN (SELECT Val FROM #ВидыТоваров)
		|	AND NOT($Спр.ПоАлфавиту LIKE :СимвАрх)
		|	AND Спр.ISMARK = 0
		|	AND СпрЗ.ISMARK = 0";
		
		ODBCRecordSet.УстановитьТекстовыйПараметр("ВыбАналитика",пАналитика);
		ODBCRecordSet.УложитьСписокОбъектов(сВидыТоваров, "#ВидыТоваров");
		ODBCRecordSet.УстановитьТекстовыйПараметр("СимвАрх",Константа.СимволАрхивТоваров+"%");
		//ODBCRecordSet.Отладка(1);
		
		табл = ODBCRecordSet.ВыполнитьИнструкцию(ТекстЗапроса);
	
		ТекстЗапроса="-- удаление временной таблицы
		|IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE 
		|ID=OBJECT_ID('tempdb..#TempTab') AND sysstat & 0xf = 3 )
		|DROP TABLE #TempTab;";
		ODBCRecordSet.ВыполнитьСкалярный(ТекстЗапроса);
	
		ТекстЗапроса="-- создание временной таблицы
		|CREATE TABLE #TempTab (ID CHAR(9));";
		ODBCRecordSet.ВыполнитьСкалярный(ТекстЗапроса);
	
		ТекстЗапроса="INSERT INTO #TempTab VALUES (?)";
		ODBCRecordSet.Подготовить(ТекстЗапроса);
		ODBCRecordSet.ВыполнитьSQL_ИзТЗ(табл);
	
		ТекстЗапроса="-- запрос движения товаров
		|SELECT
		|	$Спр.Поставщик as [Поставщик $Справочник.Контрагенты],
		|	Товар as [Товар $Справочник.Номенклатура],
		//|	$Спр.БазоваяЕдиницаИзмерения as [Единица $Перечисление.ЕдиницыИзмерения],
		|	$Спр.ЗакупКол as ЗакупКол,
		|	$Спр.ЛогистикаКолВУпаковке as ЛогистикаКолВУпаковке,
		|	Продажа as Продажа,
		|	Возврат as Возврат,
		|   Списание as Списание,
		|   Производство as Производство,
		|   Перемещение as Перемещение,
		|   Остаток as Остаток,
		|   Резерв as Резерв,
		|   Заказ as Заказ,
		|   МинЗапас as МинЗапас,
		|	ГлубинаМинЗапаса as ГлубинаМинЗапаса
		|FROM (
		|SELECT
		|	Товар as Товар,
		|	SUM( Продажа ) as Продажа,
		|	SUM( Возврат ) as Возврат,
		|      SUM( Списание ) as Списание,
		|      SUM( Производство ) as Производство,
		|      SUM( Перемещение ) as Перемещение,
		|      SUM( Остаток ) as Остаток,
		|      SUM( Резерв) as Резерв,
		|      SUM( Заказ ) as Заказ,
		|      SUM( МинЗапас ) as МинЗапас,
		|	   SUM( ГлубинаМинЗапаса ) as ГлубинаМинЗапаса
		|FROM (
		|
		|-- запрос по товарам
		|SELECT
		|	Товары.ID as Товар,
		|	0 as Продажа,
		|	0 as Возврат,
		|	0 as Списание,
		|	0 as Производство,
		|	0 as Перемещение,
		|	0 as Остаток,
		|	0 as Резерв,
		|	0 as Заказ,
		|	0 as МинЗапас,
		|   0 as ГлубинаМинЗапаса
		|FROM
		|	#TempTab as Товары
		|UNION ALL
		|
		|-- запрос по продажам
		|SELECT
		|	$РегПродажи.Товар as Товар,
		|	CASE WHEN $РегПродажи.Количество > 0 THEN $РегПродажи.Количество ELSE 0 END as Продажа,
		|	CASE WHEN $РегПродажи.Количество < 0 THEN $РегПродажи.Количество*(-1) ELSE 0 END as Возврат,
		|	0 as Списание,
		|	0 as Производство,
		|	0 as Перемещение,
		|	0 as Остаток,
		|	0 as Резерв,
		|	0 as Заказ,
		|	0 as МинЗапас,
		|   0 as ГлубинаМинЗапаса
		|FROM
		|	$Регистр.ОборотыТоваров as РегПродажи (nolock)
		|WHERE
		|	РегПродажи.Date_Time_IDDoc BETWEEN :Нач AND :Кон~
		|	AND $РегПродажи.Товар IN (SELECT ID FROM #TempTab)
		|	AND $РегПродажи.ВидОперации = :ВидОперации
		|	AND $РегПродажи.ФлагУчета = 0";
		
		ТекстЗапроса=ТекстЗапроса+"	AND $РегПродажи.Склад IN (SELECT ID FROM #СкладыАналитики)";
		
		Если спСкладовИскл.РазмерСписка() > 0 Тогда 
			ТекстЗапроса=ТекстЗапроса+"
			|	AND $РегПродажи.Склад NOT IN (SELECT Val FROM #СкладыИскл)";
		КонецЕсли; 
		
		ТекстЗапроса=ТекстЗапроса+"
		|UNION ALL
		|
		|-- запрос по списаниям по 1-й категории
		|SELECT
		|	$РегСписания.Товар as Товар,
		|	0 as Продажа,
		|	0 as Возврат,
		|	$РегСписания.Количество as Списание,
		|	0 as Производство,
		|	0 as Перемещение,
		|	0 as Остаток,
		|	0 as Резерв,
		|	0 as Заказ,
		|	0 as МинЗапас,
		|   0 as ГлубинаМинЗапаса
		|FROM
		|	$Регистр.ОборотыТоваров as РегСписания (nolock)
		|INNER JOIN
		|	$Документ.Списание Док ON РегСписания.IDDOC = Док.IDDOC
		|WHERE
		|	РегСписания.Date_Time_IDDoc BETWEEN :Нач AND :Кон~
		|	AND $РегСписания.Товар IN (SELECT ID FROM #TempTab)
		|	AND $Док.КатегорияСписания = :КатегорияСписания
		|	AND $РегСписания.ВидОперации = :ВидОперации
		|	AND $РегСписания.ФлагУчета = 4";
		
		ТекстЗапроса=ТекстЗапроса+"	AND $РегСписания.Склад IN (SELECT ID FROM #СкладыАналитики)";
		
		Если спСкладовИскл.РазмерСписка() > 0 Тогда ТекстЗапроса=ТекстЗапроса+"
			|	AND $РегСписания.Склад NOT IN (SELECT Val FROM #СкладыИскл)";
		КонецЕсли; 
		
		ТекстЗапроса=ТекстЗапроса+"
		|UNION ALL
		|
		|-- запрос по производству
		|SELECT
		|	$РегПроизводство.Товар as Товар,
		|	0 as Продажа,
		|	0 as Возврат,
		|	0 as Списание,
		|	$РегПроизводство.ОстатокТовара as Производство,
		|	0 as Перемещение,
		|	0 as Остаток,
		|	0 as Резерв,
		|	0 as Заказ,
		|	0 as МинЗапас,
		|   0 as ГлубинаМинЗапаса
		|FROM
		|	$Регистр.ПартииТоваров as РегПроизводство (nolock)
		|WHERE
		|	РегПроизводство.Date_Time_IDDoc BETWEEN :Нач AND :Кон~
		|	AND $РегПроизводство.Товар IN (SELECT ID FROM #TempTab)
		|	AND РегПроизводство.DEBKRED = 1
		|	AND $РегПроизводство.КодОперации = :Производство
		|	AND $РегПроизводство.ФлагУчета <> 66";
		
		ТекстЗапроса=ТекстЗапроса+"	AND $РегПроизводство.Склад IN (SELECT ID FROM #СкладыАналитики)";
	
		Если спСкладовИскл.РазмерСписка() > 0 Тогда ТекстЗапроса=ТекстЗапроса+"
			|	AND $РегПроизводство.Склад NOT IN (SELECT Val FROM #СкладыИскл)";
		КонецЕсли; 
		
		ТекстЗапроса=ТекстЗапроса+"
		|UNION ALL
		|
		|-- запрос по перемещениям (внешним)
		|SELECT
		|	$РегПеремешения.Товар as Товар,
		|	0 as Продажа,
		|	0 as Возврат,
		|	0 as Списание,
		|	0 as Производство,
		|	$РегПеремешения.ОстатокТовара as Перемещение,
		|	0 as Остаток,
		|	0 as Резерв,
		|	0 as Заказ,
		|	0 as МинЗапас,
		|   0 as ГлубинаМинЗапаса
		|FROM
		|	$Регистр.ПартииТоваров as РегПеремешения (nolock)
		|WHERE
		|	РегПеремешения.Date_Time_IDDoc BETWEEN :Нач AND :Кон~
		|	AND $РегПеремешения.Товар IN (SELECT ID FROM #TempTab)
		|	AND РегПеремешения.DEBKRED = 1
		//|	AND $РегПроизводство.КодОперации = :Перемещение
		|	AND $РегПеремешения.ФлагУчета = 7
		|	AND IDDOCDEF = $ВидДокумента.ПеремещениеНаСкладГотовойПродукции";
		
		ТекстЗапроса=ТекстЗапроса+"	AND $РегПеремешения.Склад IN (SELECT ID FROM #СкладыАналитики)";
		
		Если спСкладовИскл.РазмерСписка() > 0 Тогда ТекстЗапроса=ТекстЗапроса+"
			|	AND $РегПеремешения.Склад NOT IN (SELECT Val FROM #СкладыИскл)";
		КонецЕсли; 
	
		Если ПустоеЗначение(пАналитика)=0 Тогда
			
			ТекстЗапроса=ТекстЗапроса+"
			|UNION ALL
			|
			|-- запрос по перемещениям (внутренним между складами разной аналитики)
			|SELECT
			|	$РегПеремешения.Товар as Товар,
			|	0 as Продажа,
			|	0 as Возврат,
			|	0 as Списание,
			|	0 as Производство,
			|	$РегПеремешения.ОстатокТовара as Перемещение,
			|	0 as Остаток,
			|	0 as Резерв,
			|	0 as Заказ,
			|	0 as МинЗапас,
			|   0 as ГлубинаМинЗапаса
			|FROM
			|	$Регистр.ПартииТоваров as РегПеремешения (nolock)
			|LEFT JOIN $Документ.Перемещение ДокП (NOLOCK) ON ДокП.IDDOC=РегПеремешения.IDDOC AND РегПеремешения.IDDOCDEF = $ВидДокумента.Перемещение
			|LEFT JOIN $Документ.ПеремещениеНаСкладГотовойПродукции ДокПГП (NOLOCK) ON ДокПГП.IDDOC=РегПеремешения.IDDOC AND РегПеремешения.IDDOCDEF = $ВидДокумента.ПеремещениеНаСкладГотовойПродукции
			|WHERE
			|	РегПеремешения.Date_Time_IDDoc BETWEEN :Нач AND :Кон~
			|	AND $РегПеремешения.Товар IN (SELECT ID FROM #TempTab)
			|	AND РегПеремешения.DEBKRED = 1
			//|	AND $РегПроизводство.КодОперации = :Перемещение
			|	AND $РегПеремешения.ФлагУчета = 3
			|	AND РегПеремешения.IDDOCDEF IN ($ВидДокумента.Перемещение, $ВидДокумента.ПеремещениеНаСкладГотовойПродукции)
			|	AND $РегПеремешения.Склад IN (SELECT ID FROM #СкладыАналитики)
			|	AND COALESCE($ДокП.СкладПолучатель,$ДокПГП.СкладКонечный) NOT IN (SELECT ID FROM #СкладыАналитики)
			|";
			
			Если спСкладовИскл.РазмерСписка() > 0 Тогда ТекстЗапроса=ТекстЗапроса+"
				|	AND $РегПеремешения.Склад NOT IN (SELECT Val FROM #СкладыИскл)";
			КонецЕсли; 
		КонецЕсли;
	
		ТекстЗапроса=ТекстЗапроса+"
		|UNION ALL
		|
		|-- запрос по остаткам
		|SELECT
		|	РегОстатки.Товар as Товар,
		|	0 as Продажа,
		|	0 as Возврат,
		|	0 as Списание,
		|	0 as Производство,
		|	0 as Перемещение,
		|	РегОстатки.ОстатокТовараОстаток as Остаток,
		|	0 as Резерв,
		|	0 as Заказ,
		|	0 as МинЗапас,
		|   0 as ГлубинаМинЗапаса
		|FROM
		|	$РегистрОстатки.ПартииТоваров(,,
		|	Товар IN (SELECT ID FROM #TempTab)";
		
		ТекстЗапроса=ТекстЗапроса+"	AND Склад IN (SELECT ID FROM #СкладыАналитики)";
		
		Если спСкладовИскл.РазмерСписка() > 0 Тогда ТекстЗапроса=ТекстЗапроса+"
			|	AND Склад NOT IN (SELECT Val FROM #СкладыИскл)";
		КонецЕсли; 
		
		ТекстЗапроса=ТекстЗапроса+"
		|	,(Товар), (ОстатокТовара)) as РегОстатки 
		|UNION ALL
		|
		|-- запрос по резервам
		|SELECT
		|	РегРезервы.Товар as Товар,
		|	0 as Продажа,
		|	0 as Возврат,
		|	0 as Списание,
		|	0 as Производство,
		|	0 as Перемещение,
		|	0 as Остаток,
		|	РегРезервы.РезервТовараОстаток as Резерв,
		|	0 as Заказ,
		|	0 as МинЗапас,
		|   0 as ГлубинаМинЗапаса
		|FROM
		|	$РегистрОстатки.РезервыТоваров(,INNER JOIN $Документ.Счет ДокС(NOLOCK) ON ДокС.IDDOC=ПоСчету,
		|	Товар IN (SELECT ID FROM #TempTab)";
	
		ТекстЗапроса=ТекстЗапроса+"	AND $ДокС.Склад IN (SELECT ID FROM #СкладыАналитики)";
		
		Если спСкладовИскл.РазмерСписка() > 0 Тогда ТекстЗапроса=ТекстЗапроса+"
			|	AND $ДокС.Склад NOT IN (SELECT Val FROM #СкладыИскл)";
		КонецЕсли; 

		ТекстЗапроса=ТекстЗапроса+"
		|	AND $ДокС.ДатаПоставки <= :НачЗак
		|	,(Товар), (РезервТовара)) as РегРезервы
		|UNION ALL
		|
		|-- запрос по заказам
		|SELECT
		|	РегЗаказы.Товар as Товар,
		|	0 as Продажа,
		|	0 as Возврат,
		|	0 as Списание,
		|	0 as Производство,
		|	0 as Перемещение,
		|	0 as Остаток,
		|	0 as Резерв,
		|	РегЗаказы.КоличествоОстаток as Заказ,
		|	0 as МинЗапас,
		|   0 as ГлубинаМинЗапаса
		|FROM
		|	$РегистрОстатки.ЗаказыПоставщикам(,,
		|	Товар IN (SELECT ID FROM #TempTab)";
	
		ТекстЗапроса=ТекстЗапроса+"	AND Склад IN (SELECT ID FROM #СкладыАналитики)";
		
		Если спСкладовИскл.РазмерСписка() > 0 Тогда ТекстЗапроса=ТекстЗапроса+"
			|	AND Склад NOT IN (SELECT Val FROM #СкладыИскл)";
		КонецЕсли; 
	
		ТекстЗапроса=ТекстЗапроса+" AND СрокПоставки < :НачЗак";
		
		ТекстЗапроса=ТекстЗапроса+"
		|	,(Товар), (Количество)) as РегЗаказы 
		|UNION ALL
		|
		|-- запрос по мин. запасам
		|SELECT
		|	СпрЗапасы.PARENTEXT as Товар,
		|	0 as Продажа,
		|	0 as Возврат,
		|	0 as Списание,
		|	0 as Производство,
		|	0 as Перемещение,
		|	0 as Остаток,
		|	0 as Резерв,
		|	0 as Заказ,
		|	$СпрЗапасы.МинЗапас as МинЗапас,
		|	$СпрЗапасы.ГлубинаМинЗапаса as ГлубинаМинЗапаса
		|FROM
		|	$Справочник.Запасы as СпрЗапасы
		|INNER JOIN $Справочник.УпрАналитика СпрАналитика (NOLOCK) ON $СпрЗапасы.УпрАналитика = СпрАналитика.ID AND $СпрАналитика.НеУчитыватьМинЗапас = 0
		|WHERE
		|	PARENTEXT IN (SELECT ID FROM #TempTab) AND $СпрЗапасы.РасчетМинЗапаса=1 AND $СпрЗапасы.УпрАналитика = :ВыбАналитика";
		
		ТекстЗапроса=ТекстЗапроса+"
		|) as Регистры
		|GROUP BY
		|	Регистры.Товар WITH ROLLUP
		|) as Итоги
		|LEFT OUTER JOIN
		|	$Справочник.Номенклатура as Спр ON Спр.ID = Товар";
		
		ODBCRecordSet.УстановитьТекстовыйПараметр("ВыбАналитика",пАналитика);
		ODBCRecordSet.УстановитьТекстовыйПараметр("Нач", ДатаНачала);
		ODBCRecordSet.УстановитьТекстовыйПараметр("Кон", ДатаКонца);
		ODBCRecordSet.УстановитьТекстовыйПараметр("НачЗак", ДатаНачалаЗак);
		ODBCRecordSet.УстановитьТекстовыйПараметр("ДатаТА", ПолучитьДатуТА()-1);
		ODBCRecordSet.УстановитьТекстовыйПараметр("ВидОперации", "-");
		ODBCRecordSet.УстановитьТекстовыйПараметр("КатегорияСписания", Перечисление.КатегорииСписания.Категория1);
		ODBCRecordSet.УстановитьТекстовыйПараметр("Производство", "z");
		ODBCRecordSet.УстановитьТекстовыйПараметр("Закупка", "З");
		
		Если спСкладовИскл.РазмерСписка() > 0 Тогда
			ODBCRecordSet.УложитьСписокОбъектов(спСкладовИскл, "#СкладыИскл", "МестаХранения");
		КонецЕсли;
	
	//	ODBCRecordSet.Отладка(1);
		табл = ODBCRecordSet.ВыполнитьИнструкцию(ТекстЗапроса);
	        
		//сп = СоздатьОбъект( "СписокЗначений" );
		//сп.Установить("Данные",табл);
		//Имя = "ПечатьТаблицыЗначений.ert"; Путь = "";
		//РасположениеФайла(Путь);
		//ОткрытьФорму("Отчет",сп,Путь+Имя);
	
		ТекстЗапроса = "
		|-- запрос по дням продажи
		|SELECT
		|	Рег.Товар as [Товар $Справочник.Номенклатура],
		|	Рег.Период as Период,
		|	Рег.ОстатокТовараНачальныйОстаток as НачОст,
		|	Рег.ОстатокТовараПриход as Прих,
		|	Рег.ОстатокТовараРасход as Расх,
		|	Рег.ОстатокТовараКонечныйОстаток as КонОст
		|FROM
		|      $РегистрОстаткиОбороты.ПартииТоваров(:Нач, :Кон~, День,
		|	ДвиженияИГраницыПериода,
		|	,Товар IN (SELECT ID FROM #TempTab)";
		
		ТекстЗапроса=ТекстЗапроса+"	AND Склад IN (SELECT ID FROM #СкладыАналитики)";
		
		Если спСкладовИскл.РазмерСписка() > 0 Тогда ТекстЗапроса=ТекстЗапроса+"
			|	AND Склад NOT IN (SELECT Val FROM #СкладыИскл)";
		КонецЕсли; 
		
		ТекстЗапроса=ТекстЗапроса+"
		|	,(Товар),(ОстатокТовара)) as Рег (nolock)
		|ORDER BY
		|	1, 2";
		
		ODBCRecordSet.УстановитьТекстовыйПараметр("Нач", ДатаНачала);
		ODBCRecordSet.УстановитьТекстовыйПараметр("Кон", ДатаКонца);

		Если спСкладовИскл.РазмерСписка() > 0 Тогда
			ODBCRecordSet.УложитьСписокОбъектов(спСкладовИскл, "#СкладыИскл", "МестаХранения");
		КонецЕсли;
		//ODBCRecordSet.Отладка(1);
		таблДнейПродажи = ODBCRecordSet.ВыполнитьИнструкцию(ТекстЗапроса);
		
		//{ запрос для получения сроков годности по складу по товару		
		ТекстЗапроса = "SELECT ПартииТоваровОстатки.Склад [Склад $Справочник.МестаХранения]
		|					, NullIf(ПартииТоваровОстатки.СрокРеализации, '17530101') СрокРеализации
		|					, ПартииТоваровОстатки.ПрихДокумент [ПрихДокумент $Документ]
		|					, Жур.IDDOCDEF [ПрихДокумент_вид $ВидДокумента]
		|					, ПартииТоваровОстатки.ОстатокТовараОстаток Ост
		|				FROM $РегистрОстатки.ПартииТоваров(,,
		|													(Фирма = :Фирма)
		|													AND (Товар = :Товар)
		|													AND (Статус <> :Статус) "+?(ВыбСклад.Выбран()=1," AND (Склад = :Склад)","")+",
		|													(Склад, ПрихДокумент, СрокРеализации),
		|													ОстатокТовара) AS ПартииТоваровОстатки
		|				INNER JOIN _1sjourn Жур (NOLOCK) ON Жур.IDDOC = RIGHT(ПартииТоваровОстатки.ПрихДокумент,9)
	//	|				WHERE ПартииТоваровОстатки.ОстатокТовараОстаток>0 -- не выводим отрицательные остатки 
		|";
		//}
		
		
		//сп = СоздатьОбъект( "СписокЗначений" );
		//сп.Установить("Данные",таблДнейПродажи);
		//Имя = "ПечатьТаблицыЗначений.ert"; Путь = "";
		//РасположениеФайла(Путь);
		//ОткрытьФорму("Отчет",сп,Путь+Имя);
		//
		//Возврат;
		
		таблГр = СоздатьОбъект( "ТаблицаГруппировок" );
		табл.Выгрузить(таблГр.ПолучитьБазовыйКласс());
		таблГр.НоваяКолонка("КолвоДней","Число");
		таблГр.НоваяКолонка("Скорость","Число");
		таблГр.НоваяКолонка("МинЗапасНов","Число");
		таблГр.НоваяКолонка("ОжОстаток","Число");
		таблГр.НоваяКолонка("ОбеспДней","Число");
		таблГр.НоваяКолонка("КолУп","Число");
		таблГр.НоваяКолонка("Удалить","Число");
		
		таблГр.ВыбратьСтроки();
		Пока таблГр.ПолучитьСтроку() = 1 Цикл
			
			пПродажа = таблГр.Продажа;
			пВозврат = таблГр.Возврат;
			пСписание = таблГр.Списание;
			пПроизв = таблГр.Производство;
			пПерем = таблГр.Перемещение;
			
			промДата = ДатаНачала;
			промОстаток = 0;
			НомСтр = 0;
			пКолвоЗаписей = 0;
			Если таблДнейПродажи.НайтиЗначение(таблГр.Товар,НомСтр,"Товар") = 1 Тогда
				пКолвоДней = 0;
				таблДнейПродажи.ТекущаяСтрока(НомСтр);
				Пока таблДнейПродажи.ПолучитьЗначение(НомСтр,"Товар") = таблГр.Товар Цикл
					пКолвоЗаписей = пКолвоЗаписей + 1;
					промТовар = таблДнейПродажи.ПолучитьЗначение(НомСтр,"Товар");
					промПериод = таблДнейПродажи.ПолучитьЗначение(НомСтр,"Период");
					промНачОст = таблДнейПродажи.ПолучитьЗначение(НомСтр,"НачОст");
					промКонОст = таблДнейПродажи.ПолучитьЗначение(НомСтр,"КонОст");
					Если промНачОст > 0 Тогда
						пКолвоДней = пКолвоДней + ЧислоРабочихДнейМежду( промДата, промПериод );
					Иначе
						Если промКонОст > 0 Тогда
							пКолвоДней = пКолвоДней + ЧислоРабочихДнейМежду( промДата, промДата );
						КонецЕсли;
					КонецЕсли;
					промДата = промПериод+1;
					НомСтр = НомСтр + 1;
					Если НомСтр > таблДнейПродажи.КоличествоСтрок() Тогда Прервать; КонецЕсли;
				КонецЦикла;
				Если пКолвоЗаписей = 1 Тогда
					Если промКонОст > 0 Тогда
						пКолвоДней = ЧислоРабочихДнейМежду( ДатаНачала, ДатаКонца );
					КонецЕсли;
				КонецЕсли;
			Иначе
				пКолвоДней = 0;
			КонецЕсли;
			таблГр.КолвоДней = пКолвоДней;
			
			пТекОстаток = таблГр.Остаток;//?( ЗапросОстатки.Получить( Товар ) = 1, ЗапросОстатки.КонОст, 0 );
			
			пСкорость = ?( пКолвоДней = 0, 0, ( пПродажа + пСписание + пПроизв + пПерем ) / пКолвоДней );
			таблГр.Скорость = пСкорость;
			пОжОстаток = Макс( пТекОстаток - пСкорость * ЧислоРабочихДнейМежду( ПолучитьДатуТА(), ДатаНачалаЗак-1 ) + таблГр.Заказ , 0 );
			таблГр.ОжОстаток = пОжОстаток;
			
			пМинЗапас = таблГр.МинЗапас;//?( ЗапросМинЗапасы.Получить( Товар ) = 1, ЗапросМинЗапасы.фМинЗапас, 0 );
			
			пОбеспДней = ?( пСкорость = 0, 0, пОжОстаток / пСкорость );
			таблГр.ОбеспДней = пОбеспДней;
	
			таблГр.МинЗапасНов = пСкорость*таблГр.ГлубинаМинЗапаса;

			таблГр.МинЗапасНов = ?(таблГр.МинЗапасНов=0,0,Окр(таблГр.МинЗапасНов+0.5,0,1));
			//удалим итог полученный в результате SQL запроса
			Если ПустоеЗначение( таблГр.Товар ) = 1 Тогда
				таблГр.Удалить = 1;
			КонецЕсли;
		КонецЦикла;
	
		таблГр.Сортировать("-Удалить");
		таблГр.ВыбратьСтроки();
		таблГр.ПолучитьСтроку();
		Пока таблГр.Удалить=1 Цикл
			таблГр.УдалитьСтроку();
		КонецЦикла;
	
		//сп = СоздатьОбъект( "СписокЗначений" );
		//сп.Установить("Данные",таблГр);
		//Имя = "ПечатьТаблицыЗначений.ert"; Путь = "";
		//РасположениеФайла(Путь);
		//ОткрытьФорму("Отчет",сп,Путь+Имя);
	
		таблГр.Сгруппировать("Поставщик,Товар",
						 "Продажа,Возврат,Списание,Производство,Перемещение,Остаток,Резерв,Заказ, МинЗапас,МинЗапасНов,ГлубинаМинЗапаса,
						 |КолвоДней,Скорость,ОжОстаток,ОбеспДней",
						 "Товар",
						 "Номенклатура");

		
		пПериод = Шаблон("За период с [ДатаНачала] по [ДатаКонца] "
		+ "([ЧислоРабочихДнейМежду(ДатаНачала,ДатаКонца)] раб. дн.). ");

		таб = СоздатьОбъект( "Таблица" );
		таб.ИсходнаяТаблица( "МинЗапас" );
		
		таб.ВывестиСекцию( "Заголовок" );
		ПечатьУсловий( таб );
		пШапкаСрок = ?(спВыводСрока.ТекущаяСтрока()=1,"Недель"+РазделительСтрок+"продажи","Дней"+РазделительСтрок+"продажи");
		пШапкаОбесп = ?(спВыводСрока.ТекущаяСтрока()=1,"Обесп."+РазделительСтрок+"ост. нед.","Обесп."+РазделительСтрок+"ост. дней");
		
		таб.ВывестиСекцию("Шапка");
		таб.Опции( 0, 0, таб.ВысотаТаблицы(), 1 );
	    таб.ПовторятьПриПечатиСтроки(1,таб.ВысотаТаблицы());
		таблГр.ВНачалоВыборки();
		Пока таблГр.Группировка("Поставщик")=1 Цикл
			Поставщик = таблГр.ТекущееЗначение;
	
			пПоставщик = Шаблон( "[Поставщик.Код] [Поставщик] - [Поставщик.ВалютаКредитаПоставщика] " );
			таб.ВывестиСекцию("ПоставщикБезЗак");		
			СтрокаПоставщика=Таб.ВысотаТаблицы();
			ИтогоСуммаЗак = 0;
			
			Пока таблГр.Группировка("Товар")=1 Цикл
				Если ПустоеЗначение(таблГр.ТекущееЗначение) = 1 Тогда
					Продолжить;
				КонецЕсли;
				Товар = таблГр.ТекущееЗначение;
				пRetail=?(Товар.RETAIL=1,"R","");
				пТовар = Шаблон( "[Товар.Код] [Товар]" );
				пКодПост = Товар.КодПоставщика;
				пЕдИзм = Товар.БазоваяЕдиницаИзмерения; 
				
				Если таблГр.ЭтоГруппа=1 Тогда
					пОтступ = СокрЛ( Лев( "- - - - - - - - - -", ( таблГр.Уровень - 1 ) * 2 ) );
					пТовар = пОтступ + Шаблон( "[Товар.Код] [Товар]" );
					таб.ВывестиСекцию( "Группа" );		
					Продолжить;
				КонецЕсли;
				
				пПродажа = таблГр.Продажа;
				пВозврат = таблГр.Возврат;
				пСписание = таблГр.Списание;
				пПроизв = таблГр.Производство;
				пПерем = таблГр.Перемещение;
				//пКолвоДней = таблГр.КолвоДней;
				//пКолвоНедель = таблГр.КолвоДней / ЧислоРабочихДнейВНеделе;
				пСрок = ?(спВыводСрока.ТекущаяСтрока()=1,Окр(таблГр.КолвоДней / ЧислоРабочихДнейВНеделе,2,1),таблГр.КолвоДней);
				пТекОстаток = таблГр.Остаток;
				пТекРезерв = таблГр.Резерв;
				пТекВПути = таблГр.Заказ;
				пСкорость = таблГр.Скорость;
				пОжОстаток = таблГр.ОжОстаток;
				пМинЗапас = таблГр.МинЗапас;
				пГлубинаМинЗапас = таблГр.ГлубинаМинЗапаса;
				пМинЗапасНов = таблГр.МинЗапасНов;
				пОбесп = ?(спВыводСрока.ТекущаяСтрока()=1,Окр(таблГр.ОбеспДней / ЧислоРабочихДнейВНеделе,2,1),таблГр.ОбеспДней);
				Таб.ВывестиСекцию("Товар");
			КонецЦикла; //по товарам
			
			пИтогоСуммаЗак=Шаблон("[ИтогоСуммаЗак #Ч015.2] [Поставщик.ВалютаКредитаПоставщика]");
			таб.Область(СтрокаПоставщика-1,21,СтрокаПоставщика-1,21).Текст=пИтогоСуммаЗак;
			
		КонецЦикла;
		таб.ТолькоПросмотр( 1 );
		таб.Показать( "Расчет мин. запасов для <"+тАналитика.УпрАналитика +">");
	КонецЦикла; //по аналитике
	
	//сп = СоздатьОбъект( "СписокЗначений" );
	//сп.Установить("Данные",таблГр);
	//Имя = "ПечатьТаблицыЗначений.ert"; Путь = "";
	//РасположениеФайла(Путь);
	//ОткрытьФорму("Отчет",сп,Путь+Имя);
КонецПроцедуры


Процедура ПолучитьСписокСкладовИскл(списокСкладов)
	Запрос=СоздатьОбъект("ODBCRecordSet");
	ТекстЗапроса="	SELECT МестаХранения.ID [Ссылка $Справочник.МестаХранения]
	|				FROM $Справочник.МестаХранения AS МестаХранения
	|				WHERE (МестаХранения.ISMARK = 0)
	|				AND ($МестаХранения.НеВключатьВПланирование = 1)
	|";

	Табл_=Запрос.ВыполнитьИнструкцию(ТекстЗапроса);	
	Табл_.Выгрузить(списокСкладов,,,"Ссылка");
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ПолучитьСписокСкладовИскл(спСкладовИскл);
	//Если семЕстьПраво( "Отчет", "ПланированиеЗакупок", "Использование" ) = 0 Тогда
	//	Предупреждение("Недостаточно прав.","10"); СтатусВозврата( 0 ); Возврат;
	//КонецЕсли;
	//Если НазваниеНабораПрав() = "Администратор" Тогда
	//ИначеЕсли ИмяПользователя() = "Krilova" Тогда
	//ИначеЕсли ИмяПользователя() = "Zemite" Тогда
	//ИначеЕсли ИмяПользователя() = "Djomina" Тогда
	//ИначеЕсли ИмяПользователя() = "Kovalenko" Тогда
	//Иначе 
	//	Предупреждение( "Нет прав на использование данного отчета." );
	//	СтатусВозврата( 0 ); Возврат;
	//КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЯчейкиТаблицы( пЗнач, пФлаг, пТаб, пАдрес )
	Если пЗнач.Вид() = "Контрагенты" Тогда
		пФлаг = 0;
		сп = СоздатьОбъект( "СписокЗначений" );
		сп.Установить("Поставщик", пЗнач);
		табл = СоздатьОбъект( "ТаблицаЗначений" );
		табл.НоваяКолонка("Номенклатура");
		табл.НоваяКолонка("Количество");
		таблГр.Сортировать("Поставщик, Товар");  
		НомСтр = 0;
		Если таблГр.НайтиЗначение( пЗнач, НомСтр, "Поставщик" ) = 1 Тогда
			таблГр.ПолучитьСтрокуПоНомеру(НомСтр);
			Пока 1 = 1 Цикл
				Если таблГр.Поставщик <> пЗнач Тогда Прервать; КонецЕсли;
				Если таблГр.Товар.Выбран() = 1 Тогда 
					Если таблГр.Товар.ЭтоГруппа() = 0 Тогда 
						Если таблГр.ВозмЗак > 0 Тогда
							табл.НоваяСтрока();
							табл.Номенклатура = таблГр.Товар;
							табл.Количество = таблГр.ВозмЗак;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				Если НомСтр = таблГр.КоличествоСтрок() Тогда Прервать; КонецЕсли;
				НомСтр = НомСтр + 1;
				таблГр.ПолучитьСтрокуПоНомеру(НомСтр);
			КонецЦикла;
		КонецЕсли;
		Если табл.КоличествоСтрок() > 0 Тогда
			сп.Установить("Таблица", табл);
			ОткрытьФорму("Документ.ЗаказПоставщику", сп );
		КонецЕсли;
	Иначе
		пФлаг = 0;
		сп = СоздатьОбъект( "СписокЗначений" );
		сп.ДобавитьЗначение( "карточка товара" );
		сп.ДобавитьЗначение( "отчет по движениям товара" );
		поз = 0;
		Если сп.ВыбратьЗначение(,,поз,,1) = 0 Тогда Возврат; КонецЕсли;
		Если поз = 1 Тогда
			ОткрытьФорму(пЗнач);
		ИначеЕсли поз = 2 Тогда
			Путь = КаталогИБ() + "ExtForms\ДвиженияТовара01.ert";
			Если ФС.СуществуетФайл( Путь ) = 0 Тогда Возврат; КонецЕсли;
			сп = СоздатьОбъект( "СписокЗначений" );
			сп.Установить("ДатаС",ДатаНачала);
			сп.Установить("ДатаПо",ДатаКонца);
			сп.Установить("выбТовар",пЗнач.ТекущийЭлемент());
			//Имя = "ДвиженияТовара01.ert"; Путь = КаталогИБ()+"ДвиженияТовара01.ert";
			//РасположениеФайла(Путь);
			ОткрытьФорму("Отчет",сп,Путь);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

спКолРабДней.УдалитьВсе();
спКолРабДней.ДобавитьЗначение("5-дневная");
спКолРабДней.ДобавитьЗначение("6-дневная"); 
спКолРабДней.ДобавитьЗначение("7-дневная");
спКолРабДней.ТекущаяСтрока( 3 );

спБратьПост.УдалитьВсе();
спБратьПост.ДобавитьЗначение( "из карточки" );
спБратьПост.ДобавитьЗначение( "из партии"); 
спБратьПост.ТекущаяСтрока( 1 );

спВыводСрока.УдалитьВсе();
спВыводСрока.ДобавитьЗначение( "в неделях" );
спВыводСрока.ДобавитьЗначение( "в днях" );
спВыводСрока.ТекущаяСтрока( 1 );

ДатаНачала = НачНедели(ДобавитьМесяц(ПолучитьДатуТА(),-1));
ДатаКонца = НачНедели(ПолучитьДатуТА())-1;
Если Число( ДатаНачала ) = 0 Тогда ДатаНачала = '01.01.98'; КонецЕсли;
ДатаНачалаЗак = РабочаяДата()+1;
ДатаКонцаЗак = КонМесяца( ДатаНачалаЗак );  