Перем ЗапросРезерв, ЗапросОстатки, ЗапросПриход;
Перем ЧислоРабочихДнейВНеделе;
Перем пУпрАналитикаОпт;

Процедура ГрупповаяПометкаСписок(Режим,Таб)

	Для инд=1 По Таб.РазмерСписка()  Цикл
		Если Режим=1 Тогда
			Таб.Пометка(инд, 1);
		ИначеЕсли Режим=2 Тогда
			Таб.Пометка(инд, 0);
		ИначеЕсли Режим=3 Тогда
			Если Таб.Пометка(инд) =0 Тогда
				Таб.Пометка(инд, 1);
			Иначе
				Таб.Пометка(инд, 0);
			КонецЕсли;                           
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры       

//Фильтруем строки в заказе согласно флагам на форме
Функция ФильтрДокумента(п_Товар,п_МинЗапас,п_Количество)
	
	л_ФильтрКолич=п_Количество; //0 - пропускаем
	л_Пропуск=0;
	
	Если фл60процентов=1 Тогда
		л_процМинЗапаса=п_МинЗапас*процНедобор/100;
		Если л_процМинЗапаса>п_Количество Тогда
			л_Пропуск=1;
		КонецЕсли;
	
		Если (ВыбАналитика<>пУпрАналитикаОпт) Тогда //розница
			Попытка
				КоэфНеттоВеса = Окр(1/п_Товар.ЕдНеттоВеса.Коэффициент,4,1);	
			Исключение
				КоэфНеттоВеса=1;
			КонецПопытки;

			л_Целое = Цел(?(п_Товар.ЛогистикаКолВУпаковке = 0, 0, Окр(п_Количество*КоэфНеттоВеса/п_Товар.ЛогистикаКолВУпаковке, 1, 1 )));
			Если л_Целое=0 Тогда
				л_Целое=1;
			КонецЕсли;
			Если (флМинКоличество = 1)  Тогда
				л_ФильтрКолич=л_Целое*п_Товар.ЛогистикаКолВУпаковке;
			КонецЕсли;
						
			л_ФильтрКолич=Окр(Макс(л_ФильтрКолич,1),0); //округляем до нуля, если меньше и тогда уже округляем до целого 
		Иначе
			Если (п_Товар.ЗакупКол<>0)  Тогда
				л_Целое=Цел(п_Количество/п_Товар.ЗакупКол);
				Если л_Целое=0 Тогда
					л_Целое=1;
				КонецЕсли;
				л_ФильтрКолич=л_Целое*?((ВыбАналитика<>пУпрАналитикаОпт),1,п_Товар.ЗакупКол);
			КонецЕсли;
			
		КонецЕсли;
	ИначеЕсли флМинКоличество = 1 Тогда
	КонецЕсли;

	Если л_Пропуск=0 Тогда
		Возврат л_ФильтрКолич;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции // ФильтрДокумента

//******************************************************************************
// функция ищет в списке значений элемент справочника с учетом групп
// 1 - есть элемент, 0 - нет
Функция НайтиВСписке(сп,Эл)
	Если сп.РазмерСписка()=0 Тогда Возврат 0; КонецЕсли;    
	Для н=1 По сп.РазмерСписка() Цикл
		Зн = сп.ПолучитьЗначение(н);
		Если Зн.ЭтоГруппа()=1 Тогда
			Если Эл.ПринадлежитГруппе(Зн)=1 Тогда Возврат 1; КонецЕсли;          
		Иначе
			Если Зн = Эл Тогда Возврат 1; КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат 0;
КонецФункции
// Добавляет элемент справочника в список значений
// сп - список значений, Тип - тип справочника, Режим - 1 - одиночный выбор, 2 - множественный
Процедура ДобавитьВСписок(сп,Тип,Режим) Экспорт
	спр = СоздатьОбъект(Тип);
	Если сп.РазмерСписка() > 0 Тогда
		спр.НайтиЭлемент(сп.ПолучитьЗначение(сп.ТекущаяСтрока()));
	КонецЕсли;
	Результат = 1;
	Пока Результат = 1 Цикл 
		спр.ВыборГруппы(1);
		выб = спр.Выбрать("Выбор","ДляВыбора");
		Результат = ?(Режим = 1,0,Мин(Выб,Результат));
		Если Выб = 0 Тогда Продолжить; КонецЕсли;
		Если НайтиВСписке(сп,спр.ТекущийЭлемент())=1 Тогда
			Предупреждение("Этот элемент в списке уже есть!!!");
			Продолжить;
		КонецЕсли;
		сп.ДобавитьЗначение(спр.ТекущийЭлемент());
		сп.ТекущаяСтрока(сп.РазмерСписка());
	КонецЦикла;
КонецПроцедуры
// Удоляет элементы из список значений
// сп - список значений, Режим - 1 - удаляет выбранное значение, 2 - удоляет всё
Процедура УдалитьИзСписка(сп,Режим) Экспорт
	Если сп.РазмерСписка()=0 Тогда Возврат; КонецЕсли;
	Если Режим = 1 Тогда 
		н = сп.ТекущаяСтрока(); 
		сп.УдалитьЗначение(сп.ТекущаяСтрока());
		Если н > 1 Тогда
			сп.ТекущаяСтрока(н-1);
		Иначе
			Если сп.РазмерСписка()>0 Тогда
				сп.ТекущаяСтрока(1);
			КонецЕсли;
		КонецЕсли;
	Иначе
		сп.УдалитьВсе();
	КонецЕсли;		
КонецПроцедуры 


//Процедура Сформировать()
//	//{
//	Если (флЗаявка=1) и (ПустоеЗначение(ВыбАналитика)=1) Тогда
//		Предупреждение("Нельзя создавать документ эл. заявки без выбранной аналитики!");
//		Возврат;
//	КонецЕсли;
//	
//	начЛог = семЗаписатьЛогНач( "Отчет", "Минимальные запасы", "Обработка", "Формирование отчета" );
//	ЗапросМинЗап = СоздатьОбъект( "Запрос" ); ТекстЗапроса = "";
//	ТекстЗапроса = ТекстЗапроса + "
//	|//{{ЗАПРОС(ЗапасыТоваров)
//	|Обрабатывать НеПомеченныеНаУдаление;
//	|Товар = Справочник.Номенклатура.ТекущийЭлемент, Справочник.Запасы.Владелец;
//	|Поставщик = Справочник.Номенклатура.Поставщик, Справочник.Запасы.Владелец.Поставщик;
//	|ПризнакСпецКода = Справочник.Номенклатура.ПризнакСпецКода, Справочник.Запасы.Владелец.ПризнакСпецКода;
//	|УпрАналитика = Справочник.Запасы.УпрАналитика;
//	|НеУчитыватьМинЗапас = Справочник.Запасы.УпрАналитика.НеУчитыватьМинЗапас;
//	|МинЗапас = Справочник.Запасы.МинЗапас;
//	|";
//	ТекстЗапроса = ТекстЗапроса + "Группировка Товар упорядочить по Товар.Код без групп"+?( флНулевые = 1, " все;", ";" );
//	ТекстЗапроса = ТекстЗапроса + "Группировка УпрАналитика"+?( флНулевые = 1, " все;", ";" );
//	ТекстЗапроса = ТекстЗапроса + "
//	|Функция фМинЗапас = Сумма(МинЗапас) Когда (НеУчитыватьМинЗапас = 0);
//	|Условие ( ПустоеЗначение( УпрАналитика ) = 0 );
//	|";
//	Если спТоваров.РазмерСписка()>0 Тогда ТекстЗапроса = ТекстЗапроса + "Условие (Товар в спТоваров);";
//	КонецЕсли; 
//	Если спПоставщиков.РазмерСписка()>0 Тогда ТекстЗапроса = ТекстЗапроса + "Условие (Поставщик в выбПоставщик);";
//	КонецЕсли; 
//	Если ВыбАналитика.Выбран() = 0 Тогда
//	ИначеЕсли ВыбАналитика.ЭтоГруппа() = 1 Тогда
//		ТекстЗапроса = ТекстЗапроса + "Условие (УпрАналитика в ВыбАналитика);";
//	Иначе 
//		ТекстЗапроса = ТекстЗапроса + "Условие (УпрАналитика = ВыбАналитика);";
//	КонецЕсли;
//	
//	Если ВыбСпецКод.Выбран() = 0 Тогда
//	Иначе ТекстЗапроса = ТекстЗапроса + "Условие (ПризнакСпецКода = ВыбСпецКод);";
//	КонецЕсли; 
//	
//	Если ЗапросМинЗап.Выполнить( ТекстЗапроса ) = 0 Тогда Возврат; КонецЕсли;
//	
//	ЗапросОстатки = СоздатьОбъект( "Запрос" ); ТекстЗапроса = "";
//	ТекстЗапроса = ТекстЗапроса + "
//	|//{{ЗАПРОС(ЗапросОстатки)
//	|Период с ДатаПо по ДатаПо;
//	|Товар = Регистр.ОстаткиТоваров.Товар;
//	|Поставщик = Регистр.ОстаткиТоваров.Товар.Поставщик;
//	|ПризнакСпецКода = Регистр.ОстаткиТоваров.Товар.ПризнакСпецКода;
//	|УпрАналитика = Регистр.ОстаткиТоваров.Склад.УпрАналитика;
//	|Склад = Регистр.ОстаткиТоваров.Склад;
//	|Ост = Регистр.ОстаткиТоваров.ОстатокТовара;
//	|Группировка Товар без упорядочивания без групп;
//	|Группировка УпрАналитика без упорядочивания без групп;
//	|Группировка Склад без упорядочивания без групп;
//	|Функция фКонОст = КонОст(Ост);
//	|";
//	Если спТоваров.РазмерСписка() > 0 Тогда 
//		ТекстЗапроса = ТекстЗапроса + "Условие (Товар в спТоваров);";
//	КонецЕсли; 
//	Если спПоставщиков.РазмерСписка() > 0  Тогда
//		ТекстЗапроса = ТекстЗапроса + "Условие (Поставщик в спПоставщиков);";
//	КонецЕсли; 
//	Если ВыбАналитика.Выбран() = 0 Тогда
//	ИначеЕсли ВыбАналитика.ЭтоГруппа() = 1 Тогда
//		ТекстЗапроса = ТекстЗапроса + "Условие (УпрАналитика в ВыбАналитика);";
//	Иначе 
//		ТекстЗапроса = ТекстЗапроса + "Условие (УпрАналитика = ВыбАналитика);";
//	КонецЕсли;
//
//	Если ВыбСпецКод.Выбран() = 0 Тогда
//	Иначе ТекстЗапроса = ТекстЗапроса + "Условие (ПризнакСпецКода = ВыбСпецКод);";
//	КонецЕсли; 
//
//	Если ЗапросОстатки.Выполнить( ТекстЗапроса ) = 0 Тогда Возврат; КонецЕсли;
//	
//	ЗапросРезерв = СоздатьОбъект( "Запрос" ); ТекстЗапроса = "";
//	ТекстЗапроса = ТекстЗапроса + "
//	|//{{ЗАПРОС(ЗапросРезерв)
//	|Период с ДатаПо по ДатаПо;
//	|Товар = Регистр.РезервыТоваров.Товар;
//	|Поставщик = Регистр.РезервыТоваров.Товар.Поставщик;
//	|ПризнакСпецКода = Регистр.РезервыТоваров.Товар.ПризнакСпецКода;
//	|УпрАналитика = Регистр.РезервыТоваров.ПоСчету.Склад.УпрАналитика;
//	|Склад = Регистр.РезервыТоваров.ПоСчету.Склад;
//	|Резерв = Регистр.РезервыТоваров.РезервТовара;
//	|Функция фКонОст = КонОст(Резерв);
//	|Группировка Товар без упорядочивания без групп;
//	|Группировка УпрАналитика без упорядочивания без групп;
//	|Группировка Склад без упорядочивания без групп;
//	|";
//	Если спТоваров.РазмерСписка() > 0 Тогда 
//		ТекстЗапроса = ТекстЗапроса + "Условие (Товар в спТоваров);";
//	КонецЕсли; 
//	Если спПоставщиков.РазмерСписка() > 0  Тогда
//		ТекстЗапроса = ТекстЗапроса + "Условие (Поставщик в спПоставщиков);";
//	КонецЕсли; 
//	Если ВыбАналитика.Выбран() = 0 Тогда
//	ИначеЕсли ВыбАналитика.ЭтоГруппа() = 1 Тогда
//		ТекстЗапроса = ТекстЗапроса + "Условие (УпрАналитика в ВыбАналитика);";
//	Иначе 
//		ТекстЗапроса = ТекстЗапроса + "Условие (УпрАналитика = ВыбАналитика);";
//	КонецЕсли;
//
//	Если ВыбСпецКод.Выбран() = 0 Тогда
//	Иначе ТекстЗапроса = ТекстЗапроса + "Условие (ПризнакСпецКода = ВыбСпецКод);";
//	КонецЕсли; 
//	
//	Если ЗапросРезерв.Выполнить( ТекстЗапроса ) = 0 Тогда Возврат; КонецЕсли;
//	
//	ЗапросПриход = СоздатьОбъект( "Запрос" ); ТекстЗапроса = "";
//	ТекстЗапроса = ТекстЗапроса + "
//	|//{{ЗАПРОС(ЗапросПризод)
//	|Период с ДатаПо по ДатаПо;
//	|Товар = Регистр.ЗаказыПоставщикам.Товар;
//	|Поставщик = Регистр.ЗаказыПоставщикам.Клиент;
//	|ПризнакСпецКода = Регистр.ЗаказыПоставщикам.Товар.ПризнакСпецКода;
//	|УпрАналитика = Регистр.ЗаказыПоставщикам.Склад.УпрАналитика;
//	|Склад = Регистр.ЗаказыПоставщикам.Склад;
//	|ДатаПост = Регистр.ЗаказыПоставщикам.СрокПоставки;
//	|Кол = Регистр.ЗаказыПоставщикам.Количество;
//	|Функция фКонОст = КонОст( Кол );
//	|Группировка Товар без упорядочивания без групп;
//	|Группировка УпрАналитика без упорядочивания без групп;
//	|Группировка ДатаПост;
//	|Условие ( ДатаПост >= ДатаПо );
//	|";
//	Если спТоваров.РазмерСписка() > 0 Тогда 
//		ТекстЗапроса = ТекстЗапроса + "Условие (Товар в спТоваров);";
//	КонецЕсли; 
//	Если спПоставщиков.РазмерСписка() > 0  Тогда
//		ТекстЗапроса = ТекстЗапроса + "Условие (Поставщик в спПоставщиков);";
//	КонецЕсли; 
//	
//	//Если ВыбАналитика.Выбран() = 0 Тогда
//	//ИначеЕсли ВыбАналитика.ЭтоГруппа() = 1 Тогда
//	//	ТекстЗапроса = ТекстЗапроса + "Условие (УпрАналитика в ВыбАналитика);";
//	//Иначе 
//	//	ТекстЗапроса = ТекстЗапроса + "Условие (УпрАналитика = ВыбАналитика);";
//	//КонецЕсли;
//
//	Если ВыбСпецКод.Выбран() = 0 Тогда
//	Иначе ТекстЗапроса = ТекстЗапроса + "Условие (ПризнакСпецКода = ВыбСпецКод);";
//	КонецЕсли; 
//
//	Если ЗапросПриход.Выполнить( ТекстЗапроса ) = 0 Тогда Возврат; КонецЕсли;
//
//	Если флЗаявка=1 Тогда
//		тДок=СоздатьОбъект("ТаблицаЗначений");
//		ДокС=СоздатьОбъект("Документ.Счет");
//		ДокС.Новый();
//		ДокС.ВыгрузитьТабличнуюЧасть(тДок);
//	КонецЕсли;
//	
//	тЗапросПриход=СоздатьОбъект("ТаблицаЗначений");
//	ЗапросПриход.Выгрузить(тЗапросПриход,,0);
//	итЗапросПриход=СоздатьОбъект("ИндексированнаяТаблица");
//	итЗапросПриход.Загрузить(тЗапросПриход);
//	итЗапросПриход.ДобавитьИндекс("иТовар","*Товар,*УпрАналитика");
//	
//	табл = СоздатьОбъект("ТаблицаЗначений"); 
//	ЗапросМинЗап.Выгрузить( табл, 0, 1 );
//	таб=СоздатьОбъект("Таблица");
//	таб.ВывестиСекцию( "Заголовок" );
//	
//	Если спПоставщиков.РазмерСписка() > 0  Тогда
//		ТекстЗапроса = ТекстЗапроса + "Условие (Поставщик в спПоставщиков);";
//	КонецЕсли; 
//	
//	Если спТоваров.РазмерСписка() > 0 Тогда
//		сзФильтр=спТоваров.ВСтрокуСРазделителями();
//		пФильтр = "По товарам: " + СтрЗаменить(сзФильтр,"""","");
//		таб.ВывестиСекцию( "Фильтр" );
//	КонецЕсли; 
//	Если спПоставщиков.РазмерСписка() > 0  Тогда
//		сзФильтр=спПоставщиков.ВСтрокуСРазделителями();
//		//пФильтр = "По " + ?( выбПоставщик.ЭтоГруппа() = 1, "группе поставщиков", "поставщику" ) + ": " + СтрЗаменить(сзФильтр,"""","");
//		пФильтр = "По поставщикам: " + СтрЗаменить(сзФильтр,"""","");
//		таб.ВывестиСекцию( "Фильтр" );
//	КонецЕсли; 
//	Если ВыбАналитика.Выбран() = 1 Тогда
//		пФильтр = "По упр. аналитике: " + ВыбАналитика;
//		таб.ВывестиСекцию( "Фильтр" );
//	КонецЕсли;
//	Если флНулевые = 1 Тогда
//		пФильтр = "Выводить нулевые мин. запасы.";
//		таб.ВывестиСекцию( "Фильтр" );
//	КонецЕсли;
//	Если флНедобор = 1 Тогда
//		пФильтр = "Выводить только недобор.";
//		таб.ВывестиСекцию( "Фильтр" );
//	КонецЕсли;
//	таб.ВывестиСекцию( "Шапка" );
//	таб.Опции(0,0,таб.ВысотаТаблицы(),0);
//	
//	Если табл.КоличествоСтрок() = 1 Тогда
//		таб.ВывестиСекцию( "Пусто" );
//		таб.ТолькоПросмотр(1);
//		таб.Показать("");
//		Возврат;
//	КонецЕсли;
//	табл.ВыбратьСтроки();
//	Пока табл.ПолучитьСтроку() = 1 Цикл
//		спОст = "";
//		спРез = "";
//		Если ПустоеЗначение( табл.Товар ) = 1 Тогда 
//			Продолжить; 
//		КонецЕсли;
//		
//		Если ПустоеЗначение( табл.УпрАналитика ) = 1 Тогда
//			Товар = табл.Товар;
//			пМинЗапас = табл.фМинЗапас;
//			пОстаток = 0;
//			пОжПрих = 0;
//			Если ЗапросОстатки.Получить( табл.Товар,, ) = 1 Тогда
//				спОст = СоздатьОбъект( "СписокЗначений" );
//                                спОст.Установить( "Вид", "Ост" );
//                                спОст.Установить( "Запрос", ЗапросОстатки );
//                                спОст.Установить( "Товар", Товар );
//				пОстаток=ЗапросОстатки.фКонОст;
//			КонецЕсли;
//			пРезерв = 0;
//			Если ЗапросРезерв.Получить( табл.Товар,, ) = 1 Тогда
//				спРез = СоздатьОбъект( "СписокЗначений" );
//				спРез.Установить( "Вид", "Рез" );
//				спРез.Установить( "Запрос", ЗапросРезерв );
//				спРез.Установить( "Товар", Товар );
//				пРезерв=ЗапросРезерв.фКонОст;
//			КонецЕсли;
//			пСвобОст = пОстаток - пРезерв;
//			пНедоб = ?( пМинЗапас > пСвобОст, ?( пМинЗапас = 0, 0, пСвобОст - пМинЗапас ), 0 );
//
//			сзКлюч=СоздатьОбъект("СписокЗначений");
//			сзКлюч.ДобавитьЗначение(табл.Товар);
//			итЗапросПриход.Подмножество(сзКлюч,1,"иТовар");
//			рез=итЗапросПриход.ВыбратьСтроки("иТовар");
//			пОжДатыПрихода="";
//			Если рез=1 Тогда
//				итЗапросПриход.ПолучитьСтроку("иТовар");
//				пОжДатыПрихода=итЗапросПриход.ДатаПост;
//				
//				спПрих = СоздатьОбъект( "СписокЗначений" );
//	            спПрих.Установить( "Вид", "Прих" );
//	            спПрих.Установить( "Запрос", итЗапросПриход );
//	            спПрих.Установить( "Товар", итЗапросПриход.Товар );
//	            спПрих.Установить( "УпрАналитика", итЗапросПриход.УпрАналитика );
//				пОжПрих=итЗапросПриход.Итог("фКонОст","иТовар");
//			КонецЕсли;
//			
//			//Если ЗапросПриход.Получить( табл.Товар,, ) = 1 Тогда
//			//	спПрих = СоздатьОбъект( "СписокЗначений" );
//            //    спПрих.Установить( "Вид", "Прих" );
//            //    спПрих.Установить( "Запрос", ЗапросПриход );
//            //    спПрих.Установить( "Товар", табл.Товар );
//            //    спПрих.Установить( "УпрАналитика", табл.УпрАналитика );
//			//	пОжПрих=ЗапросПриход.фКонОст;
//			//КонецЕсли;
//			Если ( флНедобор = 0 ) или ( пНедоб <> 0 ) Тогда
//				таб.ВывестиСекцию( "Товар"+?( пМинЗапас = 0, "0", "" ) );
//				Если флЗаявка=1 Тогда
//					тДок.НоваяСтрока();
//					тДок.Товар=Товар;
//					тДок.Количество=Макс(Абс_(пНедоб)-пОжПрих,0);
//				КонецЕсли;
//				
//			КонецЕсли;
//		Иначе
//			пУпрАналитика = табл.УпрАналитика;
//			пМинЗапас = табл.фМинЗапас;
//			пОстаток = 0;
//			пОжПрих = 0;
//			Если ЗапросОстатки.Получить( табл.Товар, табл.УпрАналитика, ) = 1 Тогда
//				спОст = СоздатьОбъект( "СписокЗначений" );
//                спОст.Установить( "Вид", "Ост" );
//                спОст.Установить( "Запрос", ЗапросОстатки );
//                спОст.Установить( "Товар", табл.Товар );
//                спОст.Установить( "УпрАналитика", табл.УпрАналитика );
//				пОстаток=ЗапросОстатки.фКонОст;
//			КонецЕсли;
//			пРезерв = 0;
//			Если ЗапросРезерв.Получить( табл.Товар, табл.УпрАналитика, ) = 1 Тогда
//				спРез = СоздатьОбъект( "СписокЗначений" );
//				спРез.Установить( "Вид", "Рез" );
//				спРез.Установить( "Запрос", ЗапросРезерв );
//				спРез.Установить( "Товар", табл.Товар );
//				спРез.Установить( "УпрАналитика", табл.УпрАналитика );
//				пРезерв=ЗапросРезерв.фКонОст;
//			КонецЕсли;
//			пСвобОст = пОстаток - пРезерв;
//			пНедоб = ?( пМинЗапас > пСвобОст, ?( пМинЗапас = 0, 0, пСвобОст - пМинЗапас ), 0 );
//			сзКлюч=СоздатьОбъект("СписокЗначений");
//			сзКлюч.ДобавитьЗначение(табл.Товар);
//			сзКлюч.ДобавитьЗначение(табл.УпрАналитика);
//			итЗапросПриход.Подмножество(сзКлюч,2,"иТовар");
//			рез=итЗапросПриход.ВыбратьСтроки("иТовар");
//			пОжДатыПрихода="";
//			Если рез=1 Тогда
//				итЗапросПриход.ПолучитьСтроку("иТовар");
//				пОжДатыПрихода=итЗапросПриход.ДатаПост;
//				
//				спПрих = СоздатьОбъект( "СписокЗначений" );
//	            спПрих.Установить( "Вид", "Прих" );
//	            спПрих.Установить( "Запрос", итЗапросПриход );
//	            спПрих.Установить( "Товар", итЗапросПриход.Товар );
//	            спПрих.Установить( "УпрАналитика", итЗапросПриход.УпрАналитика );
//				пОжПрих=итЗапросПриход.Итог("фКонОст","иТовар");
//			КонецЕсли;
//			
//			//ЗапросПриход.вНачалоВыборки();
//			//Если ЗапросПриход.Получить( табл.Товар,табл.УпрАналитика, ) = 1 Тогда
//			//	ЗапросПриход.Группировка("ДатаПост");
//			//	пОжПрих=ЗапросПриход.фКонОст;
//			//	пОжПрихДата=ЗапросПриход.ДатаПост;
//			//	спПрих = СоздатьОбъект( "СписокЗначений" );
//            //    спПрих.Установить( "Вид", "Прих" );
//            //    спПрих.Установить( "Запрос", ЗапросПриход );
//            //    спПрих.Установить( "Товар", табл.Товар );
//            //    спПрих.Установить( "УпрАналитика", табл.УпрАналитика );
//			//КонецЕсли;
//			Если ( ( флНедобор = 0 ) или ( пНедоб <> 0 ) ) и ( ВыбАналитика.Выбран() = 0 ) Тогда
//				таб.ВывестиСекцию( "УпрАналитика"+?( пМинЗапас = 0, "0", "" ) );
//			КонецЕсли;
//			
//		КонецЕсли;
//		Состояние("Обработано: "+Окр(табл.НомерСтроки/табл.КоличествоСтрок()*100,0)+"%");
//	КонецЦикла;
//	
//	Если флЗаявка=1 Тогда
//		ЗаполнитьШапку(ДокС);
//		ДокС.Валюта = Константа.ОсновнаяВалютаПродажи;
//		ДокС.Дата_Курса =ДокС.ДатаДок;
//		ДокС.Курс = КурсДляВалюты( ДокС.Валюта, ДокС.Дата_Курса );
//		
//		ДокС.Клиент				= Константа.ОсновнойПокупатель;
//		ДокС.СтавкаНДС     		= Константа.ОсновнаяСтавкаНДС;               
//		ДокС.СрокРезервирования	= Константа.ОсновнойСрокРезервирования;
//		ДокС.Склад				= РозничныйТорговыйСклад;
//		ДокС.КатегорияЦены 		= ?(ПустоеЗначение(Пользователь.ОснКатегорияЦены)=1,Константа.ОсновнаяКатегорияЦены,Пользователь.ОснКатегорияЦены);
//		ДокС.ВидЗаявки 			= Перечисление.ВидыЗаявок.ЭлектроннаяЗаявка;   
//		ДокС.ВидДоставки		= Перечисление.ВидыДоставки.Доставка;
//		ДокС.ВидОплаты			= 2;
//		ДокС.АвтоВремяТекущее();
//		ДокС.ДатаДок			= РабочаяДата();
//		ДокС.ДатаПоставки		= РабочаяДата();
//		ДокС.ЗагрузитьТабличнуюЧасть(тДок);
//		ДокС.ВыбратьСтроки();
//		Пока ДокС.ПолучитьСтроку() = 1 Цикл
//			УстанЦеныРасх(ДокС);
//		КонецЦикла;
//		
//		ОбъектЗаписать(ДокС,);
//		Сообщить("Записан документ "+ДокС);
//		ОткрытьФорму(ДокС.ТекущийДокумент());
//	КонецЕсли;
//	таб.ТолькоПросмотр(1);
//	таб.Показать( "Отчет по мин. запасам" );
//	семЗаписатьЛогКон( начЛог );	
//	//}
//КонецПроцедуры
//
Функция Расшифровка( сп )
	Если ТипЗначенияСтр( сп ) <> "СписокЗначений" Тогда Возврат 1; КонецЕсли;
	Если сп.РазмерСписка() = 0 Тогда Возврат 1; КонецЕсли;
	Вид = сп.Получить( "Вид" );
	Запрос = сп.Получить( "Запрос" );
	Товар = сп.Получить( "Товар" );
	УпрАналитика = сп.Получить( "УпрАналитика" );
	Если Вид = "Прих" Тогда
		таб=СоздатьОбъект("Таблица");
		таб.ИсходнаяТаблица( "Расшифровка" );
		пЗаголовок = "Ожидаемый приход после " + ДатаПо;
		таб.ВывестиСекцию( "Заголовок" );
		пЗначШ = "Ожидаемый приход";
		таб.ВывестиСекцию( "Шапка" );
		Запрос = ЗапросПриход;
		Запрос.ВНачалоВыборки();
		Если ПустоеЗначение( УпрАналитика ) = 1 Тогда
			Если Запрос.Получить( Товар,, ) = 1 Тогда
				Товар = Запрос.Товар;
				пЗнач = Запрос.фКонОст;
				таб.ВывестиСекцию( "Товар" );
				Пока Запрос.Группировка( "УпрАналитика" ) = 1 Цикл
					пУпрАналитика = Запрос.УпрАналитика;
					пЗнач = Запрос.фКонОст;
					таб.ВывестиСекцию( "УпрАналитика" );
					Пока Запрос.Группировка( "ДатаПост" ) = 1 Цикл
						пСклад = Запрос.ДатаПост;
						пЗнач = Запрос.фКонОст;
						таб.ВывестиСекцию( "Склад" );
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
		Иначе
			Если Запрос.Получить( Товар, УпрАналитика, ) = 1 Тогда
				Товар = Запрос.Товар;
				пЗнач = Запрос.фКонОст;
				таб.ВывестиСекцию( "Товар" );
				пУпрАналитика = Запрос.УпрАналитика;
				пЗнач = Запрос.фКонОст;
				таб.ВывестиСекцию( "УпрАналитика" );
				Пока Запрос.Группировка( "ДатаПост" ) = 1 Цикл
					пСклад = Запрос.ДатаПост;
					пЗнач = Запрос.фКонОст;
					таб.ВывестиСекцию( "Склад" );
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		таб.ТолькоПросмотр(1);
		таб.Показать( "Расшифровка по складу" );
	Иначе
		таб=СоздатьОбъект("Таблица");
		таб.ИсходнаяТаблица( "Расшифровка" );
		пЗаголовок = ?( Вид = "Ост", "Остаток", "Резерв" ) + " на " + ДатаПо;
		таб.ВывестиСекцию( "Заголовок" );
		пЗначШ = ?( Вид = "Ост", "Остаток", "Резерв" );
		таб.ВывестиСекцию( "Шапка" );
		Запрос = ?( Вид = "Ост", ЗапросОстатки, ЗапросРезерв );
		Запрос.ВНачалоВыборки();
		Если ПустоеЗначение( УпрАналитика ) = 1 Тогда
			Если Запрос.Получить( Товар,, ) = 1 Тогда
				Товар = Запрос.Товар;
				пЗнач = Запрос.фКонОст;
				таб.ВывестиСекцию( "Товар" );
				Пока Запрос.Группировка( "УпрАналитика" ) = 1 Цикл
					пУпрАналитика = Запрос.УпрАналитика;
					пЗнач = Запрос.фКонОст;
					таб.ВывестиСекцию( "УпрАналитика" );
					Пока Запрос.Группировка( "Склад" ) = 1 Цикл
						пСклад = Запрос.Склад;
						пЗнач = Запрос.фКонОст;
						таб.ВывестиСекцию( "Склад" );
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
		Иначе
			Если Запрос.Получить( Товар, УпрАналитика, ) = 1 Тогда
				Товар = Запрос.Товар;
				пЗнач = Запрос.фКонОст;
				таб.ВывестиСекцию( "Товар" );
				пУпрАналитика = Запрос.УпрАналитика;
				пЗнач = Запрос.фКонОст;
				таб.ВывестиСекцию( "УпрАналитика" );
				Пока Запрос.Группировка( "Склад" ) = 1 Цикл
					пСклад = Запрос.Склад;
					пЗнач = Запрос.фКонОст;
					таб.ВывестиСекцию( "Склад" );
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		таб.ТолькоПросмотр(1);
		таб.Показать( "Расшифровка по складу" );
	КонецЕсли;
КонецФункции


//******************************************************************************
// ЯвляетсяРабочимДнем(Д)
// Параметры: Д - дата
// Возвращаемое значение: 1, если Д является рабочим днем 0, иначе
// Описание:
//  Проверяет, является ли дата рабочим днем в соответсвии с настройкой рабочей недели
Функция ЯвляетсяРабочимДнем(Д)
	Если НомерДняНедели(Д)>ЧислоРабочихДнейВНеделе Тогда
		Возврат 0;
	Иначе
		Возврат 1;
	КонецЕсли;	
КонецФункции	// ЯвляетсяРабочимДнем()


Функция РабочаяДатаРасчетная(НачДата,КолвоДней)  Экспорт
	// функция возвращает дату через заданное
	// количество рабочих дней, т.е.
	// без суббот и воскресений.
	Дней=0;
	К=0;
	ПрошлоДней= Число(НачДата-Дата(1994,01,03));
	//// в константе надо указать любую
	//// дату понедельника в прошлом
	Пока Дней<КолвоДней Цикл
		К=К+1;
		// определим день недели
		ДН=НомерДняНедели(НачДата+К);
		
		Если  ЯвляетсяРабочимДнем(НачДата+К)=1 Тогда
			Дней=Дней+1;
		КонецЕсли;
		
	КонецЦикла;
	Возврат НачДата+К; 
КонецФункции

//******************************************************************************
// ЧислоРабочихДнейМежду(Д1,Д2)
// Параметры: Д1 и Д2 - даты
// Возвращаемое значение: Число рабочих дней между Д1 и Д2 включительно
// Описание:
//  Расчет количества рабочих дней между датами в соответствии с установленной
//  длиной рабочей недели.
//  

Функция ЧислоРабочихДнейМежду(Д1,Д2)
	Перем ОбщееЧислоДней, ЧислоПолныхНедель, ЧислоДнейВНеполнойНеделе;     
	Перем ЧислоРабочихДней;
	// если дата конца меньше даты начала, то число дней = 0
	Если Д1>Д2 Тогда
		Возврат 0;
	КонецЕсли;
	ОбщееЧислоДней = (Д2-Д1)+1;                                      
	ЧислоДнейВНеполнойНеделе = ОбщееЧислоДней % 7;
	ЧислоПолныхНедель = Окр((ОбщееЧислоДней - ЧислоДнейВНеполнойНеделе)/7);
	ЧислоРабочихДней = ЧислоРабочихДнейВНеделе*ЧислоПолныхНедель;
	Для Индекс = 0 По (ЧислоДнейВНеполнойНеделе-1) Цикл
		ЧислоРабочихДней = ЧислоРабочихДней + ЯвляетсяРабочимДнем(Д2-Индекс);
	КонецЦикла;	
	Возврат ЧислоРабочихДней;           
КонецФункции	// ЧислоРабочихДнейМежду()        


Процедура СформироватьНовый()
	
	Если (флЗаявка=1) и (ПустоеЗначение(ВыбАналитика)=1) Тогда
		Предупреждение("Нельзя создавать документ эл. заявки без выбранной аналитики!");
		Возврат;
	КонецЕсли;

	ДатаНачала = (НачНедели(ДатаПо)-1)-7*КолНедель;
	ДатаКонца = КонНедели(НачНедели(ДатаПо)-1);
	ЧислоРабочихДнейВНеделе = 4 + спКолРабДней.ТекущаяСтрока();
	пКолвоДней = ЧислоРабочихДнейМежду( ДатаНачала, ДатаКонца );
	
	начЛог = семЗаписатьЛогНач( "Отчет", "Минимальные запасы", "Обработка", "Формирование отчета (новый)" );
	Запрос=СоздатьОбъект("ODBCRecordSet");
	Запрос2=СоздатьОбъект("ODBCRecordSet");
	Запрос3=СоздатьОбъект("ODBCRecordSet");
	Запрос4=СоздатьОбъект("ODBCRecordSet");
	
	пУпрАналитикаОпт = Константа.ОсновнойСклад.УпрАналитика;
	
	Условие="";
	УсловиеОпт="";
	УсловиеОжПоставки="";
	Условие2="WHERE СпрН.ISMARK =0 ";
	УсловиеЗапасы="WHERE 1 = 1";
	Если флНулевые=0 Тогда
		Условие2=Условие2+" AND $Запасы.УпрАналитика <> $ПустойИД";
	КонецЕсли;

	Условие = Условие + " AND ($СпрМХ.НеВключатьВПланирование = 0)";
	

	Если спТоваров.РазмерСписка() > 0 Тогда 
		Условие = Условие + " AND (Товар IN (SELECT Val FROM #Товары))";
		УсловиеОпт = УсловиеОпт + " AND (СпрН.ID IN (SELECT Val FROM #Товары))";
		Условие2 = Условие2 + " AND (СпрН.ID IN (SELECT Val FROM #Товары))";
		УсловиеЗапасы = УсловиеЗапасы + " AND (Запасы.PARENTEXT IN (SELECT Val FROM #Товары))";
		Запрос.УложитьСписокОбъектов(спТоваров,"#Товары","Номенклатура");
	КонецЕсли; 
	
	Если спПоставщиков.РазмерСписка() > 0 Тогда 
		Условие2 = Условие2 + " AND ($СпрН.Поставщик IN (SELECT Val FROM #Поставщики))";
		УсловиеОпт = УсловиеОпт + " AND ($СпрН.Поставщик IN (SELECT Val FROM #Поставщики))";
		Запрос.УложитьСписокОбъектов(спПоставщиков,"#Поставщики","Контрагенты");
	КонецЕсли; 

	Если выбЗакупщик.Выбран() = 0 Тогда
	ИначеЕсли выбЗакупщик.ЭтоГруппа() = 1 Тогда 
		Условие2 = Условие2 + " AND ($СпрН.Закупщик IN (SELECT Val FROM #Закупщики))";
		УсловиеОпт = УсловиеОпт + " AND ($СпрН.Закупщик IN (SELECT Val FROM #Закупщики))";
		Запрос.УложитьСписокОбъектов(выбЗакупщик,"#Закупщики","Сотрудники");
	Иначе 
		Условие2 = Условие2 + " AND ($СпрН.Закупщик = :ВыбЗакупщик)";
		УсловиеОпт = УсловиеОпт + " AND ($СпрН.Закупщик = :ВыбЗакупщик)";
		Запрос.УстановитьТекстовыйПараметр("ВыбЗакупщик",выбЗакупщик);
		Запрос2.УстановитьТекстовыйПараметр("ВыбЗакупщик",выбЗакупщик);
		Запрос3.УстановитьТекстовыйПараметр("ВыбЗакупщик",выбЗакупщик);
		Запрос4.УстановитьТекстовыйПараметр("ВыбЗакупщик",выбЗакупщик);
	КонецЕсли; 
	
	Если спСпецкоды.РазмерСписка() > 0 Тогда 
		спСпецкодыФильтр = СоздатьОбъект("СписокЗначений");
		Для инд=1 По спСпецкоды.РазмерСписка()  Цикл
			Если спСпецкоды.Пометка(инд)=1 Тогда
				спСпецкодыФильтр.ДобавитьЗначение(спСпецкоды.ПолучитьЗначение(инд));
			КонецЕсли;
		КонецЦикла;
	
		Если спСпецкодыФильтр.РазмерСписка() > 0 Тогда
			Условие = Условие + " AND ($СпрН.ПризнакСпецКода IN (SELECT Val FROM #Спецкоды))";
			Условие2 = Условие2 + " AND ($СпрН.ПризнакСпецКода IN (SELECT Val FROM #Спецкоды))";
			УсловиеОпт = УсловиеОпт + " AND ($СпрН.ПризнакСпецКода IN (SELECT Val FROM #Спецкоды))";
			Запрос.УложитьСписокОбъектов(спСпецкодыФильтр,"#Спецкоды");
		КонецЕсли;
	КонецЕсли; 
	


	Если выбАссистент.Выбран() = 0 Тогда
	ИначеЕсли выбАссистент.ЭтоГруппа() = 1 Тогда 
		Условие2 = Условие2 + " AND ($СпрН.ЗакупщикАссистент IN (SELECT Val FROM #Ассистенты))";
		УсловиеОпт = УсловиеОпт + " AND ($СпрН.ЗакупщикАссистент IN (SELECT Val FROM #Ассистенты))";
		Запрос.УложитьСписокОбъектов(выбАссистент,"#Ассистенты","Сотрудники");
	Иначе 
		Условие2 = Условие2 + " AND ($СпрН.ЗакупщикАссистент = :ВыбАссистент)";
		УсловиеОпт = УсловиеОпт + " AND ($СпрН.ЗакупщикАссистент = :ВыбАссистент)";
		Запрос.УстановитьТекстовыйПараметр("ВыбАссистент",выбАссистент);
		Запрос2.УстановитьТекстовыйПараметр("ВыбАссистент",выбАссистент);
		Запрос3.УстановитьТекстовыйПараметр("ВыбАссистент",выбАссистент);
		Запрос4.УстановитьТекстовыйПараметр("ВыбАссистент",выбАссистент);

	КонецЕсли; 


	УсловиеОжПоставки = Условие;
	Если ВыбАналитика.Выбран() = 1 Тогда
		Условие = Условие + " AND ($СпрМХ.УпрАналитика = :ВыбАналитика)";
		УсловиеЗапасы = УсловиеЗапасы + " AND ($Запасы.УпрАналитика = :ВыбАналитика)";
		Запрос.УстановитьТекстовыйПараметр("ВыбАналитика",ВыбАналитика);
		Запрос2.УстановитьТекстовыйПараметр("ВыбАналитика",ВыбАналитика);
	КонецЕсли;
	
	Если флНедобор=1 Тогда
		Условие2 = Условие2 + " AND (CASE WHEN COALESCE(ОстаткиТоваров.ДостОст,0) < COALESCE($Запасы.МинЗапас,0) THEN CASE WHEN COALESCE($Запасы.МинЗапас,0) = 0 THEN 0 
	|															 ELSE COALESCE(ОстаткиТоваров.ДостОст,0)-COALESCE($Запасы.МинЗапас,0) END 
	|					   			ELSE 0 END ) <> 0";
	КонецЕсли;

	Если флЗаказПоставщику=1 Тогда
		Условие2 = Условие2 + " AND ($СпрК.АвтоЗаказПоставщику=1)";
	КонецЕсли;

	Если флНулевые=1 Тогда
		Условие2 = Условие2 + " AND COALESCE(ОстаткиТоваров.ДостОст,0) > 0 ";
	КонецЕсли;
	
	Если Лев(Условие,4)=" AND" Тогда
		Условие=Сред(Условие,5);
	КонецЕсли;

	Если Лев(УсловиеОпт,4)=" AND" Тогда
		УсловиеОпт=Сред(УсловиеОпт,5);
	Иначе
		УсловиеОпт="1=1";
	КонецЕсли;


	Если Лев(УсловиеОжПоставки,4)=" AND" Тогда
		УсловиеОжПоставки=Сред(УсловиеОжПоставки,5);
	КонецЕсли;

	//{запрос по запасам товаров
	ТекстЗапроса="SELECT СпрН.ID [Товар $Справочник.Номенклатура]
	|					, СпрН.CODE КодТовара
	|					, COALESCE($Запасы.МинЗапас,0) фМинЗапас
	|					, COALESCE($Запасы.УпрАналитика,$ПустойИД) [УпрАналитика $Справочник.УпрАналитика]
	|					, $СпрН.Поставщик [Поставщик $Справочник.Контрагенты]
	|					, $СпрК.ВалютаКредитаПоставщика [ВалютаПоставщика $Справочник.Валюты]
	|					, $СпрН.ЦенаПриобретения * $ПоследнееЗначение.Валюты.Курс($СпрН.ВалютаЗакупки,GETDATE()) / $ПоследнееЗначение.Валюты.Курс($СпрК.ВалютаКредитаПоставщика,GETDATE()) ЦенаЗакупки
	|					, COALESCE(ОстаткиТоваров.Ост,0) Остаток
	|					, COALESCE(ОстаткиТоваров.ДостОст,0) ОстатокДост
	|					, COALESCE(ОстаткиТоваров.Рез,0) Резерв
	|					, COALESCE(ЗаказыПоставщикам.Ост,0) ОжидПриход
	|					, CASE WHEN COALESCE(ОстаткиТоваров.ДостОст,0) < COALESCE($Запасы.МинЗапас,0) THEN CASE WHEN COALESCE($Запасы.МинЗапас,0) = 0 THEN 0 
	|															 ELSE COALESCE(ОстаткиТоваров.ДостОст,0)-COALESCE($Запасы.МинЗапас,0) END
	|					   ELSE 0 END Недобор
	|					, ($СпрН.ЦенаПриобретения * $ПоследнееЗначение.Валюты.Курс($СпрН.ВалютаЗакупки,GETDATE()) / $ПоследнееЗначение.Валюты.Курс($СпрК.ВалютаКредитаПоставщика,GETDATE())) 
	|					  * CASE WHEN COALESCE(ОстаткиТоваров.ДостОст,0) < COALESCE($Запасы.МинЗапас,0) THEN CASE WHEN COALESCE($Запасы.МинЗапас,0) = 0 THEN 0 
	|															 ELSE COALESCE($Запасы.МинЗапас,0) - COALESCE(ОстаткиТоваров.ДостОст,0) END
	|					   ELSE 0 END СуммаЗакупки
	|					, COALESCE(RTRIM($СпрГруппа2.ПоАлфавиту),'')+','+COALESCE(RTRIM($СпрГруппа1.ПоАлфавиту),'')+','+RTRIM($СпрН.ПоАлфавиту) СтрокаСортировки
	|															
	|			  FROM $Справочник.Номенклатура AS СпрН (NOLOCK) 
	|			  LEFT JOIN $Справочник.Номенклатура СпрГруппа1 (NOLOCK) ON СпрГруппа1.ID = СпрН.PARENTID 
	|			  LEFT JOIN $Справочник.Номенклатура СпрГруппа2 (NOLOCK) ON СпрГруппа2.ID = СпрГруппа1.PARENTID 
	|		  	  "+?(флНулевые=1,"LEFT","INNER")+" JOIN (SELECT * FROM $Справочник.Запасы AS Запасы (NOLOCK) "+УсловиеЗапасы+" AND COALESCE($Запасы.МинЗапас,0) > 0) Запасы ON Запасы.PARENTEXT = СпрН.ID AND Запасы.ISMARK = 0
	|			  LEFT JOIN $Справочник.Контрагенты СпрК (NOLOCK) ON СпрК.ID = $СпрН.Поставщик
	|			  LEFT JOIN (SELECT  Товар, 
	|								 $СпрМХ.УпрАналитика УпрАналитика, 
	|								 SUM(ЗаказыПоставщикамОстатки.КоличествоОстаток) Ост
	|						  FROM $РегистрОстатки.ТоварыВПути("+?(ДатаПо=ПолучитьДатуТА(),"",":ДатаПо")+",  
	|															INNER JOIN $Справочник.Номенклатура AS СпрН (NOLOCK) ON СпрН.ID = Товар
	|															INNER JOIN $Документ.ЗаказПоставщику ДокЗ (NOLOCK) ON ДокЗ.IDDOC = RIGHT(ПоЗаказу,9)
	|															INNER JOIN $Справочник.МестаХранения СпрМХ (NOLOCK) ON СпрМХ.ID = $ДокЗ.Склад
	|															,(СрокПоставки>=:ДатаПоcтавки) "+?(ПустоеЗначение(УсловиеОжПоставки)=1,""," AND "+УсловиеОжПоставки)+",(Товар,ПоЗаказу),) AS ЗаказыПоставщикамОстатки 
	|						INNER JOIN $Документ.ЗаказПоставщику ДокЗ (NOLOCK) ON ДокЗ.IDDOC = RIGHT(ПоЗаказу,9)
	|						INNER JOIN $Справочник.МестаХранения СпрМХ (NOLOCK) ON СпрМХ.ID=$ДокЗ.Склад
	|						GROUP BY Товар, $СпрМХ.УпрАналитика
	|						) as ЗаказыПоставщикам ON СпрН.ID = ЗаказыПоставщикам.Товар "+?(флНулевые=0,"AND :ВыбАналитикаОпт = ЗаказыПоставщикам.УпрАналитика","")+"
	|			  LEFT JOIN (SELECT Товар, 
	|								УпрАналитика, 
	|							    SUM(Ост) Ост,
	|								SUM(ДостОст) ДостОст,
	|								SUM(Рез) Рез
	|						 FROM (
	|						  		SELECT Товар, 
	|										 $СпрМХ.УпрАналитика УпрАналитика,
	|										 ПартииТоваровОстатки.ОстатокТовараОстаток Ост,
	|										 ПартииТоваровОстатки.ОстатокТовараОстаток ДостОст,
	|										 0 Рез
	|						  		FROM $РегистрОстатки.ПартииТоваров("+?(ДатаПо=ПолучитьДатуТА(),"",":ДатаПо")+",
	|															   INNER JOIN $Справочник.Номенклатура AS СпрН (NOLOCK) ON СпрН.ID = Товар
	|															   INNER JOIN $Справочник.МестаХранения СпрМХ (NOLOCK) ON СпрМХ.ID=Склад
	|															 ,(Фирма=:ВыбФирма) AND (Статус <> :Отданный)"+?(ПустоеЗначение(Условие)=1,""," AND "+Условие)+",(Товар,Склад),) ПартииТоваровОстатки
	|						  		INNER JOIN $Справочник.МестаХранения СпрМХ (NOLOCK) ON СпрМХ.ID=ПартииТоваровОстатки.Склад
	|						  		UNION ALL 
	|						  		SELECT Товар, 
	|										 $СпрМХ.УпрАналитика УпрАналитика, 
	|										 0 Ост,
	|										 -1*РезервыТоваровОстатки.РезервТовараОстаток ДостОст,
	|										 РезервыТоваровОстатки.РезервТовараОстаток Рез
	|						  		FROM 	$РегистрОстатки.РезервыТоваров("+?(ДатаПо=ПолучитьДатуТА(),"",":ДатаПо")+",
	|																		INNER JOIN $Справочник.Номенклатура AS СпрН (NOLOCK) ON СпрН.ID = Товар
	|						  												INNER JOIN $Документ.Счет ДокС (NOLOCK) ON ДокС.IDDOC=ПоСчету
	|						  												INNER JOIN $Справочник.МестаХранения СпрМХ (NOLOCK) ON СпрМХ.ID=$ДокС.Склад AND $СпрМХ.УпрАналитика<>$ПустойИД
	|																		,"+Условие+",(Товар,ПоСчету),) РезервыТоваровОстатки
	|						  		INNER JOIN $Документ.Счет ДокС (NOLOCK) ON ДокС.IDDOC=РезервыТоваровОстатки.ПоСчету
	|						  		INNER JOIN $Справочник.МестаХранения СпрМХ (NOLOCK) ON СпрМХ.ID=$ДокС.Склад AND $СпрМХ.УпрАналитика<>$ПустойИД
	|						       ) О
	|						 GROUP BY Товар, УпрАналитика
	|						 ) as ОстаткиТоваров ON ОстаткиТоваров.Товар = СпрН.ID "+?(флНулевые=0,"AND $Запасы.УпрАналитика = ОстаткиТоваров.УпрАналитика","")+"

	|						"+Условие2+"	
	|				ORDER BY СтрокаСортировки
	|";

	Запрос.УстановитьТекстовыйПараметр("ВыбФирма",глФирма);
	Запрос.УстановитьТекстовыйПараметр("Отданный",Отданный);
	Запрос.УстановитьТекстовыйПараметр("ДатаПо",ДатаПо);
	Запрос.УстановитьТекстовыйПараметр("ДатаПоcтавки",ДатаПо-7);
	Запрос.УстановитьТекстовыйПараметр("ВыбАналитикаОпт",пУпрАналитикаОпт);

	итЗапасы=СоздатьОбъект("ИндексированнаяТаблица");
	//Запрос.Отладка(1);
	Запрос.ВыполнитьИнструкцию(ТекстЗапроса,итЗапасы);
	//}
	
	//{запрос по заказам товаров
	ТекстЗапросаЗаказано="SELECT  Товар [Товар $Справочник.Номенклатура], 
	|							  СрокПоставки,
	|							  $СпрМХ.УпрАналитика [УпрАналитика $Справочник.УпрАналитика], 
	|							   SUM(ЗаказыПоставщикамОстатки.КоличествоОстаток) Ост
	|						  FROM $РегистрОстатки.ТоварыВПути("+?(ДатаПо=ПолучитьДатуТА(),"",":ДатаПо")+",  
	|															INNER JOIN $Справочник.Номенклатура AS СпрН (NOLOCK) ON СпрН.ID = Товар
	|															INNER JOIN $Документ.ЗаказПоставщику ДокЗ (NOLOCK) ON ДокЗ.IDDOC = RIGHT(ПоЗаказу,9)
	|															INNER JOIN $Справочник.МестаХранения СпрМХ (NOLOCK) ON СпрМХ.ID = $ДокЗ.Склад
	|															,(СрокПоставки>=:ДатаПоcтавки) "+?(ПустоеЗначение(УсловиеОжПоставки)=1,""," AND "+УсловиеОжПоставки)+",(Товар,ПоЗаказу,СрокПоставки),) AS ЗаказыПоставщикамОстатки 
	|						INNER JOIN $Документ.ЗаказПоставщику ДокЗ (NOLOCK) ON ДокЗ.IDDOC = RIGHT(ПоЗаказу,9)
	|						INNER JOIN $Справочник.МестаХранения СпрМХ (NOLOCK) ON СпрМХ.ID=$ДокЗ.Склад
	|						GROUP BY Товар, $СпрМХ.УпрАналитика, СрокПоставки
	|						ORDER BY Товар, $СпрМХ.УпрАналитика, СрокПоставки
	|";
	Запрос2.УстановитьТекстовыйПараметр("ВыбФирма",глФирма);
	Запрос2.УстановитьТекстовыйПараметр("ДатаПо",ДатаПо);
	Запрос2.УстановитьТекстовыйПараметр("ДатаПоcтавки",ДатаПо-7);
	итЗаказано=СоздатьОбъект("ИндексированнаяТаблица");
	//Запрос.Отладка(1);
	Запрос2.ВыполнитьИнструкцию(ТекстЗапросаЗаказано,итЗаказано);
	итЗаказано.ДобавитьИндекс("иТовар","*Товар");
	итЗаказано.ДобавитьИндекс("иТоварАналитика","*Товар,*УпрАналитика");
	//}
	
	//{запрос по остаткам товаров
	ТекстЗапросаОпт = "SELECT Товар [Товар $Справочник.Номенклатура], 
	|						  SUM(ДостОст) ДостОст
	|				   FROM (
	|						  		SELECT Товар, 
	|										 ПартииТоваровОстатки.ОстатокТовараОстаток Ост,
	|										 ПартииТоваровОстатки.ОстатокТовараОстаток ДостОст,
	|										 0 Рез
	|						  		FROM $РегистрОстатки.ПартииТоваров("+?(ДатаПо=ПолучитьДатуТА(),"",":ДатаПо")+",
	|															   INNER JOIN $Справочник.Номенклатура AS СпрН (NOLOCK) ON СпрН.ID = Товар
	|															   INNER JOIN $Справочник.МестаХранения СпрМХ (NOLOCK) ON СпрМХ.ID=Склад AND $СпрМХ.УпрАналитика=:ВыбАналитикаОпт AND  $СпрМХ.НеВключатьВПланирование = 0
	|															 ,(Фирма=:ВыбФирма) AND (Статус <> :Отданный)"+?(ПустоеЗначение(УсловиеОпт)=1,""," AND "+УсловиеОпт)+",(Товар),) ПартииТоваровОстатки
	|						  		UNION ALL 
	|						  		SELECT Товар, 
	|										 0 Ост,
	|										 -1*РезервыТоваровОстатки.РезервТовараОстаток ДостОст,
	|										 РезервыТоваровОстатки.РезервТовараОстаток Рез
	|						  		FROM 	$РегистрОстатки.РезервыТоваров("+?(ДатаПо=ПолучитьДатуТА(),"",":ДатаПо")+",
	|																		INNER JOIN $Справочник.Номенклатура AS СпрН (NOLOCK) ON СпрН.ID = Товар
	|						  												INNER JOIN $Документ.Счет ДокС (NOLOCK) ON ДокС.IDDOC=ПоСчету
	|						  												INNER JOIN $Справочник.МестаХранения СпрМХ (NOLOCK) ON СпрМХ.ID=$ДокС.Склад AND $СпрМХ.УпрАналитика=:ВыбАналитикаОпт AND $СпрМХ.НеВключатьВПланирование = 0
	|																		,"+УсловиеОпт+",(Товар),) РезервыТоваровОстатки
	|						       ) О
	|						 GROUP BY Товар
	|";

	Запрос3.УстановитьТекстовыйПараметр("ВыбФирма",глФирма);
	Запрос3.УстановитьТекстовыйПараметр("ВыбАналитикаОпт",пУпрАналитикаОпт);
	Запрос3.УстановитьТекстовыйПараметр("Отданный",Отданный);
	Запрос3.УстановитьТекстовыйПараметр("ДатаПо",ДатаПо);

	итОстаткиОпт=СоздатьОбъект("ИндексированнаяТаблица");
	//Запрос3.Отладка(1);
	Запрос3.ВыполнитьИнструкцию(ТекстЗапросаОпт,итОстаткиОпт);
	//итОстаткиОпт.Показать();
	итОстаткиОпт.ДобавитьИндекс("иТовар","*Товар");
	//}
	
	//{Запрос по движениям товаров 
	
	глУдалениеВременнойТаблицыSQL("#СкладыАналитикиОпт");
	ТекстЗапроса="SELECT МестаХранения.ID ID
	|			  INTO #СкладыАналитикиОпт
	|			  FROM $Справочник.МестаХранения AS МестаХранения (NOLOCK)
	|			  WHERE ($МестаХранения.УпрАналитика = :ВыбАналитикаОпт)
	|				    AND $МестаХранения.ТипСклада NOT IN ($Перечисление.ТипыСкладов.СкладНеликвидов,$Перечисление.ТипыСкладов.СкладРаспродажи)
	|					AND МестаХранения.ID NOT IN (SELECT ID FROM $Справочник.СкладыИсключитьИзПланирования)
	|";
	
	ODBCRecordSet = СоздатьОбъект( "ODBCRecordSet" );
	ODBCRecordSet.УстановитьТекстовыйПараметр("ВыбАналитикаОпт",пУпрАналитикаОпт);
	ODBCRecordSet.ВыполнитьСкалярный(ТекстЗапроса);
	
	ТекстЗапросаДвижения="-- запрос движения товаров
	|SELECT
	|	Товар as [Товар $Справочник.Номенклатура],
	|	SUM( Продажа ) as Продажа,
	|	SUM( Возврат ) as Возврат,
	|   SUM( Списание ) as Списание,
	|   SUM( Производство ) as Производство,
	|   SUM( Перемещение ) as Перемещение,
	|	SUM(Продажа + Возврат + Списание + Производство + Перемещение) as Оборот,
	|	ROUND(AVG(Продажа + Возврат + Списание + Производство + Перемещение),3) as СредОборот
	|FROM (
	|
	|-- запрос по продажам
	|SELECT
	|	$НачалоПериода.Неделя(DATE_TIME_IDDOC,Строка) Неделя, 
	|	$РегПродажи.Товар as Товар,
	|	SUM(CASE WHEN $РегПродажи.Количество > 0 THEN $РегПродажи.Количество ELSE 0 END) as Продажа,
	|	SUM(CASE WHEN $РегПродажи.Количество < 0 THEN $РегПродажи.Количество*(-1) ELSE 0 END) as Возврат,
	|	0 as Списание,
	|	0 as Производство,
	|	0 as Перемещение
	|FROM $Регистр.ОборотыТоваров as РегПродажи (nolock)
	|INNER JOIN $Справочник.Номенклатура AS СпрН (NOLOCK) ON СпрН.ID = $РегПродажи.Товар
	|WHERE
	|	$РегПродажи.Фирма = :ВыбФирма 
	|	AND РегПродажи.Date_Time_IDDoc BETWEEN :Нач AND :Кон~
	|	AND $РегПродажи.ВидОперации = :ВидОперации
	|	AND $РегПродажи.ФлагУчета = 0
	|	AND $РегПродажи.Склад IN (SELECT ID FROM #СкладыАналитикиОпт)
	|	AND "+УсловиеОпт+"
	|GROUP BY $РегПродажи.Товар, $НачалоПериода.Неделя(DATE_TIME_IDDOC,Строка)
	|UNION ALL
	|
	|-- запрос по списаниям по 1-й категории
	|SELECT
	|	$НачалоПериода.Неделя(DATE_TIME_IDDOC,Строка) Неделя, 
	|	$РегСписания.Товар as Товар,
	|	0 as Продажа,
	|	0 as Возврат,
	|	SUM($РегСписания.Количество) as Списание,
	|	0 as Производство,
	|	0 as Перемещение
	|FROM
	|	$Регистр.ОборотыТоваров as РегСписания (nolock)
	|INNER JOIN $Справочник.Номенклатура AS СпрН (NOLOCK) ON СпрН.ID = $РегСписания.Товар
	|INNER JOIN	$Документ.Списание Док ON РегСписания.IDDOC = Док.IDDOC
	|
	|WHERE
	|	$РегСписания.Фирма = :ВыбФирма 
	|	AND РегСписания.Date_Time_IDDoc BETWEEN :Нач AND :Кон~
	|	AND $Док.КатегорияСписания = :КатегорияСписания
	|	AND $РегСписания.ВидОперации = :ВидОперации
	|	AND $РегСписания.ФлагУчета = 4
	|	AND $РегСписания.Склад IN (SELECT ID FROM #СкладыАналитикиОпт)
	|	AND  "+УсловиеОпт+"
	|GROUP BY $РегСписания.Товар, $НачалоПериода.Неделя(DATE_TIME_IDDOC,Строка)
	|
	|UNION ALL
	|
	|-- запрос по производству
	|SELECT
	|	$НачалоПериода.Неделя(DATE_TIME_IDDOC,Строка) Неделя, 
	|	$РегПроизводство.Товар as Товар,
	|	0 as Продажа,
	|	0 as Возврат,
	|	0 as Списание,
	|	SUM($РегПроизводство.ОстатокТовара) as Производство,
	|	0 as Перемещение
	|FROM
	|	$Регистр.ПартииТоваров as РегПроизводство (nolock)
	|INNER JOIN $Справочник.Номенклатура AS СпрН (NOLOCK) ON СпрН.ID = $РегПроизводство.Товар
	|WHERE
	|	$РегПроизводство.Фирма = :ВыбФирма 
	|	AND РегПроизводство.Date_Time_IDDoc BETWEEN :Нач AND :Кон~
	|	AND РегПроизводство.DEBKRED = 1
	|	AND $РегПроизводство.КодОперации = :Производство
	|	AND $РегПроизводство.ФлагУчета <> 66
	|	AND $РегПроизводство.Склад IN (SELECT ID FROM #СкладыАналитикиОпт)
	|	AND  "+УсловиеОпт+"
	|GROUP BY $РегПроизводство.Товар, $НачалоПериода.Неделя(DATE_TIME_IDDOC,Строка)
	|
	|UNION ALL
	|
	|-- запрос по перемещениям (внешним)
	|SELECT
	|	$НачалоПериода.Неделя(DATE_TIME_IDDOC,Строка) Неделя, 
	|	$РегПеремешения.Товар as Товар,
	|	0 as Продажа,
	|	0 as Возврат,
	|	0 as Списание,
	|	0 as Производство,
	|	SUM($РегПеремешения.ОстатокТовара) as Перемещение
	|FROM
	|	$Регистр.ПартииТоваров as РегПеремешения (nolock)
	|INNER JOIN $Справочник.Номенклатура AS СпрН (NOLOCK) ON СпрН.ID = $РегПеремешения.Товар
	|WHERE
	|	$РегПеремешения.Фирма = :ВыбФирма 
	|	AND РегПеремешения.Date_Time_IDDoc BETWEEN :Нач AND :Кон~
	|	AND РегПеремешения.DEBKRED = 1
	//|	AND $РегПроизводство.КодОперации = :Перемещение
	|	AND $РегПеремешения.ФлагУчета = 7
	|	AND IDDOCDEF = $ВидДокумента.ПеремещениеНаСкладГотовойПродукции
	|	AND $РегПеремешения.Склад IN (SELECT ID FROM #СкладыАналитикиОпт)
	|	AND  "+УсловиеОпт+"
	|GROUP BY $РегПеремешения.Товар, $НачалоПериода.Неделя(DATE_TIME_IDDOC,Строка)
	|
	|UNION ALL
	|
	|-- запрос по перемещениям (внутренним между складами разной аналитики)
	|SELECT
	|	$НачалоПериода.Неделя(DATE_TIME_IDDOC,Строка) Неделя, 
	|	$РегПеремешения.Товар as Товар,
	|	0 as Продажа,
	|	0 as Возврат,
	|	0 as Списание,
	|	0 as Производство,
	|	SUM($РегПеремешения.ОстатокТовара) as Перемещение
	|FROM
	|	$Регистр.ПартииТоваров as РегПеремешения (nolock)
	|INNER JOIN $Справочник.Номенклатура AS СпрН (NOLOCK) ON СпрН.ID = $РегПеремешения.Товар
	|LEFT JOIN $Документ.Перемещение ДокП (NOLOCK) ON ДокП.IDDOC=РегПеремешения.IDDOC AND РегПеремешения.IDDOCDEF = $ВидДокумента.Перемещение
	|LEFT JOIN $Документ.ПеремещениеНаСкладГотовойПродукции ДокПГП (NOLOCK) ON ДокПГП.IDDOC=РегПеремешения.IDDOC AND РегПеремешения.IDDOCDEF = $ВидДокумента.ПеремещениеНаСкладГотовойПродукции
	|WHERE
	|	$РегПеремешения.Фирма = :ВыбФирма 
	|	AND РегПеремешения.Date_Time_IDDoc BETWEEN :Нач AND :Кон~
	|	AND РегПеремешения.DEBKRED = 1
		//|	AND $РегПроизводство.КодОперации = :Перемещение
	|	AND $РегПеремешения.ФлагУчета = 3
	|	AND РегПеремешения.IDDOCDEF IN ($ВидДокумента.Перемещение, $ВидДокумента.ПеремещениеНаСкладГотовойПродукции)
	|	AND $РегПеремешения.Склад IN (SELECT ID FROM #СкладыАналитикиОпт)
	|	AND COALESCE($ДокП.СкладПолучатель,$ДокПГП.СкладКонечный) NOT IN (SELECT ID FROM #СкладыАналитикиОпт)
	|	AND  "+УсловиеОпт+"
	|GROUP BY $РегПеремешения.Товар, $НачалоПериода.Неделя(DATE_TIME_IDDOC,Строка)
	|
	|) Движения
	|GROUP BY Движения.Товар
	|";
		
	//
	//
	//ТекстЗапросаОпт = "SELECT Товар [Товар $Справочник.Номенклатура]
	//|						 , ROUND(AVG(Оборот),3) СредОборот
	//|						 , SUM(Оборот) Оборот
	//|				   FROM (
	//|					SELECT $Обороты.Товар Товар
	//|						 , $НачалоПериода.Неделя(DATE_TIME_IDDOC,Строка) Неделя
	//|						 , SUM($Обороты.Количество) Оборот
	//|				   FROM $Регистр.ОборотыТоваров Обороты (NOLOCK)
	//|					INNER JOIN $Справочник.Номенклатура AS СпрН (NOLOCK) ON СпрН.ID = $Обороты.Товар
	//|					INNER JOIN $Справочник.МестаХранения СпрМХ (NOLOCK) ON СпрМХ.ID = $Обороты.Склад AND $СпрМХ.УпрАналитика=:ВыбАналитикаОпт
	//|				   WHERE DATE_TIME_IDDOC BETWEEN :Нач AND :Кон~
	//|						AND $Обороты.Фирма = :ВыбФирма AND $Обороты.ВидОперации = '-' AND "+УсловиеОпт+"
	//|				   GROUP BY $Обороты.Товар, $НачалоПериода.Неделя(DATE_TIME_IDDOC,Строка)
	//|					) ОборотыСредние
	//|				   GROUP BY Товар
	//|				   HAVING SUM(Оборот) > 0 
	//|";	

	Запрос4.УстановитьТекстовыйПараметр("ВыбФирма",глФирма);
	Запрос4.УстановитьТекстовыйПараметр("ВыбАналитикаОпт",пУпрАналитикаОпт);
	Запрос4.УстановитьТекстовыйПараметр("Нач",ДатаНачала);
	Запрос4.УстановитьТекстовыйПараметр("Кон",ДатаКонца);
	Запрос4.УстановитьТекстовыйПараметр("ВидОперации", "-");
	Запрос4.УстановитьТекстовыйПараметр("КатегорияСписания", Перечисление.КатегорииСписания.Категория1);
	Запрос4.УстановитьТекстовыйПараметр("Производство", "z");
	Запрос4.УстановитьТекстовыйПараметр("Закупка", "З");
	Запрос4.УстановитьТекстовыйПараметр("ВозвратСХранения", ВозвратТовараСХранения);
	Запрос4.УстановитьТекстовыйПараметр("Статус", Отданный);
	
	
	итПродажиОпт=СоздатьОбъект("ИндексированнаяТаблица");
	//Запрос4.Отладка(1);
	Запрос4.ВыполнитьИнструкцию(ТекстЗапросаДвижения,итПродажиОпт);
	//итПродажиОпт.Показать();
	итПродажиОпт.ДобавитьИндекс("иТовар","*Товар");
	//}

	
	Если флЗаявка=1 Тогда
		тДок=СоздатьОбъект("ТаблицаЗначений");
		ДокС=СоздатьОбъект("Документ.СчетОбщий");
		ДокС.Новый();
		ДокС.ВыгрузитьТабличнуюЧасть(тДок);
	КонецЕсли;


	Если НазваниеНабораПрав()="Администратор" Тогда
		//итЗапасы.Показать();
	КонецЕсли;
	
	таб=СоздатьОбъект("Таблица");
	Если пУпрАналитикаОпт=ВыбАналитика Тогда
		таб.ИсходнаяТаблица("ТаблицаНовОпт");
	Иначе
		таб.ИсходнаяТаблица("ТаблицаНов");
	КонецЕсли;
	таб.ВывестиСекцию( "Заголовок" );
	Если спТоваров.РазмерСписка() > 0 Тогда
		сзФильтр=спТоваров.ВСтрокуСРазделителями();
		пФильтр = "По товарам: " + СтрЗаменить(сзФильтр,"""","");
		таб.ВывестиСекцию( "Фильтр" );
	КонецЕсли; 
	Если спПоставщиков.РазмерСписка() > 0  Тогда
		сзФильтр=спПоставщиков.ВСтрокуСРазделителями();
		//пФильтр = "По " + ?( выбПоставщик.ЭтоГруппа() = 1, "группе поставщиков", "поставщику" ) + ": " + СтрЗаменить(сзФильтр,"""","");
		пФильтр = "По поставщикам: " + СтрЗаменить(сзФильтр,"""","");
		таб.ВывестиСекцию( "Фильтр" );
	КонецЕсли; 
	Если ВыбАналитика.Выбран() = 1 Тогда
		пФильтр = "По упр. аналитике: " + ВыбАналитика;
		таб.ВывестиСекцию( "Фильтр" );
	КонецЕсли;
	Если флНулевые = 1 Тогда
		пФильтр = "Выводить нулевые мин. запасы.";
		таб.ВывестиСекцию( "Фильтр" );
	КонецЕсли;
	Если флНедобор = 1 Тогда
		пФильтр = "Выводить только недобор.";
		таб.ВывестиСекцию( "Фильтр" );
	КонецЕсли;
	таб.ВывестиСекцию( "Шапка" );
	таб.Опции(0,0,таб.ВысотаТаблицы(),0);
	
	Если итЗапасы.КоличествоСтрок() = 0 Тогда
		таб.ВывестиСекцию( "Пусто" );
		таб.ТолькоПросмотр(1);
		таб.Показать("");
		Возврат;
	КонецЕсли;

	пЦенаЗакупки = "";
	пСуммаЗакупки = "";	
	сзКлюч=СоздатьОбъект("СписокЗначений");
	
	итЗаказано.Сортировать("СрокПоставки");

	Если флЗаказПоставщику=1 Тогда
		итЗапасы.Группировать("Поставщик : *Поставщик; Товар : *Товар; УпрАналитика : *УпрАналитика","фМинЗапас,Остаток,ОстатокДост,ОжидПриход,Резерв,СуммаЗакупки");	

		итЗапасы.Сортировать("Поставщик");
		с=0;
		итЗапасы.ВыбратьСтроки();
		Пока итЗапасы.ПолучитьСтроку() = 1 Цикл
			с=с+1;
		
			пПоставщик			= итЗапасы.Поставщик;
			пВалютаПоставщика	= итЗапасы.ВалютаПоставщика;
			пМинЗапас 			= итЗапасы.фМинЗапас;
			пОст	  			= итЗапасы.Остаток;
			пСвобОст			= итЗапасы.ОстатокДост;
			пРезерв				= итЗапасы.Резерв;

			пНедоб 				= итЗапасы.Недобор;
			пСуммаЗакупки 		= итЗапасы.СуммаЗакупки;
			пРезерв				= итЗапасы.Резерв;
		
			
			таб.ВывестиСекцию("Поставщик");
			итЗапасыТ=итЗапасы.тзПотомки;
			итЗапасыТ.Сортировать("КодТовара");
			итЗапасыТ.ВыбратьСтроки();
			Пока итЗапасыТ.ПолучитьСтроку() = 1 Цикл
				спОст = "";
				спРез = "";
				пЦенаЗакупки = "";
				пСуммаЗакупки = "";
				
				Товар	=	итЗапасыТ.Товар;
				
				пRetail=?(Товар.RETAIL=1,"R","");
				
				пПоставщик	 =  Товар.Поставщик;

				пСвобОстОпт = 0;
				Если итОстаткиОпт.НайтиСтроку("иТовар",Товар,,1)>0 Тогда
					пСвобОстОпт = итОстаткиОпт.ДостОст;
				КонецЕсли;

				пСредПрод = 0;
				пПродажа = 0;
				Если итПродажиОпт.НайтиСтроку("иТовар",Товар,,1)>0 Тогда
					пСредПрод = итПродажиОпт.СредОборот;
					пПродажа = итПродажиОпт.Оборот 
				КонецЕсли;

				пСкорость = ?( пКолвоДней = 0, 0,  пПродажа / пКолвоДней );
				Если пСкорость=0 Тогда
					пДатаОстатка = "";
				Иначе
					пДатаОстатка = РабочаяДатаРасчетная(ДатаПо,Окр(пСвобОстОпт / пСкорость,2));
				КонецЕсли;

				пОбеспНедель =0;
				Если пСкорость<>0 Тогда
					пОбеспНедель = Окр(пСвобОстОпт / пСредПрод,2);
				КонецЕсли;
				
				//если выбрана аналитика - тогда не выводим ее в цикле
				Если ПустоеЗначение(ВыбАналитика)=0 Тогда
					пУпрАналитика 	= итЗапасыТ.УпрАналитика;
					пМинЗапас 		= итЗапасыТ.фМинЗапас;
					пОст	  		= итЗапасыТ.Остаток;
					пСвобОст		= итЗапасыТ.ОстатокДост;
					пРезерв			= итЗапасыТ.Резерв;

					пНедоб = итЗапасыТ.Недобор;
					пСуммаЗакупки = итЗапасыТ.СуммаЗакупки;
					пЦенаЗакупки  = итЗапасыТ.ЦенаЗакупки;
			
					пОжДатыПрихода="";	
					
					сзКлюч.УдалитьВсе();
					сзКлюч.ДобавитьЗначение(Товар);
//					сзКлюч.ДобавитьЗначение(пУпрАналитика);
					сзКлюч.ДобавитьЗначение(пУпрАналитикаОпт);
					итЗаказано.Подмножество(сзКлюч,2,"иТоварАналитика");
					итЗаказано.ВыбратьСтроки("иТоварАналитика");
					Пока итЗаказано.ПолучитьСтроку("иТоварАналитика") = 1 Цикл
						Если ПустоеЗначение(пОжДатыПрихода)=0 Тогда
							пОжДатыПрихода=пОжДатыПрихода+РазделительСтрок;
						КонецЕсли;
						
						пОжДатыПрихода=пОжДатыПрихода+Шаблон("[итЗаказано.СрокПоставки] - [итЗаказано.Ост]");;
					КонецЦикла;
					
					пОжПрих=итЗапасыТ.ОжидПриход;
					
					Если фл60процентов=1 Тогда
						л_фильтрКолич=ФильтрДокумента(Товар,пМинЗапас,Абс_(пНедоб));
						Если л_фильтрКолич<>0 Тогда
							таб.ВывестиСекцию( "Товар"+?( пМинЗапас = 0, "0", "" ) );
						КонецЕсли;
					Иначе
							таб.ВывестиСекцию( "Товар"+?( пМинЗапас = 0, "0", "" ) );
					КонецЕсли;
					
					//добавлям в заявку только если недобор и товар не под спецзаказ
					Если (флЗаявка=1) И (Абс_(пНедоб)>0) И (Товар.ПризнакСпецкода<>Перечисление.СпецкодыТоваров.S) Тогда
					
						л_фильтрКолич=ФильтрДокумента(Товар,пМинЗапас,Абс_(пНедоб));
						Если л_фильтрКолич<>0 Тогда
							тДок.НоваяСтрока();
							тДок.Товар=Товар;
							//тДок.Количество=Макс(Абс_(пНедоб)-пОжПрих,0);
						//	тДок.Количество=Абс_(пНедоб);
							тДок.Количество=л_фильтрКолич;
						КонецЕсли;	
					КонецЕсли;
		
		//			таб.ВывестиСекцию( "УпрАналитика"+?( пМинЗапас = 0, "0", "" ) );
						
				Иначе //если не выбрана аналитика - тогда выводим в цикле детально по каждой аналитике
		
					пМинЗапас 		= итЗапасыТ.фМинЗапас;
					пОст			= итЗапасыТ.Остаток;
					пСвобОст		= итЗапасыТ.ОстатокДост;
					пРезерв			= итЗапасыТ.Резерв;
					пНедоб 			= итЗапасыТ.Недобор;
					пСуммаЗакупки 	= итЗапасыТ.СуммаЗакупки;
					пЦенаЗакупки  	= итЗапасыТ.ЦенаЗакупки;
					
					пОжДатыПрихода	= "";		
					
					итЗаказано.УстановитьФильтр(Товар,Товар,"иТовар");
					итЗаказано.ВыбратьСтроки("иТовар");
					Пока итЗаказано.ПолучитьСтроку("иТовар") = 1 Цикл
						Если ПустоеЗначение(пОжДатыПрихода)=0 Тогда
							пОжДатыПрихода=пОжДатыПрихода+РазделительСтрок;
						КонецЕсли;
						
						пОжДатыПрихода=пОжДатыПрихода+Шаблон("[итЗаказано.СрокПоставки] - [итЗаказано.Ост]");;
					КонецЦикла;
					
					пОжПрих			= итЗапасыТ.ОжидПриход;
		
					таб.ВывестиСекцию( "Товар"+?( пМинЗапас = 0, "0", "" ) );
					
					итЗапасы2=итЗапасыТ.тзПотомки;
					итЗапасы2.ВыбратьСтроки();
					Пока итЗапасы2.ПолучитьСтроку()=1 Цикл
						пУпрАналитика 	= итЗапасы2.УпрАналитика;
						пМинЗапас 		= итЗапасы2.фМинЗапас;
						пОст			= итЗапасы2.Остаток;
						пРезерв			= итЗапасы2.Резерв;
						пСвобОст		= итЗапасы2.ОстатокДост;
						пНедоб 			= итЗапасы2.Недобор;
						пСуммаЗакупки 	= итЗапасы2.СуммаЗакупки;
						пЦенаЗакупки  	= итЗапасы2.ЦенаЗакупки;
				
						пОжДатыПрихода="";		
						
						пОжПрих=итЗапасы2.ОжидПриход;
			
						таб.ВывестиСекцию( "УпрАналитика"+?( пМинЗапас = 0, "0", "" ) );
						
					КонецЦикла;
					
				КонецЕсли;		
				
				Состояние("Обработано: "+Окр(с/итЗапасы.КоличествоСтрок()*100,0)+"%");
			КонецЦикла; // по товарам
		КонецЦикла; // по поставщикам
		
	Иначе
		итЗапасы.Группировать("Товар : *Товар; УпрАналитика : *УпрАналитика","фМинЗапас,Остаток,ОжидПриход,Резерв,СуммаЗакупки");	
		
		итЗапасы.Сортировать("СтрокаСортировки");
		
		итЗапасы.ВыбратьСтроки();
		Пока итЗапасы.ПолучитьСтроку() = 1 Цикл
			спОст = "";
			спРез = "";
			пЦенаЗакупки = "";
			пСуммаЗакупки = "";
			
			Товар		 = итЗапасы.Товар;
			пRetail=?(Товар.RETAIL=1,"R","");

			пПоставщик	 =  Товар.Поставщик;
			
			пСвобОстОпт = 0;
			Если итОстаткиОпт.НайтиСтроку("иТовар",Товар,,1)>0 Тогда
				пСвобОстОпт = итОстаткиОпт.ДостОст;
			КонецЕсли;
			
			пСредПрод = 0;
			пПродажа = 0;
			Если итПродажиОпт.НайтиСтроку("иТовар",Товар,,1)>0 Тогда
				пСредПрод = итПродажиОпт.СредОборот;
				пПродажа = итПродажиОпт.Оборот
			КонецЕсли;

			пСкорость = ?( пКолвоДней = 0, 0,  пПродажа / пКолвоДней );
			Если пСкорость=0 Тогда
				пДатаОстатка = "";
			Иначе
				пДатаОстатка = РабочаяДатаРасчетная(ДатаПо,Окр(пСвобОстОпт / пСкорость,2));
			КонецЕсли;
			
			пОбеспНедель =0;
			Если пСкорость<>0 Тогда
				пОбеспНедель = Окр(пСвобОстОпт / пСредПрод,2);
			КонецЕсли;
			
			Если ПустоеЗначение(ВыбАналитика)=0 Тогда
				пУпрАналитика 	= итЗапасы.УпрАналитика;
				пМинЗапас 		= итЗапасы.фМинЗапас;
				пОст	  		= итЗапасы.Остаток;
				пСвобОст		= итЗапасы.ОстатокДост;
				пРезерв			= итЗапасы.Резерв;
				пНедоб 			= итЗапасы.Недобор;
		
				пОжДатыПрихода="";		

				сзКлюч.УдалитьВсе();
				сзКлюч.ДобавитьЗначение(Товар);
				//сзКлюч.ДобавитьЗначение(пУпрАналитика);
				сзКлюч.ДобавитьЗначение(пУпрАналитикаОпт);
				
				итЗаказано.Подмножество(сзКлюч,2,"иТоварАналитика");
				итЗаказано.ВыбратьСтроки("иТоварАналитика");
				Пока итЗаказано.ПолучитьСтроку("иТоварАналитика") = 1 Цикл
					Если ПустоеЗначение(пОжДатыПрихода)=0 Тогда
						пОжДатыПрихода=пОжДатыПрихода+РазделительСтрок;
					КонецЕсли;
					
					пОжДатыПрихода=пОжДатыПрихода+Шаблон("[итЗаказано.СрокПоставки] - [итЗаказано.Ост]");;
				КонецЦикла;

				пОжПрих=итЗапасы.ОжидПриход;
			
				Если фл60процентов=1 Тогда
					л_фильтрКолич=ФильтрДокумента(Товар,пМинЗапас,Абс_(пНедоб));
					Если л_фильтрКолич<>0 Тогда
						таб.ВывестиСекцию( "Товар"+?( пМинЗапас = 0, "0", "" ) );
					КонецЕсли;
				Иначе
					таб.ВывестиСекцию( "Товар"+?( пМинЗапас = 0, "0", "" ) );
				КонецЕсли;
			
				Если (флЗаявка=1) И (Абс_(пНедоб)>0) Тогда
					л_фильтрКолич=ФильтрДокумента(Товар,пМинЗапас,Абс_(пНедоб));
					Если л_фильтрКолич<>0 Тогда
						тДок.НоваяСтрока();
						тДок.Товар=Товар;
						//тДок.Количество=Макс(Абс_(пНедоб)-пОжПрих,0);
						//тДок.Количество=Абс_(пНедоб);
						тДок.Количество=л_фильтрКолич;
					КонецЕсли;
				КонецЕсли;
	
	//			таб.ВывестиСекцию( "УпрАналитика"+?( пМинЗапас = 0, "0", "" ) );
					
			Иначе
	
				пМинЗапас 	= итЗапасы.фМинЗапас;
				пОст	  	= итЗапасы.Остаток;
				пСвобОст	= итЗапасы.ОстатокДост;
				пРезерв		= итЗапасы.Резерв;
				пНедоб		= итЗапасы.Недобор;
		
				пОжДатыПрихода="";	
				итЗаказано.УстановитьФильтр(Товар,Товар,"иТовар");
				итЗаказано.ВыбратьСтроки("иТовар");
				Пока итЗаказано.ПолучитьСтроку("иТовар") = 1 Цикл
					Если ПустоеЗначение(пОжДатыПрихода)=0 Тогда
						пОжДатыПрихода=пОжДатыПрихода+РазделительСтрок;
					КонецЕсли;
					
					пОжДатыПрихода=пОжДатыПрихода+Шаблон("[итЗаказано.СрокПоставки] - [итЗаказано.Ост]");;
				КонецЦикла;
				
				пОжПрих=итЗапасы.ОжидПриход;
	
				пПоставщик = 
				таб.ВывестиСекцию( "Товар"+?( пМинЗапас = 0, "0", "" ) );
				
				итЗапасы2=итЗапасы.тзПотомки;
				итЗапасы2.ВыбратьСтроки();
				Пока итЗапасы2.ПолучитьСтроку()=1 Цикл
					пУпрАналитика 	= итЗапасы2.УпрАналитика;
					пМинЗапас 		= итЗапасы2.фМинЗапас;
					пОст			= итЗапасы2.Остаток;
					пРезерв			= итЗапасы2.Резерв;
					пСвобОст		= итЗапасы2.ОстатокДост;
					пНедоб 			= итЗапасы2.Недобор;
			
					пОжДатыПрихода="";		
					
					пОжПрих=итЗапасы2.ОжидПриход;
		
					таб.ВывестиСекцию( "УпрАналитика"+?( пМинЗапас = 0, "0", "" ) );
					
				КонецЦикла;
				
			КонецЕсли;		
			
			Состояние("Обработано: "+Окр(итЗапасы.НомерСтроки/итЗапасы.КоличествоСтрок()*100,0)+"%");
	КонецЦикла;
		
	КонецЕсли;
	
	
	МаксПозЗаявки=15;
	Если флЗаявка=1 Тогда
		ПозЗаявки=1;
//		Пока ПозЗаявки<=МаксПозЗаявки Цикл
			ЗаполнитьШапку(ДокС);
			ДокС.ВидЗаявки  = Перечисление.ВидыЗаявок.СводнаяЗаявка;
			ДокС.Валюта = Константа.ОсновнаяВалютаПродажи;
			ДокС.Дата_Курса =ДокС.ДатаДок;
			ДокС.Курс = КурсДляВалюты( ДокС.Валюта, ДокС.Дата_Курса );
			
			ДокС.Клиент				= Константа.ОсновнойПокупатель;
			ДокС.СтавкаНДС     		= Константа.ОсновнаяСтавкаНДС;               
			ДокС.СрокРезервирования	= Константа.ОсновнойСрокРезервирования;
			ДокС.Склад				= РозничныйТорговыйСклад;
			ДокС.КатегорияЦены 		= ?(ПустоеЗначение(Пользователь.ОснКатегорияЦены)=1,Константа.ОсновнаяКатегорияЦены,Пользователь.ОснКатегорияЦены);
			ДокС.ВидДоставки		= Перечисление.ВидыДоставки.Доставка;
			ДокС.ВидОплаты			= 2;
			ДокС.АвтоВремяТекущее();
			ДокС.ДатаДок			= РабочаяДата();
			ДокС.ДатаПоставки		= РабочаяДата()+1;
			ДокС.ЗагрузитьТабличнуюЧасть(тДок);
			ДокС.ВыбратьСтроки();
			Пока ДокС.ПолучитьСтроку() = 1 Цикл
				УстанЦеныРасх(ДокС);
			КонецЦикла;
			
			ОбъектЗаписать(ДокС,);
			Сообщить("Записан документ "+ДокС);
			ОткрытьФорму(ДокС.ТекущийДокумент());
			
//		КонецЦикла;
		
	КонецЕсли;
	таб.ТолькоПросмотр(1);
	таб.Показать( "Отчет по мин. запасам" );
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры

Процедура ПриОткрытии()
	                   
	спСпецкоды.УдалитьВсе();
	спСпецкоды.ДобавитьЗначение(ПолучитьПустоеЗначение("Перечисление.СпецкодыТоваров"),"<без признака>");
	Спр = СоздатьОбъект("Справочник.Спецкоды");
	Спр.ВыбратьЭлементы();
	Пока Спр.ПолучитьЭлемент()=1 Цикл

		Если Спр.ПометкаУдаления()=1 Тогда
			Продолжить;
		КонецЕсли;	
		спСпецкоды.ДобавитьЗначение(спр.Спецкод);
		//спСпецкоды.Пометка(спСпецкоды.РазмерСписка(),1);
	КонецЦикла;
	
КонецПроцедуры               

Процедура ОбработкаЯчейкиТаблицы( зн, флаг )
	флаг = Расшифровка( зн );
КонецПроцедуры

ДатаПо=ПолучитьДатуТА();

спКолРабДней.УдалитьВсе();
спКолРабДней.ДобавитьЗначение("5-дневная");
спКолРабДней.ДобавитьЗначение("6-дневная"); 
спКолРабДней.ДобавитьЗначение("7-дневная");
спКолРабДней.ТекущаяСтрока( 2 );
КолНедель = 6;
ВыбАналитика = Константа.ОсновнойСклад.УпрАналитика;
процНедобор = 60;