Перем ЗапросЗаказы;

Процедура ПриОткрытии()
	
	глПриОткрытии(Контекст,"НезакрытыеЗаявки");
	
КонецПроцедуры


Функция ПредставлениеУсловия()
	стр = "";
	Если выбСклад.Выбран() = 1 Тогда
		Если выбСклад.ЭтоГруппа() = 1 Тогда 
			стр = стр + "По группе складов """ + Шаблон( "[выбСклад.Код] [выбСклад]") + """. ";
		Иначе
			стр = стр + "По складу """ + Шаблон( "[выбСклад.Код] [выбСклад]") + """. ";
		КонецЕсли;
	КонецЕсли;
	Если выбПоставщик.Выбран() = 1 Тогда
		Если выбПоставщик.ЭтоГруппа() = 1 Тогда 
			стр = стр + "По группе поставщиков """ + Шаблон( "[выбПоставщик.Код] [выбПоставщик]") + """. ";
		Иначе
			стр = стр + "По поставщику """ + Шаблон( "[выбПоставщик.Код] [выбПоставщик]") + """. ";
		КонецЕсли;
	КонецЕсли;
	Если выбКлиент.Выбран() = 1 Тогда
		Если выбКлиент.ЭтоГруппа() = 1 Тогда 
			стр = стр + "По группе клиентов """ + Шаблон( "[выбКлиент.Код] [выбКлиент]") + """. ";
		Иначе
			стр = стр + "По клиенту """ + Шаблон( "[выбКлиент.Код] [выбКлиент]") + """. ";
		КонецЕсли;
	КонецЕсли;
	Если выбТовар.Выбран() = 1 Тогда
		Если выбТовар.ЭтоГруппа() = 1 Тогда
			стр = стр + "По группе товаров """ + Шаблон( "[выбТовар.Код] [выбТовар]") + """. ";
		Иначе
			стр = стр + "По товару """ + Шаблон( "[выбТовар.Код] [выбТовар]") + """. ";
		КонецЕсли;
	КонецЕсли;
	Если выбЗакупщик.Выбран() = 1 Тогда
		Если выбЗакупщик.ЭтоГруппа() = 1 Тогда
			стр = стр + "По группе закупщиков """ + Шаблон( "[выбЗакупщик.Код] [выбЗакупщик]") + """. ";
		Иначе
			стр = стр + "По закупщику """ + Шаблон( "[выбЗакупщик.Код] [выбЗакупщик]") + """. ";
		КонецЕсли;
	КонецЕсли;
	Возврат стр;
КонецФункции

Функция ТекстЗапросаПоЗаявкам()
	ТекстЗапроса = "
	|Период с ДатаС по ДатаПостПо;
	|Обрабатывать Все;
	|ОбрабатыватьДокументы Проведенные;
	|ДатаПоставки = Документ.Счет.ДатаПоставки;
	|ДатаДок = Документ.Счет.ДатаДок;
	|НомерДок = Документ.Счет.НомерДок;
	|ВидЗаявки = Документ.Счет.ВидЗаявки;
	|Склад = Документ.Счет.Склад;
	|Поставщик = Документ.Счет.Товар.Поставщик;
	|Клиент = Документ.Счет.Клиент;
	|Агент = Документ.Счет.Агент;
	|Товар = Документ.Счет.Товар;
	|Закупщик = Документ.Счет.Товар.Закупщик;
	|Группировка Клиент;
	|Группировка Документ;
	|Условие ( ДатаПоставки >= ДатаПостС );
	|Условие ( ДатаПоставки <= ДатаПостПо );";       
	Если выбСклад.Выбран() = 1 Тогда
		Если выбСклад.ЭтоГруппа() = 1 Тогда ТекстЗапроса = ТекстЗапроса + "
			|Условие ( Склад в выбСклад );";
		Иначе ТекстЗапроса = ТекстЗапроса + "
			|Условие ( Склад = выбСклад );";
		КонецЕсли;
	КонецЕсли;
	Если выбПоставщик.Выбран() = 1 Тогда
		Если выбПоставщик.ЭтоГруппа() = 1 Тогда ТекстЗапроса = ТекстЗапроса + "
			|Условие ( Поставщик в выбПоставщик );";
		Иначе ТекстЗапроса = ТекстЗапроса + "
			|Условие ( Поставщик = выбПоставщик );";
		КонецЕсли;
	КонецЕсли;
	Если выбКлиент.Выбран() = 1 Тогда
		Если выбКлиент.ЭтоГруппа() = 1 Тогда ТекстЗапроса = ТекстЗапроса + "
			|Условие ( Клиент в выбКлиент );";
		Иначе ТекстЗапроса = ТекстЗапроса + "
			|Условие ( Клиент = выбКлиент );";
		КонецЕсли;
	КонецЕсли;
	Если выбТовар.Выбран() = 1 Тогда
		Если выбТовар.ЭтоГруппа() = 1 Тогда ТекстЗапроса = ТекстЗапроса + "
			|Условие ( Товар в выбТовар );";
		Иначе ТекстЗапроса = ТекстЗапроса + "
			|Условие ( Товар = выбТовар );";
		КонецЕсли;
	КонецЕсли;
	Если выбЗакупщик.Выбран() = 1 Тогда
		Если выбЗакупщик.ЭтоГруппа() = 1 Тогда ТекстЗапроса = ТекстЗапроса + "
			|Условие ( Закупщик в выбЗакупщик );";
		Иначе ТекстЗапроса = ТекстЗапроса + "
			|Условие ( Закупщик = выбЗакупщик );";
		КонецЕсли;
	КонецЕсли;
	Если выбАгент.Выбран() = 1 Тогда
		Если выбЗакупщик.ЭтоГруппа() = 1 Тогда ТекстЗапроса = ТекстЗапроса + "
			|Условие ( Агент в выбАгент );";
		Иначе ТекстЗапроса = ТекстЗапроса + "
			|Условие ( Агент = выбАгент );";
		КонецЕсли;
	КонецЕсли;
	Возврат ТекстЗапроса;
КонецФункции

Функция СостДокумента( пДокум )
	Если пДокум.ПометкаУдаления() = 1 Тогда
		Возврат "Помечен на удаление.";
	Иначе
		Если пДокум.Проведен() = 1 Тогда
			Возврат "Проведен.";
		Иначе
			Возврат "Не проведен.";
		КонецЕсли;
	КонецЕсли;
КонецФункции

Процедура Сформировать()
	начЛог = семЗаписатьЛогНач( "Отчет", "Незакрытые заявки", "Обработка", "Формирование отчета" );
	// переменные для запроса
	ДатаС = ДатаПостС - 30;
	пЭлектроннаяЗаявка = Перечисление.ВидыЗаявок.ЭлектроннаяЗаявка;
	пСпецЗаказ = Перечисление.ВидыЗаявок.СпецЗаказ;
	

	//нач = ТекущееВремя();
	ЗапросЗаявки = СоздатьОбъект( "Запрос" );
	Если ЗапросЗаявки.Выполнить( ТекстЗапросаПоЗаявкам() ) = 0 Тогда Возврат; КонецЕсли;  
	//Сообщить( "ЗапросЗаявки "+семПрошлоВремени( нач, ТекущееВремя() ) );
	
	Если флСводная = 0 Тогда
		таб = СоздатьОбъект( "Таблица" );
		таб.ИсходнаяТаблица( "Таблица" );
		
		пПериод = Шаблон( "На дату поставки с [ДатаПостС] по [ДатаПостПо]." );
		пУсловие = ПредставлениеУсловия();
		таб.ВывестиСекцию( "Заголовок" );		
		таб.ВывестиСекцию( "Шапка" );		
		таб.Опции( 0, 0, таб.ВысотаТаблицы(), 0 );
	Иначе
		таб = СоздатьОбъект( "Таблица" );
		таб.ИсходнаяТаблица( "Сводная" );
		
		пПериод = Шаблон( "На дату поставки с [ДатаПостС] по [ДатаПостПо]." );
		пУсловие = ПредставлениеУсловия();
		таб.ВывестиСекцию( "Заголовок" );		
	КонецЕсли;
	Всего = 0; 
	Пока ЗапросЗаявки.Группировка( "Клиент") = 1 Цикл 
		Пока ЗапросЗаявки.Группировка( "Документ") = 1 Цикл 
			Всего = Всего + 1; 
		КонецЦикла;
	КонецЦикла;
	
	докПодч = СоздатьОбъект( "Документ" );
	спВидовДок = СоздатьОбъект( "СписокЗначений" );
	спВидовДок.ДобавитьЗначение( "РасходнаяНакладная" );
	спВидовДок.ДобавитьЗначение( "РасходнаяНакладнаяНал" );
	спВидовДок.ДобавитьЗначение( "Перемещение" );
	спВидовДок.ДобавитьЗначение( "ПеремещениеДепартамент" );
	спВидовДок.ДобавитьЗначение( "Списание" );
	спВидовДок.ДобавитьЗначение( "СнятиеРезерва" );
    
	ИтогСчет = 0;
	ИтогСчетПров = 0;
	ИтогСчетНеПров = 0;
	ИтогСчетУдален = 0;
	ИтогНакл = 0;
	ИтогНаклПров = 0;
	ИтогНаклНеПров = 0;
	ИтогНаклУдален = 0;
	
	НомСтр = 0;
	Пока ЗапросЗаявки.Группировка( "Клиент" ) = 1 Цикл
		Пока ЗапросЗаявки.Группировка( "Документ" ) = 1 Цикл Состояние( "Обработано "+Окр( НомСтр / Всего * 100 )+"% строк отчета." );
			Если ЗапросЗаявки.Документ.ПометкаУдаления() = 1 Тогда ИтогСчетУдален = ИтогСчетУдален + 1;
				Продолжить;
			ИначеЕсли ЗапросЗаявки.Документ.Проведен() = 1 Тогда ИтогСчетПров = ИтогСчетПров + 1;
			Иначе ИтогСчетНеПров = ИтогСчетНеПров + 1;
			КонецЕсли;
			НомСтр = НомСтр + 1;
			ЕстьДок = 0;
			Если докПодч.ВыбратьПодчиненныеДокументы( , , ЗапросЗаявки.Документ ) = 1 Тогда
				Пока докПодч.ПолучитьДокумент() = 1 Цикл
					Если спВидовДок.Принадлежит( докПодч.Вид() ) = 1 Тогда
						Если докПодч.ПометкаУдаления() = 1 Тогда ИтогНаклУдален = ИтогНаклУдален + 1;
						ИначеЕсли докПодч.Проведен() = 1 Тогда ИтогНаклПров = ИтогНаклПров + 1; 
							ЕстьДок = 1; 
						Иначе ИтогНаклНеПров = ИтогНаклНеПров + 1;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			Если флСводная = 0 Тогда
				Если ЕстьДок = 1 Тогда Продолжить; КонецЕсли;
				пКлиент = ЗапросЗаявки.Клиент;
				таб.ВывестиСекцию( "Клиент" );		
				Док = ЗапросЗаявки.Документ;
				пДок = Шаблон( "[Док.ВидЗаявки] [Док.НомерДок] ([Док.ДатаДок])" );
				таб.ВывестиСекцию( "Заявка" );		
				Если докПодч.ВыбратьПодчиненныеДокументы( , , ЗапросЗаявки.Документ ) = 1 Тогда
					Пока докПодч.ПолучитьДокумент() = 1 Цикл
						Если спВидовДок.Принадлежит( докПодч.Вид() ) = 1 Тогда
							Накладная = докПодч.ТекущийДокумент();
							пНакладная = Шаблон( "[Накладная.ПредставлениеВида()] [Накладная.НомерДок] ([Накладная.ДатаДок]) [СостДокумента( Накладная )]" );
							таб.ВывестиСекцию( "Накладная" );		
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	таб.ПараметрыСтраницы(,,,,,,,,,, 1,);
	таб.ТолькоПросмотр( 1 );
	Если флСводная = 0 Тогда
		таб.Показать( "Незакрытые заявки" );
	Иначе
		ИтогСчет = ИтогСчетПров + ИтогСчетНеПров + ИтогСчетУдален;
		ИтогНакл = ИтогНаклПров + ИтогНаклНеПров + ИтогНаклУдален;
		таб.ВывестиСекцию( "Сводная" );		
		таб.Показать( "Сводная" );
	КонецЕсли;
	//Сообщить( семПрошлоВремени( нач, ТекущееВремя() ) );
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры

Процедура СформироватьНов()

	начЛог = семЗаписатьЛогНач( "Отчет", "Незакрытые заявки", "Обработка", "Формирование отчета" );

	Если флСводная = 1 Тогда
		Сформировать();
		Возврат;
	КонецЕсли;

	Запрос=СоздатьОбъект("ODBCRecordSet");

	ТекстЗапросаУсловие="";
	Если выбСклад.Выбран() = 1 Тогда
		Если выбСклад.ЭтоГруппа() = 1 Тогда 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND $Счет.Склад IN (SELECT Val FROM #Склады)";
			Запрос.УложитьСписокОбъектов(выбСклад,"#Склады","МестаХранения");
		Иначе 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND $Счет.Склад = :выбСклад";
			Запрос.УстановитьТекстовыйПараметр("выбСклад",выбСклад);
		КонецЕсли;
	КонецЕсли;
	
	Если выбПоставщик.Выбран() = 1 Тогда
		Если выбПоставщик.ЭтоГруппа() = 1 Тогда 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND $Номенклатура.Поставщик IN (SELECT Val FROM #Поставщики)";
			Запрос.УложитьСписокОбъектов(выбПоставщик,"#Поставщики","Контрагенты");
		Иначе 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND $Номенклатура.Поставщик = :выбПоставщик";
			Запрос.УстановитьТекстовыйПараметр("выбПоставщик",выбПоставщик);
		КонецЕсли;
	КонецЕсли;
	
	Если выбКлиент.Выбран() = 1 Тогда
		Если выбКлиент.ЭтоГруппа() = 1 Тогда 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND $Счет.Клиент IN (SELECT Val FROM #Клиенты)";
			Запрос.УложитьСписокОбъектов(выбКлиент,"#Клиенты","Контрагенты");
		Иначе 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND $Счет.Клиент = :выбКлиент";
			Запрос.УстановитьТекстовыйПараметр("выбКлиент",выбКлиент);
		КонецЕсли;
	КонецЕсли;
	
	Если выбТовар.Выбран() = 1 Тогда
		Если выбТовар.ЭтоГруппа() = 1 Тогда 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND Товар IN (SELECT Val FROM #Товары)";
			Запрос.УложитьСписокОбъектов(выбТовар,"#Товары","Номенклатура");
		Иначе 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND Товар = :выбТовар";
			Запрос.УстановитьТекстовыйПараметр("выбТовар",выбТовар);
		КонецЕсли;
	КонецЕсли;
	
	Если выбЗакупщик.Выбран() = 1 Тогда
		Если выбЗакупщик.ЭтоГруппа() = 1 Тогда 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND $Номенклатура.Закупщик IN (SELECT Val FROM #Закупщики)";
			Запрос.УложитьСписокОбъектов(выбЗакупщик,"#Закупщики","Сотрудники");
		Иначе 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + "AND $Номенклатура.Закупщик = :выбЗакупщик";
			Запрос.УстановитьТекстовыйПараметр("выбЗакупщик",выбЗакупщик);
		КонецЕсли;
	КонецЕсли;
	
	Если выбАгент.Выбран() = 1 Тогда
		Если выбАгент.ЭтоГруппа() = 1 Тогда 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND $Счет.Агент IN (SELECT Val FROM #Агенты)";
			Запрос.УложитьСписокОбъектов(выбАгент,"#Агенты","Сотрудники");
		Иначе 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND $Счет.Агент = :выбАгент";
			Запрос.УстановитьТекстовыйПараметр("выбАгент",выбАгент);
		КонецЕсли;
	КонецЕсли;

	Если выбВидДоставки.Выбран() = 1 Тогда
		ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND $Счет.ВидДоставки = :выбВидДоставки";
		Запрос.УстановитьТекстовыйПараметр("выбВидДоставки",выбВидДоставки);
	КонецЕсли;
	Если выбМаршрутГрафик.Выбран() = 1 Тогда
		ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND $Счет.МаршрутДоставкиГрафик = :выбМаршрутГрафик";
		Запрос.УстановитьТекстовыйПараметр("выбМаршрутГрафик",выбМаршрутГрафик);
	КонецЕсли;
	
	
	ТекстЗапросаУсловие2="";
	Если выбМаршрут.Выбран() = 1 Тогда
		//Если выбМаршрут.ЭтоГруппа() = 1 Тогда 
		//	ТекстЗапросаУсловие2 = ТекстЗапросаУсловие2 + "AND $МаршрутныйЛист.АдресДоставки IN (SELECT Val FROM #АдресаДоставки)";
		//	Запрос.УложитьСписокОбъектов(выбМаршрут,"#АдресаДоставки","АдресаДоставки");
		//Иначе 
			ТекстЗапросаУсловие2 = ТекстЗапросаУсловие2 + "AND $МаршрутныйЛист.АдресДоставки = :выбМаршрут";
			Запрос.УстановитьТекстовыйПараметр("выбМаршрут",выбМаршрут);
//		КонецЕсли;
	КонецЕсли;

	Если ПустоеЗначение(выбСтатус)=0 Тогда
		глУдалениеВременнойТаблицыSQL("#ЗаявкиПоСтатусам");
		Запрос2 = СоздатьОбъект("ODBCRecordSet");
		ТекстЗапроса2 = "SELECT ПоСчету 
		|				 INTO #ЗаявкиПоСтатусам
		|				 FROM $РегистрОстатки.КомплектацияЗаявок(,,(Статус = :ВыбСтатус),ПоСчету,)";
		
		Запрос2.УстановитьТекстовыйПараметр("ВыбСтатус",выбСтатус.Код);
		Запрос2.ВыполнитьСкалярный(ТекстЗапроса2);
		
		ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND ПоСчету IN (SELECT ПоСчету FROM #ЗаявкиПоСтатусам)";
	КонецЕсли;

	
	ТекстЗапроса="SELECT $Счет.Склад [Склад $Справочник.МестаХранения]
	|					, COALESCE($МаршрутныйЛист.АдресДоставки,$ПустойИД) [АдресДоставки $Справочник.АдресаДоставки]
	|					, $Счет.Клиент [Клиент $Справочник.Контрагенты]
	|					, COALESCE(МаршрутныйЛист.IDDOC,$ПустойИД) [МЛ $Документ.МаршрутныйЛист]
	|					, РезервыТоваровОстатки.ПоСчету [ПоСчету $Документ.Счет]
	|					, РезервыТоваровОстатки.РезервТовараОстаток Резерв
	|			  FROM $РегистрОстатки.РезервыТоваров(,
	|													INNER JOIN $Документ.Счет AS Счет (NOLOCK) ON ПоСчету = Счет.IDDOC
	|													INNER JOIN $Справочник.Номенклатура Номенклатура (NOLOCK) ON Товар = Номенклатура.ID,
	|													($Счет.ДатаПоставки BETWEEN :НачДатаПоставки AND :КонДатаПоставки "+ТекстЗапросаУсловие+"),
	|													ПоСчету,) AS РезервыТоваровОстатки
	|			  INNER JOIN $Документ.Счет AS Счет (NOLOCK) ON РезервыТоваровОстатки.ПоСчету = Счет.IDDOC
	|			  INNER JOIN _1sjourn Жур (NOLOCK) ON Жур.IDDOC = Счет.IDDOC AND Жур.Closed & 1 = 1 AND Жур.IDDOCDEF = $ВидДокумента.Счет
	|		      LEFT JOIN $ДокументСтроки.МаршрутныйЛист AS МаршрутныйЛистСтроки(NOLOCK) ON РезервыТоваровОстатки.ПоСчету = $МаршрутныйЛистСтроки.Счет
	|		   	  LEFT JOIN $Документ.МаршрутныйЛист AS МаршрутныйЛист (NOLOCK) ON МаршрутныйЛистСтроки.IDDOC = МаршрутныйЛист.IDDOC
	|			  WHERE 1=1 "+ТекстЗапросаУсловие2+"
	|			  UNION ALL 
	|			  SELECT $Счет.Склад [Склад $Справочник.МестаХранения]
	|					, COALESCE($МаршрутныйЛист.АдресДоставки,$ПустойИД) [АдресДоставки $Справочник.АдресаДоставки]
	|					, $Счет.Клиент [Клиент $Справочник.Контрагенты]
	|					, COALESCE(МаршрутныйЛист.IDDOC,$ПустойИД) [МЛ $Документ.МаршрутныйЛист]
	|					, СпецЗаказыТоваровОстатки.ПоСчету [ПоСчету $Документ.Счет]
	|					, СпецЗаказыТоваровОстатки.ЗаказаноОстаток Резерв
	|			  FROM $РегистрОстатки.СпецЗаказы(,
	|												INNER JOIN $Документ.Счет AS Счет (NOLOCK) ON ПоСчету = Счет.IDDOC
	|												INNER JOIN $Справочник.Номенклатура Номенклатура (NOLOCK) ON Товар = Номенклатура.ID,
	|												($Счет.ДатаПоставки BETWEEN :НачДатаПоставки AND :КонДатаПоставки "+ТекстЗапросаУсловие+"),
	|												ПоСчету,) AS СпецЗаказыТоваровОстатки
	|		  	  INNER JOIN $Документ.Счет AS Счет (NOLOCK) ON СпецЗаказыТоваровОстатки.ПоСчету = Счет.IDDOC
	|			  INNER JOIN _1sjourn Жур (NOLOCK) ON Жур.IDDOC = Счет.IDDOC AND Жур.Closed & 1 = 1 AND Жур.IDDOCDEF = $ВидДокумента.Счет
	|			  LEFT JOIN $ДокументСтроки.МаршрутныйЛист AS МаршрутныйЛистСтроки (NOLOCK) ON СпецЗаказыТоваровОстатки.ПоСчету = $МаршрутныйЛистСтроки.Счет
	|		      LEFT JOIN $Документ.МаршрутныйЛист AS МаршрутныйЛист (NOLOCK) ON МаршрутныйЛистСтроки.IDDOC = МаршрутныйЛист.IDDOC
	|			  WHERE 1=1 "+ТекстЗапросаУсловие2+"
	|		";
	
	
	Запрос.УстановитьТекстовыйПараметр("НачДатаПоставки",ДатаПостС);
	Запрос.УстановитьТекстовыйПараметр("КонДатаПоставки",ДатаПостПо);
	
	таблИТ=СоздатьОбъект("ИндексированнаяТаблица");
	Запрос.ВыполнитьИнструкцию(ТекстЗапроса,таблИТ);
	
	таб = СоздатьОбъект( "Таблица" );
	таб.ИсходнаяТаблица( "ТаблицаПоМаршрутам" );
		
	пПериод = Шаблон( "На дату поставки с [ДатаПостС] по [ДатаПостПо]." );
	пУсловие = ПредставлениеУсловия();
	таб.ВывестиСекцию( "Заголовок" );	
	таб.ВывестиСекцию( "Шапка" );		
	таб.Опции( 0, 0, таб.ВысотаТаблицы(), 0 );
	Всего = 0; 
	
	таблИТ.Группировать("АдресДоставки : *АдресДоставки; Клиент : *Клиент; ПоСчету : *ПоСчету","Резерв");
	таблИТ.Сортировать("АдресДоставки,Клиент,*ПоСчету");
	
	таблИТ.ВыбратьСтроки();
	Пока таблИТ.ПолучитьСтроку() = 1 Цикл
		Состояние( "Обработано "+Окр( таблИТ.НомерСтроки / таблИТ.КоличествоСтрок() * 100 )+"% строк отчета." );
		пАдресДоставки=?(ПустоеЗначение(таблИТ.АдресДоставки)=1,"<нет маршрута>",таблИТ.АдресДоставки);
		ДокМЛ=таблИТ.МЛ;
		
		таб.ВывестиСекцию("Маршрут");
		итКлиенты=таблИТ.тзПотомки;
		итКлиенты.ВыбратьСтроки();
		Пока итКлиенты.ПолучитьСтроку() = 1 Цикл
			пКлиент=итКлиенты.Клиент;
			таб.ВывестиСекцию("Клиент");
			итСчета=итКлиенты.тзПотомки;
			итСчета.ВыбратьСтроки();
			Пока итСчета.ПолучитьСтроку() = 1 Цикл
				Док = итСчета.ПоСчету;
				пДок = Шаблон( "[Док.ВидЗаявки] [Док.НомерДок] ([Док.ДатаДок])" );
				таб.ВывестиСекцию("Заявка");								
			КонецЦикла;		
		КонецЦикла;		
	КонецЦикла;	
	
	таб.ПараметрыСтраницы(1,,,,,,,,,1);
	таб.ТолькоПросмотр( 1 );
	таб.Показать( "Незакрытые заявки" );
	семЗаписатьЛогКон( начЛог );	
	
	
КонецПроцедуры

Процедура СформироватьЗаявкиНаВозврат()
	начЛог = семЗаписатьЛогНач( "Отчет", "Незакрытые заявки (возвраты)", "Обработка", "Формирование отчета" );
	// переменные для запроса
	Запрос=СоздатьОбъект("ODBCRecordSet");

	ТекстЗапросаУсловие="";
	Если выбСклад.Выбран() = 1 Тогда
		Если выбСклад.ЭтоГруппа() = 1 Тогда 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND $Счет.Склад IN (SELECT Val FROM #Склады)";
			Запрос.УложитьСписокОбъектов(выбСклад,"#Склады","МестаХранения");
		Иначе 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND $Счет.Склад = :выбСклад";
			Запрос.УстановитьТекстовыйПараметр("выбСклад",выбСклад);
		КонецЕсли;
	КонецЕсли;
	
	Если выбПоставщик.Выбран() = 1 Тогда
		Если выбПоставщик.ЭтоГруппа() = 1 Тогда 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND $Номенклатура.Поставщик IN (SELECT Val FROM #Поставщики)";
			Запрос.УложитьСписокОбъектов(выбПоставщик,"#Поставщики","Контрагенты");
		Иначе 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND $Номенклатура.Поставщик = :выбПоставщик";
			Запрос.УстановитьТекстовыйПараметр("выбПоставщик",выбПоставщик);
		КонецЕсли;
	КонецЕсли;
	
	Если выбКлиент.Выбран() = 1 Тогда
		Если выбКлиент.ЭтоГруппа() = 1 Тогда 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND $Счет.Клиент IN (SELECT Val FROM #Клиенты)";
			Запрос.УложитьСписокОбъектов(выбКлиент,"#Клиенты","Контрагенты");
		Иначе 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND $Счет.Клиент = :выбКлиент";
			Запрос.УстановитьТекстовыйПараметр("выбКлиент",выбКлиент);
		КонецЕсли;
	КонецЕсли;
	
	Если выбТовар.Выбран() = 1 Тогда
		Если выбТовар.ЭтоГруппа() = 1 Тогда 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND Товар IN (SELECT Val FROM #Товары)";
			Запрос.УложитьСписокОбъектов(выбТовар,"#Товары","Номенклатура");
		Иначе 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND Товар = :выбТовар";
			Запрос.УстановитьТекстовыйПараметр("выбТовар",выбТовар);
		КонецЕсли;
	КонецЕсли;
	
	Если выбЗакупщик.Выбран() = 1 Тогда
		Если выбЗакупщик.ЭтоГруппа() = 1 Тогда 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND $Номенклатура.Закупщик IN (SELECT Val FROM #Закупщики)";
			Запрос.УложитьСписокОбъектов(выбЗакупщик,"#Закупщики","Сотрудники");
		Иначе 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + "AND $Номенклатура.Закупщик = :выбЗакупщик";
			Запрос.УстановитьТекстовыйПараметр("выбЗакупщик",выбЗакупщик);
		КонецЕсли;
	КонецЕсли;
	
	Если выбАгент.Выбран() = 1 Тогда
		Если выбАгент.ЭтоГруппа() = 1 Тогда 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND $Счет.Агент IN (SELECT Val FROM #Агенты)";
			Запрос.УложитьСписокОбъектов(выбАгент,"#Агенты","Сотрудники");
		Иначе 
			ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND $Счет.Агент = :выбАгент";
			Запрос.УстановитьТекстовыйПараметр("выбАгент",выбАгент);
		КонецЕсли;
	КонецЕсли;

	Если выбВидДоставки.Выбран() = 1 Тогда
		ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND $Счет.ВидДоставки = :выбВидДоставки";
		Запрос.УстановитьТекстовыйПараметр("выбВидДоставки",выбВидДоставки);
	КонецЕсли;
	
	
	ТекстЗапросаУсловие2="";
	Если выбМаршрут.Выбран() = 1 Тогда
		//Если выбМаршрут.ЭтоГруппа() = 1 Тогда 
		//	ТекстЗапросаУсловие2 = ТекстЗапросаУсловие2 + "AND $МаршрутныйЛист.АдресДоставки IN (SELECT Val FROM #АдресаДоставки)";
		//	Запрос.УложитьСписокОбъектов(выбМаршрут,"#АдресаДоставки","АдресаДоставки");
		//Иначе 
			ТекстЗапросаУсловие2 = ТекстЗапросаУсловие2 + "AND $МаршрутныйЛист.АдресДоставки = :выбМаршрут";
			Запрос.УстановитьТекстовыйПараметр("выбМаршрут",выбМаршрут);
//		КонецЕсли;
	КонецЕсли;

	
	ТекстЗапроса="-- Запрос по заявкам на возврат без документов основания
	|			  SELECT $Счет.Склад [Склад $Справочник.МестаХранения]
	|					, COALESCE($МаршрутныйЛист.АдресДоставки,$ПустойИД) [АдресДоставки $Справочник.АдресаДоставки]
	|					, $Счет.Клиент [Клиент $Справочник.Контрагенты]
	|					, COALESCE(МаршрутныйЛист.IDDOC,$ПустойИД) [МЛ $Документ.МаршрутныйЛист]
	|					, Счет.IDDOC [ПоСчету $Документ.Счет]
	|			  FROM $Документ.Счет AS Счет (NOLOCK)
	|		      LEFT JOIN $ДокументСтроки.МаршрутныйЛист AS МаршрутныйЛистСтроки(NOLOCK) ON Счет.IDDOC = $МаршрутныйЛистСтроки.Счет
	|		   	  LEFT JOIN $Документ.МаршрутныйЛист AS МаршрутныйЛист (NOLOCK) ON МаршрутныйЛистСтроки.IDDOC = МаршрутныйЛист.IDDOC
	|			  WHERE $Счет.ДатаПоставки BETWEEN :НачДатаПоставки AND :КонДатаПоставки AND $Счет.ВидЗаявки = $Перечисление.ВидыЗаявок.ЗаявкаНаВозврат  "+ТекстЗапросаУсловие2+"
	|					AND 'O1'+$ВидДокумента36.Счет+Счет.IDDOC NOT IN (SELECT ПодчДок.ParentVal
	|															FROM _1SCRDOC as ПодчДок (NOLOCK)
	|															INNER JOIN _1sjourn as Жур (NOLOCK) ON Жур.IDDOC = ПодчДок.ChildID 
	|																	AND Жур.IDDocDef =$ВидДокумента.ПриходнаяНакладная
	|																	AND Жур.DATE_TIME_IDDOC >= :НачДата AND Жур.Closed & 1 = 1)
	|		";
	
	Запрос.УстановитьТекстовыйПараметр("НачДата",ДатаПостС-60);
	Запрос.УстановитьТекстовыйПараметр("НачДатаПоставки",ДатаПостС);
	Запрос.УстановитьТекстовыйПараметр("КонДатаПоставки",ДатаПостПо);
	
	таблИТ=СоздатьОбъект("ИндексированнаяТаблица");
	//Запрос.Отладка(1);
	Запрос.ВыполнитьИнструкцию(ТекстЗапроса,таблИТ);
	
	таб = СоздатьОбъект( "Таблица" );
	таб.ИсходнаяТаблица( "ТаблицаПоМаршрутам" );
		
	пПериод = Шаблон( "На дату поставки с [ДатаПостС] по [ДатаПостПо]." );
	пУсловие = ПредставлениеУсловия();
	таб.ВывестиСекцию( "Заголовок" );	
	таб.ВывестиСекцию( "Шапка" );		
	таб.Опции( 0, 0, таб.ВысотаТаблицы(), 0 );
	Всего = 0; 
	
	таблИТ.Группировать("АдресДоставки : *АдресДоставки; Клиент : *Клиент; ПоСчету : *ПоСчету","");
	таблИТ.Сортировать("АдресДоставки,Клиент,*ПоСчету");
	
	таблИТ.ВыбратьСтроки();
	Пока таблИТ.ПолучитьСтроку() = 1 Цикл
		Состояние( "Обработано "+Окр( таблИТ.НомерСтроки / таблИТ.КоличествоСтрок() * 100 )+"% строк отчета." );
		пАдресДоставки=?(ПустоеЗначение(таблИТ.АдресДоставки)=1,"<нет маршрута>",таблИТ.АдресДоставки);
		ДокМЛ=таблИТ.МЛ;
		таб.ВывестиСекцию("Маршрут");
		итКлиенты=таблИТ.тзПотомки;
		итКлиенты.ВыбратьСтроки();
		Пока итКлиенты.ПолучитьСтроку() = 1 Цикл
			пКлиент=итКлиенты.Клиент;
			таб.ВывестиСекцию("Клиент");
			итСчета=итКлиенты.тзПотомки;
			итСчета.ВыбратьСтроки();
			Пока итСчета.ПолучитьСтроку() = 1 Цикл
				Док = итСчета.ПоСчету;
				пДок = Шаблон( "[Док.ВидЗаявки] [Док.НомерДок] ([Док.ДатаДок])" );
				таб.ВывестиСекцию("Заявка");								
			КонецЦикла;		
		КонецЦикла;		
	КонецЦикла;	
	
	таб.ПараметрыСтраницы(1,,,,,,,,,1);
	таб.ТолькоПросмотр( 1 );
	таб.Показать( "Незакрытые заявки (возвраты)" );
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры


выбПоставщик.ВыборГруппы( 1 );
выбКлиент.ВыборГруппы( 1 );
выбТовар.ВыборГруппы( 1 );
выбЗакупщик.ВыборГруппы( 1 );
ДатаПостС=РабочаяДата();
ДатаПостПо=РабочаяДата();