Перем Сводная, КонструкторЗапросов, ВремПапка;
Перем гРФорма, гРасшФорма;
Перем Окна, ФормаРасш;
Перем ТекШирина, ТекВысота;
Перем спВидовДок;
Перем спУсловий;
Перем кБазоваяВалюта;
Перем списокВидов, флУдаленные;
Перем Язык;
Перем ВсегоСтрок,ЧислоСтрок;
Перем ЗапросСКЛ;
Перем КоммВерсия;
Перем СписокАгентов, СписокПретензий;


Процедура ПолучитьСписокПретензий()

	Запрос=СоздатьОбъект("ODBCRecordSet");
	Если чФильтрПоДолжностям=1 Тогда
		
			ТекстЗапроса="SELECT СпрП.ID [Претензия $Справочник.Претензии] 
			|			  FROM $Справочник.Претензии СпрП (NOLOCK)
			|			  INNER JOIN $Справочник.ПретензииОтветственныеПоДолжностям СпрПО (NOLOCK) ON СпрПО.PARENTEXT = СпрП.ID AND СпрПО.ISMARK = 0
			|			  WHERE СпрП.ISMARK = 0 AND $СпрПО.ОтветственнаяДолжность = :ВыбДолжность
			|			  ";
			
		Запрос.УстановитьТекстовыйПараметр("ВыбДолжность",Пользователь.Сотрудник.Должность);
		тт=Запрос.ВыполнитьИнструкцию(ТекстЗапроса);
		//тт.ВыбратьСтроку();
		тт.Выгрузить(СписокПретензий);

	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьСписокАгентов()

	Запрос=СоздатьОбъект("ODBCRecordSet");
	Если чФильтрПоПодразделениямПользователя=1 Тогда
			ТекстЗапроса="SELECT ДС.ID [Агент $Справочник.Сотрудники] 
			|			  FROM Дерево_Сотрудники ДС
			|			  INNER JOIN $Справочник.ПодразделенияПользователей СпрПП (NOLOCK) ON $СпрПП.Подразделение = ДС.PARENTID AND СпрПП.PARENTEXT = :ВыбПользователь AND СпрПП.ISMARK = 0
			|			  ";
			
		Запрос.УстановитьТекстовыйПараметр("ВыбПользователь",Пользователь);
		тт=Запрос.ВыполнитьИнструкцию(ТекстЗапроса);
		//тт.ВыбратьСтроку();
		тт.Выгрузить(СписокАгентов);

	ИначеЕсли ВыбАгент.Выбран()=1 Тогда
		
		Если ВыбАгент.ЭтоГруппа()=1 Тогда
			ТекстЗапроса="SELECT ДС.ID [Агент $Справочник.Сотрудники] 
			|			  FROM Дерево_Сотрудники ДС
			|			  WHERE ДС.PARENTID = :ВыбСотр
			|			  ";
		КонецЕсли;
		
		Запрос.УстановитьТекстовыйПараметр("ВыбСотр",ВыбАгент);
		тт=Запрос.ВыполнитьИнструкцию(ТекстЗапроса);
		тт.Выгрузить(СписокАгентов);
	КонецЕсли;
	
КонецПроцедуры


Процедура УстШрифты(Поле,IsIncluded=1,Expanded=-1)
	
	Поле.IsIncluded = IsIncluded;
	Поле.Expanded = Expanded;
	Поле.GroupedFont.Name = "Times New Roman LV";
	Поле.DetailFont.Name = "Times New Roman LV";
	Поле.SubtotalFont.Name = "Times New Roman LV";
	Поле.SubtotalFont.Size = 10;
	Поле.SubtotalFont.Bold = 1;
	
КонецПроцедуры


Процедура ДобавитьФильтр( ODBCRecordSet, пТекст, спУсловий, пИсточник="", пФильтр, пЗнач, пТип )
	Если ПустоеЗначение(пЗнач) = 1 Тогда Возврат; КонецЕсли;
	пИсточник = ?(ПустаяСтрока(пИсточник) = 0,пИсточник+".","");
	
	Если ТипЗначенияСтр(пЗнач)="Справочник" Тогда
		Если пЗнач.ЭтоГруппа() = 0 Тогда
			пТекст=пТекст+РазделительСтрок+Шаблон(" AND [пИсточник][пФильтр] = :[пФильтр]");
			ODBCRecordSet.УстановитьТекстовыйПараметр(пФильтр, пЗнач);
			спУсловий.ДобавитьЗначение(Шаблон("Фильтр ([пФильтр]) по элементу: [пЗнач.Код] [пЗнач]"));
		Иначе
			пТекст=пТекст+РазделительСтрок+Шаблон(" AND [пИсточник][пФильтр] IN (SELECT Val FROM #т[пФильтр])");
			ODBCRecordSet.УложитьСписокОбъектов(пЗнач, "#т"+пФильтр, пТип );
			спУсловий.ДобавитьЗначение(Шаблон("Фильтр ([пФильтр]) по группе: [пЗнач.Код] [пЗнач]"));
		КонецЕсли;
	ИначеЕсли ТипЗначенияСтр(пЗнач)="СписокЗначений" Тогда
		//Сообщить(ТипЗначенияСтр(пЗнач));
		пТекст=пТекст+РазделительСтрок+Шаблон(" AND [пИсточник][пФильтр] IN (SELECT Val FROM #т[пФильтр])");
		ODBCRecordSet.УложитьСписокОбъектов(пЗнач, "#т"+пФильтр);
		Если пЗнач.РазмерСписка()<=7 Тогда
			пСписокЗначений=пЗнач.ВСтрокуСРазделителями();
			спУсловий.ДобавитьЗначение(Шаблон("Фильтр ([пФильтр]) по списку: [пСписокЗначений]"));
		КонецЕсли;
	Иначе
		пТекст=пТекст+РазделительСтрок+Шаблон(" AND [пИсточник][пФильтр] = :[пФильтр]");
		ODBCRecordSet.УстановитьТекстовыйПараметр(пФильтр, пЗнач);
		спУсловий.ДобавитьЗначение(Шаблон("Фильтр ([пФильтр]): [пЗнач]"));
	КонецЕсли;
КонецПроцедуры

Функция НазваниеПретензии(пПретензия)
	Если глКодСтраныПользователя<>"LV" Тогда
		Возврат пПретензия.НаименованиеРусс;
	Иначе
		Возврат пПретензия;
	КонецЕсли;
КонецФункции

Функция ТекстЗапросаТолькоТовары()
	Язык = семТекСтрана();
	спУсловий = СоздатьОбъект( "СписокЗначений" );
	ТекстЗапроса = "
	|Период с ДатаС по ДатаПо;
	|ОбрабатыватьДокументы Проведенные;
	|Товар = Документ.ПретензияПолученная.Товар;
	|Претензия = Документ.ПретензияПолученная.СутьПретензии;
	|Клиент = Документ.ПретензияПолученная.Клиент;
	|Агент = Документ.ПретензияПолученная.АгентПоТовару;
	|Накл = Документ.ПретензияПолученная.ДокОснование;
	|Группировка Претензия без групп;
	|Группировка Товар без групп Упорядочить По Товар.Код;
	|Группировка Накл;
	//|Функция СчД = Счётчик(Накл);
	//|Функция Сч = Счётчик(Товар);
	|Функция СчНакл =Сумма( 1 );
	|Без итогов;";
	списокВидов=СоздатьОбъект("СписокЗначений");
	
	Для н = 1 По спВидовДок.РазмерСписка() Цикл
		Если спВидовДок.Пометка(н)=1 Тогда
			списокВидов.ДобавитьЗначение(спВидовДок.ПолучитьЗначение(н));
		КонецЕсли;
	КонецЦикла;

	Если Язык="EE" Тогда
		ШаблонУсловияВидДок="Dokumentide jargi  ";
		ШаблонУсловияТов="Kauba jargi  ";
		ШаблонУсловияТовГр="Kaubagruppi jargi ";
		ШаблонПретензия="Pretensiooni jargi ";
		ШаблонПретензияГр="Pretensioonigruppi jargi ";
		ШаблонАгент="Agenti jargi ";
		ШаблонАгентГр="Agentigruppi jargi ";
		ШаблонКлиент="Kliendi jargi ";
		ШаблонКлиентГр="Kliendigruppi jargi ";
	Иначе
		ШаблонУсловияВидДок="По видам документов ";
		ШаблонУсловияТов="По товару ";
		ШаблонУсловияТовГр="По группе товаров ";
		ШаблонПретензия="По претензии ";
		ШаблонПретензияГр="По группе претензий ";
		ШаблонАгент="По агенту ";
		ШаблонАгентГр="По группе агентов ";
		ШаблонКлиент="По клиенту ";
		ШаблонКлиентГр="По группе клиентов ";
	КонецЕсли;
	
	
	ТекстЗапроса = ТекстЗапроса + "
	|	Условие ( Накл.Вид() в списокВидов );";
	спУсловий.ДобавитьЗначение(Шаблон(ШаблонУсловияВидДок+"[списокВидов.ВСтрокуСРазделителями()]."));
	Если выбНоменклатура.Выбран() = 0 Тогда 
		//спУсловий.ДобавитьЗначение("По всем товарам.");
	ИначеЕсли выбНоменклатура.ЭтоГруппа() = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Товар = выбНоменклатура );";
		спУсловий.ДобавитьЗначение(Шаблон(ШаблонУсловияТов+"([выбНоменклатура.Код]) [выбНоменклатура.Наименование]."));
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Товар в выбНоменклатура );";
		спУсловий.ДобавитьЗначение(Шаблон(ШаблонУсловияТовГр+"([выбНоменклатура.Код]) [выбНоменклатура.Наименование]."));
	КонецЕсли;
	
	Если выбПретензия.Выбран() = 0 Тогда 
		//спУсловий.ДобавитьЗначение("По всем причинам.");
	ИначеЕсли выбПретензия.ЭтоГруппа() = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Претензия = выбПретензия );";
		спУсловий.ДобавитьЗначение(Шаблон(ШаблонПретензия+"[выбПретензия.Наименование]."));
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Претензия в выбПретензия );";
		спУсловий.ДобавитьЗначение(Шаблон(ШаблонПретензияГр+"[выбПретензия.Наименование]."));
	КонецЕсли;

	Если выбАгент.Выбран() = 0 Тогда 
		//спУсловий.ДобавитьЗначение("По всем товарам.");
	ИначеЕсли выбАгент.ЭтоГруппа() = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Агент = выбАгент );";
		спУсловий.ДобавитьЗначение(Шаблон(ШаблонАгент+"[выбАгент.Наименование]."));
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Агент в выбАгент );";
		спУсловий.ДобавитьЗначение(Шаблон(ШаблонАгентГр+"[выбАгент.Наименование]."));
	КонецЕсли;
	
	Если выбКлиент.Выбран() = 0 Тогда 
		//спУсловий.ДобавитьЗначение("По всем товарам.");
	ИначеЕсли выбКлиент.ЭтоГруппа() = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Клиент = выбКлиент );";
		спУсловий.ДобавитьЗначение(Шаблон(ШаблонКлиент+"([выбКлиент.Код]) [выбКлиент.Наименование]."));
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Клиент в выбКлиент );";
		спУсловий.ДобавитьЗначение(Шаблон(ШаблонКлиентГр+"([выбКлиент.Код]) [выбКлиент.Наименование]."));
	КонецЕсли;
	
	Если флУдаленные = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Накл.ПометкаУдаления() = 0 );";
	КонецЕсли;
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТолькоТоварыНов()
	Язык = семТекСтрана();
	спУсловий = СоздатьОбъект( "СписокЗначений" );
	ЗапросСКЛ=СоздатьОбъект("ODBCRecordSet");
	
	Условие = "";
	Док=СоздатьОбъект("Документ");
	
	Если чФильтрПоПодразделениямПользователя=1 Тогда
		ДобавитьФильтр( ЗапросСКЛ, Условие, спУсловий, "", "Агент", СписокАгентов, "");
	Иначе
		ДобавитьФильтр( ЗапросСКЛ, Условие, спУсловий, "", "Агент", выбАгент, "Сотрудники" );
	КонецЕсли;
	
	ДобавитьФильтр( ЗапросСКЛ, Условие, спУсловий, "", "Клиент", выбКлиент, "Контрагенты" );
	ДобавитьФильтр( ЗапросСКЛ, Условие, спУсловий, "", "Товар", выбНоменклатура, "Номенклатура" );
	ДобавитьФильтр( ЗапросСКЛ, Условие, спУсловий, "$СпрН", "Поставщик", выбПоставщик, "Контрагенты" );
	ДобавитьФильтр( ЗапросСКЛ, Условие, спУсловий, "$СпрН", "Закупщик", выбЗакупщик, "Сотрудники" );

	Условие2 = "WHERE 1=1 ";

	ДобавитьФильтр( ЗапросСКЛ, Условие2, спУсловий, "$ДокС", "Склад", выбСклад, "МестаХранения" );

	РеквизитПретензии=?(флСутьПодтв=1,"CASE WHEN ПретензииПолученныеОбороты.СутьПретензииПодтв = $ПустойИД THEN ПретензииПолученныеОбороты.СутьПретензии ELSE ПретензииПолученныеОбороты.СутьПретензииПодтв END","ПретензииПолученныеОбороты.СутьПретензии");

	Если чФильтрПоДолжностям=1 Тогда
		Условие2=Условие2+" AND "+РеквизитПретензии+" IN (SELECT Val FROM #Претензии)";
		ЗапросСКЛ.УложитьСписокОбъектов(СписокПретензий,"#Претензии");
//		ДобавитьФильтр( ЗапросСКЛ, Условие, спУсловий, "", РеквизитПретензии, СписокПретензий, "" );
	Иначе
		Если выбПретензия.ЭтоГруппа()=1 Тогда
			Условие2=Условие2+" AND "+РеквизитПретензии+" IN (SELECT Val FROM #Претензии)";
			ЗапросСКЛ.УложитьСписокОбъектов(выбПретензия,"#Претензии","Претензии");
		Иначе
			Условие2=Условие2+" AND "+РеквизитПретензии+" = :выбПретензия";
			ЗапросСКЛ.УстановитьТекстовыйПараметр("выбПретензия",выбПретензия);
		КонецЕсли;	
//		ДобавитьФильтр( ЗапросСКЛ, Условие2, спУсловий, "", РеквизитПретензии, выбПретензия, "ПретензииПолученные" );
	КонецЕсли;

	
	ТекстЗапроса = "SELECT ПретензииПолученныеОбороты.Товар [Товар $Справочник.Номенклатура]
	|					, СпрН.CODE КодТовара
	|					, "+РеквизитПретензии+" [Претензия $Справочник.Претензии]
	|					, СпрП.CODE КодПретензии
	//|					, ПретензииПолученныеОбороты.Клиент [Клиент $Справочник.Контрагенты]
	//|					, ПретензииПолученныеОбороты.Агент [Агент $Справочник.Сотрудники]
	|					, ПретензииПолученныеОбороты.ПоДокументу 
	|					, 1 СчНакл
	|					, ПретензииПолученныеОбороты.КоличествоОборот Количество
	|					, CASE WHEN ПретензииПолученныеОбороты.СуммаОборот = 0 THEN ПретензииПолученныеОбороты.СуммаПотерьОборот ELSE ПретензииПолученныеОбороты.СуммаОборот END Сумма
	|				FROM $РегистрОбороты.ПретензииПолученные(:НачДата,"+?(ДатаПо>=ПолучитьДатуТА(),"",":КонДата ~")+",
	|						,INNER JOIN $Справочник.Номенклатура СпрН (NOLOCK) ON СпрН.ID = Товар ,(1=1 "+Условие+"),
	|						(Товар, СутьПретензии, СутьПретензииПодтв, ПоСчету,ПоДокументу),
	|						(Количество, Сумма, СуммаПотерь)) AS ПретензииПолученныеОбороты
	|				INNER JOIN $Справочник.Номенклатура СпрН (NOLOCK) ON СпрН.ID = ПретензииПолученныеОбороты.Товар
	|				INNER JOIN $Справочник.Претензии СпрП (NOLOCK) ON СпрП.ID = ПретензииПолученныеОбороты.СутьПретензии
	|				LEFT JOIN $Документ.Счет ДокС (NOLOCK) ON ДокС.IDDOC = ПретензииПолученныеОбороты.ПоСчету
	|				"+Условие2+"
	|				ORDER BY СпрП.CODE, СпрН.CODE
	|";
	
	ЗапросСКЛ.УстановитьТекстовыйПараметр("НачДата",ДатаС);
	ЗапросСКЛ.УстановитьТекстовыйПараметр("КонДата",ДатаПо);
	
	списокВидов=СоздатьОбъект("СписокЗначений");
	Для н = 1 По спВидовДок.РазмерСписка() Цикл
		Если спВидовДок.Пометка(н)=1 Тогда
			списокВидов.ДобавитьЗначение(спВидовДок.ПолучитьЗначение(н));
		КонецЕсли;
	КонецЦикла;

	Если Язык="EE" Тогда
		ШаблонУсловияВидДок="Dokumentide jargi  ";
		ШаблонУсловияТов="Kauba jargi  ";
		ШаблонУсловияТовГр="Kaubagruppi jargi ";
		ШаблонПретензия="Pretensiooni jargi ";
		ШаблонПретензияГр="Pretensioonigruppi jargi ";
		ШаблонАгент="Agenti jargi ";
		ШаблонАгентГр="Agentigruppi jargi ";
		ШаблонКлиент="Kliendi jargi ";
		ШаблонКлиентГр="Kliendigruppi jargi ";
	Иначе
		ШаблонУсловияВидДок="По видам документов ";
		ШаблонУсловияТов="По товару ";
		ШаблонУсловияТовГр="По группе товаров ";
		ШаблонПретензия="По претензии ";
		ШаблонПретензияГр="По группе претензий ";
		ШаблонАгент="По агенту ";
		ШаблонАгентГр="По группе агентов ";
		ШаблонКлиент="По клиенту ";
		ШаблонКлиентГр="По группе клиентов ";
	КонецЕсли;
	Возврат ЗапросСКЛ.ВыполнитьИнструкцию(ТекстЗапроса);
КонецФункции

Функция ТекстЗапроса()
	спУсловий = СоздатьОбъект( "СписокЗначений" );
	ТекстЗапроса = "
	|Период с ДатаС по ДатаПо;
	|ОбрабатыватьДокументы Проведенные;
	|Товар = Документ.ПретензияПолученная.Товар;
	|Пояснения = Документ.ПретензияПолученная.Пояснения;
	|Претензия = Документ.ПретензияПолученная.СутьПретензии;
	|Клиент = Документ.ПретензияПолученная.Клиент;
	|Агент = Документ.ПретензияПолученная.АгентПоТовару;
	|Накл = Документ.ПретензияПолученная.ДокОснование;
	|Группировка Претензия без групп;
	|Группировка Агент без групп;
	|Группировка Клиент без групп;
	|Группировка Накл;
	|Группировка Товар без групп;
	//|Функция СчД = Счётчик(Накл);
	|Функция Сч = Счётчик(Товар);";
	предВидДок = "";
	
	списокВидов=СоздатьОбъект("СписокЗначений");
	
	Для н = 1 По спВидовДок.РазмерСписка() Цикл
		Если спВидовДок.Пометка(н)=1 Тогда
			списокВидов.ДобавитьЗначение(спВидовДок.ПолучитьЗначение(н));
		КонецЕсли;
	КонецЦикла;

	Если Язык="EE" Тогда
		ШаблонУсловияВидДок="Dokumentide jargi  ";
		ШаблонУсловияТов="Kauba jargi  ";
		ШаблонУсловияТовГр="Kaubagruppi jargi ";
		ШаблонПретензия="Pretensiooni jargi ";
		ШаблонПретензияГр="Pretensioonigruppi jargi ";
		ШаблонАгент="Agenti jargi ";
		ШаблонАгентГр="Agentigruppi jargi ";
		ШаблонКлиент="Kliendi jargi ";
		ШаблонКлиентГр="Kliendigruppi jargi ";
	Иначе
		ШаблонУсловияВидДок="По видам документов ";
		ШаблонУсловияТов="По товару ";
		ШаблонУсловияТовГр="По группе товаров ";
		ШаблонПретензия="По претензии ";
		ШаблонПретензияГр="По группе претензий ";
		ШаблонАгент="По агенту ";
		ШаблонАгентГр="По группе агентов ";
		ШаблонКлиент="По клиенту ";
		ШаблонКлиентГр="По группе клиентов ";
	КонецЕсли;	
	
	ТекстЗапроса = ТекстЗапроса + "
	|	Условие ( Накл.Вид() в списокВидов );";
	спУсловий.ДобавитьЗначение(Шаблон(ШаблонУсловияВидДок+"[списокВидов.ВСтрокуСРазделителями()]."));

	//текВидДок = спВидовДок.ПолучитьЗначение(спВидовДок.ТекущаяСтрока(), предВидДок );
	//Если текВидДок <> "все" Тогда
	//	ТекстЗапроса = ТекстЗапроса + "
	//	|	Условие ( Найти(Накл.Вид(),"""+текВидДок+""")>0 );";
	//	спУсловий.ДобавитьЗначение(Шаблон("По виду документа [предВидДок]."));
	//КонецЕсли;
	Если выбНоменклатура.Выбран() = 0 Тогда 
		//спУсловий.ДобавитьЗначение("По всем товарам.");
	ИначеЕсли выбНоменклатура.ЭтоГруппа() = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Товар = выбНоменклатура );";
		спУсловий.ДобавитьЗначение(Шаблон(ШаблонУсловияТов+"([выбНоменклатура.Код]) [выбНоменклатура.Наименование]."));
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Товар в выбНоменклатура );";
		спУсловий.ДобавитьЗначение(Шаблон(ШаблонУсловияТовГр+"([выбНоменклатура.Код]) [выбНоменклатура.Наименование]."));
	КонецЕсли;
	
	Если выбПретензия.Выбран() = 0 Тогда 
		//спУсловий.ДобавитьЗначение("По всем причинам.");
	ИначеЕсли выбПретензия.ЭтоГруппа() = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Претензия = выбПретензия );";
		спУсловий.ДобавитьЗначение(Шаблон(ШаблонПретензия+"[выбПретензия.Наименование]."));
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Претензия в выбПретензия );";
		спУсловий.ДобавитьЗначение(Шаблон(ШаблонПретензияГр+"[выбПретензия.Наименование]."));
	КонецЕсли;

	Если выбАгент.Выбран() = 0 Тогда 
		//спУсловий.ДобавитьЗначение("По всем товарам.");
	ИначеЕсли выбАгент.ЭтоГруппа() = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Агент = выбАгент );";
		спУсловий.ДобавитьЗначение(Шаблон(ШаблонАгент+"[выбАгент.Наименование]."));
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Агент в выбАгент );";
		спУсловий.ДобавитьЗначение(Шаблон(ШаблонАгентГр+"[выбАгент.Наименование]."));
	КонецЕсли;
	
	Если выбКлиент.Выбран() = 0 Тогда 
		//спУсловий.ДобавитьЗначение("По всем товарам.");
	ИначеЕсли выбКлиент.ЭтоГруппа() = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Клиент = выбКлиент );";
		спУсловий.ДобавитьЗначение(Шаблон(ШаблонКлиент+"([выбКлиент.Код]) [выбКлиент.Наименование]."));
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Клиент в выбКлиент );";
		спУсловий.ДобавитьЗначение(Шаблон(ШаблонКлиентГр+"([выбКлиент.Код]) [выбКлиент.Наименование]."));
	КонецЕсли;
	
	Если флУдаленные = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Накл.ПометкаУдаления() = 0 );";
	КонецЕсли;
	Возврат ТекстЗапроса;
КонецФункции


Функция ТекстЗапросаНов(СводнаяТаблица=0)
	Язык = семТекСтрана();
	спУсловий = СоздатьОбъект( "СписокЗначений" );
	ЗапросСКЛ=СоздатьОбъект("ODBCRecordSet");
	
	Условие = "";
	Док=СоздатьОбъект("Документ");

	Если флГлКлиент=1 Тогда
		глУдалениеВременнойТаблицыSQL("#КлиентыГруппы");
		ТекстЗапроса = "SELECT ID 
		|				INTO #КлиентыГруппы
		|				FROM $Справочник.Контрагенты Спр (NOLOCK) WHERE $Спр.КлГруппа = :ВыбКлиентГруппа
		|				UNION 
		|				SELECT :ВыбКлиентГруппа ID 
		|";
		ЗапросСКЛ.УстановитьТекстовыйПараметр("ВыбКлиентГруппа",выбКлиент);
		ЗапросСКЛ.ВыполнитьСкалярный(ТекстЗапроса);
		Условие = Условие + " AND Клиент IN (SELECT ID FROM #КлиентыГруппы)";
	Иначе
		ДобавитьФильтр( ЗапросСКЛ, Условие, спУсловий, "", "Клиент", выбКлиент, "Контрагенты" );
	КонецЕсли;	
	
	
	Если чФильтрПоПодразделениямПользователя=1 Тогда
		ДобавитьФильтр( ЗапросСКЛ, Условие, спУсловий, "", "Агент", СписокАгентов, "");
	Иначе
		ДобавитьФильтр( ЗапросСКЛ, Условие, спУсловий, "", "Агент", выбАгент, "Сотрудники" );
	КонецЕсли;
	
	ДобавитьФильтр( ЗапросСКЛ, Условие, спУсловий, "", "Товар", выбНоменклатура, "Номенклатура" );

	глУдалениеВременнойТаблицыSQL("#МаршрутныеЛисты");	
	
	ТекстЗапросаМарш="	SELECT DISTINCT	ПодчДок.ParentVal ДокОснование, ПодчДок.ChildID ДокМаршЛист
	|		INTO #МаршрутныеЛисты
	| 	   FROM _1SCRDOC as ПодчДок (NOLOCK)
	|	   INNER JOIN _1sjourn as Жур (NOLOCK) ON Жур.IDDOC = ПодчДок.ChildID AND Жур.IDDocDef = $ВидДокумента.МаршрутныйЛист AND Жур.ISMARK = 0 AND Жур.DATE_TIME_IDDOC >= :НачДатаМарш
	|	   INNER JOIN (SELECT 'O1'+$ВидДокумента36.Счет + ПретензииПолученныеОбороты.ПоСчету ПоСчету
	|					  FROM $РегистрОбороты.ПретензииПолученные(:НачДата,"+?(ДатаПо>=ПолучитьДатуТА(),"",":КонДата ~")+",
	|																,,(1=1 "+Условие+"),ПоСчету,Количество) as ПретензииПолученныеОбороты
	|				  ) as ОборотыПоСчетам ON ОборотыПоСчетам.ПоСчету = ПодчДок.ParentVal
	|									  
	|";
	
	
	ЗапросСКЛ.УстановитьТекстовыйПараметр("НачДатаМарш",ДатаС-30);
	ЗапросСКЛ.УстановитьТекстовыйПараметр("НачДата",ДатаС);
	ЗапросСКЛ.УстановитьТекстовыйПараметр("КонДата",ДатаПо);
	//ЗапросСКЛ.Отладка(1);
	ЗапросСКЛ.ВыполнитьСкалярный(ТекстЗапросаМарш);
//
//	табл=ЗапросСКЛ.ВыполнитьИнструкцию(Текст);

	спУсловий = СоздатьОбъект( "СписокЗначений" );
	Условие = "";
	//Если чФильтрПоДолжностям=1 Тогда
	//	ДобавитьФильтр( ЗапросСКЛ, Условие, спУсловий, "", ПолеСутьПретензии, СписокПретензий, "" );
	//Иначе
	//	ДобавитьФильтр( ЗапросСКЛ, Условие, спУсловий, "", ПолеСутьПретензии, выбПретензия, "Претензии" );
	//КонецЕсли;
	
	Если чФильтрПоПодразделениямПользователя=1 Тогда
		ДобавитьФильтр( ЗапросСКЛ, Условие, спУсловий, "", "Агент", СписокАгентов, "");
	Иначе
		ДобавитьФильтр( ЗапросСКЛ, Условие, спУсловий, "", "Агент", выбАгент, "Сотрудники" );
	КонецЕсли;
	
	Если флГлКлиент=1 Тогда
		Условие = Условие + " AND Клиент IN (SELECT ID FROM #КлиентыГруппы)";
	Иначе
		ДобавитьФильтр( ЗапросСКЛ, Условие, спУсловий, "", "Клиент", выбКлиент, "Контрагенты" );
	КонецЕсли;
	ДобавитьФильтр( ЗапросСКЛ, Условие, спУсловий, "", "Товар", выбНоменклатура, "Номенклатура" );
	ДобавитьФильтр( ЗапросСКЛ, Условие, спУсловий, "$СпрН", "Поставщик", выбПоставщик, "Контрагенты" );
	ДобавитьФильтр( ЗапросСКЛ, Условие, спУсловий, "$СпрН", "Закупщик", выбЗакупщик, "Сотрудники" );
	
	Условие2="WHERE 1=1";
	ДобавитьФильтр( ЗапросСКЛ, Условие2, спУсловий, "$ДокС", "Склад", выбСклад, "МестаХранения" );

	глУдалениеВременнойТаблицыSQL("#ПретензииПолученные");
	глУдалениеВременнойТаблицыSQL("#ПретензииПолученныеФинал");
	
	ТекстЗапроса = " -- запрос по претензиям
	|				SELECT ПретензииПолученныеОбороты.Товар
	|					, СпрН.CODE КодТовара
	|					, "+?(флСутьПодтв=1,"CASE WHEN ПретензииПолученныеОбороты.СутьПретензииПодтв = $ПустойИД THEN ПретензииПолученныеОбороты.СутьПретензии ELSE ПретензииПолученныеОбороты.СутьПретензииПодтв END","ПретензииПолученныеОбороты.СутьПретензии")+" Претензия 
	|					, ПретензииПолученныеОбороты.СутьПретензииПодтв ПретензияПодтв
	|					, СпрП.CODE КодПретензии
	|					, COALESCE(ПретензииПолученныеОбороты.Клиент,$ПустойИД) Клиент 
	|					, COALESCE(ПретензииПолученныеОбороты.КлиентФилиала,$ПустойИД) КлиентФилиала
	|					, COALESCE(ПретензииПолученныеОбороты.Агент,$ПустойИД) Агент 
	|					, ПретензииПолученныеОбороты.ПоСчету
	|					, ПретензииПолученныеОбороты.ПоДокументу 
	|					, $СпрН.Поставщик Поставщик 
	|					, $СпрН.Закупщик Закупщик
	|					, ДокМЛ.IDDOC МаршрутныйЛистID
	|					, COALESCE($ДокС.Комплектовщик,$ПустойИД) Комплектовщик
	|					, RTRIM(COALESCE(Жур.DOCNO,'')) НомерДок
	|					, Жур.IDDOCDEF ПоДокументу_вид
	|					, COALESCE(Жур.$ОбщийРеквизит.Автор,$ПустойИД) Автор 
	|					, COALESCE(CASE WHEN $ДокМЛ.Экспедитор = $ПустойИД THEN $ДокМЛ.Экспедитор2 ELSE $ДокМЛ.Экспедитор END,$ПустойИД) Экспедитор
	|					, 1 Сч
	|					, CASE WHEN ПретензииПолученныеОбороты.СутьПретензииПодтв = $ПустойИД THEN 'Неподтверждена' 
	|						   ELSE 'Подтверждена' END Статус
	|					, CASE WHEN ПретензииПолученныеОбороты.СутьПретензииПодтв <> ПретензииПолученныеОбороты.СутьПретензии THEN 'Нет' 
	|						   ELSE 'Да' END Соответствие
	|					, ПретензииПолученныеОбороты.КоличествоОборот Количество
	|					, CASE WHEN ПретензииПолученныеОбороты.СуммаОборот = 0 THEN ПретензииПолученныеОбороты.СуммаПотерьОборот ELSE ПретензииПолученныеОбороты.СуммаОборот END Сумма
	|				INTO #ПретензииПолученные
	|				FROM $РегистрОбороты.ПретензииПолученные(:НачДата,"+?(ДатаПо>=ПолучитьДатуТА(),"",":КонДата ~")+",
	|						,INNER JOIN $Справочник.Номенклатура СпрН (NOLOCK) ON СпрН.ID = Товар,(1=1 "+Условие+"),
	|						(Товар, СутьПретензии, СутьПретензииПодтв,Клиент, КлиентФилиала, Агент, ПоСчету, ПоДокументу),
	|						(Количество, Сумма, СуммаПотерь)) AS ПретензииПолученныеОбороты
	|				INNER JOIN $Справочник.Номенклатура СпрН (NOLOCK) ON СпрН.ID = ПретензииПолученныеОбороты.Товар
	|				INNER JOIN $Справочник.Претензии СпрП (NOLOCK) ON СпрП.ID = ПретензииПолученныеОбороты.СутьПретензии
	|				LEFT JOIN $Документ.Счет ДокС (NOLOCK) ON ДокС.IDDOC = ПретензииПолученныеОбороты.ПоСчету
	|				LEFT JOIN _1sjourn Жур (NOLOCK) ON Жур.IDDOC = RIGHT(ПретензииПолученныеОбороты.ПоДокументу,9)
	|				LEFT JOIN #МаршрутныеЛисты as МаршрутныеЛисты ON 'O1'+$ВидДокумента36.Счет + ПретензииПолученныеОбороты.ПоСчету = МаршрутныеЛисты.ДокОснование
	|			    LEFT JOIN $Документ.МаршрутныйЛист ДокМЛ (NOLOCK) ON ДокМЛ.IDDOC = МаршрутныеЛисты.ДокМаршЛист
	|"+Условие2+"
	|				ORDER BY СпрП.CODE, СпрН.CODE
	|";
	
	ЗапросСКЛ.УстановитьТекстовыйПараметр("НачДатаМарш",ДатаС-30);
	ЗапросСКЛ.УстановитьТекстовыйПараметр("НачДата",ДатаС);
	ЗапросСКЛ.УстановитьТекстовыйПараметр("КонДата",ДатаПо);

	ЗапросСКЛ.ВыполнитьСкалярный(ТекстЗапроса);

	//получаем разбивку претензий по видам с привязкой к структурам лиц, которые их подтверждают
	глУдалениеВременнойТаблицыSQL("#АгентыПользователейПоПретензиям");
	ТекстЗапроса=" SELECT DISTINCT ДС.ID АгентID
	|					, Претензии.ID ПретензияID
//	|					, Сотрудники.ID СотрудникID
	| 					, Сотрудники.PARENTID ПодразделениеID
	|			  INTO #АгентыПользователейПоПретензиям
	|             FROM (SELECT DISTINCT Претензия as ID FROM #ПретензииПолученные) AS Претензии
				|  INNER JOIN $Справочник.ПретензииОтветственныеПоДолжностям AS ПретензииОтветственныеПоДолжностям With (NOLOCK) ON Претензии.ID = ПретензииОтветственныеПоДолжностям.PARENTEXT AND $ПретензииОтветственныеПоДолжностям.Подтверждение = 1 AND $ПретензииОтветственныеПоДолжностям.ДляАналитики = 1  
				|  INNER JOIN $Справочник.Сотрудники AS Сотрудники With (NOLOCK) ON $ПретензииОтветственныеПоДолжностям.ОтветственнаяДолжность = $Сотрудники.Должность
//				|  INNER JOIN Дерево_Сотрудники ДСОтв (NOLOCK) ON ДСОтв.ID = Сотрудники.ID 
//				|  INNER JOIN $Справочник.Сотрудники AS СотрудникиГруппа (NOLOCK) ON СотрудникиГруппа.ID = ДСОтв.PARENTID AND $СотрудникиГруппа.УровеньИерархии = 2
				|  INNER JOIN $Справочник.Пользователи AS Пользователи With (NOLOCK) ON Сотрудники.ID = $Пользователи.Сотрудник
				|  INNER JOIN $Справочник.ПодразделенияПользователей AS ПодразделенияПользователей With (NOLOCK) ON Пользователи.ID = ПодразделенияПользователей.PARENTEXT
				|  INNER JOIN Дерево_Сотрудники ДС (NOLOCK) ON ДС.PARENTID = $ПодразделенияПользователей.Подразделение
				|  WHERE ПретензииОтветственныеПоДолжностям.ISMARK = 0 
				|		 AND Сотрудники.ISMARK = 0 AND Пользователи.ISMARK = 0 AND ПодразделенияПользователей.ISMARK = 0
				|		 AND Сотрудники.DESCR NOT LIKE 'ZZ%'
				|";

	ЗапросСКЛ.ВыполнитьСкалярный(ТекстЗапроса);

	Условие="";
//	ПолеСутьПретензии=?(флСутьПодтв=1,"(CASE WHEN СутьПретензииПодтв = $ПустойИД THEN СутьПретензии ELSE СутьПретензииПодтв END)","СутьПретензии");
	
	Если чФильтрПоДолжностям=1 Тогда
		ДобавитьФильтр( ЗапросСКЛ, Условие, спУсловий, "", "Претензия", СписокПретензий, "" );
	Иначе
		ДобавитьФильтр( ЗапросСКЛ, Условие, спУсловий, "", "Претензия", выбПретензия, "Претензии" );
	КонецЕсли;
	
	

	Если СводнаяТаблица=1 Тогда

		ТекстЗапроса = "SELECT Товар
		|					, КодТовара
		|					, Претензия 
		|					, ПретензияПодтв 
		|					, КодПретензии
		|					, Клиент 
		|					, Агент 
		|					, CASE WHEN (Клиент = КлиентФилиала AND Клиент<>$ПустойИД) THEN $ПустойИД ELSE COALESCE(#АгентыПользователейПоПретензиям.ПодразделениеID,$ПустойИД) END ПодрОтветственное
		|					, ПоСчету
		|					, ПоДокументу
		|					, Поставщик
		|					, Закупщик 
		|					, МаршрутныйЛистID
		|					, Комплектовщик 
		|					, НомерДок
		|					, ПоДокументу_вид 
		|					, Автор 
		|					, Экспедитор 
		|					, 1 Сч
		|					, Статус
		|					, Соответствие
		|					, Количество
		|					, Сумма
		|				 INTO #ПретензииПолученныеФинал
		|			     FROM #ПретензииПолученные 
		|				 LEFT JOIN #АгентыПользователейПоПретензиям ON #АгентыПользователейПоПретензиям.ПретензияID = Претензия AND #АгентыПользователейПоПретензиям.АгентID = Агент
		|				 WHERE 1=1 "+Условие+"
		|";
		
		ЗапросСКЛ.ВыполнитьСкалярный(ТекстЗапроса);
		
		ТекстЗапроса=" SELECT  Товар [Товар $Справочник.Номенклатура]
	|					, КодТовара
	|					, Претензия [Претензия $Справочник.Претензии]
	|					, ПретензияПодтв [ПретензияПодтв $Справочник.Претензии]
	|					, КодПретензии
	|					, Клиент [Клиент $Справочник.Контрагенты]
	|					, Агент [Агент $Справочник.Сотрудники]
	|					, ПодрОтветственное [ПодрОтветственное $Справочник.Сотрудники]
	|					, ПоСчету [ПоСчету $Документ.Счет]
	|					, ПоДокументу [ПоДокументу $Документ]
	|					, Поставщик [Поставщик $Справочник.Контрагенты]
	|					, Закупщик [Закупщик $Справочник.Сотрудники]
	|					, МаршрутныйЛистID
	|					, Комплектовщик [Комплектовщик $Справочник.Комплектовщики]
	|					, НомерДок
	|					, ПоДокументу_вид [ПоДокументу_вид $ВидДокумента] 
	|					, Автор [Автор $Справочник.Пользователи]
	|					, Экспедитор [Экспедитор $Справочник.Экспедиторы]
	|					, 1 Сч
	|					, Статус
	|					, Соответствие
	|					, Количество
	|					, Сумма
	|			     FROM #ПретензииПолученныеФинал
	|";
	
		Если чExcel = 0 Тогда
			ТекстЗапроса = ТекстЗапроса + "		
				|				TOTALS Sum(Сумма), Sum(Количество), COUNT(Количество), COUNT([Товар $Справочник.Номенклатура])
				|				BY ALL 
				|				    , [Агент $Справочник.Сотрудники] HIERARCHY
				|					, [ПодрОтветственное $Справочник.Сотрудники]
				|					, [Претензия $Справочник.Претензии] HIERARCHY
				|					, [ПретензияПодтв $Справочник.Претензии] HIERARCHY
				|					, КодТовара
				|					, [Товар $Справочник.Номенклатура] HIERARCHY
				|					, [Клиент $Справочник.Контрагенты] HIERARCHY
				|					, [Поставщик $Справочник.Контрагенты]
				|					, [Закупщик $Справочник.Сотрудники]
				|					, НомерДок
				|					, Соответствие
				|					, Статус
				|					, [Автор $Справочник.Пользователи]
				|					, [Экспедитор $Справочник.Экспедиторы]
				|					, [Комплектовщик $Справочник.Комплектовщики]
				|";
	    КонецЕсли;
		
		Возврат ТекстЗапроса;
	Иначе

		ТекстЗапроса = "SELECT Товар [Товар $Справочник.Номенклатура]
		|					, КодТовара
		|					, Претензия [Претензия $Справочник.Претензии]
		|					, ПретензияПодтв [ПретензияПодтв $Справочник.Претензии]
		|					, КодПретензии
		|					, Клиент [Клиент $Справочник.Контрагенты]
		|					, Агент [Агент $Справочник.Сотрудники]
		|					, CASE WHEN (Клиент = КлиентФилиала AND Клиент<>$ПустойИД) THEN $ПустойИД ELSE COALESCE(#АгентыПользователейПоПретензиям.ПодразделениеID,$ПустойИД) END [ПодрОтветственное $Справочник.Сотрудники]
		|					, ПоСчету [ПоСчету $Документ.Счет]
		|					, ПоДокументу [ПоДокументу $Документ]
		|					, Поставщик [Поставщик $Справочник.Контрагенты]
		|					, Закупщик [Закупщик $Справочник.Сотрудники]
		|					, МаршрутныйЛистID
		|					, Комплектовщик [Комплектовщик $Справочник.Комплектовщики]
		|					, НомерДок
		|					, ПоДокументу_вид [ПоДокументу_вид $ВидДокумента] 
		|					, Автор [Автор $Справочник.Пользователи]
		|					, Экспедитор [Экспедитор $Справочник.Экспедиторы]
		|					, 1 Сч
		|					, Статус
		|					, Соответствие
		|					, Количество
		|					, Сумма
		|			     FROM #ПретензииПолученные 
		|				 LEFT JOIN #АгентыПользователейПоПретензиям ON #АгентыПользователейПоПретензиям.ПретензияID = Претензия AND #АгентыПользователейПоПретензиям.АгентID = Агент
		|				 WHERE 1=1 "+Условие+"
		|";
		
	КонецЕсли;

	Если НазваниеНабораПрав()="Администратор" Тогда
		//ЗапросСКЛ.Отладка(1);
	КонецЕсли;
	списокВидов=СоздатьОбъект("СписокЗначений");
	Для н = 1 По спВидовДок.РазмерСписка() Цикл
		Если спВидовДок.Пометка(н)=1 Тогда
			списокВидов.ДобавитьЗначение(спВидовДок.ПолучитьЗначение(н));
		КонецЕсли;
	КонецЦикла;

	Если Язык="EE" Тогда
		ШаблонУсловияВидДок="Dokumentide jargi  ";
		ШаблонУсловияТов="Kauba jargi  ";
		ШаблонУсловияТовГр="Kaubagruppi jargi ";
		ШаблонПретензия="Pretensiooni jargi ";
		ШаблонПретензияГр="Pretensioonigruppi jargi ";
		ШаблонАгент="Agenti jargi ";
		ШаблонАгентГр="Agentigruppi jargi ";
		ШаблонКлиент="Kliendi jargi ";
		ШаблонКлиентГр="Kliendigruppi jargi ";
	Иначе
		ШаблонУсловияВидДок="По видам документов ";
		ШаблонУсловияТов="По товару ";
		ШаблонУсловияТовГр="По группе товаров ";
		ШаблонПретензия="По претензии ";
		ШаблонПретензияГр="По группе претензий ";
		ШаблонАгент="По агенту ";
		ШаблонАгентГр="По группе агентов ";
		ШаблонКлиент="По клиенту ";
		ШаблонКлиентГр="По группе клиентов ";
	КонецЕсли;
	
	Возврат ЗапросСКЛ.ВыполнитьИнструкцию(ТекстЗапроса);
КонецФункции

//Функция ПолучитьСуммуТовара(Товар,Док)
//	Если ПустоеЗначение(Док) = 1 Тогда Возврат 0; КонецЕсли;
//	Если ТипЗначения(Док) <> 12 Тогда Возврат 0; КонецЕсли;
//	Если Док.Выбран() = 0 Тогда Возврат 0; КонецЕсли;
//	Док.ВыбратьСтроки();
//	Пока Док.ПолучитьСтроку() = 1 Цикл
//		Если Док.Товар = Товар Тогда Возврат Док.Всего; КонецЕсли;
//	КонецЦикла;
//	Возврат 0;
//КонецФункции

Функция ПолучитьДанныеПоТовару(Товар,Док,Колво,Сумма)
	Колво = 0; Сумма = 0;
	
	//проверка документа
	Если ПустоеЗначение(Док) = 1 Тогда Возврат 2; КонецЕсли;
	Если ТипЗначения(Док) <> 12 Тогда Возврат 2; КонецЕсли;
	Если Док.Выбран() = 0 Тогда Возврат 2; КонецЕсли;
//	Если Док.Проведен() = 0 Тогда Возврат 2; КонецЕсли;
	//поиск товара
	Док.ВыбратьСтроки();
	Пока Док.ПолучитьСтроку() = 1 Цикл
		Если Док.Товар = Товар Тогда 
			Если глЕстьРеквизитМнЧ("Коэффициент",Док.Вид())=1 Тогда
				Колво = Док.Количество*Док.Коэффициент;
			Иначе
				Колво = Док.Количество;
			КонецЕсли;
			//Сумма = Док.Сумма;
			Если глЕстьРеквизитШапки("Валюта",Док.Вид()) = 1 Тогда
				Сумма = Пересчет(Док.Сумма,Док.Валюта,Док.ДатаДок,кБазоваяВалюта,Док.ДатаДок);
			Иначе
				Сумма = Док.Сумма;
			КонецЕсли;
			Возврат 0; 
		КонецЕсли;
	КонецЦикла;
	//если нет товара
	Возврат 1;
КонецФункции

Процедура Сформировать()
	Язык=семТекСтрана();
	начЛог = семЗаписатьЛогНач( "Отчет", "Отчет по претензиям", "Обработка", "Формирование отчета" );
	Запрос = СоздатьОбъект( "Запрос" );
	Если Запрос.Выполнить( ТекстЗапроса() ) = 0 Тогда Возврат; КонецЕсли;
	//табл = СоздатьОбъект( "ТаблицаЗначений" );
	//Запрос.Выгрузить(табл,1,0);
	//табл.ВыбратьСтроку();
	//Возврат;
	таб = СоздатьОбъект( "Таблица" );
	таб.ИсходнаяТаблица( "Таблица" );
	
	Если Язык="EE" Тогда
		пЗаголовок = "Pretensioon";
		СтрАгент =" / Agent";
		СтрКлиент =" / Klient";
		СтрДокумент =" / Dokument";
		СтрТовар = " / Toote ";
		ПечЗаголовокОтчета="Pretensiooni aruanne antud perioodi kohta ";
		ПечПериод="perioodi kohta "+ДатаС+" - "+ДатаПо;
		печДок="dok.";
	Иначе
		пЗаголовок = "Претензия";
		СтрАгент =" / Агент";
		СтрКлиент =" / Клиент";
		СтрДокумент =" / Документ";
		СтрТовар = " / Товар";
		ПечЗаголовокОтчета="Отчет по претензиям";
		ПечПериод="За период с "+ДатаС+" по "+ДатаПо;
		печДок="док.";
	КонецЕсли;
	
	Если флГр2 = 1 Тогда пЗаголовок = пЗаголовок + СтрАгент; КонецЕсли;
	Если флГр3 = 1 Тогда пЗаголовок = пЗаголовок + СтрКлиент; КонецЕсли;
	Если флГр4 = 1 Тогда пЗаголовок = пЗаголовок + СтрДокумент; КонецЕсли;
	Если флГр5 = 1 Тогда пЗаголовок = пЗаголовок + СтрТовар; КонецЕсли;
	
	таб.ВывестиСекцию( "Заголовок" );		
	пУсловие = "";
	Для н = 1 по спУсловий.РазмерСписка() Цикл
		пУсловие = пУсловие + спУсловий.ПолучитьЗначение(н) + " ";
	КонецЦикла;
	Таб.ВывестиСекцию("Условие");
	таб.ВывестиСекцию( "Шапка" );		
	таб.Опции( 0, 0, таб.ВысотаТаблицы(), 0 );
	
	сумПретензия = 0;
	сумАгент = 0;
	сумКлиент = 0;
	сумДокумент = 0;
	сумВсего = 0;
	счПретензия = 0;
	счАгент = 0;
	счКлиент = 0;
	счДок = 0;
	
	стрАгент = 0;
	стрКлиент = 0;
	стрДокумент = 0;
	
	пСебестИтог = 0;
	пСумИтог = 0;
	пСумСНДСИтог = 0;
	пДокИтог = 0;
	
	Всего = Запрос.Сч; н = 0;
	Пока Запрос.Группировка("Претензия") = 1 Цикл
		пПретензия = Запрос.Претензия;
		таб.ВывестиСекцию( "Претензия" );		
		стрПретензия = таб.ВысотаТаблицы();
		
		Пока Запрос.Группировка("Агент") = 1 Цикл
			Если флГр2 = 1 Тогда
				пАгент = Запрос.Агент;
				пСч = Запрос.Сч;
				таб.ВывестиСекцию( "Агент" );		
				стрАгент = таб.ВысотаТаблицы();
			КонецЕсли;
			
			Пока Запрос.Группировка("Клиент") = 1 Цикл
				Если флГр3 = 1 Тогда
					пКлиент = Шаблон("([Запрос.Клиент.Код]) [Запрос.Клиент]");
					пСч = Запрос.Сч;
					таб.ВывестиСекцию( "Клиент" );		
					стрКлиент = таб.ВысотаТаблицы();
				КонецЕсли;
				
				Пока Запрос.Группировка("Накл") = 1 Цикл
					Если флГр4 = 1 Тогда
						Док = Запрос.Накл;
						пДок = Шаблон("[Док.Вид()] [Док.НомерДок] [Док.ДатаДок]");
						пУд = ?(Док.ПометкаУдаления()=1,"Х","");
						пСч = Запрос.Сч;
						таб.ВывестиСекцию( "Документ" );		
						стрДокумент = таб.ВысотаТаблицы();
					КонецЕсли;
					
					Пока Запрос.Группировка("Товар") = 1 Цикл 
						н = н + 1; 
						Состояние( "Выведено "+Окр( н / Всего * 100, 0 )+"%" );
						Товар = Запрос.Товар;
						Пояснения = Запрос.Пояснения;
						пСч = Запрос.Сч;
						пКол1 = 0; пСум1 = 0; Ед1 = "";
						пКол2 = 0; пСум2 = 0; Ед2 = "";
						
						Если Запрос.Накл.Вид()="ОжидаемаяПоставка" Тогда
							пКол1 = Запрос.Количество;
							пСум1 = Запрос.Сумма;
						Иначе
							Если глЕстьРеквизитШапки("ДокументОснование",Запрос.Накл.Вид())=1 Тогда
								ПолучитьДанныеПоТовару(Товар,Запрос.Накл.ДокументОснование,пКол1,пСум1);
							КонецЕсли;
							ПолучитьДанныеПоТовару(Товар,Запрос.Накл,пКол2,пСум2);
						КонецЕсли;
						Если пСум1>0 Тогда
							Сум = пСум1 - пСум2;
						Иначе
							Сум = пСум2;
						КонецЕсли;
						
						Если флГр5 = 1 Тогда
							пКол = пКол1 - пКол2;
							пСум = Формат( Сум, "Ч015.2, ");
							пЕд = глПолучитьПереводЕдИзм( Товар.БазоваяЕдиницаИзмерения, Язык );
							Если Язык="EE" Тогда
								пТовар = Шаблон("([Товар.Код]) [Товар.НаименованиеEE] - [Пояснения]");
							Иначе
								пТовар = Шаблон("([Товар.Код]) [Товар] - [Пояснения]");
							КонецЕсли;
							
							таб.ВывестиСекцию( "Товар" );		
						КонецЕсли;
						сумДокумент = сумДокумент + Сум;
					КонецЦикла;
					Если флГр4 = 1 Тогда
						обл = таб.Область(Шаблон("R[стрДокумент]C6"));
						обл.Текст = Формат( сумДокумент, "Ч015.2, " );
					КонецЕсли;
					сумКлиент = сумКлиент + сумДокумент;
					счКлиент = счКлиент + 1;
					сумДокумент = 0;
				КонецЦикла;
				Если флГр3 = 1 Тогда
					обл = таб.Область(Шаблон("R[стрКлиент]C6"));
					обл.Текст = Формат( сумКлиент, "Ч015.2, " );
					обл = таб.Область(Шаблон("R[стрКлиент]C5"));
					обл.Текст = Шаблон("[счКлиент] "+печДок);
				КонецЕсли;
				сумАгент = сумАгент + сумКлиент;
				счАгент = счАгент + счКлиент;
				сумКлиент = 0; счКлиент = 0;
			КонецЦикла;
			Если флГр2 = 1 Тогда
				обл = таб.Область(Шаблон("R[стрАгент]C6"));
				обл.Текст = Формат( сумАгент, "Ч015.2, " );
				обл = таб.Область(Шаблон("R[стрАгент]C5"));
				обл.Текст = Шаблон("[счАгент] "+печДок);
			КонецЕсли;
			сумПретензия = сумПретензия + сумАгент;
			счПретензия = счПретензия + счАгент;
			сумАгент = 0; счАгент = 0;
		КонецЦикла;
		обл = таб.Область(Шаблон("R[стрПретензия]C6"));
		обл.Текст = Формат( сумПретензия, "Ч015.2, " );
		обл = таб.Область(Шаблон("R[стрПретензия]C5"));
		обл.Текст = Шаблон("[счПретензия] "+печДок);
		сумВсего = сумВсего + сумПретензия;
		сумПретензия = 0;
		пДокИтог = пДокИтог + счПретензия;
		счПретензия = 0;
	КонецЦикла;
	пСч = Шаблон("[пДокИтог] док.");
	пВсего = Формат( сумВсего, "Ч015.2, " );
	Если Язык="EE" Тогда
		ПечИтог="Kokku:";
	Иначе
		ПечИтог="Итог:";
	КонецЕсли;
	таб.ВывестиСекцию( "Итог" );		
	таб.ТолькоПросмотр( 1 );
	Если Язык = "EE" Тогда
		таб.Область(1,1,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы()).Шрифт("Arial(Baltic)");
	КонецЕсли;
	таб.Показать( "Отчет по претензиям" );
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры

Процедура СформироватьНов()
	Язык=семТекСтрана();
	начЛог = семЗаписатьЛогНач( "Отчет", "Отчет по претензиям", "Обработка", "Формирование отчета" );
	Запрос = СоздатьОбъект( "Запрос" );
	
	табл = СоздатьОбъект("ТаблицаЗначений");
	табл=ТекстЗапросаНов();
	ИТ = СоздатьОбъект("ИндексированнаяТаблица");
	ИТ.Загрузить(табл);
	ЧислоСтрок = 0;
	ИТ.Группировать("Претензия: Претензия; Агент : *Агент; Клиент : *Клиент; ПоДокументу : *ПоДокументу; Товар: *Товар", "Сч,Количество,Сумма", 0);
	ИТ.Сортировать("КодПретензии");
	//ИТ.Показать();
	
	таб = СоздатьОбъект( "Таблица" );
	таб.ИсходнаяТаблица( "Таблица"+?(чСрокиРеализ=1,"СрокиРеализ","") );
	
	Если Язык="EE" Тогда
		пЗаголовок = "Pretensioon";
		СтрАгент =" / Agent";
		СтрКлиент =" / Klient";
		СтрДокумент =" / Dokument";
		СтрТовар = " / Toote ";
		ПечЗаголовокОтчета="Pretensiooni aruanne antud perioodi kohta ";
		ПечПериод="perioodi kohta "+ДатаС+" - "+ДатаПо;
		печДок="dok.";
	Иначе
		пЗаголовок = "Претензия";
		СтрАгент =" / Агент";
		СтрКлиент =" / Клиент";
		СтрДокумент =" / Документ";
		СтрТовар = " / Товар";
		ПечЗаголовокОтчета="Отчет по претензиям";
		ПечПериод="За период с "+ДатаС+" по "+ДатаПо;
		печДок="док.";
	КонецЕсли;
	
	Если флГр2 = 1 Тогда пЗаголовок = пЗаголовок + СтрАгент; КонецЕсли;
	Если флГр3 = 1 Тогда пЗаголовок = пЗаголовок + СтрКлиент; КонецЕсли;
	Если флГр4 = 1 Тогда пЗаголовок = пЗаголовок + СтрДокумент; КонецЕсли;
	Если флГр5 = 1 Тогда пЗаголовок = пЗаголовок + СтрТовар; КонецЕсли;
	
	таб.ВывестиСекцию( "Заголовок" );		
	пУсловие = "";
	Для н = 1 по спУсловий.РазмерСписка() Цикл
		пУсловие = пУсловие + спУсловий.ПолучитьЗначение(н) + " ";
	КонецЦикла;
	Таб.ВывестиСекцию("Условие");
	таб.ВывестиСекцию( "Шапка" );		
	таб.Опции( 0, 0, таб.ВысотаТаблицы(), 0 );
	
	сумПретензия = 0;
	сумАгент = 0;
	сумКлиент = 0;
	сумДокумент = 0;
	сумВсего = 0;
	счПретензия = 0;
	счАгент = 0;
	счКлиент = 0;
	счДок = 0;
	
	стрАгент = 0;
	стрКлиент = 0;
	стрДокумент = 0;
	
	пСебестИтог = 0;
	пСумИтог = 0;
	пСумСНДСИтог = 0;
	пДокИтог = 0;

	итНаклТовары = СоздатьОбъект("ИндексированнаяТаблица");
	
	Всего = ИТ.Итог("Сч"); н = 0;
	ИТ.Сортировать("Претензия");
	ИТ.ВыбратьСтроки();
	Пока ИТ.ПолучитьСтроку()=1 Цикл // по претензиям
		
		сумПретензия = ИТ.Сумма;

		пПретензия = НазваниеПретензии(ИТ.Претензия);
		таб.ВывестиСекцию( "Претензия" );		
		стрПретензия = таб.ВысотаТаблицы();
		
		итАгенты = ИТ.тзПотомки;
		итАгенты.Сортировать("Агент");
		итАгенты.ВыбратьСтроки();
		Пока итАгенты.ПолучитьСтроку()=1 Цикл //агенты
			
			сумАгент = итАгенты.Сумма;
			
			Если флГр2 = 1 Тогда
				пАгент = итАгенты.Агент;
				пСч = итАгенты.Сч;
				таб.ВывестиСекцию( "Агент" );		
				стрАгент = таб.ВысотаТаблицы();
			КонецЕсли;

			итКлиенты = итАгенты.тзПотомки;
			итКлиенты.Сортировать("Клиент");
			итКлиенты.ВыбратьСтроки();
			Пока итКлиенты.ПолучитьСтроку()=1 Цикл //клиенты
				
				сумКлиент 	= итКлиенты.Сумма;
				Если флГр3 = 1 Тогда
					пКлиент = Шаблон("([итКлиенты.Клиент.Код]) [итКлиенты.Клиент]");
					пСч = итКлиенты.Сч;
					таб.ВывестиСекцию( "Клиент" );		
					стрКлиент = таб.ВысотаТаблицы();
				КонецЕсли;

				итНакл = итКлиенты.тзПотомки;
				пДокИтог = пДокИтог + итНакл.КоличествоСтрок();
				счКлиент	= итНакл.КоличествоСтрок();
				итНакл.Сортировать("*ПоДокументу");
				итНакл.ВыбратьСтроки();
				Пока итНакл.ПолучитьСтроку()=1 Цикл //накладные
					Если флГр4 = 1 Тогда
						Док = итНакл.ПоДокументу;
						пДок = Шаблон("[глНазваниеДокументаВЖурнале(Док)] [Док.НомерДок] [Док.ДатаДок]");
						пУд = ?(Док.ПометкаУдаления()=1,"Х","");
						пСч = итНакл.Сч;
						таб.ВывестиСекцию( "Документ" );		
						стрДокумент = таб.ВысотаТаблицы();
					КонецЕсли;

					Если ПустоеЗначение(итНакл.ПоДокументу)=0 Тогда
						итНаклТовары.Загрузить(итНакл.ПоДокументу);
						итНаклТовары.ДобавитьИндекс("иТовар","*Товар");
					КонецЕсли;
					сумДокумент = итНакл.Сумма;
					итТовары = итНакл.тзПотомки;
					итТовары.ВыбратьСтроки();
					Пока итТовары.ПолучитьСтроку()=1 Цикл //товары
						н = н + 1; 
						Состояние( "Выведено "+Окр( н / Всего * 100, 0 )+"%" );
						Товар = итТовары.Товар;
						пRetail = ?(Товар.RETAIL=1,"R","");
						//Пояснения = Запрос.Пояснения;
						пСч = итТовары.Сч;
						Если флГр5 = 1 Тогда
							пКол = итТовары.Количество;
							пСум = Формат( итТовары.Сумма, "Ч015.2, ");
							пЕд = глПолучитьПереводЕдИзм( Товар.БазоваяЕдиницаИзмерения, Язык );
							пТовар = Шаблон("([Товар.Код]) [НазваниеТовара(Товар)]");
							
							Если итНакл.ПоДокументу.Вид()="ПриходнаяНакладная" Тогда
								итНаклТовары.НайтиСтроку("иТовар",Товар,,1);
								пСрокРеализ = итНаклТовары.СрокРеализ;
								пСрокРеализПред = итНаклТовары.СрокРеализПредПрих;
							КонецЕсли;
							
							таб.ВывестиСекцию( "Товар" );		
						КонецЕсли;
					КонецЦикла;
					Если флГр4 = 1 Тогда
						обл = таб.Область(Шаблон("R[стрДокумент]C6"));
						обл.Текст = Формат( сумДокумент, "Ч015.2, " );
					КонецЕсли;
					
				КонецЦикла;
				
				Если флГр3 = 1 Тогда
					обл = таб.Область(Шаблон("R[стрКлиент]C6"));
					обл.Текст = Формат( сумКлиент, "Ч015.2, " );
					обл = таб.Область(Шаблон("R[стрКлиент]C5"));
					обл.Текст = Шаблон("[счКлиент] "+печДок);
				КонецЕсли;
				счАгент = счАгент +счКлиент;
				счКлиент = 0;
			КонецЦикла;
			
			Если флГр2 = 1 Тогда
				обл = таб.Область(Шаблон("R[стрАгент]C6"));
				обл.Текст = Формат( сумАгент, "Ч015.2, " );
				обл = таб.Область(Шаблон("R[стрАгент]C5"));
				обл.Текст = Шаблон("[счАгент] "+печДок);
			КонецЕсли;
			
			счПретензия = счПретензия + счАгент;
			счАгент = 0;
		КонецЦикла;
		
		обл = таб.Область(Шаблон("R[стрПретензия]C6"));
		обл.Текст = Формат( сумПретензия, "Ч015.2, " );
		обл = таб.Область(Шаблон("R[стрПретензия]C5"));
		обл.Текст = Шаблон("[счПретензия] "+печДок);
		
		счПретензия = 0;
	КонецЦикла;
	сумВсего = ИТ.Итог("Сумма");
//	пДокИтог = ИТ.Итог("Сч");
	пСч = Шаблон("[пДокИтог] док.");
	пВсего = Формат( сумВсего, "Ч015.2, " );
	Если Язык="EE" Тогда
		ПечИтог="Kokku:";
	Иначе
		ПечИтог="Итог:";
	КонецЕсли;
	таб.ВывестиСекцию( "Итог" );		
	таб.ТолькоПросмотр( 1 );
	Если Язык = "EE" Тогда
		таб.Область(1,1,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы()).Шрифт("Arial(Baltic)");
	КонецЕсли;
	таб.Показать( "Отчет по претензиям" );
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры


Процедура ВывестиИТ( таб, пИТ, Ур )
	//пИТ.ВыбратьСтроку();
	пИТ.ВыбратьСтроки();
	Пока пИТ.ПолучитьСтроку() = 1 Цикл
		ЧислоСтрок = ЧислоСтрок + 1;
		Состояние("Выведено: "+ЧислоСтрок );
		
		пКолДок = Формат(пИТ.СчНакл,"Ч0");
		пКол = Формат(пИТ.Количество,"Ч012.3");
		пСум = Формат(пИТ.Сумма,"Ч015.2");
		Если пИТ.НомерКолонки("__Уровень__") = 0 Тогда
			пПретензия = НазваниеПретензии(пИТ.Претензия);
			таб.ВывестиСекцию( "Претензия" );
		ИначеЕсли пИТ.__ЭтоГруппа__ = 1 Тогда
			текУровень = ?(Число(пИТ.__Уровень__) = 0,Ур+1,пИТ.__Уровень__);
			Если Язык="EE" Тогда
				пТовар = Шаблон( "[пИТ.Товар.Код] [пИТ.Товар.НаименованиеEE]" );
			Иначе
				пТовар = Шаблон( "[пИТ.Товар.Код] [пИТ.Товар]" );
			КонецЕсли;
			таб.ВывестиСекцию( "Гр"+текУровень );		
		Иначе
			пRetail = ?(пИТ.Товар.RETAIL=1,"R","");
			текУровень = ?(Число(пИТ.__Уровень__) = 0,Ур+1,пИТ.__Уровень__);
			Если Язык="EE" Тогда
				пТовар = Шаблон( "[пИТ.Товар.Код] [пИТ.Товар.НаименованиеEE]" );
			Иначе
				пТовар = Шаблон( "[пИТ.Товар.Код] [пИТ.Товар]" );
			КонецЕсли;
			таб.ВывестиСекцию( "Эл"+текУровень );		
		КонецЕсли;
		Если пИТ.НомерКолонки("тзПотомки") <> 0 Тогда
			Если ПустоеЗначение(пИТ.тзПотомки) = 0 Тогда
				ВывестиИТ( таб, пИТ.тзПотомки, текУровень );
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура СформироватьТолькоТовары()
	Язык=семТекСтрана();
	начЛог = семЗаписатьЛогНач( "Отчет", "Отчет по претензиям", "Обработка", "Формирование отчета" );
	Запрос = СоздатьОбъект( "Запрос" );
	Если Запрос.Выполнить( ТекстЗапросаТолькоТовары() ) = 0 Тогда Возврат; КонецЕсли;
	табл = СоздатьОбъект( "ТаблицаЗначений" );
	Запрос.Выгрузить(табл,1,0);
	//табл.ВыбратьСтроку();
	//Возврат;
	таб = СоздатьОбъект( "Таблица" );
	таб.ИсходнаяТаблица( "ТаблицаТолькоТовары" );
	
	Если Язык="EE" Тогда
		пЗаголовок = "Pretensioon / Toote";
		ПечЗаголовокОтчета="Pretensiooni aruanne antud perioodi kohta ";
		ПечПериод="perioodi kohta "+ДатаС+" - "+ДатаПо;
		печДок="dok.";
	Иначе
		пЗаголовок = "Претензия / Товар";
		ПечЗаголовокОтчета="Отчет по претензиям";
		ПечПериод="За период с "+ДатаС+" по "+ДатаПо;
		печДок="док.";
	КонецЕсли;
	
	таб.ВывестиСекцию( "Заголовок" );		
	пУсловие = "";
	Для н = 1 по спУсловий.РазмерСписка() Цикл
		пУсловие = пУсловие + спУсловий.ПолучитьЗначение(н) + " ";
	КонецЦикла;
	Таб.ВывестиСекцию("Условие");
	таб.ВывестиСекцию( "Шапка" );		
	таб.Опции( 0, 0, таб.ВысотаТаблицы(), 0 );
	
	//сумПретензия = 0;
	//сумВсего = 0;
	табл.НоваяКолонка("Количество","Число");
	табл.НоваяКолонка("Сумма","Число");
	табл.ВыбратьСтроки();
	Пока табл.ПолучитьСтроку() = 1 Цикл Состояние( "Рассчет суммы... Выполнено "+Окр( табл.НомерСтроки / табл.КоличествоСтрок() * 100, 0 )+"%" );
		пКол1 = 0; пСум1 = 0;
		пКол2 = 0; пСум2 = 0;
		Если глЕстьРеквизитШапки("ДокументОснование",табл.Накл.Вид())=1 Тогда
			ПолучитьДанныеПоТовару(табл.Товар,табл.Накл.ДокументОснование,пКол1,пСум1);
		КонецЕсли;
		ПолучитьДанныеПоТовару(табл.Товар,табл.Накл,пКол2,пСум2);
		Если пСум1>0 Тогда
			Сум = пСум1 - пСум2;
		Иначе
			Сум = пСум2;
		КонецЕсли;
		Если пКол1>0 Тогда
			Кол = пКол1 - пКол2;
		Иначе
			Кол = пКол2;
		КонецЕсли;
		//табл.Количество = пКол1 - пКол2;
		//табл.Сумма = пСум1 - пСум2;
		табл.Сумма = Сум;
		табл.Количество = Кол;
	КонецЦикла; 
	Состояние( "Вывод данных..." );
	табл.УдалитьКолонку("Клиент");
	табл.УдалитьКолонку("Агент");
	табл.УдалитьКолонку("Накл");

	ИТ = СоздатьОбъект("ИндексированнаяТаблица");
	ИТ.Загрузить(табл);
	ИТ.Группировать("Претензия: Претензия; Товар: &Товар", "СчНакл,Количество,Сумма", 0);
	
	//сп = СоздатьОбъект( "СписокЗначений" );
	//сп.Установить("Данные",ИТ);
	//Имя = "ПечатьИндТаблицыЗначений.ert"; Путь = "";
	//РасположениеФайла(Путь);
	//ОткрытьФорму("Отчет",сп,Путь+Имя);
	//Возврат;
        ВывестиИТ( таб, ИТ, 0 );
	//ИТ.ВыбратьСтроки();
	//Пока  ИТ.ПолучитьСтроку() = 1 Цикл
	//	пПретензия = ИТ.Претензия;
	//	пКолДок = ИТ.СчНакл;
	//	пКол = ИТ.Количество;
	//	пСум = ИТ.Сумма;
	//	таб.ВывестиСекцию( "Претензия" );		
	//        Если ПустоеЗначение(ИТ.тзПотомки) = 0 Тогда
	//		табл = ИТ.тзПотомки;
	//		Пока 1 = 1 Цикл
	//			Если табл.__ЭтоГруппа__ = 1 Тогда
	//				пОтступ = СокрЛ( Лев( "- - - - - - - - - -", ( табл.__Уровень__ - 1 ) * 2 ) );
	//				пТовар = пОтступ + Шаблон( "[табл.Товар.Код] [табл.Товар]" );
	//				пКолДок = ИТ.СчНакл;
	//				пКол = ИТ.Количество;
	//				пСум = ИТ.Сумма;
	//				таб.ВывестиСекцию( "Группа" );		
	//			Иначе
	//				//пОтступ = СокрЛ( Лев( "- - - - - - - - - -", ( табл.__Уровень__ - 1 ) * 2 ) );
	//				пТовар = Шаблон( "[табл.Товар.Код] [табл.Товар]" );
	//				пКолДок = ИТ.СчНакл;
	//				пКол = ИТ.Количество;
	//				пСум = ИТ.Сумма;
	//				таб.ВывестиСекцию( "Товар" );		
	//			КонецЕсли;
	//			Если ПустоеЗначение(табл.тзПотомки) = 0 Тогда
	//				табл = табл.тзПотомки;
	//			Иначе
	//				Прервать;
	//			КонецЕсли;
	//		КонецЦикла;
	//        КонецЕсли;
	//КонецЦикла;
	//Всего = Запрос.Сч; н = 0;
	//Пока Запрос.Группировка("Претензия") = 1 Цикл
	//	//пПретензия = Запрос.Претензия;
	//	//пСч = Запрос.Сч;
	//	//таб.ВывестиСекцию( "Претензия" );		
	//	//стрПретензия = таб.ВысотаТаблицы();
	//	Пока Запрос.Группировка("Товар") = 1 Цикл н = н + 1; Состояние( "Выведено "+Окр( н / Всего * 100, 0 )+"%" );
	//		Товар = Запрос.Товар;
	//		//пСч = Запрос.Сч;
	//		Кол1 = 0; Сум1 = 0;
	//		Кол2 = 0; Сум2 = 0;
	//		пКол1 = 0; пСум1 = 0;
	//		пКол2 = 0; пСум2 = 0;
	//		Пока Запрос.Группировка("Накл") = 1 Цикл
	//			ПолучитьДанныеПоТовару(Товар,Запрос.Накл.ДокументОснование,пКол1,пСум1);
	//			Кол1 = Кол1 + пКол1; Сум1 = Сум1 + пСум1;
	//			ПолучитьДанныеПоТовару(Товар,Запрос.Накл,пКол2,пСум2);
	//			Кол2 = Кол2 + пКол2; Сум2 = Сум2 + пСум2;
	//		КонецЦикла;
	//		Сум = Сум1 - Сум2;
	//		пКол = Кол1 - Кол2;
	//		пСум = Формат( Сум, "Ч015.2, ");
	//		пЕд = Товар.БазоваяЕдиницаИзмерения;
	//		пТовар = Шаблон("([Товар.Код]) [Товар]");
	//		таб.ВывестиСекцию( "Товар" );		
	//		сумПретензия = сумПретензия + Сум;
	//	КонецЦикла;
	//	обл = таб.Область(Шаблон("R[стрПретензия]C6"));
	//	обл.Текст = Формат( сумПретензия, "Ч015.2, " );
	//	сумВсего = сумВсего + сумПретензия;
	//	сумПретензия = 0;
	//КонецЦикла;
	

	
	пКол = ИТ.Итог("Количество");
	пСум =ИТ.Итог("Сумма");
	Если Язык="EE" Тогда
		ПечИтог="Kokku:";
	Иначе
		ПечИтог="Итог:";
	КонецЕсли;
	таб.ВывестиСекцию( "Итог" );		
	таб.ТолькоПросмотр( 1 );
	Если Язык = "EE" Тогда
		таб.Область(1,1,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы()).Шрифт("Arial(Baltic)");
	КонецЕсли;
	таб.Показать( "Отчет по претензиям" );
	//семЗаписатьЛогКон( начЛог );	
КонецПроцедуры

Процедура СформироватьТолькоТоварыНов()
	Язык=семТекСтрана();
	начЛог = семЗаписатьЛогНач( "Отчет", "Отчет по претензиям", "Обработка", "Формирование отчета" );
	Запрос = СоздатьОбъект( "Запрос" );
	табл = СоздатьОбъект( "ТаблицаЗначений" );
	табл = ТекстЗапросаТолькоТоварыНов();
	
	таб = СоздатьОбъект( "Таблица" );
	таб.ИсходнаяТаблица( "ТаблицаТолькоТовары" );
	
	Если Язык="EE" Тогда
		пЗаголовок = "Pretensioon / Toote";
		ПечЗаголовокОтчета="Pretensiooni aruanne antud perioodi kohta ";
		ПечПериод="perioodi kohta "+ДатаС+" - "+ДатаПо;
		печДок="dok.";
	Иначе
		пЗаголовок = "Претензия / Товар";
		ПечЗаголовокОтчета="Отчет по претензиям";
		ПечПериод="За период с "+ДатаС+" по "+ДатаПо;
		печДок="док.";
	КонецЕсли;
	
	таб.ВывестиСекцию( "Заголовок" );		
	пУсловие = "";
	Для н = 1 по спУсловий.РазмерСписка() Цикл
		пУсловие = пУсловие + спУсловий.ПолучитьЗначение(н) + " ";
	КонецЦикла;
	Таб.ВывестиСекцию("Условие");
	таб.ВывестиСекцию( "Шапка" );		
	таб.Опции( 0, 0, таб.ВысотаТаблицы(), 0 );
	
	Состояние( "Вывод данных..." );

	ИТ = СоздатьОбъект("ИндексированнаяТаблица");
	ИТ.Загрузить(табл);
	ЧислоСтрок = 0;
	ИТ.Группировать("Претензия: -Претензия; Товар: &*Товар", "СчНакл,Количество,Сумма", 0);
	ИТ.Сортировать("КодПретензии,КодТовара");
     ВывестиИТ( таб, ИТ, 0 );
	
	пКол = ИТ.Итог("Количество");
	пСум =ИТ.Итог("Сумма");
	Если Язык="EE" Тогда
		ПечИтог="Kokku:";
	Иначе
		ПечИтог="Итог:";
	КонецЕсли;
	таб.ВывестиСекцию( "Итог" );		
	таб.ТолькоПросмотр( 1 );
	Если Язык = "EE" Тогда
		таб.Область(1,1,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы()).Шрифт("Arial(Baltic)");
	КонецЕсли;
	таб.Показать( "Отчет по претензиям" );
	//семЗаписатьЛогКон( начЛог );	
КонецПроцедуры

Процедура ПриОткрытии()
	спВидовДок.ТекущаяСтрока(1);
	флГр1 = 1;
	
	Путь = СокрП(Константа.ПутьКВнешнимБиблиотекам);
	ЗагрузитьВнешнююКомпоненту(Путь+"\qryConsole.dll");

	Форма.ИспользоватьЗакладки(1);
	
	Форма.Закладки.ДобавитьЗначение("Отчет","Основной");
	Форма.Закладки.ДобавитьЗначение("Сводная","Сводный отчет");
	Форма.ИспользоватьСлой("Общий, Основной",2);
КонецПроцедуры

Процедура ПриВыбореЗакладки(Ном,Значен)
	Если Значен="Отчет" Тогда
		Форма.ИспользоватьСлой("Общий, Основной",2); 
	Иначе
		Форма.ИспользоватьСлой("Общий, Сводная",2); 
	КонецЕсли;
КонецПроцедуры

Процедура ПриВыбореДетализации( текГр )
	ФормаРасш = СоздатьОбъект("РасширениеФормы"); 
	ФормаРасш.УстановитьФорму(Форма);
	текЗн = ФормаРасш.ПолучитьАтрибут("флГр"+текГр).Значение;
	
	Если текГр = 6 Тогда
		Для н = 2 по 5 Цикл
			ФормаРасш.ПолучитьАтрибут("флГр"+н).Значение = ?(текЗн=1,0,1);
			ФормаРасш.ПолучитьАтрибут("флГр"+н).Доступность = ?(текЗн=1,0,1);
		КонецЦикла;
	Иначе
		Если текЗн = 0 Тогда
			Для н = текГр по 5 Цикл
				ФормаРасш.ПолучитьАтрибут("флГр"+н).Значение = 0;
			КонецЦикла;
		Иначе
			Для н = 2 по текГр Цикл
				ФормаРасш.ПолучитьАтрибут("флГр"+н).Значение = 1;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


Процедура ВыполнитьНов()
	
	Если ПустоеЗначение(ДатаС) = 1 Тогда
		Предупреждение("Не указана дата начала");
	КонецЕсли;
	Язык=семТекСтрана();
	Если флГр6 = 1 Тогда
		СформироватьТолькоТоварыНов();
	Иначе
		СформироватьНов();
	КонецЕсли;
КонецПроцедуры

Процедура Выполнить()
	Язык=семТекСтрана();
	Если флГр6 = 1 Тогда
		СформироватьТолькоТовары();
	Иначе
		Сформировать();
	КонецЕсли;
КонецПроцедуры


Процедура СводныйОтчет()

	ТекстЗапроса="";
	спУсловий=СоздатьОбъект("СписокЗначений");
	Условие = "";
	Док=СоздатьОбъект("Документ");
	ЗапросСКЛ=СоздатьОбъект("ODBCRecordSet");

	ТекстЗапроса = ТекстЗапросаНов(1);
	//ЗапросСКЛ.УстановитьТекстовыйПараметр("НачДатаМарш",ДатаС-30);
	//ЗапросСКЛ.УстановитьТекстовыйПараметр("НачДата", ДатаС);
	//ЗапросСКЛ.УстановитьТекстовыйПараметр("КонДата", ДатаПо);
	//ЗапросСКЛ.ВыполнитьИнструкцию(ТекстЗапроса );
//	КонструкторЗапросов.Отладка(1);
        
	
	Если чExcel=1 Тогда
		КонструкторЗапросов.ВыполнитьИнструкцию(ТекстЗапроса,Сводная.Объект);
		КонструкторЗапросов.ИзменитьШрифт(Сводная.Объект,"Tahoma LV",10);
		Возврат;
	КонецЕсли;
	

	ФайлКуба = КонструкторЗапросов.СоздатьКуб(ТекстЗапроса);

	Если ПустаяСтрока(ФайлКуба) = 1 Тогда Сообщить("ФайлКуба="+ФайлКуба); Возврат; КонецЕсли;
    
	Сводная.Объект.ConnectionString = "Provider=MSOLAP;Location=" + ФайлКуба;
	Сводная.Объект.DataMember = "qryConsole";
	
	Попытка
		КонструкторЗапросов.ПодключитьРасшифровку(Сводная.Объект);
		КоммВерсия = 1;
	Исключение
		КоммВерсия = 0;
	КонецПопытки;                 

	
	oView = Сводная.Объект.ActiveView;
	ПоТоварам = oView.Fieldsets("[Товар].[По группам]");
	УстШрифты(ПоТоварам.Fields("Товар"),1,-1);
	УстШрифты(ПоТоварам.Fields("Товар 01"),1,-1);
	УстШрифты(ПоТоварам.Fields("Товар 02"),1,0);

	Попытка
		УстШрифты(ПоТоварам.Fields("Товар 03"),0,0);
	Исключение
	КонецПопытки;

	ПоТоварамВсе = oView.Fieldsets("[Товар].[Все]");
	УстШрифты(ПоТоварамВсе.Fields("Товар"),1,0);
	
	ПоПретензии = oView.Fieldsets("[Претензия].[По группам]");
	УстШрифты(ПоПретензии.Fields("Претензия"),1,-1);
	
	Попытка
		УстШрифты(ПоПретензии.Fields("Претензия 01"),1,-1);
		УстШрифты(ПоПретензии.Fields("Претензия 02"),0,0);
	Исключение
	КонецПопытки;

	ПоПретензииВсе = oView.Fieldsets("[Претензия].[Все]");
	УстШрифты(ПоПретензииВсе.Fields("Претензия"),1,0);

	ПоПретензииПодтвВсе = oView.Fieldsets("[ПретензияПодтв].[Все]");
	УстШрифты(ПоПретензииПодтвВсе .Fields("ПретензияПодтв"),1,-1);

	ПоПодрОтв = oView.Fieldsets("[ПодрОтветственное]");
	УстШрифты(ПоПодрОтв.Fields("ПодрОтветственное"),1,-1);
	
	ПоАгентам = oView.Fieldsets("[Агент].[По группам]");
	УстШрифты(ПоАгентам.Fields("Агент"),0,0);
	
	Попытка
		УстШрифты(ПоАгентам.Fields("Агент 01"),1,-1);
		УстШрифты(ПоАгентам.Fields("Агент 02"),1,0);
		УстШрифты(ПоАгентам.Fields("Агент 03"),1,0);
		УстШрифты(ПоАгентам.Fields("Агент 04"),1,0);
		УстШрифты(ПоАгентам.Fields("Агент 05"),1,0);
	Исключение
	КонецПопытки;

	ПоАвторам = oView.Fieldsets("[Автор]");
	УстШрифты(ПоАвторам.Fields("Автор"),1,-1);

	ПоКомплектовщикам = oView.Fieldsets("[Комплектовщик]");
	УстШрифты(ПоКомплектовщикам.Fields("Комплектовщик"),1,-1);

	ПоПоставщикам = oView.Fieldsets("[Поставщик]");
	УстШрифты(ПоПоставщикам.Fields("Поставщик"),1,-1);

	ПоЗакупщикам = oView.Fieldsets("[Закупщик]");
	УстШрифты(ПоЗакупщикам.Fields("Закупщик"),1,-1);
	
	
	ПоЭкспедиторам = oView.Fieldsets("[Экспедитор]");
	УстШрифты(ПоЭкспедиторам.Fields("Экспедитор"),1,-1);
	
	ПоАвторам = oView.Fieldsets("[Автор]");
	УстШрифты(ПоАвторам.Fields("Автор"),1,-1);

	
	ПоАгентамВсе = oView.Fieldsets("[Агент].[Все]");
	УстШрифты(ПоАгентамВсе.Fields("Агент"),1,-1);

	ПоКлиентам= oView.Fieldsets("[Клиент].[По группам]");
	УстШрифты(ПоКлиентам.Fields("Клиент"),1,-1);
	Попытка
		УстШрифты(ПоКлиентам.Fields("Клиент 01"),1,0);
		УстШрифты(ПоКлиентам.Fields("Клиент 02"),1,0);
		УстШрифты(ПоКлиентам.Fields("Клиент 03"),1,0);
		УстШрифты(ПоКлиентам.Fields("Клиент 04"),1,0);
	Исключение
	КонецПопытки;

	ПоКлиентамВсе = oView.Fieldsets("[Клиент].[Все]");
	УстШрифты(ПоКлиентамВсе.Fields("Клиент"),1,-1);
	
	//Спрятать SubTotals можно только через vbscript
	Скрипт = СоздатьОбъект("MSScriptControl.ScriptControl");
	Скрипт.Language = "vbscript";
	Скрипт.AddObject("f1", oView.Fieldsets("[Товар].[По группам]").Fields("Товар"));
	Скрипт.ExecuteStatement("f1.SubTotals(1) = False");

	oView.RowAxis.InsertFieldSet(ПоПодрОтв);
	oView.RowAxis.InsertFieldSet(ПоПретензииВсе);
	oView.RowAxis.InsertFieldSet(ПоАгентамВсе);
	oView.RowAxis.InsertFieldSet(ПоКлиентамВсе);
	oView.RowAxis.InsertFieldSet(oView.Fieldsets("[КодТовара]"));
	oView.RowAxis.InsertFieldSet(ПоТоварамВсе);

	oView.ColumnAxis.InsertFieldSet(oView.Fieldsets("[Статус]"));
	oView.FilterAxis.InsertFieldSet(oView.Fieldsets("[Соответствие]"));
	oView.FilterAxis.InsertFieldSet(ПоПретензииПодтвВсе);
	oView.FilterAxis.InsertFieldSet(ПоПретензии);
	oView.FilterAxis.InsertFieldSet(ПоТоварам);
	oView.FilterAxis.InsertFieldSet(ПоАгентам);
	oView.FilterAxis.InsertFieldSet(ПоКлиентам);
	oView.FilterAxis.InsertFieldSet(ПоПоставщикам);
	oView.FilterAxis.InsertFieldSet(ПоЗакупщикам);
	oView.FilterAxis.InsertFieldSet(oView.Fieldsets("[НомерДок]"));
	oView.FilterAxis.InsertFieldSet(ПоАвторам);
	oView.FilterAxis.InsertFieldSet(ПоКомплектовщикам);
	oView.FilterAxis.InsertFieldSet(ПоЭкспедиторам);
	
	oView.DataAxis.InsertTotal(oView.Totals("Количество Количество"));
	oView.Totals("Количество Количество").NumberFormat = "#,##0";
	oView.Totals("Количество Количество").Caption = "Кол-во поз.";
	                                                
	oView.DataAxis.InsertTotal(oView.Totals("Сумма Сумма"));
	oView.Totals("Сумма Сумма").NumberFormat = "#,##0.00";
	oView.Totals("Сумма Сумма").Caption = "Сумма";
	              
	Активизировать("ФСводная");    

КонецПроцедуры


Процедура ПриИзмененииРазмераОкна(ТипСобытия, ШиринаОкна, ВысотаОкна)
	Перем Верх, Ширина, Высота;

	Если ТекШирина = 0 Тогда
		ТекШирина = ШиринаОкна;
		ТекВысота = ВысотаОкна;
	ИначеЕсли ТипСобытия <> 1  Тогда
		АтрФормы = СоздатьОбъект("АтрибутФормы"); 

		АтрФормы.УстановитьАтрибут(Форма, "фСводная");
		АтрФормы.ПолучитьКоординаты(,, Ширина, Высота);
		Ширина = Ширина + ШиринаОкна - ТекШирина;
		Высота = Высота + ВысотаОкна - ТекВысота;
		АтрФормы.УстановитьКоординаты(,, Ширина , Высота);
		Если (ПустоеЗначение(Сводная) = 0) и (чExcel=0) Тогда
			Сводная.Объект.Width  = Ширина;
			Сводная.Объект.Height = Высота;
		КонецЕсли;

//		АтрФормы.УстановитьАтрибут(Форма, "кнЗаполнить");
//		АтрФормы.ПолучитьКоординаты(, Низ);
//		Верх = Верх + ВысотаОкна - ТекВысота;
//		АтрФормы.УстановитьКоординаты(, Верх);
//
//		АтрФормы.УстановитьАтрибут(Форма, "кнПечать");
//		АтрФормы.УстановитьКоординаты(, Верх);

		ТекШирина = ШиринаОкна;
		ТекВысота = ВысотаОкна;
	КонецЕсли;
КонецПроцедуры
                            

Процедура СоздатьАктивИкс(Элем,Тип,Реквизит)
	Перем Ширина, Высота;

	Элем=СоздатьОбъект("АктивИкс");	
	Элем.УстановитьАтрибут(Форма, Реквизит);

	ТипОбъекта = Тип;
	Попытка
		Элем.СоздатьЭУ("OWC11." + Тип);
		Элем.Объект.AutoFit=0;
		Элем.Объект.DisplayOfficeLogo = 0;
		Если Тип="PivotTable" Тогда
			Элем.Объект.DisplayScreenTips = 0;
			Элем.Объект.ActiveView.TitleBar.Visible = 0;
			Ширина = 0;
			Высота = 0;
			АтрФормы = СоздатьОбъект("АтрибутФормы"); 
			АтрФормы.УстановитьАтрибут(Форма, Реквизит);
			АтрФормы.ПолучитьКоординаты(,, Ширина, Высота);
			Элем.Объект.Width  = Ширина;
			Элем.Объект.Height = Высота;
		КонецЕсли;
		
	Исключение
		Предупреждение("OWC11 не установлен!");
		Форма.Закрыть();
	КонецПопытки;
	
КонецПроцедуры


//**********************************************************
Процедура СозданиеСводныхТаблиц()
	
	Если чExcel=1 Тогда
		СоздатьАктивИкс(Сводная,"Spreadsheet","фСводная");
	Иначе
		СоздатьАктивИкс(Сводная,"PivotTable","фСводная");
	КонецЕсли;

КонецПроцедуры


Процедура ПослеОткрытия()
	

	Перем Ширина, Высота;

	СозданиеСводныхТаблиц();
	КонструкторЗапросов = СоздатьОбъект("AddIn.qryConsole");
	
	
КонецПроцедуры

Процедура кнПечать()
	Таб = СоздатьОбъект("Таблица");
	КонструкторЗапросов.ВывестиСводнуюТаблицу(Сводная.Объект, Таб);
	
	ТекстПараметров="За период: с "+ДатаС+" по "+ДатаПо;
	
	Таб.Область(1,1,1,1).Текст="Отчет по претензиям"; 
	Таб.Область(1,1,1,1).РазмерШрифта(20);
	Таб.Область(1,1,1,1).Полужирный(1);
	Таб.Область(2,1,2,1).Текст=ТекстПараметров;
	Таб.Область(2,1,2,1).РазмерШрифта(10);
	Таб.Область(2,1,2,1).Полужирный(1);
	Таб.Область(2,1,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы()).Шрифт("Times New Roman LV");
	Таб.Область(3,1,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы()).РазмерШрифта(12);
	
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Отчет по претензиям");
КонецПроцедуры

//*******************************************
// обработка расшифровки
//*******************************************
Процедура фСводная_DblClick()
	Если КоммВерсия = 1 Тогда
		Если Сводная.Объект.SelectionType = "PivotAggregates" Тогда
			Если Сводная.Объект.Selection.Count = 1 Тогда
				Расшифровка = КонструкторЗапросов.ПолучитьРасшифровку(Сводная.Объект);
				Если Расшифровка.КоличествоКолонок() > 0 Тогда
					рез=1;
					Если Расшифровка.КоличествоСтрок()>=1 Тогда
						 рез=Расшифровка.ВыбратьСтроку();
					КонецЕсли;                           
			         
					Если (Расшифровка.КоличествоСтрок()>0) и (Рез=1) Тогда
						ОткрытьФорму(Расшифровка.ПоСчету);
					КонецЕсли;

				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

кБазоваяВалюта = Константа.БазоваяВалюта;
спВидовДок= СоздатьОбъект("СписокЗначений");
//спВидовДок.ДобавитьЗначение( "Счет", "Эл. заявки" );
//спВидовДок.ДобавитьЗначение( "Перемещение", "Перемещение" );
//спВидовДок.ДобавитьЗначение( "РасходнаяНакладная", "Расходная накладная" );
//спВидовДок.ДобавитьЗначение( "РасходнаяНакладнаяНал", "Расходная накладная нал." );
ДатаС = НачНедели(РабочаяДата());
ДатаПо = РабочаяДата();
//*******************************************
ТекШирина = 0;
ТекВысота = 0;

СписокАгентов = СоздатьОбъект("СписокЗначений");
СписокПретензий = СоздатьОбъект("СписокЗначений");

Если НазваниеНабораПрав()="Администратор" Тогда
	чФильтрПоПодразделениямПользователя=0;
Иначе
//	чФильтрПоПодразделениямПользователя=1;
//	чФильтрПоДолжностям=1;
//	Форма.чФильтрПоДолжностям.Доступность(0);
//	Форма.чФильтрПоПодразделениямПользователя.Доступность(0);
	ПолучитьСписокАгентов();
	ПолучитьСписокПретензий();
КонецЕсли;

флУдаленные = 0;
чExcel = 1;