
Перем Сводная, КонструкторЗапросов, ВремПапка;
Перем гРФорма, гРасшФорма;
Перем Окна, ФормаРасш;
Перем ТекШирина, ТекВысота;
Перем КоммВерсия;
Перем ФайлКуба;

Перем ДатаОтчета1;
Перем ДатаСрока;

Процедура УстШрифты(Поле,IsIncluded=1,Expanded=-1)
	
	Поле.IsIncluded = IsIncluded;
	Поле.Expanded = Expanded;
	Поле.GroupedFont.Name = "Times New Roman LV";
	Поле.DetailFont.Name = "Times New Roman LV";
	Поле.SubtotalFont.Name = "Times New Roman LV";
	Поле.SubtotalFont.Size = 10;
	Поле.SubtotalFont.Bold = 1;
	
КонецПроцедуры


//*******************************************
Процедура ПриИзмененииРазмераОкна(ТипСобытия, ШиринаОкна, ВысотаОкна)
	Перем Верх, Ширина, Высота;

	Если ТекШирина = 0 Тогда
		ТекШирина = ШиринаОкна;
		ТекВысота = ВысотаОкна;
	ИначеЕсли ТипСобытия <> 1  Тогда
		АтрФормы = СоздатьОбъект("АтрибутФормы"); 

		АтрФормы.УстановитьАтрибут(Форма, "фСводная");
		АтрФормы.ПолучитьКоординаты(,, Ширина, Высота);
		Ширина = Ширина + ШиринаОкна - ТекШирина;
		Высота = Высота + ВысотаОкна - ТекВысота;
		АтрФормы.УстановитьКоординаты(,, Ширина , Высота);
		Если ПустоеЗначение(Сводная) = 0 Тогда
			Сводная.Объект.Width  = Ширина;
			Сводная.Объект.Height = Высота;
		КонецЕсли;

//		АтрФормы.УстановитьАтрибут(Форма, "кнЗаполнить");
//		АтрФормы.ПолучитьКоординаты(, Низ);
//		Верх = Верх + ВысотаОкна - ТекВысота;
//		АтрФормы.УстановитьКоординаты(, Верх);
//
//		АтрФормы.УстановитьАтрибут(Форма, "кнПечать");
//		АтрФормы.УстановитьКоординаты(, Верх);

		ТекШирина = ШиринаОкна;
		ТекВысота = ВысотаОкна;
	КонецЕсли;
КонецПроцедуры



Процедура ПриОткрытии()      
	
	Путь = СокрП(Константа.ПутьКВнешнимБиблиотекам);

	ЗагрузитьВнешнююКомпоненту(Путь+"\qryConsole.dll");		
	
//	Форма.ИспользоватьЗакладки(1);
//	Форма.Закладки.ДобавитьЗначение(1,"Заказы");
КонецПроцедуры     

Процедура ПослеОткрытия()
	                     
	Перем Ширина, Высота;

	
	Сводная=СоздатьОбъект("АктивИкс");	
	Сводная.УстановитьАтрибут(Форма, "фСводная");
	Сводная.СоздатьЭУ("OWC11.PivotTable");	
	Сводная.Объект.AutoFit=0;
	Сводная.Объект.DisplayOfficeLogo = 0;	   
	Сводная.Объект.ActiveView.TitleBar.Visible = 0;
	
	Ширина = 0;
	Высота = 0;
	АтрФормы = СоздатьОбъект("АтрибутФормы"); 
	АтрФормы.УстановитьАтрибут(Форма, "фСводная");
	АтрФормы.ПолучитьКоординаты(,, Ширина, Высота);
	Сводная.Объект.Width  = Ширина;
	Сводная.Объект.Height = Высота;
	                            
	КонструкторЗапросов = СоздатьОбъект("AddIn.qryConsole");
	
КонецПроцедуры


//-------------------------------
Процедура Очистить()
	ВыбТовар = 0; 
	ВыбКлиент = 0;               
КонецПроцедуры     
//-------------------------------

Процедура ОтчетПоРезервам(Режим)
	начЛог = семЗаписатьЛогНач( "Отчет", "Заказанные товары", "Обработка", Шаблон("Формирование отчета ([Режим])") );
	//Рег1   = СоздатьОбъект("Регистр.ЗаказыПоставщикам");
	//Рег1.ВременныйРасчет();
    //РассчитатьРегистрыНа(ПолучитьДатуТА());
	//рег1.обратныйПорядок(1);		
    
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса =
	"//{{ЗАПРОС(ОтчетПоРезервам)
	|Товар = Регистр.ЗаказыПоставщикам.Товар;
	|Кол = Регистр.ЗаказыПоставщикам.Количество;
	|Клиент = Регистр.ЗаказыПоставщикам.Клиент;
	|Склад = Регистр.ЗаказыПоставщикам.Склад;
	|ДокЗаказ = Регистр.ЗаказыПоставщикам.ПоЗаказу;
	|СрокПоставки = Регистр.ЗаказыПоставщикам.СрокПоставки;
	|Группировка Клиент упорядочить по Клиент.ПоАлфавиту без групп; 
	|Группировка Товар упорядочить по Товар.Код;
	|Группировка СрокПоставки;
	|Группировка ДокЗаказ;
	|Функция НачКол = НачОст(Кол);
	|Функция КонКол = КонОст(Кол);
	|Функция ПрихКол = Приход(Кол);
	|Функция РасхКол = Расход(Кол);
	|"//}}ЗАПРОС
	;            
	заг="";
    Если ВыбТовар.Выбран() = 0 Тогда
		Заг =заг+ "По всем товарам";
	ИначеЕсли ВыбТовар.ЭтоГруппа() = 1 Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"Условие (Товар в ВыбТовар);";
		Заг = "По товарам группы " + ВыбТовар.Наименование;
	Иначе
		ТекстЗапроса = ТекстЗапроса + "Условие (Товар = ВыбТовар);";
		Заг = "По товару " + ВыбТовар.Наименование;
	КонецЕсли;

	Если ВыбКлиент.Выбран() = 0 Тогда
		Заг =заг+ " По всем клиентам";
	Иначе
		Если ВыбКлиент.ЭтоГруппа() = 1 Тогда
			ТекстЗапроса = ТекстЗапроса + "Условие (Клиент в ВыбКлиент);";
			Заг = " Отчет по клиентам группы " + ВыбКлиент.Наименование+". ";
        иначе
		 	ТекстЗапроса = ТекстЗапроса + "Условие (Клиент = ВыбКлиент);";
			Заг = " По клиенту " + ВыбКлиент.Наименование;
		конецесли;	
	КонецЕсли;

	Если Запрос.Выполнить(ТекстЗапроса) = 0 тогда
		Возврат;
	КонецЕсли;

 	ЧислоСтрок=0;
    ДокКлиент=СоздатьОбъект("Справочник.Контрагенты");
 	
	//  Создание Таблицы для выходного отчета

	Таб=СоздатьОбъект("Таблица");
	Таб.ВывестиСекцию("Отчет");
	                           
	Таб.ВывестиСекцию("Шапка");
	Оживить(4);
	Пока Запрос.Группировка("Клиент") = 1 Цикл
		            
		Таб.ВывестиСекцию("Поставщик");
		
		Пока Запрос.Группировка("Товар") = 1 Цикл
				Тов=запрос.товар; 
			
				Если Тов.ЭтоГруппа()=1 Тогда
					Уровень=Формат(" ","С"+(Тов.Уровень()-1)*2+"");
					ПечТовар=Уровень+Тов.Код+"   "+СокрЛП(Тов.Наименование);
					Таб.ВывестиСекцию("Группа");
					Оживить(1);
					Продолжить;
				Иначе            
					
				    ост=запрос.КонКол;
				    Если ост=0  Тогда //Нулевые заказы не выводить
				        Продолжить;
				    КонецЕсли;
						    
	                Клиент=Запрос.Клиент;
				    КодПост=Тов.КодПоставщика;
				    ДатаПоставки=Запрос.СрокПоставки;
				    Таб.ВывестиСекцию("Товар");
					
					Оживить(1);
				КонецЕсли;
		        
				Если Режим=1 Тогда
		        	
					Пока Запрос.Группировка("СрокПоставки") = 1 Цикл
						Пока Запрос.Группировка("ДокЗаказ") = 1 Цикл
						    СрокПоставки=Запрос.СрокПоставки;
							Приращение=Запрос.КонКол;
							Док=Запрос.ДокЗаказ;     
							ДокКлиент=Запрос.Клиент;
							Таб.ВывестиСекцию("Док");  
							Оживить(1);
						КонецЦикла;
					КонецЦикла;
					
				КонецЕсли; 
		КонецЦикла; //Товар
	КонецЦикла;	//Клиент
	//Вызов выходного отчета в окно просмотра и редактирования.
	Таб.Опции(0,0,6,0,ПарСтрОтчДлинн);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ПараметрыСтраницы(1,100,1,5,5,10,5,1);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Ruckstand","");
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры


Процедура Выполнить()

	начЛог = семЗаписатьЛогНач( "Отчет", "Заказанные товары", "Обработка", Шаблон("Формирование сводного отчета") );

	Условие1="1=1 ";
	
	Запрос=СоздатьОбъект("ODBCRecordSet");
	
	текУсл = спУсловий.ПолучитьЗначение(спУсловий.ТекущаяСтрока());
	Если текУсл <> "не исп." Тогда
		Если Число(выбДата) <> 0 Тогда
			КонструкторЗапросов.УстановитьТекстовыйПараметр("ДатаКон", выбДата);
			Если текУсл = "больше" Тогда 
				Условие1="СрокПоставки >= :ДатаКон";
			ИначеЕсли текУсл = "меньше" Тогда 
				Условие1="СрокПоставки <= :ДатаКон";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ПустоеЗначение(ВыбТовар)=1 Тогда
	ИначеЕсли ВыбТовар.ЭтоГруппа()=1 Тогда
		Запрос.УложитьСписокОбъектов(ВыбТовар,"#Товары","Номенклатура");
		Условие1=Условие1+" AND Товар IN (SELECT Val FROM #Товары)";
	Иначе
		КонструкторЗапросов.УстановитьТекстовыйПараметр("ВыбТовар",ВыбТовар);
		Условие1=Условие1+" AND Товар = :ВыбТовар";
	КонецЕсли;
	
	Если ПустоеЗначение(ВыбКлиент)=1 Тогда
	ИначеЕсли ВыбКлиент.ЭтоГруппа()=1 Тогда
		Запрос.УложитьСписокОбъектов(ВыбКлиент,"#Клиенты","Контрагенты");
		Условие1=Условие1+" AND Клиент IN (SELECT Val FROM #Клиенты)";
	Иначе
		КонструкторЗапросов.УстановитьТекстовыйПараметр("ВыбКлиент",ВыбКлиент);
		Условие1=Условие1+" AND Клиент = :ВыбКлиент";
	КонецЕсли;
	
	ТекстЗапроса="SELECT ЗаказыПоставщикамОстатки.Товар [Товар $Справочник.Номенклатура]
	|					, ЗаказыПоставщикамОстатки.Склад [Склад $Справочник.МестаХранения]
	|					, ЗаказыПоставщикамОстатки.Клиент [Поставщик $Справочник.Контрагенты]
	|					, $СпрСтраны.ВидСтраны [Страна $Перечисление.ВидыСтран]
	|					, ЗаказыПоставщикамОстатки.СрокПоставки ДатаПоставки
	|					, ЗаказыПоставщикамОстатки.ПоЗаказу [ПоЗаказу $Документ]
	|					, RTRIM(Жур.DOCNO)+'(' +CONVERT(VarChar,CAST(LEFT(Жур.DATE_TIME_IDDOC,8) as SmallDateTime), 4)+')' Заказ
	|					, $СпрН.БазоваяЕдиницаИзмерения [ЕдИзм $Перечисление.ЕдиницыИзмерения]
	|					, ЗаказыПоставщикамОстатки.КоличествоОстаток Заказано
	|			   FROM $РегистрОстатки.ЗаказыПоставщикам(,,("+Условие1+"),,) AS ЗаказыПоставщикамОстатки
	|			   INNER JOIN $Справочник.Контрагенты СпрК (NOLOCK) ON СпрК.ID=ЗаказыПоставщикамОстатки.Клиент
	|			   INNER JOIN $Справочник.Номенклатура СпрН (NOLOCK) ON СпрН.ID=ЗаказыПоставщикамОстатки.Товар
	|			   INNER JOIN $Справочник.Страны СпрСтраны (NOLOCK) ON СпрСтраны.ID=$СпрК.Страна
	|			   INNER JOIN _1sjourn Жур (NOLOCK) ON $ВидДокумента36.ЗаказПоставщику+Жур.IDDOC=ЗаказыПоставщикамОстатки.ПоЗаказу AND Жур.IDDOCDEF=$ВидДокумента.ЗаказПоставщику
	|			   TOTALS SUM(Заказано), COUNT(Заказ)
	|			   BY ALL
	|					, [Товар $Справочник.Номенклатура] HIERARCHY
	|					, [Склад $Справочник.МестаХранения]
	|					, [Поставщик $Справочник.Контрагенты] HIERARCHY
	|					, [Страна $Перечисление.ВидыСтран]
	|					, ДатаПоставки PERIODS
	|					, [ЕдИзм $Перечисление.ЕдиницыИзмерения]
	|					, Заказ
	|";	
	
	//КонструкторЗапросов.Отладка(1);

	ФайлКуба = КонструкторЗапросов.СоздатьКуб(ТекстЗапроса);
	Если ПустаяСтрока(ФайлКуба) = 1 Тогда
		Сообщить("Нет данных для создания отчета!","I");
		Возврат;
	КонецЕсли;
	
	Форма.фСводная.Видимость(0);
	НеДобавлятьПоляПоУмолчанию=0;
	Позиция = Найти(XMLТаблицы, ";Location=");
	Если Позиция = 0 Тогда
		Сводная.Объект.ConnectionString = "Provider=MSOLAP;Location=" + ФайлКуба;
		Сводная.Объект.DataMember = "qryConsole";     
	Иначе
		Сводная.Объект.XMLData = Лев(XMLТаблицы, Позиция + 9) + ФайлКуба + Сред(XMLТаблицы, Позиция + 10);
		НеДобавлятьПоляПоУмолчанию=1;
	КонецЕсли;
	
	Попытка
		КонструкторЗапросов.ПодключитьРасшифровку(Сводная.Объект);
		КоммВерсия = 1;
	Исключение
		КоммВерсия = 0;
	КонецПопытки;
	                                 
	Форма.фСводная.Видимость(1);
	Если НеДобавлятьПоляПоУмолчанию=1 Тогда
		Форма.Обновить(1);
		Возврат ;
	КонецЕсли;
	
	oView = Сводная.Объект.ActiveView;
	
	УстШрифты(oView.Fieldsets("[Склад]").Fields("Склад"),1,-1);
	УстШрифты(oView.Fieldsets("[Страна]").Fields("Страна"),1,-1);
	
	ПоМесяцам = oView.Fieldsets("[ДатаПоставки].[По месяцам]");
	УстШрифты(ПоМесяцам.Fields("Год"),1,-1);
	УстШрифты(ПоМесяцам.Fields("Месяц"),1,-1);
	УстШрифты(ПоМесяцам.Fields("Квартал"),0,0);
	УстШрифты(ПоМесяцам.Fields("День"),1,0);

	ПоНеделям = oView.Fieldsets("[ДатаПоставки].[По неделям]");
	УстШрифты(ПоНеделям.Fields("Год"),1,-1);
	УстШрифты(ПоНеделям.Fields("Неделя"),1,-1);
	УстШрифты(ПоНеделям.Fields("День недели"),1,0);
	
	oView = Сводная.Объект.ActiveView;

	ПоТоварам = oView.Fieldsets("[Товар].[По Группам]");
	УстШрифты(ПоТоварам.Fields("Товар"),1,-1);
	УстШрифты(ПоТоварам.Fields("Товар 01"),1,-1);
	УстШрифты(ПоТоварам.Fields("Товар 02"),1,-1);
	Попытка
		УстШрифты(ПоТоварам.Fields("Товар 03"),0,0);
	Исключение
	КонецПопытки;

	УстШрифты(oView.Fieldsets("[Поставщик].[Все]").Fields("Поставщик"),1,-1);
	
	ПоПоставщикам = oView.Fieldsets("[Поставщик].[По Группам]");
	УстШрифты(ПоПоставщикам.Fields("Поставщик"),1,-1);
	УстШрифты(ПоПоставщикам.Fields("Поставщик 01"),1,-1);
	УстШрифты(ПоПоставщикам.Fields("Поставщик 02"),1,-1);
	Попытка
		УстШрифты(ПоПоставщикам.Fields("Поставщик 03"),0,0);
	Исключение
	КонецПопытки;

	
	//Спрятать SubTotals можно только через vbscript
	Скрипт = СоздатьОбъект("MSScriptControl.ScriptControl");
	Скрипт.Language = "vbscript";
	Скрипт.AddObject("f1", oView.Fieldsets("[Товар].[По Группам]").Fields("Товар"));
	Скрипт.ExecuteStatement("f1.SubTotals(1) = False");
	Скрипт.AddObject("f2", oView.Fieldsets("[Товар].[По Группам]").Fields("Товар 01"));
	Скрипт.ExecuteStatement("f2.SubTotals(1) = False");
	Скрипт.AddObject("f3", oView.Fieldsets("[Товар].[По Группам]").Fields("Товар 02"));
	Скрипт.ExecuteStatement("f3.SubTotals(1) = False");
	Попытка
		Скрипт.AddObject("f4", oView.Fieldsets("[Товар].[По Группам]").Fields("Товар 03"));
		Скрипт.ExecuteStatement("f4.SubTotals(1) = False");
	Исключение
	КонецПопытки;

	Скрипт.AddObject("f5", oView.Fieldsets("[ДатаПоставки].[По Месяцам]").Fields("Год"));
	Скрипт.ExecuteStatement("f5.SubTotals(1) = False");
	Скрипт.AddObject("f6", oView.Fieldsets("[ДатаПоставки].[По Месяцам]").Fields("Месяц"));
	Скрипт.ExecuteStatement("f6.SubTotals(1) = False");
	Скрипт.AddObject("f7", oView.Fieldsets("[ДатаПоставки].[По Неделям]").Fields("Год"));
	Скрипт.ExecuteStatement("f7.SubTotals(1) = False");
	Скрипт.AddObject("f8", oView.Fieldsets("[Заказ]").Fields("Заказ"));
	Скрипт.ExecuteStatement("f8.SubTotals(1) = False");

	
	oView.FilterAxis.InsertFieldSet(oView.Fieldsets("[Склад]"));
	oView.FilterAxis.InsertFieldSet(oView.Fieldsets("[Страна]"));
	oView.FilterAxis.InsertFieldSet(ПоПоставщикам);
	oView.FilterAxis.InsertFieldSet(ПоТоварам);
	oView.FilterAxis.InsertFieldSet(oView.Fieldsets("[ЕдИзм]"));
	oView.FilterAxis.InsertFieldSet(ПоНеделям);
	
	oView.ColumnAxis.InsertFieldSet(ПоМесяцам);
	oView.RowAxis.InsertFieldSet(oView.Fieldsets("[Поставщик].[Все]"));
	oView.RowAxis.InsertFieldSet(oView.Fieldsets("[Заказ]"));
//	oView.RowAxis.InsertFieldSet(oView.Fieldsets("[ЗапретСк]"));
//	oView.FilterAxis.InsertFieldSet(oView.Fieldsets("[Валюта]"));


	Кол=oView.Totals("Сумма Заказано");
	Кол.NumberFormat = "#,##0.000";
	Кол.Caption = "Заказано";
	
	oView.DataAxis.InsertTotal(Кол);
	
//	Активизировать("фСводная");    

	семЗаписатьЛогКон( начЛог );	
	
КонецПроцедуры
//-------------------------------

Процедура фСводная_DblClick()
	Если Сводная.Объект.Selection.Count = 1 Тогда
		Если Сводная.Объект.SelectionType = "PivotAggregates" Тогда
			Попытка
				Расшифровка = КонструкторЗапросов.ПолучитьРасшифровку(Сводная.Объект);
			Исключение
				Расшифровка = "";
				Сообщить("Метод ПолучитьРасшифровку не доступен в этой редакции ВК.", "!");
			КонецПопытки;

			Если ТипЗначенияСтр(Расшифровка) = "ТаблицаЗначений" Тогда
				Ном=0;
				Если Расшифровка.ВыбратьСтроку(ном)=1 Тогда
					ОткрытьФорму(Расшифровка.ПолучитьЗначение(ном,"ПоЗаказу"));
				КонецЕсли;
				
			ИначеЕсли ТипЗначенияСтр(Расшифровка) = "СписокЗначений" Тогда
				Расшифровка.ВыбратьЗначение(,,);
			ИначеЕсли ТипЗначенияСтр(Расшифровка) = "Справочник" Тогда
				ОткрытьФорму(Расшифровка);
			ИначеЕсли ПустоеЗначение(Расшифровка) = 0 Тогда
				Предупреждение(Расшифровка);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//*******************************************
Процедура фСводная_DataChange(Reason)
	Если СтрДлина(ФайлКуба) > 0 Тогда
		XMLТаблицы = СтрЗаменить(Сводная.Объект.XMLData, ФайлКуба, "");
	КонецЕсли;
КонецПроцедуры

//*******************************************
Процедура ПриЗакрытии()
	Если СтрДлина(ФайлКуба) > 0 Тогда
		XMLТаблицы = СтрЗаменить(Сводная.Объект.XMLData, ФайлКуба, "");
	КонецЕсли;
КонецПроцедуры


ДатаОтчета = начмесяца(ПолучитьДатуТА());
ДатаОтчета1 = ПолучитьДатуТА();
ДатаСрока=РабочаяДата();
СрокиПоставки = 1;

спУсловий.ДобавитьЗначение("не исп.");
спУсловий.ДобавитьЗначение("больше",">=");
спУсловий.ДобавитьЗначение("меньше","<=");
