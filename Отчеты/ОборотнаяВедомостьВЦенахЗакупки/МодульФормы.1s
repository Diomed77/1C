Перем Заг, Заг1, Заг2, ТекТовар, БазЕд, Запрос, ЗапросРезервы, ЗапросПерер;

//Внетренние перемещения

Перем	ВнутрРасходКол, ВнутрПриходКол;
Перем	ВнутрРасходСум,ВнутрПриходСум;

//Перемещение департамент
Перем   ВнешнРасходКол,	ВнешнПриходКол;
Перем	ВнешнРасходСум, ВнешнПриходСум;

//Начальные и конечные остатки
Перем	НачальноеКол, КонечноеКол;

Перем	НачСум,	КонСум;

//	Списание
Перем	СуммаСписания, КолвоСписания;

//	Пересортица
Перем	СуммаПересорт, КолвоПересорт;

//  Продажа
Перем	ПродСумма, ВсегоПродано, ВсегоПродРест;

//  Возврат
Перем	ВозврСумма, ВсегоВозврат, ВсегоВозвратПост, ВозвратПост, ВозвратПостКол;

//  Закупка
Перем	ЗакупСумма, ВсегоЗакуплено;

//  Инвентаризация
Перем 	ИнвКол, ИнвСто;

//	Переработка		
Перем	РасходКолПер, РасходСтоПер;
Перем	ПриходКолПер, ПриходСтоПер;
Перем   СтоПерРаб, ВсегоСтоПерРаб;

//Резерв
Перем   КонРез, ВсегоКонРез;


// Итого
Перем ВсегоПрод, ВсегоСписание,	ВсегоЗакуп;

Перем 	ВсегоНачКол,
ВсегоКонКол,
ВсегоНачСум,
ВсегоКонСум,
ВсегоИнвКол,
ВсегоИнвСто,

ВсегоВнутрРсКол,
ВсегоВнутрПрКол,
ВсегоВнутрРсСум,
ВсегоВнутрПрСум,
ВсегоВнешнРсКол,
ВсегоВнешнПрКол,
ВсегоВнешнРсСум,
ВсегоВнешнПрСум,

ВсегоПриходКолПер,
ВсегоПриходСтоПер,
ВсегоРасходКолПер,
ВсегоРасходСтоПер,

ИтогВсегоПродано,   // Общее количество товара по расходу
ИтогВсегоЗакуплено,// Общее количество товара по приходу
ИтогВозврСумма,
ИтогВсегоВозврат,
ИтогКолвоСписания,
ИтогКолвоПересорт,
ВсегоПересорт;

Перем ВсегоНачКолКГ,ИтогВсегоЗакупленоКГ, ИтогВсегоВозвратКГ, ВсегоКонКолКГ;
Перем Товар;
                
Процедура ПриОткрытии()
	
	глПриОткрытии(Контекст,"ОборотнаяВедомостьВЦенахЗакупки");
	
КонецПроцедуры


Функция ВесТовара(пКол,пТовар)
	Возврат пТовар.Вес*пКол;
КонецФункции
//***************************************************************

Процедура Переработка()
	
	//	Переработка
	Если Перераб=1 Тогда
		
		ЗапросПерер = СоздатьОбъект("Запрос");
		
		ТекстЗап = "Период с ДатаНачала";
		Если ДатаКонца>=ПолучитьДатуТА() Тогда
			ДатаКонца=ПолучитьДатуТА();
			ДатаКон=ДатаКонца;
			ТекстЗап= ТекстЗап+";";
		Иначе
			ТекстЗап= ТекстЗап+" по ДатаКонца;";
		КонецЕсли;
		
		ТекстЗап = ТекстЗап +
		"//{{ЗАПРОС(ПоПереработке)
		|Склад = Документ.Переработка.Склад;
		|ИсходныйТовар = Документ.Переработка.ИсходныйТовар;
		|Поставщик = Документ.Переработка.ИсходныйТовар.Поставщик;
		|СтоимостьРаботы = Документ.Переработка.СтоимостьРаботы;
		|ВидПереработки = Документ.Переработка.ВидПереработки;
		|Функция СтоРабСум = Сумма(СтоимостьРаботы);
		|Группировка ИсходныйТовар без упорядочивания;
		|Условие(ВидПереработки = Перечисление.ВидПереработки.Этап1);
		|"//}}ЗАПРОС
		;
		
		Если ВыбПоставщик.Выбран() = 0 Тогда
		ИначеЕсли ВыбПоставщик.ЭтоГруппа() = 1 Тогда
			ТекстЗап = ТекстЗап + "Условие (Поставщик в ВыбПоставщик);";
		Иначе
			ТекстЗап = ТекстЗап + "Условие (Поставщик=ВыбПоставщик);";
		КонецЕсли;
		
		Если ВыбТовар.Выбран() = 0 Тогда
		ИначеЕсли ВыбТовар.ЭтоГруппа() = 1 Тогда
			ТекстЗап = ТекстЗап + "Условие (ТОВАР в ВыбТовар);";
		Иначе
			ТекстЗап = ТекстЗап + "Условие (ТОВАР = ВыбТовар);";
		КонецЕсли;
		
		// Если ошибка в запросе, то выход из процедуры
		Если ЗапросПерер.Выполнить(ТекстЗап)=0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры	


//***************************************************************
Процедура ВывестиСекции(Таб,Секция)
	
	Таб.ВывестиСекцию(Секция+"|Основной");
	
	Если ВнешнПер=1 Тогда
		Таб.ПрисоединитьСекцию(Секция+"|ВнешниеПеремещенияПрих");
	КонецЕсли;
	
	Если ВнутрПер=1 Тогда
		Таб.ПрисоединитьСекцию(Секция+"|ВнутренниеПеремещенияПрих");
	КонецЕсли;
	
	Если Перераб=1 Тогда
		Таб.ПрисоединитьСекцию(Секция+"|ПереработкаПрих");
	КонецЕсли;
	
	Таб.ПрисоединитьСекцию(Секция+"|Расход");
	
	Если ВнешнПер=1 Тогда
		Таб.ПрисоединитьСекцию(Секция+"|ВнешниеПеремещенияРасх");
	КонецЕсли;
	
	Если ВнутрПер=1 Тогда
		Таб.ПрисоединитьСекцию(Секция+"|ВнутренниеПеремещенияРасх");
	КонецЕсли;
	
	Таб.ПрисоединитьСекцию(Секция+"|Списание");
	
	Если Перераб=1 Тогда
		Таб.ПрисоединитьСекцию(Секция+"|ПереработкаРасх");
	КонецЕсли;
	
//	Если Пересорт=1 Тогда
//		Таб.ПрисоединитьСекцию(Секция+"|Пересортица");
//	КонецЕсли;
	
	Если Инвент=1 Тогда
		Таб.ПрисоединитьСекцию(Секция+"|Инвентаризация");  
	КонецЕсли;
	
	Таб.ПрисоединитьСекцию(Секция+"|КонОстаток");  
	
	Если КонРезерв=1 Тогда
		Таб.ПрисоединитьСекцию(Секция+"|Резерв");  
	КонецЕсли;

	Таб.ПрисоединитьСекцию(Секция+"|Разница");  
	
КонецПроцедуры
//_____________________________________________________________________________
Функция ФлагУчета(Док)
    Если Док.Вид()="АктРазборки" Тогда
        Возврат 6;
	ИначеЕсли Док.Вид()="Списание" Тогда
        Возврат 5;
	ИначеЕсли Док.Вид()="Перемещение" Тогда
        Возврат 3;
	ИначеЕсли Док.Вид()="ПеремещениеДепартамент" Тогда
        Возврат 7;
	ИначеЕсли Док.Вид()="СличительнаяВедомость" Тогда
		Если Док.Пересортица = 1 Тогда
		    Возврат 9;
		Иначе
        	Возврат 10;			
		КонецЕсли;
	ИначеЕсли Док.Вид()="ВводОстатковТоваров" Тогда
        Возврат  11;
	Иначе
		Возврат 1;
    КонецЕсли;
КонецФункции //ФлагУчета(Док)

//*******************************************
Процедура ВыполнитьОтчет()
	Перем Стр;       
	Перем ВозвратОтПокупателя;
	начЛог = семЗаписатьЛогНач( "Отчет", "Оборотная ведомость в ценах закупки", "Обработка", "Формирование отчета" );
	ВозвратОтПокупателя = ВозвратОтПокупателяКупленногоТовара;
	ВозвратПоставщику 	= ВозвратПоставщикуКупленногоТовара;
	ВозвратПоставщикуР 	= ВозвратПоставщикуПринятогоТовара;	
	//	Сообщить("Начало: "+ТекущееВремя());
	ДатаКон=ДатаКонца;
	Заг="";
	Заг1="";
	
	//Запрос по переработке
	//	Переработка();
	
	//	Резервы товаров
	Если КонРезерв=1 Тогда
		
		ЗапросРезервы = СоздатьОбъект("Запрос");
		
		ТекстЗап = "Период с ДатаНачала";
		Если ДатаКонца>=ПолучитьДатуТА() Тогда
			ДатаКонца=ПолучитьДатуТА();
			ДатаКон=ДатаКонца;
			ТекстЗап= ТекстЗап+";";
		Иначе
			ТекстЗап= ТекстЗап+" по ДатаКонца;";
		КонецЕсли;
		
		ТекстЗап = ТекстЗап +
		"//{{ЗАПРОС(ПоТоварамВРезерве)
		|Товар=Регистр.РезервыТоваров.Товар;
		|Поставщик=Регистр.РезервыТоваров.Товар.Поставщик;
		|Рез=Регистр.РезервыТоваров.РезервТовара;
		|Группировка Товар;
		|Функция КонРез =КонОст(Рез);
		|"//}}ЗАПРОС
		;
		
		Если ВыбПоставщик.Выбран() = 0 Тогда
		ИначеЕсли ВыбПоставщик.ЭтоГруппа() = 1 Тогда
			ТекстЗап = ТекстЗап + "Условие (Поставщик в ВыбПоставщик);";
		Иначе
			ТекстЗап = ТекстЗап + "Условие (Поставщик=ВыбПоставщик);";
		КонецЕсли;
		
		Если ВыбТовар.Выбран() = 0 Тогда
		ИначеЕсли ВыбТовар.ЭтоГруппа() = 1 Тогда
			ТекстЗап = ТекстЗап + "Условие (ТОВАР в ВыбТовар);";
		Иначе
			ТекстЗап = ТекстЗап + "Условие (ТОВАР = ВыбТовар);";
		КонецЕсли;
		
		// Если ошибка в запросе, то выход из процедуры
		Если ЗапросРезервы.Выполнить(ТекстЗап)=0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	
	//Создание объекта типа Запрос
	// Получение остатков товара на начало и конец периода
	Запрос = СоздатьОбъект("Запрос");
	
	ТекстЗап = "Период с ДатаНачала";
	Если ДатаКонца>=ПолучитьДатуТА() Тогда
		ДатаКонца=ПолучитьДатуТА();
		ДатаКон=ДатаКонца;
		ТекстЗап= ТекстЗап+";";
	Иначе
		ТекстЗап= ТекстЗап+" по ДатаКонца;";
	КонецЕсли;
	// Группировка по складам   - остатки по конкретному складу
	ТекстЗап = ТекстЗап +
	"//{{ЗАПРОС(НачКонОстатки)
	|Склад=Регистр.ПартииТоваров.Склад;
	|Товар=Регистр.ПартииТоваров.Товар;
	|Поставщик=Регистр.ПартииТоваров.Товар.Поставщик;
	|БазоваяЕдиница=Регистр.ПартииТоваров.Товар.БазоваяЕдиницаИзмерения;
	|Наименование=Регистр.ПартииТоваров.Товар.Наименование;
	|Код=Регистр.ПартииТоваров.Товар.Код;
	|Док=Регистр.ПартииТоваров.ТекущийДокумент;
	|Кол=Регистр.ПартииТоваров.ОстатокТовара;  
	|КодОперации=Регистр.ПартииТоваров.КодОперации;
	|ФлагУчета=Регистр.ПартииТоваров.ФлагУчета;
	|БазСто=Регистр.ПартииТоваров.Стоимость;";
	//		|Группировка Склад;
	
	Если  ФлКод=1 Тогда		
		сорт="Код";
	Иначе     
		сорт="Наименование";
	КонецЕсли;

	Если Сводная=0 Тогда
		ТекстЗап = ТекстЗап + "Группировка Товар упорядочить по Товар."+сорт+?(БезГрупп=1," Без Групп;",";");
	КонецЕсли;
	
	ТекстЗап = ТекстЗап +"
	//		"Группировка Док;    
	
	|Функция НачКол =НачОст(Кол);
	|Функция НачСум =НачОст(БазСто);
	|Функция КонСум = КонОст(БазСто);
	|Функция КонКол = КонОст(Кол);
	
	|Функция РасхКол=Расход(Кол) Когда (((ФлагУчета=1)или(ФлагУчета=66)) И ((КодОперации<>ВозвратПоставщику) И (КодОперации<>ВозвратПоставщикуР))); //Продажи
	|Функция РасхСто=Расход(БазСто) Когда (((ФлагУчета=1)или(ФлагУчета=66)) И ((КодОперации<>ВозвратПоставщику) И (КодОперации<>ВозвратПоставщикуР))); //Продажи
	
	|Функция ВозвратПостКол=Расход(Кол) Когда ((ФлагУчета=1) И ((КодОперации=ВозвратПоставщику) ИЛИ (КодОперации=ВозвратПоставщикуР))); //Возврат поставщику
	|Функция ВозвратПостСто=Расход(БазСто) Когда ((ФлагУчета=1) И ((КодОперации=ВозвратПоставщику) ИЛИ (КодОперации=ВозвратПоставщикуР))); //Возврат поставщику
	
	|Функция РасхКолРест=Расход(Кол) Когда ((ФлагУчета=13) И (КодОперации=ПродажаБлюда)); //МарочныйОтчет Продажи Блюд
	|Функция РасхСтоРест=Расход(БазСто) Когда ((ФлагУчета=13) И (КодОперации=ПродажаБлюда)); //МарочныйОтчет  Продажи Блюд
	|Функция РасхКолРестТов=Расход(Кол) Когда ((ФлагУчета=13) И (КодОперации=ПродажаТовара)); //МарочныйОтчет Продажи Блюд
	|Функция РасхСтоРестТов=Расход(БазСто) Когда ((ФлагУчета=13) И (КодОперации=ПродажаТовара)); //МарочныйОтчет  Продажи Блюд
	
	|Функция РасхКолПер=Расход(Кол) Когда (ФлагУчета=6); //переработка
	|Функция РасхСтоПер=Расход(БазСто) Когда (ФлагУчета=6); //переработка
	
	|Функция ПрихКолПер=Приход(Кол) Когда (ФлагУчета=6); //переработка
	|Функция ПрихСтоПер=Приход(БазСто) Когда (ФлагУчета=6); //переработка
	
	|Функция СписРасхСум=Расход(БазСто)  Когда ((ФлагУчета=5) ИЛИ (ФлагУчета=51) ИЛИ (ФлагУчета=56)); //Списание
	|Функция СписРасхКол=Расход(Кол)  Когда  ((ФлагУчета=5) ИЛИ (ФлагУчета=51) ИЛИ (ФлагУчета=56)); //Списание
	
	|Функция ВнутрРасхКол=Расход(Кол) Когда (((ФлагУчета=3) ИЛИ (ФлагУчета=34)) И ((КодОперации=Неизвестный) ИЛИ (КодОперации=""%"") ИЛИ (КодОперации=ПриходОтПеремещения) ИЛИ (КодОперации=ГотоваяПродукцияНаСклад))); //Перемещение
	|Функция ВнутрПрихКол=Приход(Кол) Когда (((ФлагУчета=3) ИЛИ (ФлагУчета=34)) И ((КодОперации=Неизвестный) ИЛИ (КодОперации=""%"") ИЛИ (КодОперации=ПриходОтПеремещения) ИЛИ (КодОперации=ГотоваяПродукцияНаСклад))); //Перемещение
	|Функция ВнутрРасхСум=Расход(БазСто) Когда (((ФлагУчета=3) ИЛИ (ФлагУчета=34)) И ((КодОперации=Неизвестный) ИЛИ (КодОперации=""%"") ИЛИ (КодОперации=ПриходОтПеремещения) ИЛИ (КодОперации=ГотоваяПродукцияНаСклад))); //Перемещение
	|Функция ВнутрПрихСум=Приход(БазСто) Когда (((ФлагУчета=3) ИЛИ (ФлагУчета=34)) И ((КодОперации=Неизвестный) ИЛИ (КодОперации=""%"") ИЛИ (КодОперации=ПриходОтПеремещения) ИЛИ (КодОперации=ГотоваяПродукцияНаСклад))); //Перемещение
	|Функция ВнешнРасхКол=Расход( Кол)  Когда (ФлагУчета=7); // ПеремещениеДепартамент
	|Функция ВнешнПрихКол=Приход( Кол)  Когда (ФлагУчета=7); // ПеремещениеДепартамент
	|Функция ВнешнРасхСум=Расход( БазСто)  Когда (ФлагУчета=7); // ПеремещениеДепартамент
	|Функция ВнешнПрихСум=Приход(БазСто)  Когда (ФлагУчета=7);  // ПеремещениеДепартамент
	
	|Функция ПересРасхСум=Расход(БазСто)  Когда (ФлагУчета=9); //Пересортица
	|Функция ПересРасхКол=Расход(Кол)  Когда (ФлагУчета=9); //Пересортица
	|Функция ПересПрихСум=Приход(БазСто)  Когда (ФлагУчета=9); //Пересортица
	|Функция ПересПрихКол=Приход(Кол)  Когда (ФлагУчета=9); //Пересортица
	
	|Функция ИнвРасхСум=Расход(БазСто)  Когда ((ФлагУчета=10) или (ФлагУчета=9) или (ФлагУчета=8)); //Инвентаризация
	|Функция ИнвРасхКол=Расход(Кол)  Когда ((ФлагУчета=10) или (ФлагУчета=9) или (ФлагУчета=8)); //Инвентаризация
	|Функция ИнвПрихСум=Приход(БазСто)  Когда ((ФлагУчета=10) или (ФлагУчета=9) или (ФлагУчета=8)); //Инвентаризация
	|Функция ИнвПрихКол=Приход(Кол)  Когда ((ФлагУчета=10) или (ФлагУчета=9) или (ФлагУчета=8)); //Инвентаризация
	
	|Функция ВОстПрихСум=Приход(БазСто)  Когда (ФлагУчета=11); //Ввод остатков
	|Функция ВОстПрихКол=Приход(Кол)  Когда (ФлагУчета=11); //Ввод остатков
	
	|Функция ВозвратПрихСум=Приход(БазСто)  Когда (ВозвратОтПокупателя=КодОперации);
	|Функция ВозвратПрихКол=Приход(Кол)  Когда (ВозвратОтПокупателя=КодОперации);
	|Функция ЗакупСум=Приход(БазСто)  Когда ((ВозвратОтПокупателя<>КодОперации) И (ФлагУчета=1)); 
	|Функция ЗакупКол=Приход(Кол)  Когда ((ВозвратОтПокупателя<>КодОперации) И (ФлагУчета=1));
	
	|Функция ВКол=Count();
	|"//}}ЗАПРОС
	;
	
	Если ВыбТовар.Выбран() = 0 Тогда
		Заг1 = "Pa visўm prec§m. ";
	ИначеЕсли ВыбТовар.ЭтоГруппа() = 1 Тогда
		Заг1 ="Grupa " + ВыбТовар.Наименование+" precem. ";
		ТекстЗап = ТекстЗап + "Условие (ТОВАР в ВыбТовар);";
	Иначе
		Заг1 ="Prece " + ВыбТовар.Наименование+". ";
		ТекстЗап = ТекстЗап + "Условие (ТОВАР = ВыбТовар);";
	КонецЕсли;
	
	Если ВыбСклад.Выбран()=0 Тогда
		//Без условий
	ИначеЕсли ВыбСклад.ЭтоГруппа() = 1 Тогда
		ТекстЗап=ТекстЗап+"Условие (Склад в ВыбСклад);";
		Заг="Noliktava "+ВыбСклад.Наименование+".";
	Иначе	
		ТекстЗап=ТекстЗап+"Условие (Склад=ВыбСклад);";
		Заг="Noliktava "+ВыбСклад.Наименование+".";
	КонецЕсли;
	
	Если ВыбПоставщик.Выбран() = 0 Тогда
		//		Заг2 = "По всем поставщикам. ";
	ИначеЕсли ВыбПоставщик.ЭтоГруппа() = 1 Тогда
		Заг2 ="Grupa " + ВыбПоставщик.Наименование+" piegўdўtўja. ";
		ТекстЗап = ТекстЗап + "Условие (Поставщик в ВыбПоставщик);";
	Иначе
		Заг2 ="Piegўdўtўjs " + ВыбПоставщик.Код+"  "+ ВыбПоставщик.Наименование+". ";
		ТекстЗап = ТекстЗап + "Условие (Поставщик=ВыбПоставщик);";
	КонецЕсли;
	
	Если флОтрицательные = 1 Тогда
		ТекстЗап = ТекстЗап + "Условие ((ФлагУчета=66) и (КодОперации<>""С""));";
	КонецЕсли;
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗап)=0 Тогда
		Возврат;
	КонецЕсли;
	
	// формируем таблицу 1С:Торговля
	// Подготовка к заполнению выходных форм данными запроса
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Таблица"+?(флВыводитьВес=1,"1",""));
	         
	Если Сводная=0 Тогда
		ВывестиСекции(Таб,"Отчет");
	КонецЕсли;
	
	ВсегоПрод=0;
	ВсегоПродРест=0;
	ВсегоВозвратПост=0;
	ВсегоСписание=0;
	ВсегоЗакуп=0;
	ЧислоСтрок=0;
	
	ВсегоНачКол=0;ВсегоНачКолКГ=0;
	ВсегоКонКол=0;ВсегоКонКолКГ=0;
	ВсегоНачСум=0;
	ВсегоКонСум=0;
	
	ВсегоИнвКол=0;
	ВсегоИнвСто=0;
	
	ВсегоКонРез=0;
	
	ВсегоВнутрРсКол=0;
	ВсегоВнутрПрКол=0;
	ВсегоВнутрРсСум=0;
	ВсегоВнутрПрСум=0;
	ВсегоВнешнРсКол=0;
	ВсегоВнешнПрКол=0;
	ВсегоВнешнРсСум=0;
	ВсегоВнешнПрСум=0;    
	
	ВсегоСтоПерРаб=0;
	
	ВсегоРасходСтоПер=0;
	ВсегоРасходКолПер=0;
	ВсегоПриходСтоПер=0;
	ВсегоПриходКолПер=0;
	
	ИтогВсегоПродано=0;   // Общее количество товара по расходу
	ИтогВсегоЗакуплено=0;ИтогВсегоЗакупленоКГ = 0;// Общее количество товара по приходу
	ИтогВозврСумма=0;
	ИтогВсегоВозврат=0; ИтогВсегоВозвратКГ = 0;
	ИтогКолвоСписания=0;
	ИтогКолвоПересорт=0;     
	ВсегоПересорт=0;    
	

    Если Сводная=0 Тогда
		Пока Запрос.Группировка("ТОВАР") = 1 Цикл
			// Получим начальные и конечные остатки товара
			
			Товар=Запрос.Товар;
			
			//Внутренние перемещения
			ВнутрРасходКол=Запрос.ВнутрРасхКол;
			ВнутрПриходКол=Запрос.ВнутрПрихКол;
			ВнутрРасходСум=Запрос.ВнутрРасхСум;
			ВнутрПриходСум=Запрос.ВнутрПрихСум;
			
			//Перемещение департамент
			ВнешнРасходКол=Запрос.ВнешнРасхКол;
			ВнешнПриходКол=Запрос.ВнешнПрихКол;
			ВнешнРасходСум=Запрос.ВнешнРасхСум;
			ВнешнПриходСум=Запрос.ВнешнПрихСум;
			
			//Начальные и конечные остатки
			НачальноеКол=Запрос.НачКол;
			КонечноеКол=Запрос.КонКол;
			
			НачСум=Запрос.НачСум;
			КонСум=Запрос.КонСум;
			
			//Резерв
			Если КонРезерв=1 Тогда
				КонРез=?(ЗапросРезервы.Получить(Товар)=1,ЗапросРезервы.КонРез,0);
			КонецЕсли;
			
			//	Списание
			СуммаСписания=Запрос.СписРасхСум;
			КолвоСписания=Запрос.СписРасхКол;
			
			//	Пересортица
			СуммаПересорт=Запрос.ПересРасхСум-Запрос.ПересПрихСум;
			КолвоПересорт=Запрос.ПересРасхКол-Запрос.ПересПрихКол;
			
			//  Продажа
			ПродСумма=Запрос.РасхСто+Запрос.РасхСтоРестТов;
			ВсегоПродано=Запрос.РасхКол+Запрос.РасхКолРестТов;
			
			//Продажа марочный отчет
			                
			Если Константа.СписыватьИнгридиентыВМО.Получить(НачМесяца(ДатаНачала)) = Перечисление.Булево.Да  Тогда
				ПродСумма=ПродСумма+Запрос.РасхСтоРест;
				ВсегоПродано=ВсегоПродано+Запрос.РасхКолРест;
			КонецЕсли;
			
			//  Возврат
			ВозврСумма=Запрос.ВозвратПрихСум;
			ВсегоВозврат=Запрос.ВозвратПрихКол;
			ВозвратПост=Запрос.ВозвратПостСто;
			ВозвратПостКол=Запрос.ВозвратПостКол;
			
			//  Закупка 
			ЗакупСумма=Запрос.ЗакупСум;
			ВсегоЗакуплено=Запрос.ЗакупКол;
			
			//  Инвентаризация
			ИнвКол=Запрос.ИнвРасхКол-Запрос.ИнвПрихКол-Запрос.ВОстПрихКол;
			ИнвСто=Запрос.ИнвРасхСум-Запрос.ИнвПрихСум-Запрос.ВОстПрихСум;
			
			//	Переработка		
			РасходКолПер=Запрос.РасхКолПер; 
			РасходСтоПер=Запрос.РасхСтоПер;
			ПриходКолПер=Запрос.ПрихКолПер; 
			ПриходСтоПер=Запрос.ПрихСтоПер;
			
			СтоПерРаб=0;
			
			//Если Перераб=1 Тогда
			//	//			СтоПерРаб=ПриходСтоПер-РасходСтоПер;
			//	//			?(ЗапросПерер.Получить(Товар)=1,ЗапросПерер.СтоРабСум,0);
			//Иначе
			//	//			СтоПерРаб=0;
			//КонецЕсли;
			
			
			Если Запрос.ЭтоГруппа("Товар")=1 Тогда   
				
				Уровень=Формат(" ","С"+(Товар.Уровень()-1)*2+"");
				ТовНаим = ?(  семТекСтрана() = "LT", Товар.НаименованиеLT, Товар.Наименование );
				ТекТовар=Уровень+Товар.Код+"   "+СокрЛП(ТовНаим);
				ВывестиСекции(Таб,"Группа");
				Продолжить;
				
			КонецЕсли;     
			
			//  Итоговые данные
			ВсегоНачКол=ВсегоНачКол+НачальноеКол;ВсегоНачКолКГ=ВсегоНачКолКГ+ВесТовара(НачальноеКол,Товар);
			ВсегоКонКол=ВсегоКонКол+КонечноеКол;ВсегоКонКолКГ=ВсегоКонКолКГ+ВесТовара(КонечноеКол,Товар);
			ВсегоНачСум=ВсегоНачСум+НачСум;
			ВсегоКонСум=ВсегоКонСум+КонСум;
			
			ВсегоВнутрРсКол=ВсегоВнутрРсКол+ВнутрРасходКол;
			ВсегоВнутрПрКол=ВсегоВнутрПрКол+ВнутрПриходКол;
			ВсегоВнутрРсСум=ВсегоВнутрРсСум+ВнутрРасходСум;
			ВсегоВнутрПрСум=ВсегоВнутрПрСум+ВнутрПриходСум;
			ВсегоВнешнРсКол=ВсегоВнешнРсКол+ВнешнРасходКол;
			ВсегоВнешнПрКол=ВсегоВнешнПрКол+ВнешнПриходКол;
			ВсегоВнешнРсСум=ВсегоВнешнРсСум+ВнешнРасходСум;
			ВсегоВнешнПрСум=ВсегоВнешнПрСум+ВнешнПриходСум;
			
			ВсегоСтоПерРаб=ВсегоСтоПерРаб+СтоПерРаб;
			
			ВсегоРасходКолПер=ВсегоРасходКолПер+РасходКолПер;
			ВсегоРасходСтоПер=ВсегоРасходСтоПер+РасходСтоПер;
			ВсегоПриходКолПер=ВсегоПриходКолПер+ПриходКолПер;
			ВсегоПриходСтоПер=ВсегоПриходСтоПер+ПриходСтоПер;
			
			ВсегоИнвКол=ВсегоИнвКол+ИнвКол;
			ВсегоИнвСто=ВсегоИнвСто+ИнвСто;
			
			ВсегоСписание=ВсегоСписание+СуммаСписания;
			ВсегоПересорт=ВсегоПересорт+СуммаПересорт;
			ВсегоЗакуп=ВсегоЗакуп+ЗакупСумма;
			ВсегоПрод=ВсегоПрод+ПродСумма;
			
			ВсегоКонРез=ВсегоКонРез+КонРез;
			
			ИтогВозврСумма=ИтогВозврСумма+ВозврСумма;
			ИтогВсегоПродано=ИтогВсегоПродано+ВсегоПродано;
			ИтогКолвоСписания=ИтогКолвоСписания+КолвоСписания;
			ИтогКолвоПересорт=ИтогКолвоПересорт+КолвоПересорт;
			ИтогВсегоЗакуплено=ИтогВсегоЗакуплено+ВсегоЗакуплено;ИтогВсегоЗакупленоКГ=ИтогВсегоЗакупленоКГ+ВесТовара(ВсегоЗакуплено,Товар);
			ИтогВсегоВозврат=ИтогВсегоВозврат+ВсегоВозврат; ИтогВсегоВозвратКГ = ИтогВсегоВозвратКГ+ВесТовара(ВсегоВозврат,Товар);
			
			БазЕд=Запрос.БазоваяЕдиница;
			
			Уровень=?(БезГрупп=0,Формат(" ","С"+(Товар.Уровень()-1)*2+" "),"");
			ТовНаим = ?(  семТекСтрана() = "LT", Товар.НаименованиеLT, Товар.Наименование );
			ТекТовар=Уровень+Запрос.Код+"  "+СокрЛП(ТовНаим);
			
			ВывестиСекции(Таб,"Товар");
			Состояние("В отчет выведено "+ЧислоСтрок+" строк.");
			ЧислоСтрок=ЧислоСтрок+1;
		КонецЦикла;
	КонецЕсли;

    //Начальные и конечные остатки
	ВсегоНачСум=Запрос.НачСум;
	ВсегоКонСум=Запрос.КонСум;
	
	//Внутренние перемещения
	ВсегоВнутрРсСум=Запрос.ВнутрРасхСум;
	ВсегоВнутрПрСум=Запрос.ВнутрПрихСум;
 		
	//Перемещение департамент
	ВсегоВнешнРсСум=Запрос.ВнешнРасхСум;
 	ВсегоВнешнПрСум=Запрос.ВнешнПрихСум;

	//	Списание
	ВсегоСписание=Запрос.СписРасхСум;
                
	//	Пересортица
	ВсегоПересорт=Запрос.ПересРасхСум-Запрос.ПересПрихСум;
	             
	//  Продажа
	ВсегоПрод=Запрос.РасхСто;

	ВсегоПродРест=+Запрос.РасхСтоРестТов;
	Если Константа.СписыватьИнгридиентыВМО.Получить(НачМесяца(ДатаНачала)) = Перечисление.Булево.Да  Тогда
		ВсегоПродРест=ВсегоПродРест+Запрос.РасхСтоРест;	
	КонецЕсли;
    
	//  Возврат
	ВсегоВозвратПост=Запрос.ВозвратПостСто;
	
	//  Возврат
	ИтогВозврСумма=Запрос.ВозвратПрихСум;
	           
	//  Закупка
	ВсегоЗакуп=Запрос.ЗакупСум;

	//  Инвентаризация
	ВсегоИнвСто=Запрос.ИнвРасхСум-Запрос.ИнвПрихСум-Запрос.ВОстПрихСум;
	
	//	Переработка		
	ВсегоРасходСтоПер=Запрос.РасхСтоПер;
	ВсегоПриходСтоПер=Запрос.ПрихСтоПер;
	
	Если Сводная=1 Тогда
		Таб.ВывестиСекцию("Сводная|Основной");
	Иначе
		ВывестиСекции(Таб,"Итоги");
	КонецЕсли;
	      
	// Вывод заполненной формы
	Таб.Опции(0,0,6,0,ПарСтрОтчДлинн);
	Таб.ПовторятьПриПечатиСтроки(5,6);
	Таб.ПараметрыСтраницы(2-Сводная,100,,5,5,5,5,,,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Оборот товаров ","");
	
	//	Сообщить("Конец: "+ТекущееВремя());
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры
//-------------------------------


ДатаНачала=НачМесяца(РабочаяДата());
Если Число(ДатаНачала)=0 Тогда
	ДатаНачала='01.01.00';
Конецесли;
ДатаКонца=РабочаяДата();
БезГрупп=1;
//*******************************************
