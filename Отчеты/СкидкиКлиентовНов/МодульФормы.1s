Функция СпецЦенаКлиенту(пТовар,пЕдиница,Контра,Цена,НаДату, Групповой = 0) Экспорт

	Запрос=СоздатьОбъект("ODBCRecordSet");
	
	ТекстЗапроса="SELECT Товар [Товар $Справочник.Номенклатура]
	|					, Единица [Единица $Справочник.Единицы]
	|			  		, Цена	
	|					, ВидЦены
	|			  FROM (SELECT 1 as ВидЦены -- акция
	|						, :ВыбТовар Товар
	|						, :ВыбЕдиница Единица 
	|						, (SELECT TOP 1 $Рег.Цена*$ПоследнееЗначение.Валюты.Курс($Рег.Валюта,:ДатаСкидки)/$ПоследнееЗначение.Валюты.Курс(:ВалютаДок,:ДатаСкидки) Цена
	|			 			   FROM $Регистр.СпецЦены as Рег (NOLOCK)
	|			  			   WHERE $Рег.ПериодС<=:ДатаСкидки AND $Рег.ПериодПо >= :ДатаСкидки AND $Рег.Товар=:ВыбТовар AND $Рег.Клиент=:ВыбКлиент AND $Рег.Единица=:ВыбЕдиница AND $Рег.ВидЦены = 2 -- акция на период
	|			  			   ORDER BY Рег.DATE_TIME_IDDOC DESC) Цена
	|						, (SELECT TOP 1 $Рег.ПериодС
	|			 			   FROM $Регистр.СпецЦены as Рег (NOLOCK)
	|			  			   WHERE $Рег.ПериодС<=:ДатаСкидки AND $Рег.ПериодПо >= :ДатаСкидки AND $Рег.Товар=:ВыбТовар AND $Рег.Клиент=:ВыбКлиент AND $Рег.Единица=:ВыбЕдиница AND $Рег.ВидЦены = 2 -- акция на период
	|			  			   ORDER BY Рег.DATE_TIME_IDDOC DESC) ПериодС
	|						, (SELECT TOP 1 $Рег.ПериодПо
	|			 			   FROM $Регистр.СпецЦены as Рег (NOLOCK)
	|			  			   WHERE $Рег.ПериодС<=:ДатаСкидки AND $Рег.ПериодПо >= :ДатаСкидки AND $Рег.Товар=:ВыбТовар AND $Рег.Клиент=:ВыбКлиент AND $Рег.Единица=:ВыбЕдиница AND $Рег.ВидЦены = 2 -- акция на период
	|			  			   ORDER BY Рег.DATE_TIME_IDDOC DESC) ПериодПо
	|					 UNION ALL
	|					 SELECT	2 as ВидЦены -- обычная 
	|						,:ВыбТовар Товар
	|						, :ВыбЕдиница Единица 
	|						, (SELECT TOP 1 $Рег.Цена*$ПоследнееЗначение.Валюты.Курс($Рег.Валюта,:ДатаСкидки)/$ПоследнееЗначение.Валюты.Курс(:ВалютаДок,:ДатаСкидки) Цена
	|			 			   FROM $Регистр.СпецЦены as Рег (NOLOCK)
	|			  			   WHERE $Рег.ПериодС<=:ДатаСкидки AND $Рег.Товар=:ВыбТовар AND $Рег.Клиент=:ВыбКлиент AND $Рег.Единица=:ВыбЕдиница AND $Рег.ВидЦены <> 2 -- обычная
	|			  			   ORDER BY Рег.DATE_TIME_IDDOC DESC) Цена
	|						, (SELECT TOP 1 $Рег.ПериодС
	|			 			   FROM $Регистр.СпецЦены as Рег (NOLOCK)
	|			  			   WHERE $Рег.ПериодС<=:ДатаСкидки AND $Рег.Товар=:ВыбТовар AND $Рег.Клиент=:ВыбКлиент AND $Рег.Единица=:ВыбЕдиница AND $Рег.ВидЦены <> 2 -- обычная
	|			  			   ORDER BY Рег.DATE_TIME_IDDOC DESC) ПериодС
	|						, (SELECT TOP 1 $Рег.ПериодПо
	|			 			   FROM $Регистр.СпецЦены as Рег (NOLOCK)
	|			  			   WHERE $Рег.ПериодС<=:ДатаСкидки AND $Рег.Товар=:ВыбТовар AND $Рег.Клиент=:ВыбКлиент AND $Рег.Единица=:ВыбЕдиница AND $Рег.ВидЦены <> 2 -- обычная
	|			  			   ORDER BY Рег.DATE_TIME_IDDOC DESC) ПериодПо
	|					) ТоварыПоСпецЦенам
	|	  		  WHERE ПериодС <= :ДатаСкидки AND ПериодПо >= :ДатаСкидки AND Цена <> 0 
	|			  ORDER BY ВидЦены
	|";
	
	//ТекстЗапроса="SELECT TOP 1 $Рег.Цена Цена, $Рег.Валюта [Валюта $Справочник.Валюты]
	//|			  FROM $Регистр.СпецЦены as Рег
	//|			  WHERE $Рег.ПериодС <= :ДатаСкидки AND $Рег.ПериодПо >= :ДатаСкидки
	//|					AND $Рег.Товар=:ВыбТовар AND $Рег.Клиент=:ВыбКлиент AND $Рег.Единица=:ВыбЕдиница
	//|			  ORDER BY Рег.DATE_TIME_IDDOC DESC
	//|";
	
	Запрос.УстановитьТекстовыйПараметр("ВыбКлиент", Контра);  
	Запрос.УстановитьТекстовыйПараметр("ДатаСкидки", НаДату);
	Запрос.УстановитьТекстовыйПараметр("ВыбТовар", пТовар);
	Запрос.УстановитьТекстовыйПараметр("ВыбЕдиница", пЕдиница);
	Запрос.УстановитьТекстовыйПараметр("ВалютаДок",Рубли);
	
	Табл=СоздатьОбъект("ТаблицаЗначений");
	Табл = Запрос.ВыполнитьИнструкцию(ТекстЗапроса);
	Если Табл.КоличествоСтрок()>0 Тогда
		Табл.ПолучитьСтрокуПоНомеру(1);
//		Цена=Пересчет(Табл.Цена,Табл.Валюта,НаДату,Конт.Валюта,НаДату)/Конт.Коэффициент;
		Цена=Табл.Цена;
		Если Табл.ВидЦены = 1 Тогда
			Возврат ?(Групповой=1,Перечисление.ВидСкидки.СпецЦенаГрупповойКлиентАкция,Перечисление.ВидСкидки.СпецЦенаКлиентАкция);
		Иначе
			Возврат ?(Групповой=1,Перечисление.ВидСкидки.СпецЦенаГрупповойКлиентТовар,Перечисление.ВидСкидки.СпецЦенаКлиентТовар);
		КонецЕсли;
	КонецЕсли;
	
	Если (Групповой=0) И (Контра <> Контра.КлГруппа) Тогда
		Возврат СпецЦенаКлиенту(пТовар,пЕдиница,Контра.КлГруппа,Цена,НаДату,1);
	КонецЕсли;
	
	
КонецФункции


Процедура Сформирровать(Вариант)
	начЛог = семЗаписатьЛогНач( "Отчет", "Скидки клиентов (нов)", "Обработка", "Формирование отчета ("+?(Вариант = 0," по клиентам","по товарам")+")" );
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = "
	|Обрабатывать НеПомеченныеНаУдаление;
	|КлиентСк = Справочник.КлиентСкидки.ТекущийЭлемент;
	|Клиент = Справочник.КлиентСкидки.Владелец;
	|Агент = Справочник.КлиентСкидки.Владелец.Агент;
	|Товар = Справочник.КлиентСкидки.ТовГруппа;
	|КатегорияЦены = Справочник.КлиентСкидки.КатегорияЦены;
	|ПроцентСкидки = Справочник.КлиентСкидки.ПроцентСкидки;";
	Если Вариант = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Группировка Клиент без групп;
		|Группировка Товар без групп;
		|Группировка КатегорияЦены без групп;";
	ИначеЕсли Вариант = 1 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Группировка Товар без групп;
		|Группировка Клиент без групп;
		|Группировка КатегорияЦены без групп;";
	КонецЕсли;

	ТекстЗапроса = ТекстЗапроса + "Условие(ПроцентСкидки > 0);";
	
	таб = СоздатьОбъект( "Таблица" );
	таб.ИсходнаяТаблица( "Таблица" );
	таб.ВывестиСекцию( "Шапка" );
	Если выбКлиент.Выбран()=0 Тогда
	ИначеЕсли выбКлиент.ЭтоГруппа()=1 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие(Клиент в выбКлиент);";
		пУсловие = Шаблон("По группе клиентов [выбКлиент.Код] [выбКлиент]"); таб.ВывестиСекцию( "Условие" );
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие(Клиент = выбКлиент);";
		пУсловие = Шаблон("По клиенту [выбКлиент.Код] [выбКлиент]"); таб.ВывестиСекцию( "Условие" );
	КонецЕсли;
	Если выбТовар.Выбран()=0 Тогда
	ИначеЕсли выбТовар.ЭтоГруппа()=1 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие(Товар в выбТовар);";
		пУсловие = Шаблон("По группе товаров [выбТовар.Код] [выбТовар]"); таб.ВывестиСекцию( "Условие" );
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие(Товар = выбТовар);";
		пУсловие = Шаблон("По товару [выбТовар.Код] [выбТовар]"); таб.ВывестиСекцию( "Условие" );
	КонецЕсли;
	Если выбКатегория.Выбран()=0 Тогда
	ИначеЕсли выбКатегория.ЭтоГруппа()=1 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие(КатегорияЦены в выбКатегория);";
		пУсловие = Шаблон("По группе категорий цен [выбКатегория]"); таб.ВывестиСекцию( "Условие" );
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие(КатегорияЦены = выбКатегория);";
		пУсловие = Шаблон("По категории цен [выбКатегория]"); таб.ВывестиСекцию( "Условие" );
	КонецЕсли;
	Если выбАгент.Выбран()=0 Тогда
	ИначеЕсли выбАгент.ЭтоГруппа()=1 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие(Агент в выбАгент);";
		пУсловие = Шаблон("По группе агентов [выбАгент.Код] [выбАгент]"); таб.ВывестиСекцию( "Условие" );
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие(Агент = выбАгент);";
		пУсловие = Шаблон("По агенту [выбАгент.Код] [выбАгент]"); таб.ВывестиСекцию( "Условие" );
	КонецЕсли;
	
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда Возврат; КонецЕсли;
	
	//табл = СоздатьОбъект( "ТаблицаЗначений" );
	//Запрос.Выгрузить(табл,1,1);
	//табл.ВыбратьСтроку(,табл.КоличествоСтрок());
	пВариант = ?(Вариант = 0,"Клиент / Товар","Товар / Клиент");
	таб.ВывестиСекцию( "ШапкаТаблицы|Знач" );		
	таб.ПрисоединитьСекцию( "ШапкаТаблицы|Процент" );		
	Если флЦенаБаз = 1 Тогда таб.ПрисоединитьСекцию( "ШапкаТаблицы|ЦенаБаз" ); КонецЕсли;
	Если флЦенаСоСк = 1 Тогда таб.ПрисоединитьСекцию( "ШапкаТаблицы|ЦенаСоСк" ); КонецЕсли;
	таб.Опции( 0, 0, таб.ВысотаТаблицы(), 0 );

	Если Вариант = 0 Тогда
		Пока Запрос.Группировка(1) = 1 Цикл
			пКлиент = Шаблон("[Запрос.Клиент.Код] [Запрос.Клиент]");
			таб.ВывестиСекцию( "Клиент0|Знач" );		
			таб.ПрисоединитьСекцию( "Клиент0|Процент" );
			Если флЦенаБаз = 1 Тогда таб.ПрисоединитьСекцию( "Клиент0|ЦенаБаз" ); КонецЕсли;
			Если флЦенаСоСк = 1 Тогда таб.ПрисоединитьСекцию( "Клиент0|ЦенаСоСк" ); КонецЕсли;
			таб.ПрисоединитьСекцию( "Клиент0|Посл" ); 
			Пока Запрос.Группировка(2) = 1 Цикл
				пТовар = Шаблон("[Запрос.Товар.Код] [Запрос.Товар]");
				таб.ВывестиСекцию( "Товар0|Знач" );
				таб.ПрисоединитьСекцию( "Товар0|Процент" );
				Если флЦенаБаз = 1 Тогда таб.ПрисоединитьСекцию( "Товар0|ЦенаБаз" ); КонецЕсли;
				Если флЦенаСоСк = 1 Тогда таб.ПрисоединитьСекцию( "Товар0|ЦенаСоСк" ); КонецЕсли;
				таб.ПрисоединитьСекцию( "Товар0|Посл" ); 
				Пока Запрос.Группировка(3) = 1 Цикл
					пКатегория = Запрос.КатегорияЦены;
					таб.ВывестиСекцию( "Категория|Знач" );
					пПроцент = Запрос.ПроцентСкидки;
					таб.ПрисоединитьСекцию( "Категория|Процент" );
					пЕдиница = Запрос.Товар.БазоваяЕдиницаИзмерения;
					пЦенаБаз = ЦенаТовараПоКатегорииДляТовара(Запрос.Товар,Запрос.КатегорияЦены,Рубли);
					Если флЦенаБаз = 1 Тогда таб.ПрисоединитьСекцию( "Категория|ЦенаБаз" ); КонецЕсли;
					пЦена = пЦенаБаз*(100-пПроцент)/100;
					Если флЦенаСоСк = 1 Тогда таб.ПрисоединитьСекцию( "Категория|ЦенаСоСк" ); КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	Иначе
		Пока Запрос.Группировка(1) = 1 Цикл
			пТовар = Шаблон("[Запрос.Товар.Код] [Запрос.Товар]");
//			пТовар = Запрос.Товар;
			таб.ВывестиСекцию( "Товар1|Знач" );		
			таб.ПрисоединитьСекцию( "Товар1|Процент" );
			Если флЦенаБаз = 1 Тогда таб.ПрисоединитьСекцию( "Товар1|ЦенаБаз" ); КонецЕсли;
			Если флЦенаСоСк = 1 Тогда таб.ПрисоединитьСекцию( "Товар1|ЦенаСоСк" ); КонецЕсли;
			таб.ПрисоединитьСекцию( "Клиент1|Посл" ); 
			Пока Запрос.Группировка(2) = 1 Цикл
				пКлиент = Шаблон("[Запрос.Клиент.Код] [Запрос.Клиент]");
				таб.ВывестиСекцию( "Клиент1|Знач" );
				таб.ПрисоединитьСекцию( "Клиент1|Процент" );
				Если флЦенаБаз = 1 Тогда таб.ПрисоединитьСекцию( "Клиент1|ЦенаБаз" ); КонецЕсли;
				Если флЦенаСоСк = 1 Тогда таб.ПрисоединитьСекцию( "Клиент1|ЦенаСоСк" ); КонецЕсли;
				таб.ПрисоединитьСекцию( "Клиент1|Посл" ); 
				Пока Запрос.Группировка(3) = 1 Цикл
					пТовар = Запрос.Товар;
					пКатегория = Запрос.КатегорияЦены;
					таб.ВывестиСекцию( "Категория|Знач" );
					пПроцент = Запрос.ПроцентСкидки;
					таб.ПрисоединитьСекцию( "Категория|Процент" );
					пЦенаБаз = ЦенаТовараПоКатегорииДляТовара(пТовар,Запрос.КатегорияЦены,Рубли);
					Если флЦенаБаз = 1 Тогда таб.ПрисоединитьСекцию( "Категория|ЦенаБаз" ); КонецЕсли;
					пЦена = пЦенаБаз*(100-пПроцент)/100;
					
					ВидСкидки=СпецЦенаКлиенту(пТовар,пТовар.БазоваяЕдиницаИзмерения,Запрос.Клиент,пЦена,РабочаяДата(),0);
					Если ПустоеЗначение(ВидСкидки)=0 Тогда
						пПроцент = ВидСкидки;
					КонецЕсли;
					
					Если флЦенаСоСк = 1 Тогда таб.ПрисоединитьСекцию( "Категория|ЦенаСоСк" ); КонецЕсли;
					таб.ПрисоединитьСекцию( "Категория|Посл" ); 
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	таб.ТолькоПросмотр( 1 );
	таб.Показать( "" ); 
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры

Процедура ПриНачалеВыбораЗначения(Элем,ФлагСт)
	
	Если Элем="выбАгент" Тогда
		Если ПустоеЗначение(Пользователь.АгентФильтр)=1 Тогда
		ИначеЕсли Пользователь.АгентФильтр.Выбран()=1 Тогда
			ФлагСт=0;
			
			ПромАгент = глВыборАгента(Пользователь.АгентФильтр);
			Если ПустоеЗначение(ПромАгент)=0 Тогда
				ВыбАгент = ПромАгент;
			КонецЕсли;
			//Спр=СоздатьОбъект("Справочник.Сотрудники");
			//Спр.ИспользоватьРодителя(Пользователь.АгентФильтр,0);
			//Если Спр.Выбрать("Выберите агента","ФормаСписка")=1 Тогда
			//	ВыбАгент=Спр.ТекущийЭлемент();
			//КонецЕсли;
		Иначе
			ФлагСт=0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


Процедура ПриОткрытии()
	Если Найти(НазваниеНабораПрав(), "СпециалистПоПродаже")>0 Тогда
		Если ПустоеЗначение( Пользователь.АгентФильтр ) = 1 Тогда 
			Сообщить("В карточке пользователя не указан фильтр для отбора по агенту.","!");
			СтатусВозврата(0); 
			Возврат; 
		КонецЕсли;
		выбАгент = Пользователь.АгентФильтр;
	КонецЕсли;
	
	Если ПустоеЗначение(Форма.Параметр) = 0 Тогда
		Если ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
			СтатусВозврата(0);
			выбКлиент = Форма.Параметр.Получить("Клиент");
			выбТовар = Форма.Параметр.Получить("Товар");
			флЦенаБаз = Форма.Параметр.Получить("ЦенаБаз");
			флЦенаСоСк = Форма.Параметр.Получить("ЦенаСоСк");
			Сформирровать(Форма.Параметр.Получить("Вариант"));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//********************************
//** товары по скидкам без движений
Процедура СформироватьБезДвижений()

	начЛог = семЗаписатьЛогНач( "Отчет", "Скидки клиентов (нов)", "Обработка", "Формирование отчета (товары без движений)" );
	
	Запрос=СоздатьОбъект("ODBCRecordSet");	
	глУдалениеВременнойТаблицыSQL("#СкидкиНаТоварыКлиентам");
	ТекстЗапроса="SELECT $ПоследнееЗначение.КлиентСкидки.ПроцентСкидки(КлиентСкидки.ID, GETDATE()) ПроцентСкидки
	|					, $КлиентСкидки.КатегорияЦены КатегорияЦены 
	|					, Номенклатура.ID Товар
	|					, CASE WHEN $Контрагенты.КлГруппа=$ПустойИД THEN КлиентСкидки.PARENTEXT ELSE $Контрагенты.КлГруппа END Клиент
	|					, КлиентСкидки.ID Ссылка
	|			  INTO #СкидкиНаТоварыКлиентам
	|			  FROM $Справочник.КлиентСкидки AS КлиентСкидки (NOLOCK)
	|		  	  INNER JOIN $Справочник.Номенклатура AS Номенклатура (NOLOCK) ON $КлиентСкидки.ТовГруппа = Номенклатура.ID AND (Номенклатура.ISFOLDER = 2)
	|		  	  INNER JOIN $Справочник.Контрагенты AS Контрагенты (NOLOCK) ON КлиентСкидки.PARENTEXT = Контрагенты.ID
	|   		  WHERE (КлиентСкидки.ISMARK = 0) 
	|";
	
	Если ПустоеЗначение(выбКатегория)=0 Тогда
		ТекстЗапроса = ТекстЗапроса + " AND $КлиентСкидки.КатегорияЦены = :ВыбКатегория";
		Запрос.УстановитьТекстовыйПараметр("ВыбКатегория",выбКатегория);
	КонецЕсли;
	
	Если выбТовар.Выбран()=0 Тогда
	ИначеЕсли выбТовар.ЭтоГруппа()=1 Тогда
		ТекстЗапроса = ТекстЗапроса + " AND Номенклатура.ID IN (SELECT Val FROM #Товары)";
		Запрос.УложитьСписокОбъектов(выбТовар,"#Товары","Номенклатура");
	Иначе
		ТекстЗапроса = ТекстЗапроса + " AND Номенклатура.ID = :ВыбТовар";
		Запрос.УстановитьТекстовыйПараметр("ВыбТовар",выбТовар);
	КонецЕсли;

	Если выбКлиент.Выбран()=0 Тогда
	ИначеЕсли выбКлиент.ЭтоГруппа()=1 Тогда
		ТекстЗапроса = ТекстЗапроса + " AND КлиентСкидки.PARENTEXT IN (SELECT Val FROM #Клиенты)";
		Запрос.УложитьСписокОбъектов(выбКлиент,"#Клиенты","Контрагенты");
	Иначе
		ТекстЗапроса = ТекстЗапроса + " AND КлиентСкидки.PARENTEXT = :ВыбКлиент";
		Запрос.УстановитьТекстовыйПараметр("ВыбКлиент",выбКлиент);
	КонецЕсли;

	Если выбАгент.Выбран()=0 Тогда
	ИначеЕсли выбАгент.ЭтоГруппа()=1 Тогда
		ТекстЗапроса = ТекстЗапроса + " AND $Контрагенты.Агент IN (SELECT Val FROM #Агенты)";
		Запрос.УложитьСписокОбъектов(выбАгент,"#Агенты","Сотрудники");
	Иначе
		ТекстЗапроса = ТекстЗапроса + " AND $Контрагенты.Агент = :ВыбАгент";
		Запрос.УстановитьТекстовыйПараметр("ВыбАгент",выбАгент);
	КонецЕсли;

	Запрос.ВыполнитьСкалярный(ТекстЗапроса);	
	
	ТекстЗапроса="SELECT #СкидкиНаТоварыКлиентам.Товар [Товар $Справочник.Номенклатура]
	|					, #СкидкиНаТоварыКлиентам.Клиент [Клиент $Справочник.Контрагенты]
	|					, #СкидкиНаТоварыКлиентам.КатегорияЦены [КатегорияЦены $Справочник.КатегорииЦен]
	|					, ПроцентСкидки
	|					, #СкидкиНаТоварыКлиентам.Ссылка [Ссылка $Справочник.КлиентСкидки]
	|			  FROM #СкидкиНаТоварыКлиентам
	|			  LEFT JOIN (SELECT COALESCE(КлиентыГруппы.ID,ОборотыТоваровОбороты.Клиент ) Клиент -- привязываем продажи к групповому клиенту если задан
	|								, ОборотыТоваровОбороты.Товар
	|								, SUM(ОборотыТоваровОбороты.КоличествоОборот) КоличествоОборот
	|								, SUM(ОборотыТоваровОбороты.СуммаПродажнаяОборот) СуммаПродажнаяОборот		
	|						FROM $РегистрОбороты.ОборотыТоваров(:НачДата,
	|															,,
	|															INNER JOIN $Справочник.Контрагенты Клиенты (NOLOCK) ON Клиенты.ID=Клиент 
	|															LEFT JOIN $Справочник.Контрагенты КлиентыГруппы (NOLOCK) ON КлиентыГруппы.ID=$Клиенты.КлГруппа
	|															INNER JOIN #СкидкиНаТоварыКлиентам СкТовКл ON СкТовКл.Клиент = CASE WHEN $Клиенты.КлГруппа=$ПустойИД THEN Клиент ELSE $Клиенты.КлГруппа END AND СкТовКл.Товар = Товар,
	|															ВидОперации='-'
	|															,(Клиент,Товар),
	|															(Количество, СуммаПродажная)
	|															) AS ОборотыТоваровОбороты
	|						INNER JOIN $Справочник.Контрагенты Клиенты (NOLOCK) ON Клиенты.ID=ОборотыТоваровОбороты.Клиент 
	|						LEFT JOIN $Справочник.Контрагенты КлиентыГруппы (NOLOCK) ON КлиентыГруппы.ID=$Клиенты.КлГруппа
	|						GROUP BY COALESCE(КлиентыГруппы.ID,ОборотыТоваровОбороты.Клиент ),  ОборотыТоваровОбороты.Товар
	|						) Обороты ON Обороты.Клиент = #СкидкиНаТоварыКлиентам.Клиент AND Обороты.Товар = #СкидкиНаТоварыКлиентам.Товар
	|			  WHERE Обороты.Клиент IS NULL
	|";

	Запрос.УстановитьТекстовыйПараметр("НачДата",НачМесяца(РабочаяДата()-ДнейБезДвижения));
//	Запрос.Отладка(1);
	таблСкидок=СоздатьОбъект("ТаблицаЗначений");
	итТабл=СоздатьОбъект("ИндексированнаяТаблица");	
	Запрос.ВыполнитьИнструкцию(ТекстЗапроса,итТабл);
	итТабл.Выгрузить(таблСкидок);
	итТабл.Группировать("Клиент : *Клиент; Товар : *Товар; КатегорияЦены : *КатегорияЦены","ПроцентСкидки");

	таб = СоздатьОбъект( "Таблица" );
	таб.ИсходнаяТаблица( "ТоварыБезДвижений" );
	таб.ВывестиСекцию( "Шапка" );
	Если выбКлиент.Выбран()=0 Тогда
	ИначеЕсли выбКлиент.ЭтоГруппа()=1 Тогда 
		пУсловие = Шаблон("По группе клиентов [выбКлиент.Код] [выбКлиент]"); таб.ВывестиСекцию( "Условие" );
	Иначе 
		пУсловие = Шаблон("По клиенту [выбКлиент.Код] [выбКлиент]"); таб.ВывестиСекцию( "Условие" );
	КонецЕсли;
	Если выбТовар.Выбран()=0 Тогда
	ИначеЕсли выбТовар.ЭтоГруппа()=1 Тогда 
		пУсловие = Шаблон("По группе товаров [выбТовар.Код] [выбТовар]"); таб.ВывестиСекцию( "Условие" );
	Иначе 
		пУсловие = Шаблон("По товару [выбТовар.Код] [выбТовар]"); таб.ВывестиСекцию( "Условие" );
	КонецЕсли;
	Если выбКатегория.Выбран()=0 Тогда
	ИначеЕсли выбКатегория.ЭтоГруппа()=1 Тогда 
		пУсловие = Шаблон("По группе категорий цен [выбКатегория]"); таб.ВывестиСекцию( "Условие" );
	Иначе 
		пУсловие = Шаблон("По категории цен [выбКатегория]"); таб.ВывестиСекцию( "Условие" );
	КонецЕсли;
	Если выбАгент.Выбран()=0 Тогда
	ИначеЕсли выбАгент.ЭтоГруппа()=1 Тогда 
		пУсловие = Шаблон("По группе агентов [выбАгент.Код] [выбАгент]"); таб.ВывестиСекцию( "Условие" );
	Иначе 
		пУсловие = Шаблон("По агенту [выбАгент.Код] [выбАгент]"); таб.ВывестиСекцию( "Условие" );
	КонецЕсли;

	пУсловие = Шаблон("Без движений: [ДнейБезДвижения] дней"); таб.ВывестиСекцию( "Условие" );
	
	таб.ВывестиСекцию( "ШапкаТаблицы|Знач" );		
	таб.ПрисоединитьСекцию( "ШапкаТаблицы|Процент" );		
	Если флЦенаБаз = 1 Тогда таб.ПрисоединитьСекцию( "ШапкаТаблицы|ЦенаБаз" ); КонецЕсли;
	Если флЦенаСоСк = 1 Тогда таб.ПрисоединитьСекцию( "ШапкаТаблицы|ЦенаСоСк" ); КонецЕсли;
	таб.Опции( 0, 0, таб.ВысотаТаблицы(), 0 );
	итТабл.ВыбратьСтроки();
	Пока итТабл.ПолучитьСтроку() = 1 Цикл
		
		пКлиент = Шаблон("[итТабл.Клиент.Код] [итТабл.Клиент]");
		Состояние("Обрабатывается: "+итТабл.НомерСтроки+"/"+итТабл.КоличествоСтрок()+" - "+пКлиент);
		таб.ВывестиСекцию( "Клиент0|Знач" );		
		таб.ПрисоединитьСекцию( "Клиент0|Процент" );
		Если флЦенаБаз = 1 Тогда таб.ПрисоединитьСекцию( "Клиент0|ЦенаБаз" ); КонецЕсли;
		Если флЦенаСоСк = 1 Тогда таб.ПрисоединитьСекцию( "Клиент0|ЦенаСоСк" ); КонецЕсли;
		таб.ПрисоединитьСекцию( "Клиент0|Посл" ); 
		
		итТаблТовар=итТабл.тзПотомки;
		итТаблТовар.ВыбратьСтроки();
		Пока итТаблТовар.ПолучитьСтроку() = 1 Цикл
			пТовар = Шаблон("[итТаблТовар.Товар.Код] [итТаблТовар.Товар]");
			таб.ВывестиСекцию( "Товар0|Знач" );
			таб.ПрисоединитьСекцию( "Товар0|Процент" );
			Если флЦенаБаз = 1 Тогда таб.ПрисоединитьСекцию( "Товар0|ЦенаБаз" ); КонецЕсли;
			Если флЦенаСоСк = 1 Тогда таб.ПрисоединитьСекцию( "Товар0|ЦенаСоСк" ); КонецЕсли;
			таб.ПрисоединитьСекцию( "Товар0|Посл" ); 
			
			итТаблКат=итТаблТовар.тзПотомки;
			итТаблКат.ВыбратьСтроки();
			Пока итТаблКат.ПолучитьСтроку() = 1 Цикл
				пКатегория = итТаблКат.КатегорияЦены;
				таб.ВывестиСекцию( "Категория|Знач" );
				пПроцент = итТаблКат.ПроцентСкидки;
				таб.ПрисоединитьСекцию( "Категория|Процент" );
				Если флЦенаБаз = 1 Тогда 
					пЦенаБаз = ЦенаТовараПоКатегорииДляТовара(итТаблТовар.Товар,итТаблКат.КатегорияЦены,Рубли);
					таб.ПрисоединитьСекцию( "Категория|ЦенаБаз" ); 
				КонецЕсли;
				
				Если флЦенаСоСк = 1 Тогда 
					Если флЦенаБаз = 0 Тогда 
						пЦенаБаз = ЦенаТовараПоКатегорииДляТовара(итТаблТовар.Товар,итТаблКат.КатегорияЦены);
					КонецЕсли;
					пЦена = пЦенаБаз*(100-пПроцент)/100;
					таб.ПрисоединитьСекцию( "Категория|ЦенаСоСк" ); 
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	таб.ТолькоПросмотр( 1 );
	таб.Показать( "" ); 
	семЗаписатьЛогКон( начЛог );	
	
	Если (семЕстьПраво( "Отчет", "Скидки клиентов", "Удаление скидок без движений" ) = 1) И (таблСкидок.КоличествоСтрок()>0) Тогда
		Если Вопрос("Удалить все скидки?","Да+Нет")="Да" Тогда
			СпрС=СоздатьОбъект("Справочник.КлиентСкидки");
			таблСкидок.ВыбратьСтроки();
			Пока таблСкидок.ПолучитьСтроку() = 1 Цикл
				Состояние(""+таблСкидок.НомерСтроки+"/"+таблСкидок.КоличествоСтрок());
				СпрС.НайтиЭлемент(таблСкидок.Ссылка);
				ОбъектУдалить(СпрС,1);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Форма.выбКлиент.ВыборГруппы(1);
Форма.выбТовар.ВыборГруппы(1);

ДнейБезДвижения=180;