Перем ЗапросЗаказы;

Процедура РасшифровкаПрихода( сп )
	таб = СоздатьОбъект( "Таблица" );
	таб.ИсходнаяТаблица( "Приход" );
	таб.ВывестиСекцию( "Шапка" );		
	таб.Опции( 0, 0, таб.ВысотаТаблицы(), 0 );
	рег = СоздатьОбъект( "Регистр.РезервыТоваров" );
	рег.УстановитьЗначениеФильтра( "Товар", сп.Получить( "Товар" ) );
	рег.УстановитьЗначениеФильтра( "ПоСчету", сп.Получить( "Счет" ) );
	рег.ВыбратьДвижения();
	пТовар = сп.Получить( "Товар" );
	пЕдИзм = сп.Получить( "ЕдИзм" );
	пЗаявка = сп.Получить( "ЗаявкаТовар" );
	таб.ВывестиСекцию( "Товар" );
	Счет = сп.Получить( "Счет" );
	пСчет = Шаблон( "[Счет.ВидЗаявки] [Счет.НомерДок] ([Счет.ДатаДок])" );
	пДатаПост = сп.Получить( "ДатаПост" );
	пЗаявка = сп.Получить( "ЗаявкаСчет" );
	таб.ВывестиСекцию( "Счет" );		
	Пока рег.ПолучитьДвижение() = 1 Цикл
		Док = рег.ТекущийДокумент();
		пДок = Шаблон( "[Док] [Док.НомерДок] ([Док.ДатаДок])" );
		пЗаявка = рег.РезервТовара;
		таб.ВывестиСекцию( "Документ" );		
	КонецЦикла;
	таб.ПараметрыСтраницы(,,,,,,,,,,1,);
	таб.ТолькоПросмотр( 1 );
	таб.Показать( "Заказано у поставщика" );
КонецПроцедуры

//Процедура РасшифровкаПрихода( сп )
//	таб = СоздатьОбъект( "Таблица" );
//	таб.ИсходнаяТаблица( "Приход" );
//	таб.ВывестиСекцию( "Шапка" );		
//	таб.Опции( 0, 0, таб.ВысотаТаблицы(), 0 );
//	док = СоздатьОбъект( "Документ" );
//	док.ВыбратьПодчиненныеДокументы(,, сп.Получить( "Счет" ) );
//	пТовар = сп.Получить( "Товар" );
//	пЕдИзм = сп.Получить( "ЕдИзм" );
//	пЗаявка = сп.Получить( "ЗаявкаТовар" );
//	таб.ВывестиСекцию( "Товар" );
//	Счет = сп.Получить( "Счет" );
//	пСчет = Шаблон( "[Счет.ВидЗаявки] [Счет.НомерДок] ([Счет.ДатаДок])" );
//	пДатаПост = сп.Получить( "ДатаПост" );
//	пЗаявка = сп.Получить( "ЗаявкаСчет" );
//	таб.ВывестиСекцию( "Счет" );		
//	Пока док.ПолучитьДокумент() = 1 Цикл
//		Док = рег.ТекущийДокумент();
//		пДок = Шаблон( "[Док] [Док.НомерДок] ([Док.ДатаДок])" );
//		пЗаявка = рег.РезервТовара;
//		таб.ВывестиСекцию( "Документ" );		
//	КонецЦикла;
//	таб.ТолькоПросмотр( 1 );
//	таб.Показать( "Заказано у поставщика" );
//КонецПроцедуры

Процедура ОбработкаЯчейкиТаблицы( пЗнач, пФлаг, пТаблица, пАдрес )
	Если ТипЗначенияСтр( пЗнач ) = "СписокЗначений" Тогда
		пФлаг = 0;
		РасшифровкаПрихода( пЗнач );
		//сп = СоздатьОбъект( "СписокЗначений" );
		//сп.ДобавитьЗначение( 1, "Приходные документы... " );
		//сп.ДобавитьЗначение( 2, "Расходные документы... " );
		//выб = ""; Если сп.ВыбратьЗначение( выб,,,, 1 ) <> 1 Тогда Возврат; КонецЕсли;
		//Если выб = 1 Тогда РасшифровкаПрихода( пЗнач );
		//ИначеЕсли выб = 2 Тогда РасшифровкаРасхода( пЗнач );
		//КонецЕсли;
	Иначе
		пФлаг = 1;
	КонецЕсли;
	//Если Прав( пАдрес, 2 ) = "C7" Тогда
	//	пФлаг = 0;
	//	Если пЗнач.Вид() = "Контрагенты" Тогда
	//		РасшифровкаЗаказа( пЗнач );
	//	ИначеЕсли пЗнач.Вид() = "Номенклатура" Тогда
	//		РасшифровкаЗаказа( пЗнач.Поставщик, пЗнач );
	//	КонецЕсли;
	//Иначе
	//	пФлаг = 1;
	//КонецЕсли;
КонецПроцедуры

Функция ПредставлениеУсловия()
	стр = "";
	Если выбКлиент.Выбран() = 1 Тогда
		Если выбКлиент.ЭтоГруппа() = 1 Тогда 
			стр = стр + "По группе клиентов """ + Шаблон( "[выбКлиент.Код] [выбКлиент]") + """. ";
		Иначе
			стр = стр + "По клиенту """ + Шаблон( "[выбКлиент.Код] [выбКлиент]") + """. ";
		КонецЕсли;
	КонецЕсли;
	Если выбАгент.Выбран() = 1 Тогда
		Если выбАгент.ЭтоГруппа() = 1 Тогда
			стр = стр + "По группе агентов """ + Шаблон( "[выбАгент.Код] [выбАгент]") + """. ";
		Иначе
			стр = стр + "По агенту """ + Шаблон( "[выбАгент.Код] [выбАгент]") + """. ";
		КонецЕсли;
	КонецЕсли;
	Возврат стр;
КонецФункции

Функция ЗапросПоРезервам() 
	
	Запрос=СоздатьОбъект("ODBCRecordSet");
	ТекстЗапроса = "SELECT $ДокС.ДатаПоставки ДатаПоставки,
	|					   Рег.Товар [Товар $Справочник.Номенклатура],
	|					   Рег.ПоСчету [Счет $Документ.Счет],
	|					   $ДокС.Клиент [Клиент $Справочник.Контрагенты],
	|					   $ДокС.Агент [Агент $Справочник.Сотрудники],	
	|					   Рег.ЗаказаноОстаток Резерв 
	|				FROM $РегистрОстатки.СпецЗаказы(,INNER JOIN $Документ.Счет ДокС (NOLOCK) ON ДокС.IDDOC=ПоСчету
	|													  INNER JOIN $Справочник.Контрагенты СпрК (NOLOCK) ON СпрК.ID=$ДокС.Клиент
	|													  INNER JOIN $Справочник.Сотрудники СпрА (NOLOCK) ON СпрА.ID=$ДокС.Агент
	|													  INNER JOIN $Справочник.Номенклатура СпрН (NOLOCK) ON СпрН.ID=Товар
	|													  LEFT JOIN $Справочник.Контрагенты СпрП (NOLOCK) ON СпрП.ID=$СпрН.Поставщик
	|													,";
	                                    
	ТекстЗапроса = ТекстЗапроса + "($ДокС.ВидЗаявки = :СпецЗаказ) AND ($ДокС.ДатаПоставки BETWEEN :ДатаПостС AND :ДатаПостПо)";
//	ТекстЗапроса = ТекстЗапроса + "($ДокС.ВидЗаявки = :СпецЗаказ) ";
	Запрос.УстановитьТекстовыйПараметр("СпецЗаказ",Перечисление.ВидыЗаявок.СпецЗаказ);
	Запрос.УстановитьТекстовыйПараметр("ДатаПостС",ДатаПостС);
	Запрос.УстановитьТекстовыйПараметр("ДатаПостПо",ДатаПостПо);
	
	ЕстьПредУсловие=1;
	Если выбПоставщик.Выбран() = 1 Тогда
		Если ЕстьПредУсловие=1 Тогда
			ТекстЗапроса = ТекстЗапроса	+ " AND ";
		КонецЕсли;

		Если выбПоставщик.ЭтоГруппа() = 1 Тогда 
			ТекстЗапроса = ТекстЗапроса + "( СпрП.ID IN (SELECT Val FROM #Поставщики))";
			Запрос.УложитьСписокОбъектов(выбПоставщик,"#Поставщики","Контрагенты");
		Иначе 
			ТекстЗапроса = ТекстЗапроса + "( СпрП.ID = :ВыбПоставщик )";
			Запрос.УстановитьТекстовыйПараметр("ВыбПоставщик",выбПоставщик);
		КонецЕсли;
		
		ЕстьПредУсловие=1;
		
	КонецЕсли;    
	                  
	Если выбКлиент.Выбран() = 1 Тогда
		Если ЕстьПредУсловие=1 Тогда
			ТекстЗапроса = ТекстЗапроса	+ " AND ";
		КонецЕсли;
		
		Если выбКлиент.ЭтоГруппа() = 1 Тогда 
			ТекстЗапроса = ТекстЗапроса + "( СпрК.ID IN (SELECT Val FROM #Клиенты))";
			Запрос.УложитьСписокОбъектов(выбКлиент,"#Клиенты","Контрагенты");
		Иначе 
			ТекстЗапроса = ТекстЗапроса + "( СпрК.ID = :ВыбКлиент )";
			Запрос.УстановитьТекстовыйПараметр("ВыбКлиент",выбКлиент);
		КонецЕсли;
		
		ЕстьПредУсловие=1;
	КонецЕсли;
	
	Если выбАгент.Выбран() = 1 Тогда
		
		Если ЕстьПредУсловие=1 Тогда
			ТекстЗапроса = ТекстЗапроса	+ " AND ";
		КонецЕсли;
		
		Если выбАгент.ЭтоГруппа() = 1 Тогда 
			ТекстЗапроса = ТекстЗапроса + "( СпрА.ID IN (SELECT Val FROM #Агенты)) ";
			Запрос.УложитьСписокОбъектов(выбАгент,"#Агенты","Сотрудники");
		Иначе 
			ТекстЗапроса = ТекстЗапроса + "( СпрА.ID = :ВыбАгент )";
			Запрос.УстановитьТекстовыйПараметр("ВыбАгент",выбАгент);
		КонецЕсли;
	КонецЕсли;
                     
	ТекстЗапроса = ТекстЗапроса +",(Товар,ПоСчету)
	|							  ,Заказано
	|							) as Рег
	|INNER JOIN $Документ.Счет ДокС (NOLOCK) ON ДокС.IDDOC=Рег.ПоСчету
	|INNER JOIN $Справочник.Контрагенты СпрК (NOLOCK) ON СпрК.ID=$ДокС.Клиент
	|INNER JOIN $Справочник.Сотрудники СпрА (NOLOCK) ON СпрА.ID=$ДокС.Агент
	|INNER JOIN $Справочник.Номенклатура СпрН (NOLOCK) ON СпрН.ID=Рег.Товар
	|";
	
	
	//ТекстЗапроса2 = "
	//|ДатаПоставки = Регистр.РезервыТоваров.ПоСчету.ДатаПоставки;
	//|Товар = Регистр.РезервыТоваров.Товар;
	//|Поставщик = Регистр.РезервыТоваров.Товар.Поставщик;
	//|Счет = Регистр.РезервыТоваров.ПоСчету;
	//|ВидЗаявки = Регистр.РезервыТоваров.ПоСчету.ВидЗаявки;
	//|НомерДок = Регистр.РезервыТоваров.ПоСчету.НомерДок;
	//|ДатаДок = Регистр.РезервыТоваров.ПоСчету.ДатаДок;
	//|Клиент = Регистр.РезервыТоваров.ПоСчету.Клиент;
	//|Агент = Регистр.РезервыТоваров.ПоСчету.Клиент.Агент;
	//|Резерв = Регистр.РезервыТоваров.РезервТовара;
	//|Функция фПриход = Приход( Резерв );
	//|Функция фРезерв = КонОст( Резерв );
	//|Группировка Клиент без групп;
	//|Группировка Товар без групп;
	//|Группировка Счет;
	//|Условие ( ВидЗаявки = пСпецЗаказ );
	//|Условие ( ДатаПоставки >= ДатаПостС );
	//|Условие ( ДатаПоставки <= ДатаПостПо );";       
	//Если выбПоставщик.Выбран() = 1 Тогда
	//	Если выбПоставщик.ЭтоГруппа() = 1 Тогда ТекстЗапроса2 = ТекстЗапроса2 + "
	//		|Условие ( Поставщик в выбПоставщик );";
	//	Иначе ТекстЗапроса2 = ТекстЗапроса2 + "
	//		|Условие ( Поставщик = выбПоставщик );";
	//	КонецЕсли;
	//КонецЕсли;
	//Если выбКлиент.Выбран() = 1 Тогда
	//	Если выбКлиент.ЭтоГруппа() = 1 Тогда ТекстЗапроса2 = ТекстЗапроса2 + "
	//		|Условие ( Клиент в выбКлиент );";
	//	Иначе ТекстЗапроса = ТекстЗапроса + "
	//		|Условие ( Клиент = выбКлиент );";
	//	КонецЕсли;
	//КонецЕсли;
	//Если выбАгент.Выбран() = 1 Тогда
	//	Если выбАгент.ЭтоГруппа() = 1 Тогда ТекстЗапроса2 = ТекстЗапроса2 + "
	//		|Условие ( Агент в выбАгент );";
	//	Иначе ТекстЗапроса = ТекстЗапроса + "
	//		|Условие ( Агент = выбАгент );";
	//	КонецЕсли;
	//КонецЕсли;             
	                             
	Табл=СоздатьОбъект("ИндексированнаяТаблица");
	//Запрос.Отладка(1);
	Запрос.ВыполнитьИнструкцию(ТекстЗапроса,Табл);
	
	Возврат Табл;
	
КонецФункции

Процедура Сформировать()
	начЛог = семЗаписатьЛогНач( "Отчет", "Отчет по спецзакам", "Обработка", "Формирование отчета" );
	// переменные для запроса
	пЭлектроннаяЗаявка = Перечисление.ВидыЗаявок.ЭлектроннаяЗаявка;
	пСпецЗаказ = Перечисление.ВидыЗаявок.СпецЗаказ;
	
	нач = ТекущееВремя();
	ЗапросРезервы = СоздатьОбъект( "Запрос" );                                                
	
	Табл=ЗапросПоРезервам();//индексированная
	
	//Если ЗапросРезервы.Выполнить( ТекстЗапросаПоРезервам() ) = 0 Тогда Возврат; КонецЕсли;  
	//Сообщить( "ЗапросЗаявки "+семПрошлоВремени( нач, ТекущееВремя() ) );
	
	//нач = ТекущееВремя();
	//ЗапросПриход = СоздатьОбъект( "Запрос" );
	//Если ЗапросПриход.Выполнить( ТекстЗапросаПоПриходам() ) = 0 Тогда Возврат; КонецЕсли;  
	//Сообщить( "ЗапросЗаявки "+семПрошлоВремени( нач, ТекущееВремя() ) );

	//табл = СоздатьОбъект( "ТаблицаЗначений" );
	//ЗапросПриход.Выгрузить( табл, 1, 1 );
	//табл.ВыбратьСтроку();
	
	таб = СоздатьОбъект( "Таблица" );
	таб.ИсходнаяТаблица( "Таблица" );
	
	пПериод = Шаблон( "На дату поставки с [ДатаПостС] по [ДатаПостПо]." );
	пУсловие = ПредставлениеУсловия();
	таб.ВывестиСекцию( "Заголовок" );		
	таб.ВывестиСекцию( "Шапка" );		
	таб.Опции( 0, 0, таб.ВысотаТаблицы(), 0 );
	
	Всего = табл.КоличествоСтрок(); 
	
	спРасшифровки = СоздатьОбъект( "СписокЗначений" );
	НомСтр = 0;
	Табл.Группировать("*Клиент : Клиент;*Товар : Товар; *Счет : Счет","Резерв");
//	Табл.ВыбратьСтроку();
//	Возврат;
	                       
	Табл.ВыбратьСтроки();
	Пока Табл.ПолучитьСтроку()=1 Цикл
//	Пока ЗапросРезервы.Группировка( "Клиент" ) = 1 Цикл

		пКлиент = Табл.Клиент;
		таб.ВывестиСекцию( "Клиент" );		
		
		ТаблТ=Табл.тзПотомки;
		ТаблТ.ВыбратьСтроки();
		Пока ТаблТ.ПолучитьСтроку()=1 Цикл 
			НомСтр = НомСтр + 1;
			пТовар = ТаблТ.Товар;
			пЕдИзм = пТовар.БазоваяЕдиницаИзмерения; 
			пЗаявка = ТаблТ.Резерв;
			спРасшифровки.Установить( "Товар", пТовар );
			спРасшифровки.Установить( "ЕдИзм", пЕдИзм );
			спРасшифровки.Установить( "ЗаявкаТовар", пЗаявка );
			таб.ВывестиСекцию( "Товар" );	
			
			ТаблС=ТаблТ.тзПотомки;
			ТаблС.ВыбратьСтроки();
			Пока ТаблС.ПолучитьСтроку()=1 Цикл
				НомСтр=НомСтр+1;
				Состояние( "Обработано "+Окр( НомСтр / Всего * 100 )+"% строк отчета." );
				
				Счет=ТаблС.Счет;
				пДок = Шаблон( "[Счет.ВидЗаявки] [Счет.НомерДок] ([Счет.ДатаДок])" );
				пДатаПост = ТаблС.ДатаПоставки;
				пЗаявка = ТаблС.Резерв;
				спРасшифровки.Установить( "Счет", ТаблС.Счет );
				спРасшифровки.Установить( "ДатаПост", пДатаПост );
				спРасшифровки.Установить( "ЗаявкаСчет", пЗаявка );
				таб.ВывестиСекцию( "Документ" );		
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	таб.ПараметрыСтраницы(,,,,,,,,,,1,);
	таб.ТолькоПросмотр( 1 );
	таб.Показать( "Отчет по спец. заказам" );
	семЗаписатьЛогКон( начЛог );	
	//Сообщить( семПрошлоВремени( нач, ТекущееВремя() ) );
КонецПроцедуры

выбПоставщик.ВыборГруппы( 1 );
выбКлиент.ВыборГруппы( 1 );
выбАгент.ВыборГруппы( 1 );