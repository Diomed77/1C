//***********************
Процедура ПриОткрытии()
	                   
	//Если НазваниеНабораПрав() = "Просмотр" Тогда 
		//Форма.кнПровести.Видимость(0);
		//Форма.кнПровестиМарочный.Видимость(0);
		//Форма.кнСформировать.Видимость(0); 
		//Форма.кнОтрицательные.Видимость(0);
		//Форма.Кратко.Видимость(0);
		//Форма.чМарОтчетМинус.Видимость(0);
		//Форма.рамкасистем.Видимость(0);
	//КонецЕсли;
КонецПроцедуры
//-----------------------
Процедура НаличностьНовый(Режим)
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса =
	"//{{ЗАПРОС(Наличность)
	|Период с ДатаОтчета по ДатаКонца;
	|Валюта = Регистр.Касса.Валюта; 
	|Касса = Регистр.Касса.Касса;
	|Сум = Регистр.Касса.Наличность;
	|Док=Регистр.Касса.ТекущийДокумент;
	|Статья=Регистр.Касса.Статья;
	|Группировка Валюта упорядочить по Валюта.Наименование; 
	|Группировка Касса;
	|Группировка Статья упорядочить по Статья.Код;
	|";//}}ЗАПРОС
	Если Режим = "Подробно" Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Группировка Док;";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|Функция НОст = НачОст(Сум);
	|Функция КОст = КонОст(Сум);
	|Функция ПрихСумм = Приход(Сум);
	|Функция РасхСумм = Расход(Сум);
	|"//}}ЗАПРОС
	;
	Если ВыбВалюта.Выбран()=0 Тогда
		Заг = "По всем валютам";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "Условие (Валюта = ВыбВалюта);";
		Заг = "По валюте " + ВыбВалюта.Наименование;
	КонецЕсли;
	
	Если ВыбКасса.Выбран()=0 Тогда
		Заг = "По всем кассам";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "Условие (Касса = ВыбКасса);";
		Заг = "По кассе " + ВыбКасса.Наименование;
	КонецЕсли;
	
	Если ВыбСтатья.Выбран()=0 Тогда
		Заг = Заг+",  по всем статьям прихода-расхода";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "Условие (Статья = ВыбСтатья);";
		Заг = ",  по статье " + ВыбСтатья.Наименование;
	КонецЕсли;
	
	
	Если Запрос.Выполнить(ТекстЗапроса) = 0 тогда
		Возврат;
	КонецЕсли;
	
	ЧислоСтрок=0;
	//  Создание Таблицы для выходного отчета
	Рег1=СоздатьОбъект("Регистр.Касса");
	Таб=СоздатьОбъект("Таблица");
	//Таб.ИсходнаяТаблица("ВалютаыПоПериодам");
	Таб.ВывестиСекцию("Отчет");
	Оживить(4);
	Пока Запрос.Группировка("Валюта") = 1 Цикл
		Таб.ВывестиСекцию("Валюта");
		Оживить(1);
		Пока Запрос.Группировка("Касса")=1 Цикл    
			Таб.ВывестиСекцию("Касса");			
			Оживить(1);
			Пока Запрос.Группировка("Статья") = 1 Цикл    
				Если Запрос.Статья.Наименование="" Тогда
					НаимСтатья="Статья не определена";
				Иначе
					НаимСтатья=Запрос.Статья.Наименование;    
				КонецЕсли;	
				Таб.ВывестиСекцию("Статья");
				Оживить(1);
				Если Режим="Подробно" Тогда
					Пока Запрос.Группировка("Док") = 1 цикл
						Док=Запрос.Док;
						Если Док.Выбран()=0 Тогда
							Продолжить;
						КонецЕсли;
						Если Запрос.ПрихСумм<>0 Тогда
							Нал=Запрос.ПрихСумм;
							Если Запрос.Док.Вид()<>"АвансовыйОтчет" Тогда
								Докс=""+Док.Вид()+" № "+Док.НомерДок+" от "+Док.ДатаДок+" "+СокрЛП(Док.Клиент)+" "+СокрЛП(Док.Основание);
							Иначе
								Докс=""+Док.Вид()+" № "+Док.НомерДок+" от "+Док.ДатаДок+" "+СокрЛП(Док.Основание);
							КонецЕсли;
							Таб.ВывестиСекцию("Приход");
						КонецЕсли;
						Если Запрос.РасхСумм<>0 Тогда
							Нал=Запрос.РасхСумм; 
							Если Запрос.Док.Вид()<>"АвансовыйОтчет" Тогда
								Докс=""+Док.Вид()+" № "+Док.НомерДок+" от "+Док.ДатаДок+" "+СокрЛП(Док.Клиент)+" "+СокрЛП(Док.Основание);
							Иначе
								Докс=""+Док.Вид()+" № "+Док.НомерДок+" от "+Док.ДатаДок+" "+СокрЛП(Док.Основание);
							КонецЕсли;
							Таб.ВывестиСекцию("Расход");
						КонецЕсли;
						Оживить(1);
					КонецЦикла;
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
		
	КонецЦикла;
	
	//Вызов выходного отчета в окно просмотра и редактирования.
	Таб.Опции(0,0,4,0,ПарСтрОтчДлинн);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Упр. наличность в Кассе","");
	
КонецПроцедуры  


//*************************************************
Процедура Наличность(Режим)
	начЛог = семЗаписатьЛогНач( "Отчет", "Упр. отчет по кассе", "Обработка", Шаблон("Формирование отчета ([Режим])") );
	Запрос=СоздатьОбъект("Запрос");
	ТекстЗапроса="Period from {ДатаОтчета}";
	IF ДатаКонца>=ПолучитьДатуТА() THEN
		ДатаКонца=ПолучитьДатуТА();
		ТекстЗапроса=ТекстЗапроса+";" ;
	ELSE
		ТекстЗапроса=ТекстЗапроса+" till {ДатаКонца};";
	ENDIF;
	ТекстЗапроса=ТекстЗапроса+"
	|Валюта=Регистр.Касса.Валюта;
	|Касса=Регистр.Касса.Касса;
	|Док=Регистр.Касса.ТекущийДокумент;
	|Сум=Регистр.Касса.Наличность;";
	
	Если ВыбВалюта.Выбран()=0 Тогда
		//Без условий
		Заг="Pa visўm valutўm.";
	Иначе
		ТекстЗапроса=ТекстЗапроса+"Условие (Валюта={ВыбВалюта});";
		Заг="Valuta "+ВыбВалюта.Наименование;
	КонецЕсли;     
	
	
	ТекстЗапроса=ТекстЗапроса+"
	|Группировка Валюта упорядочить по Валюта.Наименование; 
	|Группировка Касса;";
	
	Если Режим = "Подробно" Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Группировка Док;";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|Функция НОст=НачОст(Сум);
	|Функция КОст=КонОст(Сум);
	|Функция Прих=Приход(Сум);
	|Функция Расх=Расход(Сум);
	|";  
	
	Если ВыбКасса.Выбран()=0 Тогда
		Заг = "По всем кассам";
	ИначеЕсли ВыбКасса.ЭтоГруппа()=1 Тогда
		ТекстЗапроса = ТекстЗапроса + "Условие (Касса в ВыбКасса);";
		Заг = "По группе касс " + ВыбКасса.Наименование;
	Иначе
		ТекстЗапроса = ТекстЗапроса + "Условие (Касса = ВыбКасса);";
		Заг = "По кассе " + ВыбКасса.Наименование;
	КонецЕсли;
	
	Флаг=Запрос.Выполнить(ТекстЗапроса);
	Если Флаг=0 тогда
		Возврат;
	КонецЕсли;
	
	ЧислоСтрок=0;
	//  Создание Таблицы для выходного отчета
	Рег1=СоздатьОбъект("Регистр.Касса");
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Наличность");
	Таб.ВывестиСекцию("Отчет");
	Оживить(4);
	Пока Запрос.Группировка("Валюта") = 1 Цикл
		Таб.ВывестиСекцию("Валюта");
		Оживить(1);
		Пока Запрос.Группировка("Касса")=1 Цикл    
			Таб.ВывестиСекцию("Касса");			
			Оживить(1);
			
			Если Режим="Подробно" Тогда
				
				Пока Запрос.Группировка("Док") = 1 цикл
					Док=Запрос.Док;
					Если Док.Выбран()=0 Тогда
						Продолжить;
					КонецЕсли;
					
					Если Запрос.Прих<>0 Тогда
						Нал=Запрос.Прих;
						Таб.ВывестиСекцию("Приход");
					ИначеЕсли Запрос.Расх<>0 Тогда
						Нал=Запрос.Расх;
						Таб.ВывестиСекцию("Расход");
					КонецЕсли;
					Оживить(1);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	//		Если ФлагДиаграммы=1 Тогда
	//			Таб.ВывестиСекцию("Диаграмма");
	//		КонецЕсли;
	
	//Вызов выходного отчета в окно просмотра и редактирования.
	Таб.Опции(0,0,4,0,ПарСтрОтчДлинн);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Наличность в Кассе","");
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры


//*******************************************
// Процедура генерации запроса ПоНаловым.
//
//Процедура ПоНаловым(ПровестиДоки=0,Марочный=0)
//	Перем Запрос, ТекстЗапроса,Час,Минут,Сек,ПредДок,тзКассовыхДокументов;
//	//Создание объекта типа Запрос  
//	глРаботаетКассовыйОтчет = 1;
//	Запрос = СоздатьОбъект("Запрос");
//	ТекстЗапроса = 
//	"//{{ЗАПРОС(ПоНаловым)
//	|Период с ДатаОтчета по ДатаКонца;
//	|ОбрабатыватьДокументы все;
//	|Обрабатывать НеПомеченныеНаУдаление;
//	|Склад = Документ.РасходнаяНакладнаяНал.Склад;
//	|Касса = Документ.РасходнаяНакладнаяНал.ККМ;
//	|ВремяПродажи = Документ.РасходнаяНакладнаяНал.ВремяПродажи;
//	|ВидПлатежа = Документ.РасходнаяНакладнаяНал.ВидПлатежа;
//	|Получено = Документ.РасходнаяНакладнаяНал.Получено, Документ.РасходнаяНакладнаяНал.ПолученоКарта;
//	|ПолученоКарта = Документ.РасходнаяНакладнаяНал.ПолученоКарта;
//	|ПолученоПодарочнаяКарта = Документ.РасходнаяНакладнаяНал.ПолученоПодарочнаяКарта;
//	|Всего = Документ.РасходнаяНакладнаяНал.Всего;
//	|Функция ВсегоСумма = Сумма(Всего);
//	//	|Функция ПолученоСумма = Сумма(Получено);
//	|Группировка Касса упорядочить по Касса.НомерОтдела;
//	|Группировка ВидПлатежа;
//	|Группировка ВремяПродажи;
//	|Группировка Документ;
//	|"//}}ЗАПРОС
//	;                    
//	
//	ТекстЗапросаПрод = 
//	"//{{ЗАПРОС(СписокПроданныхТоваров)
//	|Склад = Документ.МарочныйОтчет.Склад, Документ.РасходнаяНакладнаяНал.Склад;
//	|Валюта = Документ.МарочныйОтчет.Валюта, Документ.РасходнаяНакладнаяНал.Валюта;
//	|Курс = Документ.МарочныйОтчет.Курс, Документ.РасходнаяНакладнаяНал.Курс;
//	|Клиент = Документ.МарочныйОтчет.Клиент, Документ.РасходнаяНакладнаяНал.Клиент;
//	|Касса = Документ.МарочныйОтчет.Касса, Документ.РасходнаяНакладнаяНал.ККМ;
//	|Товар = Документ.РасходнаяНакладнаяНал.Товар, Документ.МарочныйОтчет.Товар;
//	|Количество = Документ.РасходнаяНакладнаяНал.Количество, Документ.МарочныйОтчет.Количество;
//	|Коэффициент = Документ.РасходнаяНакладнаяНал.Коэффициент, Документ.МарочныйОтчет.Коэффициент;
//	|Единица = Документ.РасходнаяНакладнаяНал.Единица, Документ.МарочныйОтчет.Единица;
//	|ВидТовара = Документ.МарочныйОтчет.Товар.ВидТовара, Документ.РасходнаяНакладнаяНал.Товар.ВидТовара;
//	|Функция КолСум = Сумма(Количество*Коэффициент);
//	|Группировка Товар без упорядочивания без групп;
//	|";//}}ЗАПРОС
//	
//	
//	Если ВыбКасса.Выбран()=0 Тогда
//		Заг = "По всем кассам";
//	ИначеЕсли ВыбКасса.ЭтоГруппа()=1 Тогда
//		ТекстЗапроса = ТекстЗапроса + "Условие (Касса в ВыбКасса);";
//		ТекстЗапросаПрод = ТекстЗапросаПрод + "Условие (Касса в ВыбКасса);";
//		Заг = "По группе касс " + ВыбКасса.Наименование;
//	Иначе
//		ТекстЗапроса = ТекстЗапроса + "Условие (Касса = ВыбКасса);";
//		ТекстЗапросаПрод = ТекстЗапросаПрод + "Условие (Касса = ВыбКасса);";
//		Заг = "По кассе " + ВыбКасса.Наименование;
//	КонецЕсли;
//	
//	// Подготовка к заполнению выходных форм данными запроса
//	//  Док=СоздатьОбъект("Документ.РасходнаяНакладнаяНал");
//	Док=СоздатьОбъект("Документ");
//	глНуженСписокТоваров=1;
//	глСписокТоваров.УдалитьСтроки();
//	
//	ПервыйДок=1;
//	Если (ПровестиДоки=1)и(Марочный = 1) Тогда
//		
//		тзКассовыхДокументов = СоздатьОбъект("ТаблицаЗначений");
//		тзКассовыхДокументов.НоваяКолонка("Док");
//		
//		Если МонопольныйРежим()=1 Тогда
//			Константа.РегистрацияИзменений=0;
//			
//			Док.ВыбратьДокументы(ДатаОтчета,ДатаКонца);
//			Пока Док.ПолучитьДокумент()=1 Цикл         
//				Если Док.Вид() <> "РасходнаяНакладнаяНал" Тогда   
//					Продолжить;           
//				КонецЕсли; 
//				Если Док.ПометкаУдаления() = 1 Тогда   
//					Продолжить;           
//				КонецЕсли;
//				Если Лев(СокрЛП(Док.ККМ.Наименование),7) <> "CHD POS" Тогда
//					Продолжить;
//				КонецЕсли;
//				Если ВыбКасса.Выбран()=1 Тогда
//					Если ВыбКасса.ЭтоГруппа()=1 Тогда
//						Если Док.ККМ.ПринадлежитГруппе(ВыбКасса)=0 тогда
//							Продолжить;
//						КонецЕсли;                                      
//					Иначе
//						Если Док.ККМ<>ВыбКасса тогда
//							Продолжить;
//						КонецЕсли;                                      
//					КонецЕсли;
//				КонецЕсли;
//				
//				Док.СделатьНеПроведенным(); 
//				Док.ПолучитьВремя(Час,Минут,Сек);
//				Если (Час <> 22)или(Минут <> 17)или(Сек <> 0) Тогда
//					тзКассовыхДокументов.НоваяСтрока();
//					тзКассовыхДокументов.Док = Док.ТекущийДокумент();
//				КонецЕсли;
//			КонецЦикла;				
//			
//		КонецЕсли; 
//		
//		Если тзКассовыхДокументов.КоличествоСтрок() > 0 Тогда
//			НайденныйДок = СоздатьОбъект("Документ.РасходнаяНакладнаяНал");
//			тзКассовыхДокументов.ВыбратьСтроки();
//			Пока тзКассовыхДокументов.ПолучитьСтроку() = 1 Цикл
//				тзКассовыхДокументов.Док.ТекущийДокумент().ПолучитьВремя(Час,Минут,Сек);
//				Если (Час <> 22)или(Минут <> 17)или(Сек <> 0) Тогда  
//					Если НайденныйДок.НайтиДокумент(тзКассовыхДокументов.Док) = 1 Тогда 
//						НайденныйДок.УстановитьВремя(22,17,00); 
//						НайденныйДок.Записать();
//					Иначе
//						Сообщить("Документ небыл найден "+тзКассовыхДокументов.Док);
//						Возврат;
//					КонецЕсли;
//				КонецЕсли;			
//			КонецЦикла;
//		КонецЕсли;
//		
//		Док.УстановитьФильтр(0,1);
//		
//		Док.ВыбратьДокументы(ДатаОтчета,ДатаКонца);
//		Пока Док.ПолучитьДокумент()=1 Цикл
//			
//			Если Док.ПометкаУдаления()=1 Тогда
//				Продолжить;
//			КонецЕсли;
//			Док.ПолучитьВремя(Час,Минут,Сек);
//			Если (Час <> 22)или(Минут <> 17)или(Сек <> 0) Тогда			
//				Продолжить;	
//			КонецЕсли;
//			Если Док.Вид() = "РасходнаяНакладнаяНал" Тогда
//				Если ВыбКасса.Выбран()=1 Тогда
//					Если ВыбКасса.ЭтоГруппа()=1 Тогда
//						Если Док.ККМ.ПринадлежитГруппе(ВыбКасса)=0 тогда
//							Продолжить;
//						КонецЕсли;                                      
//					Иначе
//						Если Док.ККМ<>ВыбКасса тогда
//							Продолжить;
//						КонецЕсли;                                      
//					КонецЕсли;
//				КонецЕсли;
//			КонецЕсли;
//			Сообщить("Обработан: "+Док+" "+Док.ДатаДок);
//			Попытка   
//				Если МонопольныйРежим()=1 Тогда
//					Час_=0;
//					Док.ПолучитьВремя(Час_,,);
//					Если Час_<22 Тогда 
//						УстановитьТАНа(Док.ТекущийДокумент()); 
//					ИначеЕсли ПервыйДок=1 Тогда
//						УстановитьТАНа(Док.ТекущийДокумент()); 
//						ПервыйДок=0;
//					КонецЕсли;
//				КонецЕсли;   
//				глРазрОтрицОстатки=Да;
//				Если Док.Вид() <> "РасходнаяНакладнаяНал" Тогда
//					Если Док.Проведен() = 1 Тогда 
//						Док.Провести();	
//					КонецЕсли;
//				Иначе
//					Док.Провести();
//				КонецЕсли;
//				
//				глРазрОтрицОстатки=Нет;
//			Исключение                                             
//				глРазрОтрицОстатки=Нет;
//			КонецПопытки;
//		КонецЦикла;
//	КонецЕсли;
//	
//	глРазрОтрицОстатки=Нет;
//	
//	Если Константа.СписыватьИнгридиентыВМО.Получить(ДатаОтчета) = Перечисление.Булево.Да Тогда
//		Док=СоздатьОбъект("Документ.МарочныйОтчет");
//		Если (ПровестиДоки=1)и(Марочный = 2) Тогда  
//			Если МонопольныйРежим()=1 Тогда
//				Константа.РегистрацияИзменений=0;	
//			КонецЕсли;
//			//			Док.УстановитьФильтр(0,1);
//			Док.ВыбратьДокументы(ДатаОтчета,ДатаКонца);
//			Пока Док.ПолучитьДокумент()=1 Цикл
//				Если Док.ПометкаУдаления()=1 Тогда
//					Продолжить;
//				КонецЕсли;
//				
//				
//				Если ВыбКасса.Выбран()=1 Тогда 
//					Если ВыбКасса.ЭтоГруппа()=1 Тогда
//						Если Док.Касса.ПринадлежитГруппе(ВыбКасса)=0 тогда
//							Продолжить;
//						КонецЕсли;                                      
//					Иначе
//						Если Док.Касса<>ВыбКасса тогда
//							Продолжить;
//						КонецЕсли;                                      
//					КонецЕсли;  
//				КонецЕсли;
//				
//				Сообщить("Обработан: "+Док+" "+Док.ДатаДок);
//				
//				Попытка  
//					
//					Если МонопольныйРежим()=1 Тогда	
//						УстановитьТАНа(Док.ТекущийДокумент()); 
//					КонецЕсли;	
//					
//					Док.СделатьНеПроведенным();                                   
//					
//					Если чМарОтчетМинус=1 Тогда
//						глРазрОтрицОстатки=Да;
//					КонецЕсли;
//					Док.Провести();                                   
//					
//					Если чМарОтчетМинус=1 Тогда
//						глРазрОтрицОстатки=Нет;
//					КонецЕсли;
//					
//				Исключение                                            
//					глРазрОтрицОстатки=Нет;
//				КонецПопытки;
//			КонецЦикла;
//		КонецЕсли;
//	КонецЕсли;
//	
//	Если МонопольныйРежим()=1 Тогда
//		Константа.РегистрацияИзменений=1;	
//	КонецЕсли;
//	
//	глРазрОтрицОстатки=Нет;
//	
//	// Если ошибка в запросе, то выход из процедуры
//	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
//		Возврат;
//	КонецЕсли;
//	
//	Таб=СоздатьОбъект("Таблица");
//	Таб.ИсходнаяТаблица("ПоНаловым");
//	Таб.ВывестиСекцию("Отчет");
//	
//	// Заполнение полей "Заголовок"
//	НСтрИтого=0;
//	Пока Запрос.Группировка(1) = 1 Цикл
//		
//		Таб.ВывестиСекцию("Касса");
//		НСтр=0;
//		
//		Пока Запрос.Группировка(2) = 1 Цикл
//			
//			Таб.ВывестиСекцию("ПоВидуПлатежа");
//			
//			Пока Запрос.Группировка(3) = 1 Цикл
//				// Заполнение полей ВремяПродажи
//				Пока Запрос.Группировка(4) = 1 Цикл
//					// Заполнение полей Документ
//					НСтр=НСтр+1;
//					НСтрИтого=НСтрИтого+1;
//					
//					Проведен=Запрос.Документ.Проведен();
//					
//					//					Если (ПровестиДоки=1) и (Проведен=0) Тогда
//					//						Если Док.НайтиДокумент(Запрос.Документ)=1 Тогда
//					//							Сообщить("Обработан: "+Док+" "+Док.ДатаДок);
//					//							Док.Провести();
//					//							Проведен=Док.Проведен();
//					//						КонецЕсли;
//					//					КонецЕсли;
//					
//					Проведен=?(Проведен=1,"V","");
//					
//					Если Кратко=0 Тогда
//						Таб.ВывестиСекцию("Документ");
//					КонецЕсли;
//				КонецЦикла;
//			КонецЦикла;
//		КонецЦикла;
//	КонецЦикла;
//	
//	
//	СписокТоваров=СоздатьОбъект("ТаблицаЗначений");
//	
//	глСписокТоваров.Выгрузить(СписокТоваров,,,"Товар");
//	
//	Док=СоздатьОбъект("Документ.РасходнаяНакладнаяНал");
//	Док.ВыбратьДокументы(ДатаОтчета,ДатаКонца);
//	Док.ПолучитьДокумент();
//	
//	глСписокТоваров.ВыбратьСтроки();
//	Пока глСписокТоваров.ПолучитьСтроку()=1 Цикл
//		глСписокТоваров.Счетчик=1;
//	КонецЦикла;
//	
//	глСписокТоваров.Свернуть("Склад,Блюдо,Товар,","Счетчик,КолБлюд,Количество,Остаток");
//	глСписокТоваров.Сортировать("+Склад,Блюдо,Товар");
//	
//	глНуженСписокТоваров=0;
//	
//	// Заполнение полей "Итого"
//	Таб.ВывестиСекцию("Итого");                                          
//	
//	// Вывод заполненной формы
//	//Вызов выходного отчета в окно просмотра и редактирования.
//	Таб.Опции(0,0,4,0,ПарСтрОтчДлинн);
//	Таб.ПараметрыСтраницы(1,,,,,,,,,1);
//	Таб.Защита(Константа.ФлагЗащитыТаблиц);
//	Таб.ТолькоПросмотр(1);
//	Таб.Показать("Документы в Кассе","");
//	
//	Если глСписокТоваров.КоличествоСтрок()>0 Тогда
//		Рег=СоздатьОбъект("Регистр.ОстаткиТоваров");
//		Рег.ВременныйРасчет();
//		Рег.УстановитьЗначениеФильтра("Товар",СписокТоваров,2);
//		РассчитатьРегистрыНА(Док.ТекущийДокумент());
//		
//		
//		Таб2=СоздатьОбъект("Таблица");
//		Таб2.ИсходнаяТаблица("СписокНепроведенныхТоваров");
//		Таб2.ВывестиСекцию("Шапка");
//		
//		глСписокТоваров.ВыбратьСтроки();
//		глСписокТоваров.Остаток=глСписокТоваров.Остаток/глСписокТоваров.Счетчик;
//		СтарСклад=""; 
//		СтарБлюдо="";
//		Пока глСписокТоваров.ПолучитьСтроку()=1 Цикл
//			Если СтарСклад<>глСписокТоваров.Склад Тогда
//				Таб2.ВывестиСекцию("Склад");	
//				СтарСклад=глСписокТоваров.Склад;
//			КонецЕсли;
//			
//			Если СтарБлюдо<>глСписокТоваров.Блюдо Тогда
//				Таб2.ВывестиСекцию("Блюдо");	
//				СтарБлюдо=глСписокТоваров.Блюдо; 
//				ПартийныйОст=глСписокТоваров.Остаток;
//				Ост=Рег.СводныйОстаток(глСписокТоваров.Товар,,"ОстатокТовара");
//			КонецЕсли;                                
//			
//			ПолныйОст=Рег.СводныйОстаток(глСписокТоваров.Товар,,"ОстатокТовара"); 
//			Если глСписокТоваров.Количество > глСписокТоваров.Остаток Тогда
//				глСписокТоваров.Количество = глСписокТоваров.Количество - глСписокТоваров.Остаток;	
//			КонецЕсли;
//			Таб2.ВывестиСекцию("Товар");
//		КонецЦикла;
//		Таб2.ПараметрыСтраницы(1,,,,,,,,,1);
//		Таб2.Защита(Константа.ФлагЗащитыТаблиц);
//		Таб2.ТолькоПросмотр(1);
//		Таб2.Показать("Список непроведенных товаров","");
//	КонецЕсли;
//	глРаботаетКассовыйОтчет = 0;
//КонецПроцедуры  

//*******************************************
// Процедура генерации запроса ОтрицательныеОстатки.
//
Процедура ОтрицательныеОстатки()
	Перем Запрос, ТекстЗапроса, Таб;
	//Создание объекта типа Запрос
	
	Запрос = СоздатьОбъект("Запрос");
	
	Если ДатаОтчета>(ПолучитьДатуТА()) Тогда
		ДатаОтчета=(ПолучитьДатуТА())+1;
		ДатаКон=(ПолучитьДатуТА());
		ТекстЗапроса="Период С {ДатаКон};";
	Иначе
		ТекстЗапроса="Период С {ДатаОтчета} По {ДатаКонца};";
		ДатаКон=ДатаОтчета-1;
	КонецЕсли;
	
	ТекстЗапросаПров = ТекстЗапроса + 
	"//{{ЗАПРОС(ОтрицательныеОстатки)
	|Товар = Регистр.ПартииТоваров.Товар;
	|Склад = Регистр.ПартииТоваров.Склад;
	|ОстатокТовара = Регистр.ПартииТоваров.ОстатокТовара;
	|ФлагУчета = Регистр.ПартииТоваров.ФлагУчета;
	|Блюдо = Регистр.ПартииТоваров.Блюдо;
	|Функция КонОст = Расход(ОстатокТовара);
	|Группировка Документ;
	|Условие (ФлагУчета=66);
	|"//}}ЗАПРОС
	;                  
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапросаПров) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Док=СоздатьОбъект("Документ");
	Пока Запрос.Группировка(1)=1 Цикл
		Док.НайтиДокумент(Запрос.Документ);
		Сообщить("Проводится: "+Док+" "+Док.ДатаДок);
		Док.Провести();
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + 
	"//{{ЗАПРОС(ОтрицательныеОстатки)
	|Товар = Регистр.ПартииТоваров.Товар;
	|Склад = Регистр.ПартииТоваров.Склад;
	|ОстатокТовара = Регистр.ПартииТоваров.ОстатокТовара;
	|ФлагУчета = Регистр.ПартииТоваров.ФлагУчета;
	|Блюдо = Регистр.ПартииТоваров.Блюдо;
	|Функция КонОст = Расход(ОстатокТовара);
	|Группировка Склад без групп;
	|Группировка Блюдо упорядочить по Блюдо.Код без групп;
	|Группировка Товар упорядочить по Товар.Код без групп;
	|Условие (ФлагУчета=66);
	|"//}}ЗАПРОС
	;                  
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Подготовка к заполнению выходных форм данными запроса
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("ОтрицательныеОстатки");
	// Заполнение полей "Заголовок"
	Таб.ВывестиСекцию("Заголовок");
	Состояние("Заполнение выходной таблицы...");
	
	СТ=СоздатьОбъект("СписокЗначений");
	ЧислоСтрок=0;	
	Оживить(4);	
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);
	Пока Запрос.Группировка(1) = 1 Цикл
		
		// Заполнение полей Склад
		Таб.ВывестиСекцию("Склад");
		Пока Запрос.Группировка(2) = 1 Цикл
			// Заполнение полей Блюдо
			
			Таб.ВывестиСекцию("Блюдо");
			Пока Запрос.Группировка(3) = 1 Цикл
				// Заполнение полей Товар
				
				Таб.ВывестиСекцию("Товар");
				Если СТ.НайтиЗначение(Запрос.Товар)=0 Тогда
					СТ.ДобавитьЗначение(Запрос.Товар);
				КонецЕсли;
				Оживить(1);
			КонецЦикла;
		КонецЦикла;
		
	КонецЦикла;
	// Заполнение полей "Итого"
	Таб.ВывестиСекцию("Итого");
	// Вывод заполненной формы
	Таб.ТолькоПросмотр(1);
	Таб.Показать("ОтрицательныеОстатки", "");
	
	СписокПараметров=СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение(ДатаОтчета,"ДатаНачала");
	СписокПараметров.ДобавитьЗначение(ДатаКонца,"ДатаКонца");
	СписокПараметров.ДобавитьЗначение(СТ,"СписокТоваров");
	//	ОткрытьФорму("Отчет.РасходИнгредиентов"+"#",СписокПараметров);
	
КонецПроцедуры

Функция ТекстЗапросаПоКассе()
	ТекстЗапроса = "
	|Период с ДатаОтчета по ДатаКонца;
	|Обрабатывать НеПомеченныеНаУдаление;
	|ОбрабатыватьДокументы Проведенные;
	|Касса = Документ.РасходнаяНакладнаяНал.ККМ,Документ.МарочныйОтчет.Касса;
	|ВидПлатежа = Документ.РасходнаяНакладнаяНал.ВидПлатежа;
	|ВалютаПлатежа = Документ.РасходнаяНакладнаяНал.ВалютаПлатежа,Документ.МарочныйОтчет.ВалютаПлатежа;
	|ВалютаПлатежа1 = Документ.РасходнаяНакладнаяНал.ВалютаПлатежа1,Документ.МарочныйОтчет.ВалютаПлатежа2;
	|ПодарочнаяКарта = Документ.РасходнаяНакладнаяНал.ПодарочнаяКарта;
	|Получено = Документ.РасходнаяНакладнаяНал.Получено,Документ.МарочныйОтчет.ПолученоНал;
	|Получено1 = Документ.РасходнаяНакладнаяНал.Получено1,Документ.МарочныйОтчет.ПолученоНал2;
	|ПолученоКарта = Документ.РасходнаяНакладнаяНал.ПолученоКарта,Документ.МарочныйОтчет.ПолученоКарта;
	|ПолученоПодарочнаяКарта = Документ.РасходнаяНакладнаяНал.ПолученоПодарочнаяКарта,Документ.МарочныйОтчет.ПолученоПодарочнаяКарта;
	|СуммаНакл = Документ.РасходнаяНакладнаяНал.ВсегоСуммаШ,Документ.МарочныйОтчет.ВсегоСуммаШ;
	|Условие ( Касса в ВыбКасса );
	|Условие ( ВалютаПлатежа в ВыбВалюта );
	|Группировка Касса без групп;
	|Группировка ВидПлатежа;
	|Группировка Документ;
	|Функция Сумм = Сумма( СуммаНакл );";
	Возврат ТекстЗапроса;
КонецФункции

Процедура семРасширенный()
	начЛог = семЗаписатьЛогНач( "Отчет", "Упр. отчет по кассе", "Обработка", "Формирование отчета (Расширенный)" );
	Если ДатаКонца > ПолучитьДатуТА() Тогда 
		ДатаКонца = ПолучитьДатуТА();
	КонецЕсли;
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить( ТекстЗапросаПоКассе() ) = 0 Тогда Возврат; КонецЕсли;
	таб = СоздатьОбъект( "Таблица" );
	таб.ИсходнаяТаблица( "Расширенный" );
	таб.ВывестиСекцию( "Шапка" );		
	таб.Опции( 0, 0, таб.ВысотаТаблицы(), 0 );
	Пока Запрос.Группировка( "Касса" ) = 1 Цикл
		Пока Запрос.Группировка( "ВидПлатежа" ) = 1 Цикл
			Пока Запрос.Группировка( "Документ" ) = 1 Цикл
				Всего = Всего + 1;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	пНом = 0;
	Пока Запрос.Группировка( "Касса" ) = 1 Цикл
		пКасса = Запрос.Касса;
		таб.ВывестиСекцию( "Касса" );		
		Пока Запрос.Группировка( "ВидПлатежа" ) = 1 Цикл
			пВидПлатежа = Запрос.ВидПлатежа;
			таб.ВывестиСекцию( "ВидПлатежа" );		
			Пока Запрос.Группировка( "Документ" ) = 1 Цикл
				пНом = пНом + 1;
				пДок = Запрос.Документ;
				пДата = пДок.ДатаДок;
				пВремя="";
				Попытка
					пВремя = пДок.ВремяПродажи;
				Исключение
				КонецПопытки;
				пНомер = пДок.НомерДок;
				пСумма = Запрос.Сумм;
				пНал = Запрос.Получено;
				пНал2 = Запрос.Получено1;
				пНаличные = ""+Шаблон("[пНал #Ч015.2,]");
				Если пНал2>0 Тогда
					пНаличные=пНаличные+РазделительСтрок+Шаблон("[пНал2 #Ч015.2,]");
				КонецЕсли;
				пКредКарта = Запрос.ПолученоКарта;
				пПодКарта = Шаблон("[Запрос.ПолученоПодарочнаяКарта #Ч015.2,]");
				Если Запрос.ПолученоПодарочнаяКарта > 0 Тогда
					пПодКарта = пПодКарта+РазделительСтрок+Запрос.ПодарочнаяКарта;
				КонецЕсли;
//				Иначе
				пВалюта = ""+?(Запрос.Получено>0,Запрос.ВалютаПлатежа,"");
				пВалюта2 = ""+?(Запрос.Получено1>0,Запрос.ВалютаПлатежа1,""); 
				Если пНал2>0 Тогда
					пВалюта=пВалюта+РазделительСтрок+пВалюта2;
				КонецЕсли;
//				КонецЕсли;
				таб.ВывестиСекцию( "Документ" );		
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	таб.ТолькоПросмотр( 1 );
	таб.Показать( "Расширенный отчет по кассе" ); 
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры

Процедура ПоЧасам()
	
//	начЛог = семЗаписатьЛогНач( "Отчет", "Упр. отчет по кассе", "Обработка", "Формирование отчета (По часам)" );
	Если ДатаКонца > ПолучитьДатуТА() Тогда 
		ДатаКонца = ПолучитьДатуТА();
	КонецЕсли;
	
	ODBCRecordSet = СоздатьОбъект( "ODBCRecordSet" );
	ODBCRecordSet.УстБД1С();    
//	ODBCRecordSet.Отладка(1);
	
	ТекстЗапроса=" SELECT Спр.PARENTID [Агент $Справочник.Сотрудники], 
                |  CAST(Left($РасхНал.ВремяПродажи,2) as SmallInt) Часы, 
				|  $РасхНал.ВсегоСуммаШ СуммаПродажи,
//				|  1COUNT(РасхНал.IDDOC) КолДок,
				|  1 КолДок
//				|  AVG($РасхНал.ВсегоСуммаШ) СредПродажа
				|  FROM $Документ.РасходнаяНакладнаяНал AS РасхНал 
				|  INNER JOIN _1sjourn (NOLOCK) ON _1sjourn.IDDOC=РасхНал.IDDOC
				|  LEFT JOIN $Справочник.Сотрудники Спр (NOLOCK) ON Спр.ID=$РасхНал.Агент
				|  WHERE _1sjourn.Date_Time_IDDOC BETWEEN :ПериодНач AND :ПериодКон~ AND
				|  _1sjourn.IDDOCDEF=$ВидДокумента.РасходнаяНакладнаяНал AND _1sjourn.Closed & 1 =1
				|  AND $РасхНал.ВремяПродажи>'0' "; 
				Если ВыбКасса.Выбран() = 0 Тогда 
				ИначеЕсли ВыбКасса.ЭтоГруппа() = 0 Тогда 
					ТекстЗапроса=ТекстЗапроса+"	AND $РасхНал.ККМ = :ВыбКасса";
					ODBCRecordSet.УстановитьТекстовыйПараметр("ВыбКасса", ВыбКасса);
				ИначеЕсли ВыбКасса.ЭтоГруппа() = 1 Тогда 
					ТекстЗапроса=ТекстЗапроса+"	AND $РасхНал.ККМ IN (SELECT Val FROM #Кассы)";
			        ODBCRecordSet.УложитьСписокОбъектов(ВыбКасса, "#Кассы", "Кассы");
				КонецЕсли;                    
//				ТекстЗапроса=ТекстЗапроса+" GROUP BY Спр.PARENTID, Left($РасхНал.ВремяПродажи,2) ";
				                                   
				
	ODBCRecordSet.УстановитьТекстовыйПараметр( "ПериодНач", ДатаОтчета);   
	ODBCRecordSet.УстановитьТекстовыйПараметр( "ПериодКон", ДатаКонца);
	
	табл = ODBCRecordSet.ВыполнитьИнструкцию(ТекстЗапроса);

	ИТ = СоздатьОбъект("ИндексированнаяТаблица");
	ИТ.Загрузить(табл);
	ИТ.Группировать("Агент : Агент; Часы : Часы;", "СуммаПродажи,КолДок", 0);
	ИТ.Сортировать("Агент");
	
	таб = СоздатьОбъект( "Таблица" );
	таб.ИсходнаяТаблица( "ПоЧасам" );
	таб.Опции( 0, 0, таб.ВысотаТаблицы(), 0 );
	пНом = 0;    
	ПечОтдел="";
	КолОтд=0;        
	ПечСредСуммаЧеков		=0;     
	ПечСуммаЧековВсегоОтдел	=0;
	ПечСуммаЧековВсего		=0;
	ПечКолЧековВсего		=0;
	ПечКолЧековВсегоОтдел	=0;
	
	ИТ.ВыбратьСтроки();
	Пока ИТ.ПолучитьСтроку() = 1 Цикл

		ПечОтдел=""+ИТ.Агент+" ("+ИТ.Агент.Код+")";
		таб.ВывестиСекцию( "Отчет" );
		
		Если КолОтд=3 Тогда
			КолОтд=0;
			таб.НоваяСтраница(); 
		КонецЕсли;
		КолОтд=КолОтд+1;

		//выводим часы по отделу
		тзЧасы=ИТ.тзПотомки;
		тзЧасы.Сортировать("Часы");
		тзЧасы.ВыбратьСтроки();
		Пока тзЧасы.ПолучитьСтроку()=1 Цикл
			ПечВремя=Формат(тзЧасы.Часы,"Ч5.2")+"-"+Формат(Число(тзЧасы.Часы)+1,"Ч5.2");
			
			ПечКолЧеков=Формат(тзЧасы.КолДок,"Ч7.0");
			ПечСуммаЧеков=Формат(тзЧасы.СуммаПродажи,"Ч10.2");
			ПечСредСуммаЧеков=Формат(тзЧасы.СуммаПродажи/тзЧасы.КолДок,"Ч10.2");
			таб.ВывестиСекцию( "Время" );		
		КонецЦикла;

		ПечСуммаЧековВсегоОтдел=Окр(ИТ.СуммаПродажи,2);
		ПечКолЧековВсегоОтдел=Число(ИТ.КолДок);
		
		таб.ВывестиСекцию( "ИтогоОтдел" );		
		
	КонецЦикла;  
	           
	ПечКолЧековВсего=ИТ.Итог("КолДок");
	ПечСуммаЧековВсего=Окр(ИТ.Итог("СуммаПродажи"),2);
	
	
	//табл.ВыбратьСтроки();
	//Пока табл.ПолучитьСтроку()=1 Цикл
	//	Если ПечОтдел<>табл.Агент.Родитель Тогда
	//		
	//		Если ПустоеЗначение(ПечОтдел)=0 Тогда //если первый раз, то не создаем новую страницу
	//			таб.ВывестиСекцию( "ИтогоОтдел" );		
	//			ПечСуммаЧековВсегоОтдел=0;
	//			ПечКолЧековВсегоОтдел=0;
	//			
	//			Если КолОтд=3 Тогда
	//				КолОтд=0;
	//				таб.НоваяСтраница(); 
	//			КонецЕсли;
	//		КонецЕсли;
	//		КолОтд=КолОтд+1;
	//		
	//		ПечСредСуммаЧеков=0;     
	//		
	//		ПечОтдел=табл.Агент.Родитель;
	//		таб.ВывестиСекцию( "Отчет" );		
	//	КонецЕсли;
	//	
	//	ПечВремя=Формат(табл.Часы,"Ч5.2")+"-"+Формат(Число(табл.Часы)+1,"Ч5.2");
	//	
	//	ПечКолЧеков=Формат(табл.КолДок,"Ч5.0");
	//	ПечСуммаЧеков=Формат(табл.СуммаПродажи,"Ч6.2");
	//	ПечСредСуммаЧеков=Формат(табл.СредПродажа,"Ч6.2");
	//	ПечСуммаЧековВсего=ПечСуммаЧековВсего+Окр(табл.СуммаПродажи,2);
	//	ПечСуммаЧековВсегоОтдел=ПечСуммаЧековВсегоОтдел+Окр(табл.СуммаПродажи,2);
	//	ПечКолЧековВсего=ПечКолЧековВсего+Число(табл.КолДок);
	//	ПечКолЧековВсегоОтдел=ПечКолЧековВсегоОтдел+Число(табл.КолДок);
	//	таб.ВывестиСекцию( "Время" );		
	//
	//КонецЦикла;                             
	//таб.ВывестиСекцию( "ИтогоОтдел" );		
	таб.ВывестиСекцию( "Итого" );		
	таб.ТолькоПросмотр( 1 );                      
	таб.ПараметрыСтраницы(1,100,,,,,,,,1);
	таб.Показать( "Отчет о почасовых продажах" ); 
//	семЗаписатьЛогКон( начЛог );	
		
	
КонецПроцедуры                                                         

//-------------------------------
ДатаОтчета=ПолучитьДатуТА();
ДатаКонца=ПолучитьДатуТА();
Если Число(ДатаОтчета)=0 Тогда
	ДатаОтчета='01.01.98';
Конецесли;

//Форма.кнПровести.Видимость(Пользователь.РазрПровКассы);