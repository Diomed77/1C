Перем спУсловий;

Функция ТекстЗапросаПоЦенам()
	спУсловий = СоздатьОбъект( "СписокЗначений" );
	ТекстЗапроса = "
	|Период с ДатаС по ДатаПо;
	|Товар = Документ.ЗаказПоставщику.Товар;
	|Закупщик = Документ.ЗаказПоставщику.Товар.Закупщик;
	|Поставщик = Документ.ЗаказПоставщику.Клиент;
	|Цена = Документ.ЗаказПоставщику.Цена;
	|Группировка Документ;
	|Группировка Товар без групп;
	|";
	Если выбТовар.Выбран() = 0 Тогда 
	спУсловий.ДобавитьЗначение("По всем товарам.");
	ИначеЕсли выбТовар.ЭтоГруппа() = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Товар = выбТовар );";
		спУсловий.ДобавитьЗначение(Шаблон("По товару ([выбТовар.Код]) [выбТовар.Наименование]."));
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Товар в выбТовар );";
		спУсловий.ДобавитьЗначение(Шаблон("По группе товаров ([выбТовар.Код]) [выбТовар.Наименование]."));
	КонецЕсли;
	Если выбПоставщик.Выбран() = 0 Тогда 
	спУсловий.ДобавитьЗначение("По всем поставщикам.");
	ИначеЕсли выбПоставщик.ЭтоГруппа() = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Поставщик = выбПоставщик );";
		спУсловий.ДобавитьЗначение(Шаблон("По поставщику ([выбПоставщик.Код]) [выбПоставщик.Наименование]."));
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Поставщик в выбПоставщик );";
		спУсловий.ДобавитьЗначение(Шаблон("По группе поставщиков ([выбПоставщик.Код]) [выбПоставщик.Наименование]."));
	КонецЕсли;
	Если выбЗакупщик.Выбран() = 0 Тогда 
	спУсловий.ДобавитьЗначение("По всем закупщикам.");
	ИначеЕсли выбЗакупщик.ЭтоГруппа() = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Закупщик = выбЗакупщик );";
		спУсловий.ДобавитьЗначение(Шаблон("По закупщику ([выбЗакупщик.Код]) [выбЗакупщик.Наименование]."));
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Закупщик в выбЗакупщик );";
		спУсловий.ДобавитьЗначение(Шаблон("По группе закупщиков ([выбЗакупщик.Код]) [выбЗакупщик.Наименование]."));
	КонецЕсли;
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапроса()
	спУсловий = СоздатьОбъект( "СписокЗначений" );
	ТекстЗапроса = "
	|Период с ДатаС по ДатаПо;
	|Товар = Регистр.ЗаказыПоставщикам.Товар;
	|Закупщик = Регистр.ЗаказыПоставщикам.Товар.Закупщик;
	|Поставщик = Регистр.ЗаказыПоставщикам.Клиент;
	|Заказ = Регистр.ЗаказыПоставщикам.ПоЗаказу;
	|ДатаЗак = Регистр.ЗаказыПоставщикам.ПоЗаказу.ДатаДок;
	|ДатаПост = Регистр.ЗаказыПоставщикам.СрокПоставки;
	|Кол = Регистр.ЗаказыПоставщикам.Количество;
	|Функция фКонОст = КонОст( Кол );
	|Группировка Поставщик без групп;
	|Группировка Товар без групп;
	|Группировка Заказ;
	|Условие ( ДатаЗак >= ДатаС );
	|Условие ( ДатаПост < ДатаПо );
	|";
	Если выбТовар.Выбран() = 0 Тогда 
	спУсловий.ДобавитьЗначение("По всем товарам.");
	ИначеЕсли выбТовар.ЭтоГруппа() = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Товар = выбТовар );";
		спУсловий.ДобавитьЗначение(Шаблон("По товару ([выбТовар.Код]) [выбТовар.Наименование]."));
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Товар в выбТовар );";
		спУсловий.ДобавитьЗначение(Шаблон("По группе товаров ([выбТовар.Код]) [выбТовар.Наименование]."));
	КонецЕсли;
	Если выбПоставщик.Выбран() = 0 Тогда 
	спУсловий.ДобавитьЗначение("По всем поставщикам.");
	ИначеЕсли выбПоставщик.ЭтоГруппа() = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Поставщик = выбПоставщик );";
		спУсловий.ДобавитьЗначение(Шаблон("По поставщику ([выбПоставщик.Код]) [выбПоставщик.Наименование]."));
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Поставщик в выбПоставщик );";
		спУсловий.ДобавитьЗначение(Шаблон("По группе поставщиков ([выбПоставщик.Код]) [выбПоставщик.Наименование]."));
	КонецЕсли;
	Если выбЗакупщик.Выбран() = 0 Тогда 
	спУсловий.ДобавитьЗначение("По всем закупщикам.");
	ИначеЕсли выбЗакупщик.ЭтоГруппа() = 0 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Закупщик = выбЗакупщик );";
		спУсловий.ДобавитьЗначение(Шаблон("По закупщику ([выбЗакупщик.Код]) [выбЗакупщик.Наименование]."));
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие ( Закупщик в выбЗакупщик );";
		спУсловий.ДобавитьЗначение(Шаблон("По группе закупщиков ([выбЗакупщик.Код]) [выбЗакупщик.Наименование]."));
	КонецЕсли;
	Возврат ТекстЗапроса;
КонецФункции

Процедура Сформировать()
	начЛог = семЗаписатьЛогНач( "Отчет", "Отчет по недопоставке", "Обработка", "Формирование отчета" );
	ЗапросПоЦенам = СоздатьОбъект( "Запрос" );
	Если ЗапросПоЦенам.Выполнить( ТекстЗапросаПоЦенам() ) = 0 Тогда Возврат; КонецЕсли;
	//табл = СоздатьОбъект( "ТаблицаЗначений" );
	//ЗапросПоЦенам.Выгрузить(табл,1,0);
	//табл.ВыбратьСтроку();
	//Возврат;
	Запрос = СоздатьОбъект( "Запрос" );
	Если Запрос.Выполнить( ТекстЗапроса() ) = 0 Тогда Возврат; КонецЕсли;
	//табл = СоздатьОбъект( "ТаблицаЗначений" );
	//Запрос.Выгрузить(табл,1,0);
	//табл.ВыбратьСтроку();
	//Возврат;
	таб = СоздатьОбъект( "Таблица" );
	таб.ИсходнаяТаблица( "Таблица" );
	таб.ВывестиСекцию( "Заголовок" );		
	пУсловие = "";
	Для н = 1 по спУсловий.РазмерСписка() Цикл
		пУсловие = пУсловие + спУсловий.ПолучитьЗначение(н) + " ";
	КонецЦикла;
	Таб.ВывестиСекцию("Условие");
	таб.ВывестиСекцию( "Шапка" );		
	таб.Опции( 0, 0, таб.ВысотаТаблицы(), 0 );
	
	Всего = 0; 
	Пока Запрос.Группировка("Поставщик") = 1 Цикл 
		Пока Запрос.Группировка("Товар") = 1 Цикл 
			Всего = Всего + 1; 
		КонецЦикла;
	КонецЦикла;
	
	сумПост = 0;
	сумТов = 0;
	н = 0;
	Пока Запрос.Группировка("Поставщик") = 1 Цикл
		пПоставщик = Шаблон("[Запрос.Поставщик.Наименование] ([Запрос.Поставщик.Код])");
		таб.ВывестиСекцию( "Поставщик" );
		облПост = таб.Область(Шаблон("R[таб.ВысотаТаблицы()]C6"));

		Пока Запрос.Группировка("Товар") = 1 Цикл Состояние( Шаблон("Выведено [н] из [Всего].") );
			н = н + 1;
			пТовар = Шаблон("[Запрос.Товар.Код] [Запрос.Товар.Наименование]");
			пКол = Запрос.фКонОст;
			таб.ВывестиСекцию( "Товар" );
			облТов = таб.Область(Шаблон("R[таб.ВысотаТаблицы()]C6"));
			Пока Запрос.Группировка("Заказ") = 1 Цикл
				Док = Запрос.Заказ;
				пДок = Шаблон("[Док.Вид()] [Док.НомерДок] от [Док.ДатаДок]");
				пДатаПост = Запрос.ДатаПост;
				пКол = Запрос.фКонОст;
				пЦена = ?(ЗапросПоЦенам.Получить(Запрос.Заказ,Запрос.Товар)=1,ЗапросПоЦенам.Цена,0);
				пСумма = пЦена*пКол;
				Если флЗаказы = 1 Тогда
					таб.ВывестиСекцию( "Документ" );
				КонецЕсли;
				сумТов = сумТов + пСумма;
			КонецЦикла;
			облТов.Текст = сумТов;
            сумПост = сумПост + сумТов; сумТов = 0; 
		КонецЦикла;
		облПост.Текст = сумПост;
        сумПост = 0; 
	КонецЦикла;
	
	таб.ТолькоПросмотр( 1 );
	таб.Показать( "Отчет по недопоставке" );
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры

Форма.выбТовар.ВыборГруппы(1);
Форма.выбПоставщик.ВыборГруппы(1);
Форма.выбЗакупщик.ВыборГруппы(1);