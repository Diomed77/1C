//#ЗагрузитьИзФайла Текст1.Txt
Перем РежимЗапроса;
Перем Заг;
Перем Заг1;  
Перем Заг2;
Перем Заг3;
Перем Заг4;
Перем ПродСумма;
Перем ПродНалог;
Перем ПродСкидка; 
Перем КолДокум;
Перем ВсегоПродано;  
Перем ВозвратТовар;
Перем ВозвратПоКлиенту, ПоКлиентам;
Перем СпКл;
Перем Запрос;
Перем ЗапросО;  
Перем ЗапросС, ЗапросТ;
Перем Клиентов;
Перем ЯзыкОтчета, спКодов;

Функция Перекодировка(стр,спПерекод)
	рез = "";
	Для н = 1 по СтрДлина(стр) Цикл
		ТекСим = Сред(стр,н,1);
		Код = спПерекод.Получить(КодСимв(ТекСим));
		Если ПустоеЗначение(Код) = 1 Тогда
			рез = рез + ТекСим;
		Иначе
			рез = рез + Симв(Число(Код));
		КонецЕсли;
	КонецЦикла;
	Возврат рез;
КонецФункции

Функция ПолучитьПереводНаименования( пТовар )
	Если ЯзыкОтчета = "LT" Тогда Возврат пТовар.НаименованиеLT;
	ИначеЕсли ЯзыкОтчета = "EE" Тогда Возврат пТовар.НаименованиеEE;
	КонецЕсли;
КонецФункции

Функция печТовар(пТовар)
	Если ЯзыкОтчета="LV" Тогда
		Возврат Перекодировка(пТовар.Наименование, спКодов);
	Иначе
		Возврат ПолучитьПереводНаименования(пТовар);
	КонецЕсли;
КонецФункции

Процедура ПриНачалеВыбораЗначения(Элем,ФлагСт)
	
	Если Элем="ВыбАгент" Тогда
		Если ПустоеЗначение(Пользователь.АгентФильтр)=1 Тогда
		ИначеЕсли Пользователь.АгентФильтр.Выбран()=1 Тогда
			ФлагСт=0;
			
			ПромАгент = глВыборАгента(Пользователь.АгентФильтр);
			Если ПустоеЗначение(ПромАгент)=0 Тогда
				ВыбАгент = ПромАгент;
			КонецЕсли;
			//Спр=СоздатьОбъект("Справочник.Сотрудники");
			//Спр.ИспользоватьРодителя(Пользователь.АгентФильтр,0);
			//Если Спр.Выбрать("Выберите агента","ФормаСписка")=1 Тогда
			//	ВыбАгент=Спр.ТекущийЭлемент();
			//КонецЕсли;
		Иначе
			ФлагСт=0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


Процедура семПриВыбореКлиента(пКлиент)
	Если ПустоеЗначение(пКлиент) = 0 Тогда
		табл = семПолучитьСписокПодчКлиентов( пКлиент );
		флГлКлиент = ?(табл.КоличествоСтрок() > 0,1,0);
		Форма.флГлКлиент.Доступность(?(табл.КоличествоСтрок() > 0,1,0));
	Иначе
		флГлКлиент = 0;
		Форма.флГлКлиент.Доступность(0);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаВыбораЗначения( пЗнач, пЭлем, пФлаг )
	Если пЭлем = "ВыбКлиент" Тогда
		семПриВыбореКлиента(пЗнач);
	КонецЕсли;
КонецПроцедуры

Процедура семПриВходеАгента()
	Если ПустоеЗначение( Пользователь ) = 1 Тогда Возврат; КонецЕсли;
	Если ПустоеЗначение( Пользователь.АгентФильтр ) = 1 Тогда Возврат; КонецЕсли;
	Если Пользователь.АгентФильтр.ЭтоГруппа() = 1 Тогда
		Если выбАгент.ПринадлежитГруппе(Пользователь.АгентФильтр) = 0 Тогда
			Предупреждение( "У Вас нет прав выбирать данного агента!!!" );
			выбАгент = "";
		КонецЕсли;
	Иначе
		выбАгент = Пользователь.АгентФильтр;
		Форма.выбАгент.Доступность( 0 );
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()

	Если Найти(НазваниеНабораПрав(), "СпециалистПоПродаже")>0 Тогда
		семПриВходеАгента();
	КонецЕсли;
	семПриВыбореКлиента(выбКлиент);     
	
	глПриОткрытии(Контекст,"РасходТоваровЗаПериод");
	
КонецПроцедуры

//-------------------------------
Процедура Очистить()
	ВыбТовар=0;
	ВыбСклад=0;
	ВыбКлиент=0;
	ВыбПоставщик=0;
	ВыбКлиент=0;
	ВыбАгент=0;
КонецПроцедуры     
//------------------------

Процедура КоличествоТоваров()

	//Создание объекта типа Запрос
	ЗапросТ = СоздатьОбъект("Запрос");

	ТекстЗап = "Период с ДатаНачала";
 	Если ДатаКонца>=ПолучитьДатуТА() Тогда
		ДатаКонца=ПолучитьДатуТА();
		ДатаКон=ДатаКонца;
		ТекстЗап= ТекстЗап+";";
	Иначе
		ТекстЗап= ТекстЗап+" по ДатаКонца;";
	КонецЕсли; 
		ТекстЗап = ТекстЗап + 
		"//{{ЗАПРОС(ПроданоПозицийТовара)
	|ТОВАР = Документ.РасходнаяНакладнаяНал.Товар, Документ.РасходнаяНакладная.Товар, Документ.РасходнаяРеализатора.Товар;
	|Клиент = Документ.РасходнаяНакладнаяНал.Клиент, Документ.РасходнаяНакладная.Клиент, Документ.РасходнаяРеализатора.Клиент;
	|Склад = Документ.РасходнаяНакладнаяНал.Склад, Документ.РасходнаяНакладная.Склад, Документ.РасходнаяРеализатора.Склад;
	|Агент = Документ.РасходнаяНакладнаяНал.Агент, Документ.РасходнаяНакладная.Агент, Документ.РасходнаяРеализатора.Агент;
	|ПризнакНакладной = Документ.РасходнаяНакладнаяНал.ПризнакНакладной, Документ.РасходнаяНакладная.ПризнакНакладной, Документ.РасходнаяРеализатора.ПризнакНакладной;
	|Функция ВсегоПрод = Счётчик();
	|Группировка Агент без групп;
	|Группировка Клиент без групп;
	|Группировка Товар без групп;
	|"//}}ЗАПРОС
		;        
                                
	Если ВыбАгент.Выбран()=0 Тогда
	ИначеЕсли ВыбАгент.ЭтоГруппа()=1 Тогда
		ТекстЗап=ТекстЗап+"Условие (Агент в ВыбАгент);";
	Иначе
		ТекстЗап=ТекстЗап+"Условие (Агент=ВыбАгент);";
	КонецЕсли;   
	
    Если ВыбКлиент.Выбран() = 0 Тогда
	ИначеЕсли ВыбКлиент.ЭтоГруппа() = 1 Тогда
		ТекстЗап = ТекстЗап + "Условие (Клиент в ВыбКлиент);";
	Иначе
		Если флГлКлиент = 1 Тогда
			табл = семПолучитьСписокПодчКлиентов( ВыбКлиент );
			сп = СоздатьОбъект( "СписокЗначений" );
			табл.Выгрузить(сп,,,"Клиент");
			сп.ДобавитьЗначение(ВыбКлиент);
			ТекстЗап = ТекстЗап + "Условие (Клиент в сп);";
		Иначе
			ТекстЗап=ТекстЗап+"Условие (Клиент=ВыбКлиент);";
		КонецЕсли;
	КонецЕсли; 
	
	Если ВыбСклад.Выбран()=0 Тогда
   	ИначеЕсли ВыбСклад.ЭтоГруппа() = 1 Тогда
		ТекстЗап = ТекстЗап + "Условие (Склад в ВыбСклад);";
	Иначе
		ТекстЗап=ТекстЗап+"Условие (Склад=ВыбСклад);";
	КонецЕсли; 
	
    Если ВыбТовар.Выбран() = 0 Тогда  
	ИначеЕсли ВыбТовар.ЭтоГруппа() = 1 Тогда
		ТекстЗап = ТекстЗап + "Условие (ТОВАР в ВыбТовар);";   
	Иначе
		ТекстЗап = ТекстЗап + "Условие (ТОВАР = ВыбТовар);";     
	КонецЕсли; 
	
    Если ВыбПоставщик.Выбран() = 0 Тогда   
	ИначеЕсли ВыбПоставщик.ЭтоГруппа() = 1 Тогда 
		ТекстЗап = ТекстЗап + "Условие (ТОВАР.Поставщик в ВыбПоставщик);";
	Иначе
		ТекстЗап = ТекстЗап + "Условие (ТОВАР.Поставщик = ВыбПоставщик);";
	КонецЕсли;   
	
	// Если ошибка в запросе, то выход из процедуры
	Если ЗапросТ.Выполнить(ТекстЗап) = 0 Тогда
		Возврат;
	КонецЕсли;  
	
КонецПроцедуры
              
//*****************************************
Процедура ВычислимОборот()
	Пока Запрос.Группировка("Документ")=1 Цикл
		Если Запрос.Документ.Проведен()=0 Тогда
		// используем только проведенные документы
			Продолжить;
		КонецЕсли;    
		НайденныйДок=Запрос.Документ;  
		Стр=НайденныйДок.Вид(); 
		// Исключаем кредитную ноту из продажи товаров
		Если (Стр="РасходнаяНакладнаяНал") ИЛИ (Стр="РасходнаяНакладная")  Тогда
			Если НайденныйДок.ПризнакНакладной=Перечисление.ПризнРасхНакл.КредитнаяНота Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;

		Кл=Запрос.Клиент;
		ТекКлиент=Кл;
		
		Если Клиентов.НайтиЗначение(ТекКлиент)=0 Тогда
			Клиентов.ДобавитьЗначение(ТекКлиент);
		КонецЕсли;
		
		Кл.ИспользоватьДату(НайденныйДок.ДатаДок);
		Если Кл.КлГруппа.Выбран()=1 Тогда
			ТекКлиент=Кл.КлГруппа;
		КонецЕсли;       
		
		Если (Стр="ПриходнаяНакладная") ИЛИ 
			 (Стр="ПриходнаяКредит") ИЛИ
			(Стр="ПриходнаяРеализатора") Тогда 
			Если НайденныйДок.ПризнакНакладной<>Перечисление.ПризнПрихНакл.ВозвратОтПокупателя Тогда
				Продолжить;
			КонецЕсли; 
			КолвоДокВозвр=0;
		Иначе         // Для расходных документов
			КолДокум=КолДокум+1;   // Количество выписанных документов для отчета по агентам
			КолвоДок=0;
			СуммаДок=0;
			
		// Запишем нового клиента в список для отчета по агентам
		КонецЕсли;			
		// 	Получим количество товара по документам
		Если (Стр="РасходнаяНакладнаяНал") ИЛИ
			(Стр="РасходнаяНакладная") ИЛИ
			(Стр="Списание") ИЛИ
			(Стр="РасходнаяРеализатора")     Тогда
			КолвоДок=Запрос.КолвоОбщ;//*Запрос.КоэффОбщ;  
		ИначеЕсли (Стр="ПриходнаяНакладная") ИЛИ 
			(Стр="ПриходнаяКредит") ИЛИ
			(Стр="ПриходнаяРеализатора") Тогда
			КолвоДокВозвр=Запрос.КолвоОбщ;//*Запрос.КоэффОбщ;
		КонецЕсли; 
		// Получим  фактическую сумму продажи  по документам   в базовой валюте
		Если  (Стр="РасходнаяНакладнаяНал") ИЛИ
			(Стр="РасходнаяНакладная") ИЛИ
			(Стр="РасходнаяРеализатора")	Тогда   
				//Запрос.Документ
//				Пересчет(Запрос.СуммаОбщ,Запрос.Документ.Валюта,Запрос.Документ.Курс,Рубли,Рубли.Курс.Получить(Запрос.Документ))
			СуммаДок=Пересчет(Запрос.СуммаОбщ,Запрос.Документ.Валюта,Запрос.Документ.Курс,Рубли,КурсДляВалюты(Рубли,Запрос.Документ));
			НалогДок=Пересчет(Запрос.НалогОбщ,Запрос.Документ.Валюта,Запрос.Документ.Курс,Рубли,КурсДляВалюты(Рубли,Запрос.Документ));
			СкидкаДок=Пересчет(Запрос.СкидкаОбщ,Запрос.Документ.Валюта,Запрос.Документ.Курс,Рубли,КурсДляВалюты(Рубли,Запрос.Документ));
			//СуммаДок=Запрос.СуммаОбщ*Запрос.Курс;
			//НалогДок=Запрос.НалогОбщ*Запрос.Курс;
			//СкидкаДок=Запрос.СкидкаОбщ*Запрос.Курс;
		ИначеЕсли (Стр="ПриходнаяНакладная") ИЛИ 
			(Стр="ПриходнаяКредит") ИЛИ
			(Стр="ПриходнаяРеализатора") Тогда
			ВозвратДок=Запрос.ВозвратОбщ;
		ИначеЕсли (Стр="Списание") Тогда
			СуммаДок=Запрос.СуммаОбщ;
			НалогДок=Запрос.НалогОбщ;
			СкидкаДок=Запрос.СкидкаОбщ;
		КонецЕсли; 

		// Получим сумму в розничных ценах на дату документа
		Если (Стр="РасходнаяНакладнаяНал") ИЛИ (Стр="РасходнаяНакладная")
			    	ИЛИ (Стр="РасходнаяРеализатора")  Тогда

			ВсегоПродано=ВсегоПродано+КолвоДок;
			ПродСумма=ПродСумма+СуммаДок;
			ПродНалог=ПродНалог+НалогДок;
			ПродСкидка=ПродСкидка+СкидкаДок; 
		Иначе   // Для возврата
			ВозвратТовар=ВозвратТовар+КолвоДокВозвр;  
			Рез=0;
			Если ПоКлиентам.НайтиЗначение(ТекКлиент,Рез,"Клиент")=1 Тогда
				ПоКлиентам.ПолучитьСтрокуПоНомеру(Рез);
				ПоКлиентам.Возврат=ПоКлиентам.Возврат+ВозвратДок;
//				ВозвратПоКлиенту=ВозвратПоКлиенту+ВозвратДок;
			Иначе
				ПоКлиентам.НоваяСтрока();
				ПоКлиентам.Клиент=ТекКлиент;
				ПоКлиентам.Возврат=ВозвратДок;
			КонецЕсли;			
		КонецЕсли;

	КонецЦикла;
КонецПроцедуры                               

//------------------------
Процедура ВычислимОборот1()
	Пока Запрос.Группировка("Документ")=1 Цикл
		Если Запрос.Документ.Проведен()=0 Тогда
		// используем только проведенные документы
			Продолжить;
		КонецЕсли;    
		НайденныйДок=Запрос.Документ;  
		Стр=НайденныйДок.Вид(); 
		// Исключаем кредитную ноту из продажи товаров
		Если (Стр="РасходнаяНакладнаяНал") ИЛИ (Стр="РасходнаяНакладная")  Тогда
			Если НайденныйДок.ПризнакНакладной=Перечисление.ПризнРасхНакл.КредитнаяНота Тогда
				Продолжить;
			КонецЕсли;                         
		КонецЕсли;
		Если (Стр="ПриходнаяНакладная") ИЛИ 
			 (Стр="ПриходнаяКредит") ИЛИ
			(Стр="ПриходнаяРеализатора") Тогда 
			Если НайденныйДок.ПризнакНакладной<>Перечисление.ПризнПрихНакл.ВозвратОтПокупателя Тогда
				Продолжить;
			КонецЕсли; 
			КолвоДокВозвр=0;
		Иначе         // Для расходных документов
			КолДокум=КолДокум+1;   // Количество выписанных документов для отчета по агентам
			КолвоДок=0;
			СуммаДок=0;
			Кл=НайденныйДок.Клиент;
		// Запишем нового клиента в список для отчета по агентам
			ТекКол=СпКл.РазмерСписка();
			Если ТекКол>0 Тогда
				Если СпКл.НайтиЗначение(Кл)=0 Тогда
					СпКл.ДобавитьЗначение(Кл);
				КонецЕсли;
			Иначе
				СпКл.ДобавитьЗначение(Кл);
			КонецЕсли;
		КонецЕсли;			
		// 	Получим количество товара по документам
		Если (Стр="РасходнаяНакладнаяНал") ИЛИ
			(Стр="РасходнаяНакладная") ИЛИ
			(Стр="РасходнаяРеализатора")     Тогда
			КолвоДок=НайденныйДок.Итог("Количество")*НайденныйДок.Итог("Коэффициент");  
		ИначеЕсли (Стр="ПриходнаяНакладная") ИЛИ 
			(Стр="ПриходнаяКредит") ИЛИ
			(Стр="ПриходнаяРеализатора") Тогда
			КолвоДокВозвр=НайденныйДок.Итог("Количество")*НайденныйДок.Итог("Коэффициент");
		КонецЕсли; 
		// Получим  фактическую сумму продажи  по документам   в базовой валюте
		Если  (Стр="РасходнаяНакладнаяНал") ИЛИ
			(Стр="РасходнаяНакладная") ИЛИ
			(Стр="РасходнаяРеализатора")	Тогда
				
//				Пересчет(Запрос.СуммаОбщ,Запрос.Документ.Валюта,Запрос.Документ.Курс,Рубли,Рубли.Курс.Получить(Запрос.Документ))
				
			//СуммаДок=НайденныйДок.Итог("Сумма")*НайденныйДок.Курс;
			//НалогДок=НайденныйДок.Итог("НДС")*НайденныйДок.Курс;
			//СкидкаДок=НайденныйДок.Итог("Скидка")*НайденныйДок.Курс;
			СуммаДок=Пересчет(НайденныйДок.Итог("Сумма"),НайденныйДок.Валюта,НайденныйДок.Курс,Рубли,КурсДляВалюты(Рубли,НайденныйДок));
			НалогДок=Пересчет(НайденныйДок.Итог("НДС"),НайденныйДок.Валюта,НайденныйДок.Курс,Рубли,КурсДляВалюты(Рубли,НайденныйДок));
			СкидкаДок=Пересчет(НайденныйДок.Итог("Скидка"),НайденныйДок.Валюта,НайденныйДок.Курс,Рубли,КурсДляВалюты(Рубли,НайденныйДок));
		КонецЕсли;

		// Получим сумму в розничных ценах на дату документа
		Если (Стр="РасходнаяНакладнаяНал") ИЛИ (Стр="РасходнаяНакладная")
			    	ИЛИ (Стр="РасходнаяРеализатора")  Тогда
			ВсегоПродано=ВсегоПродано+КолвоДок;
			ПродСумма=ПродСумма+СуммаДок; 
			ПродНалог=ПродНалог+НалогДок;
			ПродСкидка=ПродСкидка+СкидкаДок; 
		Иначе   // Для возврата
			ВозвратТовар=ВозвратТовар+КолвоДокВозвр;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


//*******************************************
// Процедура генерации запроса   по складам
Процедура ПродВсего()
	Перем Стр;
	начЛог = семЗаписатьЛогНач( "Отчет", "Расход товаров за период", "Обработка", "Формирование отчета" );
	ДатаКон=ДатаКонца;
	Заг="";
	Заг1="";
	Заг2="";

	ЗапросС=СоздатьОбъект("Запрос"); 
	
	ТекстЗапроса = "SELECT Спр.ID [Ссылка $Справочник.Номенклатура]
	|				FROM $Справочник.Номенклатура AS Спр With (NOLOCK)
	|				WHERE (Спр.ISMARK = 0)
	|";
	

	ЗапросСКЛ=СоздатьОбъект("ODBCRecordSet");
	глДобавитьФильтр(ЗапросСКЛ,ТекстЗапроса,"",,"ID",ВыбТовар,"Номенклатура");
	глДобавитьФильтр(ЗапросСКЛ,ТекстЗапроса,"","$Спр","Поставщик",ВыбПоставщик,"Контрагенты");
	
	СписокТов = СоздатьОбъект("ТаблицаЗначений");
	СписокТов = ЗапросСКЛ.ВыполнитьИнструкцию(ТекстЗапроса);
	
	ТекстЗап=
	"//{{ЗАПРОС(СписокТов)  
	|ТОВАР=Справочник.Номенклатура.ТекущийЭлемент; 
	|"//}}
	;	
	Если  ФлКод=1 Тогда 
		Если (ВыбПоставщик.Выбран()=0) И (ВыбАгент.Выбран()=0) Тогда
			ТекстЗап = ТекстЗап + "Группировка Товар упорядочить по Товар.Код Все ВошедшиеВЗапрос;";
		Иначе
			ТекстЗап = ТекстЗап + "Группировка Товар упорядочить по Товар.Код Без Групп;";
		КонецЕсли;
	Иначе  
		Если (ВыбПоставщик.Выбран()=0) И (ВыбАгент.Выбран()=0) Тогда
			ТекстЗап = ТекстЗап + "Группировка Товар упорядочить по Товар.Наименование Все ВошедшиеВЗапрос;"; 
		Иначе
			ТекстЗап = ТекстЗап + "Группировка Товар упорядочить по Товар.Наименование Без Групп;"; 
		КонецЕсли;
	КонецЕсли; 
		
    ТекстЗап = ТекстЗап + 	"Условие (ТОВАР в ВыбТовар);
							|Условие (ТОВАР.Поставщик в ВыбПоставщик);";
	
	// Если ошибка в запросе, то выход из процедуры
	Если ЗапросС.Выполнить(ТекстЗап)=0 Тогда
		Возврат;
	КонецЕсли;   

	СпКл=СоздатьОбъект("СписокЗначений");
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");

	ТекстЗап = "Период с ДатаНачала";
 	Если ДатаКонца>=ПолучитьДатуТА() Тогда
		ДатаКонца=ПолучитьДатуТА();
		ДатаКон=ДатаКонца;
		ТекстЗап= ТекстЗап+";";
	Иначе
		ТекстЗап= ТекстЗап+" по ДатаКонца;";
	КонецЕсли; 
	
	ТекстЗап = ТекстЗап + 
	"//{{ЗАПРОС(ПродВсего)
	|ТОВАР = Документ.РасходнаяНакладнаяНал.Товар,Документ.РасходнаяНакладная.Товар,
	| Документ.ПриходнаяНакладная.Товар,Документ.Списание.Товар;
	|Агент = Документ.РасходнаяНакладнаяНал.Агент,Документ.РасходнаяНакладная.АгентПоТовару,Документ.Списание.Агент;  
	|Клиент = Документ.РасходнаяНакладнаяНал.Клиент,Документ.РасходнаяНакладная.Клиент,
	| Документ.ПриходнаяНакладная.Клиент,Документ.Списание.Клиент;     
	|Валюта= Документ.РасходнаяНакладнаяНал.Валюта, Документ.РасходнаяНакладная.Валюта,
	| Документ.ПриходнаяНакладная.Валюта; 
	|Курс= Документ.РасходнаяНакладнаяНал.Курс, Документ.РасходнаяНакладная.Курс,
	| Документ.ПриходнаяНакладная.Курс;
	|Склад= Документ.РасходнаяНакладнаяНал.Склад,Документ.РасходнаяНакладная.Склад,
	| Документ.ПриходнаяНакладная.Склад,Документ.Списание.Склад;     
	|Поставщик= Документ.РасходнаяНакладнаяНал.Товар.Поставщик,Документ.РасходнаяНакладная.Товар.Поставщик,
	| Документ.ПриходнаяНакладная.Товар.Поставщик,Документ.Списание.Товар.Поставщик;     
		|КОЛВО = Документ.РасходнаяНакладнаяНал.Количество, Документ.РасходнаяНакладная.Количество,
	| Документ.ПриходнаяНакладная.Количество,Документ.Списание.Количество;     
	|СУММ = Документ.РасходнаяНакладнаяНал.Сумма, Документ.РасходнаяНакладная.Сумма,
	| Документ.ПриходнаяНакладная.Сумма,Документ.Списание.Сумма;     
	|Коэфф = Документ.РасходнаяНакладнаяНал.Коэффициент, Документ.РасходнаяНакладная.Коэффициент,
	| Документ.ПриходнаяНакладная.Коэффициент,Документ.Списание.Коэффициент;     
	|Скидка = Документ.РасходнаяНакладнаяНал.Скидка, Документ.РасходнаяНакладная.Скидка,Документ.Списание.Скидка;
	|Налог = Документ.РасходнаяНакладнаяНал.НДС, Документ.РасходнаяНакладная.НДС,
	| Документ.ПриходнаяНакладная.НДС,Документ.Списание.НДС;     
	|ВозвратСум = Документ.ПриходнаяНакладная.Сумма;
	|ВозвратНалог = Документ.ПриходнаяНакладная.НДС;
	|ПризнакНакладной = Документ.РасходнаяНакладнаяНал.ПризнакНакладной, Документ.РасходнаяНакладная.ПризнакНакладной,
	| 	     Документ.ПриходнаяНакладная.ПризнакНакладной;
	|КатегорияСписания = Документ.Списание.КатегорияСписания;
	|Функция СуммаОбщ = Сумма(Сумм);   
	|Функция НалогОбщ = Сумма(Налог);   
	|Функция КолвоОбщ = Сумма(КОЛВО*Коэфф);
	|Функция КоэффОбщ = Сумма(Коэфф);   
	|Функция СкидкаОбщ = Сумма(Скидка); 
	|Функция ВозвратОбщ = Сумма(ВозвратСум+ВозвратНалог);
	|"//}}ЗАПРОС
	;        
	Если  ФлКод=1 Тогда 
		Если (ВыбПоставщик.Выбран()=0) И (ВыбАгент.Выбран()=0) Тогда
			ТекстЗап = ТекстЗап + "Группировка Товар упорядочить по Товар.Код Все ВошедшиеВЗапрос;";
		Иначе
			ТекстЗап = ТекстЗап + "Группировка Товар упорядочить по Товар.Код Без Групп;";
		КонецЕсли;
	Иначе  
		Если (ВыбПоставщик.Выбран()=0) И (ВыбАгент.Выбран()=0) Тогда
			ТекстЗап = ТекстЗап + "Группировка Товар упорядочить по Товар.Наименование Все ВошедшиеВЗапрос;"; 
		Иначе
			ТекстЗап = ТекстЗап + "Группировка Товар упорядочить по Товар.Наименование Без Групп;"; 
		КонецЕсли;
	КонецЕсли; 
	ТекстЗап = ТекстЗап + "Группировка Документ;";

	ТекстЗап = ТекстЗап + "Условие ((КатегорияСписания = Перечисление.КатегорииСписания.Категория1) ИЛИ (КатегорияСписания = Перечисление.КатегорииСписания.Категория2));";
	
	Если ВыбСклад.Выбран() = 0 Тогда
		Если ЯзыкОтчета="LV" Тогда
			Заг = "Pa visўm noliktavam. ";	
		ИначеЕсли ЯзыкОтчета="EE" Тогда	
			Заг = "Kхik laod. ";	
		КонецЕсли;
	ИначеЕсли ВыбСклад.ЭтоГруппа() = 1 Тогда
		Заг ="Noliktavu grupa " + ВыбСклад.Наименование+". ";
		ТекстЗап = ТекстЗап  + "Условие (Склад в ВыбСклад);";
	Иначе
		Заг ="Noliktava " +ВыбСклад.Наименование+". ";
		ТекстЗап = ТекстЗап + "Условие (Склад = ВыбСклад);";
	КонецЕсли;
	
    Если ВыбТовар.Выбран() = 0 Тогда
		Если ЯзыкОтчета="LV" Тогда
			Заг1 = "Pa visўm prec§m. ";
		ИначеЕсли ЯзыкОтчета="EE" Тогда	
			Заг1 = "Kхik tooted. ";	
		КонецЕсли;
	ИначеЕсли ВыбТовар.ЭтоГруппа() = 1 Тогда
		Заг1 ="Grupa " + ВыбТовар.Код+"  "+ ВыбТовар.Наименование+" precem. ";
		ТекстЗап = ТекстЗап + "Условие (ТОВАР в ВыбТовар);";
	Иначе
		Заг1 ="Prece " + ВыбТовар.Код+"  " + ВыбТовар.Наименование+". ";
		ТекстЗап = ТекстЗап + "Условие (ТОВАР = ВыбТовар);";
	КонецЕсли; 
	
    Если ВыбПоставщик.Выбран() = 0 Тогда
		Если ЯзыкОтчета="LV" Тогда
		Заг2 = "Pa visiem piegўdўtўjiem. "; 
		ИначеЕсли ЯзыкОтчета="EE" Тогда	
		Заг2 = "Kхik kliendid. "; 
		КонецЕсли;
		ФлВыбПост=0; 
	ИначеЕсли ВыбПоставщик.ЭтоГруппа() = 1 Тогда 
		Заг2 ="Grupa Piegўdўtўji   " + ВыбПоставщик.Наименование+". ";   
		ТекстЗап = ТекстЗап + "Условие (Поставщик в ВыбПоставщик);";
	Иначе
		Заг2 ="Piegўdўtўjs " + ВыбПоставщик.Код+"  "+ ВыбПоставщик.Наименование+". ";   
		ТекстЗап = ТекстЗап + "Условие (Поставщик = ВыбПоставщик);";
		ФлВыбПост=1;
	КонецЕсли;   
	
    Если ВыбАгент.Выбран() = 0 Тогда
		Заг3 = " "; 
	ИначеЕсли ВыбАгент.ЭтоГруппа() = 1 Тогда 
		Сообщить("Выберите конкретного агента,а не группу");
		Возврат;
	Иначе
		Заг3 ="AЄents " + ВыбАгент.Наименование+". ";
		ТекстЗап = ТекстЗап + "Условие (Агент = ВыбАгент);";
	КонецЕсли;    
	
    Если ВыбКлиент.Выбран() = 0 Тогда
		//Заг4 = "Pa visўm klientiem. ";
	ИначеЕсли ВыбКлиент.ЭтоГруппа() = 1 Тогда
		Заг4 ="Кlientu  grupa " + ВыбКлиент.Наименование;
		ТекстЗап = ТекстЗап + "Условие (Клиент в ВыбКлиент);";
	Иначе
		Заг4 ="Klients " + ВыбКлиент.Код+"  " + ВыбКлиент.Наименование+". ";
		Если флГлКлиент = 1 Тогда
			табл = семПолучитьСписокПодчКлиентов( ВыбКлиент );
			сп = СоздатьОбъект( "СписокЗначений" );
			табл.Выгрузить(сп,,,"Клиент");
			сп.ДобавитьЗначение(ВыбКлиент);
			ТекстЗап = ТекстЗап + "Условие (Клиент в сп);";
		Иначе
			ТекстЗап=ТекстЗап+"Условие (Клиент=ВыбКлиент);";
		КонецЕсли;
	КонецЕсли; 

	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗап) = 0 Тогда
		Возврат;
	КонецЕсли;

	//Создание объекта типа Запрос
	// Получение остатков товара на конец периода
	ЗапросО = СоздатьОбъект("Запрос");

	ТекстЗап = "Период с ДатаНачала";
 	Если ДатаКонца>=ПолучитьДатуТА() Тогда
		ДатаКонца=ПолучитьДатуТА();
		ДатаКон=ДатаКонца;
		ТекстЗап= ТекстЗап+";";
	Иначе
		ТекстЗап= ТекстЗап+" по ДатаКонца;";
	КонецЕсли;  
	
	Если ВыбСклад.Выбран()=0 Тогда
		ТекстЗап = ТекстЗап +
		"//{{ЗАПРОС(КонОстатки)  
		|Товар=Регистр.ОстаткиТоваров.Товар; 
		|Кол=Регистр.ОстаткиТоваров.ОстатокТовара; 
		|Группировка Товар;
		|"//}}ЗАПРОС
		; 
	Иначе		
		ТекстЗап = ТекстЗап +
		"//{{ЗАПРОС(КонОстатки)  
		|Товар=Регистр.ОстаткиТоваров.Товар;
		|Склад=Регистр.ОстаткиТоваров.Склад;
		|Кол=Регистр.ОстаткиТоваров.ОстатокТовара; 
		|Группировка Товар;
		|"//}}ЗАПРОС
		;    
	КонецЕсли;        
	
	Если ВыбСклад.Выбран()=0 Тогда
        // По всем складам - сводные остатки товара
		ТекстЗап=ТекстЗап+ "
		|Функция КонКол = КонОст(Кол);
		|Функция РасхКол=Расход(Кол);
		|"//}}ЗАПРОС
		;  
	Иначе 
	        // Группировка по складам   - остатки по конкретному складу
		ТекстЗап = ТекстЗап + "
		|Группировка Склад;
		|Функция КонКол = КонОст(Кол); 
		|Функция РасхКол=Расход(Кол);
		|"//}}ЗАПРОС
		;  
		ТекстЗап = ТекстЗап + "Условие (Склад = ВыбСклад);";
	КонецЕсли;
	
	ТекстЗап = ТекстЗап + "Условие (Товар в ВыбТовар);";
	
	
	// Если ошибка в запросе, то выход из процедуры
	Если ЗапросО.Выполнить(ТекстЗап)=0 Тогда
		Возврат;
	КонецЕсли;   
	

	 // формируем таблицу 1С:Торговля
	// Подготовка к заполнению выходных форм данными запроса
		Таб=СоздатьОбъект("Таблица");
		Таб.ВывестиСекцию("Отчет_"+ЯзыкОтчета);	
		
		ВсегоПрод=0; 
		ВсегоНалог=0;
		ВсегоСкидка=0;
	 	ЧислоСтрок=0; 
	 	ВсегоКонКол=0;
	 	ВсегоКонСум=0;
	 	ИтогВсегоПродано=0;   // Общее количество товара по расходу  
	 	ИтогВсегоПроданоУпак=0;
	 	ВсегоВозвратТовар=0;
	 	КолДокум=0;

		ТекстЗапроса = "SELECT ПартииТоваровОстатки.Склад [Склад $Справочник.МестаХранения]
		|					, NullIf(ПартииТоваровОстатки.СрокРеализации, '17530101') СрокРеализации
		|					, ПартииТоваровОстатки.ПрихДокумент [ПрихДокумент $Документ]
		|					, Жур.IDDOCDEF [ПрихДокумент_вид $ВидДокумента]
		|					, ПартииТоваровОстатки.ОстатокТовараОстаток Ост
		|				FROM $РегистрОстатки.ПартииТоваров(,,
		|													(Фирма = :Фирма)
		|													AND (Товар = :Товар)
		|													AND (Статус <> :Статус) "+?(ВыбСклад.Выбран()=1," AND (Склад = :Склад)","")+",
		|													(Склад, ПрихДокумент, СрокРеализации),
		|													ОстатокТовара) AS ПартииТоваровОстатки
		|				INNER JOIN _1sjourn Жур (NOLOCK) ON Жур.IDDOC = RIGHT(ПартииТоваровОстатки.ПрихДокумент,9)
	//	|				WHERE ПартииТоваровОстатки.ОстатокТовараОстаток>0 -- не выводим отрицательные остатки 
		|";

		ЗапросСКЛ	= СоздатьОбъект("ODBCRecordSet");

// Получим список товаров  
		СписокТов=СоздатьОбъект("СписокЗначений");
		Пока ЗапросС.Группировка("ТОВАР")=1 Цикл
			   СписокТов.ДобавитьЗначение(ЗапросС.Товар);
		КонецЦикла;

		РазмТовСписка=СписокТов.РазмерСписка();
		ТекНом=1;
		Пока Запрос.Группировка("ТОВАР") = 1 Цикл  
		// Получим начальные и конечные остатки товара   
			Предст="";   
			ПродСумма=0;   
			ПродНалог=0;
			ПродСкидка=0;
			ВсегоПродано=0; 
			ВозвратТовар=0;
			ВсегоЗакуплено=0;  
			КонСум=0;
			
			Пока  ТекНом<=РазмТовСписка  Цикл
				ТекТов=СписокТов.ПолучитьЗначение(ТекНом ,1);  
				ТекНом=ТекНом+1;
				Если (ТекТов.ЭтоГруппа()=1) Тогда
					Таб.ВывестиСекцию("Группа1");  
					Состояние("В отчет выведено "+ЧислоСтрок+" строк."); 
					ЧислоСтрок=ЧислоСтрок+1;
				Иначе
		// Получим  конечные остатки    
		 			Если ВыбСклад.Выбран()=0 Тогда
						КонечноеКол=?(ЗапросО.Получить(ТекТов.ТекущийЭлемент())=1,ЗапросО.КонКол,0); 
	  				Иначе
						КонечноеКол=?(ЗапросО.Получить(ТекТов.ТекущийЭлемент(),ВыбСклад.ТекущийЭлемент())=1,ЗапросО.КонКол,0);   
					КонецЕсли;             
					
					печСроки=Шаблон("[КонечноеКол #Ч15.3]");
					Если флСрокиТоваров=1 Тогда
						
						ЗапросСКЛ.УстановитьТекстовыйПараметр("Фирма",Константа.ОсновнаяФирма);
						ЗапросСКЛ.УстановитьТекстовыйПараметр("Товар",ТекТов);
						ЗапросСКЛ.УстановитьТекстовыйПараметр("Склад",ВыбСклад);
						ЗапросСКЛ.УстановитьТекстовыйПараметр("Статус",Отданный);
						итСроки = СоздатьОбъект("ИндексированнаяТаблица");
						ЗапросСКЛ.ВыполнитьИнструкцию(ТекстЗапроса,итСроки);
					
						итСроки.Свернуть("Склад,СрокРеализации","Ост");
						итСроки.Группировать("СрокРеализации:СрокРеализации;","Ост");

						печСроки="";
						//итСрокиРеализации = итСроки.тзПотомки;
						итСроки.ВыбратьСтроки();
						Пока итСроки.ПолучитьСтроку() = 1 Цикл
							Если итСроки.Ост<=0 Тогда
								Продолжить;
							КонецЕсли;
							Если ПустоеЗначение(печСроки)=0 Тогда
								печСроки=печСроки+РазделительСтрок;
							КонецЕсли;
							печСроки=печСроки+""+итСроки.СрокРеализации+" - "+итСроки.Ост;
						КонецЦикла;
						
					КонецЕсли;
					
				
				    ЦенаТовара=ЦенаТовараПоКатегорииДляТовара(ТекТов,КатегорияЦены);
 					КонСум=ЦенаТовара*КонечноеКол;
			//  Итоговые данные
					ВсегоКонКол=ВсегоКонКол+КонечноеКол;
					ВсегоКонСум=ВсегоКонСум+КонСум;   
				КонецЕсли;
				Если Запрос.Товар=ТекТов Тогда
				// Далее идет анализ оборотов по товару
					Прервать; 
				Иначе 
					Если (ТекТов.ЭтоГруппа()=0) И  (КонечноеКол<>0)	Тогда 
						Таб.ВывестиСекцию("Товар1");		
						Состояние("В отчет выведено "+ЧислоСтрок+" строк.");
						ЧислоСтрок=ЧислоСтрок+1;  
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;	
			
			Если Запрос.Товар.ЭтоГруппа()=1 Тогда  
					Продолжить;
			КонецЕсли;
//			Если (ВыбПоставщик.Выбран()=1) И (ВыбПоставщик<>ТекТов.Поставщик) Тогда
//				Продолжить;
//			КонецЕсли;
				ПродСумма=0; 
				ПродНалог=0;
				ПродСкидка=0; 
				ВсегоПродано=0; 
				ВозвратТовар=0;
				ВсегоЗакуплено=0;  
		
				ВычислимОборот();  
                //  Итоговые данные
				ВсегоПрод=ВсегоПрод+ПродСумма; 
				ВсегоНалог=ВсегоНалог+ПродНалог;
				ВсегоСкидка=ВсегоСкидка+ПродСкидка;
				ИтогВсегоПродано=ИтогВсегоПродано+ВсегоПродано;  
				ВсегоВозвратТовар=ВсегоВозвратТовар+ВозвратТовар;
				СрОбъемПрод=(ВсегоПродано-ВозвратТовар)/(Число(ДатаКонца-ДатаНачала+1)/7);
				If СрОбъемПрод>Int(СрОбъемПрод) Then
					СрОбъемПрод=Int(СрОбъемПрод)+1; 
				EndIf;  
				ЗапасНедель=0;
				НедостатокНедель=0;
				ЗапасТовара=0;
			// Рассчитаем число упаковок 
			Если Запрос.Товар.Выбран()<>0 Тогда
				Спр=СоздатьОбъект("Справочник.Единицы");
				Спр.ИспользоватьВладельца(Запрос.Товар);
				Спр.ВыбратьЭлементы();
				Флаг=0; 
				ЕдУпак=Перечисление.ЕдиницыИзмерения.Упаковка;
				Пока Спр.ПолучитьЭлемент()>0 Цикл
					Если Спр.Единица=ЕдУпак Тогда
			   			// единица упаковка есть в справочнике
						КоэфУпак=Спр.Коэффициент;
						Если КоэфУпак=0 Тогда
							Сообщить("Для товара "+Запрос.Товар.Код + " " + Запрос.Товар + " не задан коэффициент упаковки!");
						Иначе
							ВсегоПроданоУпак=(ВсегоПродано-ВозвратТовар)/КоэфУпак;
						КонецЕсли;
						Если Цел(ВсегоПроданоУпак)<ВсегоПроданоУпак Тогда
							ВсегоПроданоУпак=Цел(ВсегоПроданоУпак)+1;
						КонецЕсли;
						ИтогВсегоПроданоУпак=ИтогВсегоПроданоУпак+ВсегоПроданоУпак;
						Флаг=1;
						Прервать;
					КонецЕсли;
				КонецЦикла; 
				Если Флаг=0 Тогда
					// единица упаковка не найдена
					ВсегоПроданоУпак=0; 
					КоэфУпак=0;
				КонецЕсли; 
			// C=A/B
				Если СрОбъемПрод=0 Тогда
					ЗапасНедель=0;
				Иначе
					ЗапасНедель=КонечноеКол/СрОбъемПрод;  
					ЗапасНедель=Окр(ЗапасНедель,1,1);
//					Если Цел(ЗапасНедель)<ЗапасНедель Тогда
//						ЗапасНедель=Цел(ЗапасНедель)+1;
//					КонецЕсли;
				КонецЕсли;
			// D=Z-A/B
				НедостатокНедель=КолНедель-ЗапасНедель;
			// E=D*B
				НедостатокТовара=НедостатокНедель*СрОбъемПрод;
			// Недостаток упаковок
				Если КоэфУпак=0 Тогда
					НедостатокУпак=0;
				Иначе
					НедостатокУпак=НедостатокТовара/КоэфУпак;
					Если Цел(НедостатокУпак)<НедостатокУпак Тогда
						НедостатокУпак=Цел(НедостатокУпак)+1;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
				печСроки=Шаблон("[КонечноеКол #Ч15.3]");
				Если флСрокиТоваров=1 Тогда
					
					ЗапросСКЛ.УстановитьТекстовыйПараметр("Фирма",Константа.ОсновнаяФирма);
					ЗапросСКЛ.УстановитьТекстовыйПараметр("Товар",Запрос.Товар);
					ЗапросСКЛ.УстановитьТекстовыйПараметр("Склад",ВыбСклад);
					ЗапросСКЛ.УстановитьТекстовыйПараметр("Статус",Отданный);
					итСроки = СоздатьОбъект("ИндексированнаяТаблица");
					ЗапросСКЛ.ВыполнитьИнструкцию(ТекстЗапроса,итСроки);
				
					итСроки.Свернуть("Склад,СрокРеализации","Ост");
					итСроки.Группировать("СрокРеализации:СрокРеализации;","Ост");

					печСроки="";
					итСроки.ВыбратьСтроки();
					Пока итСроки.ПолучитьСтроку() = 1 Цикл
						Если итСроки.Ост<=0 Тогда
							Продолжить;
						КонецЕсли;
						Если ПустоеЗначение(печСроки)=0 Тогда
							печСроки=печСроки+РазделительСтрок;
						КонецЕсли;
						печСроки=печСроки+""+итСроки.СрокРеализации+" - "+итСроки.Ост;
					КонецЦикла;
					
				КонецЕсли;
			
			
				Таб.ВывестиСекцию("Товар");
				Состояние("В отчет выведено "+ЧислоСтрок+" строк."); 
				ЧислоСтрок=ЧислоСтрок+1;
		КонецЦикла;    
		// Проверим,не остался ли еще товар с нулевой продажей 
			Предст="";   
			ПродСумма=0;  
			ПродСкидка=0;
			ВсегоПродано=0; 
			ВозвратТовар=0;
			ВсегоЗакуплено=0; 
			КонечноеКол=0;
			КонСум=0;
			Пока  ТекНом<=РазмТовСписка  Цикл
				ТекТов=СписокТов.ПолучитьЗначение(ТекНом ,1);  
				ТекНом=ТекНом+1;
				Если (ТекТов.ЭтоГруппа()=1) Тогда
						Таб.ВывестиСекцию("Группа1"); 
						Состояние("В отчет выведено "+ЧислоСтрок+" строк.");
						ЧислоСтрок=ЧислоСтрок+1;
				Иначе
		// Получим  конечные остатки  
	 			Если ВыбСклад.Выбран()=0 Тогда
					КонечноеКол=?(ЗапросО.Получить(ТекТов.ТекущийЭлемент())=1,ЗапросО.КонКол,0); 
  				Иначе
					КонечноеКол=?(ЗапросО.Получить(ТекТов.ТекущийЭлемент(),ВыбСклад.ТекущийЭлемент())=1,ЗапросО.КонКол,0);   
				КонецЕсли; 
				
				ЦенаТовара=ЦенаТовараПоКатегорииДляТовара(Запрос.Товар,КатегорияЦены);
  				КонСум=ЦенаТовара*КонечноеКол;
  					  
			//  Итоговые данные
					ВсегоКонКол=ВсегоКонКол+КонечноеКол;
					ВсегоКонСум=ВсегоКонСум+КонСум;   
				КонецЕсли;
				Если (ТекТов.ЭтоГруппа()=0) И  (КонечноеКол<>0)
																Тогда   
						Таб.ВывестиСекцию("Товар1");		
						Состояние("В отчет выведено "+ЧислоСтрок+" строк.");
						ЧислоСтрок=ЧислоСтрок+1;
				КонецЕсли;  
			КонецЦикла;	
		Таб.ВывестиСекцию("Итоги_"+ЯзыкОтчета);		
		// Вывод заполненной формы
		Таб.Опции(0,0,7,0,ПарСтрОтчДлинн);
		Таб.Защита(Константа.ФлагЗащитыТаблиц);
		Таб.ТолькоПросмотр(1);
		Таб.Показать("РасходЗаПериод ","");
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры
//-------------------------------    
// Отчет по продажам Агентов
Процедура ПоАгентам()   
	
	Перем Стр;
	начЛог = семЗаписатьЛогНач( "Отчет", "Расход товаров за период", "Обработка", "Формирование отчета (по арентам)" );

	ДатаКон=ДатаКонца;
	Заг="";
	Заг1="";
	Заг2="";  
	ФлагВыбора=0;

//	Сообщить("Начало: "+ТекущееВремя());
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");

	ТекстЗап = "Период с ДатаНачала";
 	Если ДатаКонца>=ПолучитьДатуТА() Тогда
		ДатаКонца=ПолучитьДатуТА();
		ДатаКон=ДатаКонца;
		ТекстЗап= ТекстЗап+";";
	Иначе
		ТекстЗап= ТекстЗап+" по ДатаКонца;";
	КонецЕсли; 
		ТекстЗап = ТекстЗап + 
		"//{{ЗАПРОС(ПродВсего)
		|ТОВАР = Документ.РасходнаяНакладнаяНал.Товар, Документ.РасходнаяНакладная.Товар, 
		| 		 Документ.ПриходнаяНакладная.Товар;
		|Клиент = Документ.РасходнаяНакладнаяНал.Клиент,Документ.РасходнаяНакладная.Клиент, Документ.РасходнаяРеализатора.Клиент,
		| 		  Документ.ПриходнаяНакладная.Клиент, Документ.ПриходнаяРеализатора.Клиент;
		|Валюта= Документ.РасходнаяНакладнаяНал.Валюта, Документ.РасходнаяНакладная.Валюта, Документ.РасходнаяРеализатора.Валюта,
		| 		 Документ.ПриходнаяНакладная.Валюта, Документ.ПриходнаяРеализатора.Валюта;
		|Курс= Документ.РасходнаяНакладнаяНал.Курс, Документ.РасходнаяНакладная.Курс, Документ.РасходнаяРеализатора.Курс,
		| 	   Документ.ПриходнаяНакладная.Курс, Документ.ПриходнаяРеализатора.Курс;
		|Склад= Документ.РасходнаяНакладнаяНал.Склад,Документ.РасходнаяНакладная.Склад, Документ.РасходнаяРеализатора.Склад,
		| 	    Документ.ПриходнаяНакладная.Склад, Документ.ПриходнаяРеализатора.Склад;
		|Агент= Документ.РасходнаяНакладнаяНал.Агент,Документ.РасходнаяНакладная.Агент, Документ.РасходнаяРеализатора.Агент,
		| 	    Документ.ПриходнаяНакладная.Агент, Документ.ПриходнаяРеализатора.Агент;
		|КОЛВО = Документ.РасходнаяНакладнаяНал.Количество, Документ.РасходнаяНакладная.Количество, Документ.РасходнаяРеализатора.Количество,
		| 	    Документ.ПриходнаяНакладная.Количество, Документ.ПриходнаяРеализатора.Количество;
		|СУММ = Документ.РасходнаяНакладнаяНал.Сумма, Документ.РасходнаяНакладная.Сумма, Документ.РасходнаяРеализатора.Сумма;               
		|СУММНАЛ = Документ.РасходнаяНакладнаяНал.Сумма;
		|НАЛНДС = Документ.РасходнаяНакладнаяНал.НДС;
		|Коэфф = Документ.РасходнаяНакладнаяНал.Коэффициент, Документ.РасходнаяНакладная.Коэффициент, Документ.РасходнаяРеализатора.Коэффициент,
		| 	     Документ.ПриходнаяНакладная.Коэффициент, Документ.ПриходнаяРеализатора.Коэффициент;
		|Скидка = Документ.РасходнаяНакладнаяНал.Скидка, Документ.РасходнаяНакладная.Скидка, Документ.РасходнаяРеализатора.Скидка;
		|Налог = Документ.РасходнаяНакладнаяНал.НДС, Документ.РасходнаяНакладная.НДС, Документ.РасходнаяРеализатора.НДС,
		| 	     Документ.ПриходнаяНакладная.НДС, Документ.ПриходнаяРеализатора.НДС;
		|ВозвратСум = Документ.ПриходнаяНакладная.Сумма, Документ.ПриходнаяРеализатора.Сумма;
		|ВозвратНалог = Документ.ПриходнаяНакладная.НДС, Документ.ПриходнаяРеализатора.НДС;
		|ПризнакНакладной = Документ.РасходнаяНакладнаяНал.ПризнакНакладной, Документ.РасходнаяНакладная.ПризнакНакладной, Документ.РасходнаяРеализатора.ПризнакНакладной,
		| 	     Документ.ПриходнаяНакладная.ПризнакНакладной, Документ.ПриходнаяРеализатора.ПризнакНакладной;
		|Функция СуммаОбщ = Сумма(Сумм);
		|Функция СуммаОбщНал = Сумма(СуммНал+НАЛНДС);
		|Функция КолвоОбщ = Сумма(КОЛВО) Когда (ПризнакНакладной<>Перечисление.ПризнПрихНакл.ВозвратОтПокупателя);
		|Функция КоэффОбщ = Сумма(Коэфф) Когда (ПризнакНакладной<>Перечисление.ПризнПрихНакл.ВозвратОтПокупателя);
		|Функция СкидкаОбщ = Сумма(Скидка);
		|Функция НалогОбщ = Сумма(Налог) Когда (ПризнакНакладной<>Перечисление.ПризнПрихНакл.ВозвратОтПокупателя);
		|Функция ВозвратОбщ = Сумма(ВозвратСум);
		|Группировка Агент;
		|"//}}ЗАПРОС
		;        
                                
		
	ТекстЗап = ТекстЗап + "Группировка Документ;";    
	
	Если ВыбАгент.Выбран()=0 Тогда
		//Без условий  
		Заг="Atskaite pa visiem aЄentiem";
	ИначеЕсли ВыбАгент.ЭтоГруппа()=1 Тогда
		ТекстЗап=ТекстЗап+"Условие (Агент в ВыбАгент);";
		Заг="AЄentu gruppa "+ВыбАгент.Наименование+".";
	Иначе
		ТекстЗап=ТекстЗап+"Условие (Агент=ВыбАгент);";
		Заг="AЄents "+ВыбАгент.Наименование+".";
	КонецЕсли;   
	
    Если ВыбКлиент.Выбран() = 0 Тогда
		//Заг1 = "Pa visўm klientiem. ";
	ИначеЕсли ВыбКлиент.ЭтоГруппа() = 1 Тогда
		Заг1 ="Кlientu  grupa " + ВыбКлиент.Наименование;
		ТекстЗап = ТекстЗап + "Условие (Клиент в ВыбКлиент);";
	Иначе
		Заг1 ="Klients " + ВыбКлиент.Код+"  " + ВыбКлиент.Наименование+". ";
		Если флГлКлиент = 1 Тогда
			табл = семПолучитьСписокПодчКлиентов( ВыбКлиент );
			сп = СоздатьОбъект( "СписокЗначений" );
			табл.Выгрузить(сп,,,"Клиент");
			сп.ДобавитьЗначение(ВыбКлиент);
			ТекстЗап = ТекстЗап + "Условие (Клиент в сп);";
		Иначе
			ТекстЗап=ТекстЗап+"Условие (Клиент=ВыбКлиент);";
		КонецЕсли;
	КонецЕсли; 
	                       
	Если ВыбСклад.Выбран() = 0 Тогда
		Если ЯзыкОтчета="LV" Тогда
			Заг4 = "Pa visўm noliktavam. ";
		ИначеЕсли ЯзыкОтчета="EE" Тогда	
			Заг4 = "Kхik laod. ";
		КонецЕсли;
	ИначеЕсли ВыбСклад.ЭтоГруппа() = 1 Тогда
		Заг4 ="Noliktavu grupa " + ВыбСклад.Наименование+". ";
		ТекстЗап = ТекстЗап  + "Условие (Склад в ВыбСклад);";
	Иначе
		Заг4 ="Noliktava " +ВыбСклад.Наименование+". ";
		ТекстЗап = ТекстЗап + "Условие (Склад = ВыбСклад);";
	КонецЕсли;
	
    Если ВыбТовар.Выбран() = 0 Тогда  
        	Заг2="";
//		Заг2= "Pa visўm prec§m. ";
	ИначеЕсли ВыбТовар.ЭтоГруппа() = 1 Тогда
		Заг2 ="Grupa " + ВыбТовар.Код+"  "+ ВыбТовар.Наименование+".";
		ТекстЗап = ТекстЗап + "Условие (ТОВАР в ВыбТовар);";   
	Иначе
		Заг2 ="Prece " + ВыбТовар.Код+"  " + ВыбТовар.Наименование+". ";
		ТекстЗап = ТекстЗап + "Условие (ТОВАР = ВыбТовар);";     
	КонецЕсли; 
	
    Если ВыбПоставщик.Выбран() = 0 Тогда   
        	Заг3="";
//		Заг3 = "Pa visiem piegўdўtўjiem. "; 
		ФлВыбПост=0; 
	ИначеЕсли ВыбПоставщик.ЭтоГруппа() = 1 Тогда 
		Заг3 ="Grupa Piegўdўtўji   " + ВыбПоставщик.Наименование+". ";   
		ТекстЗап = ТекстЗап + "Условие (ТОВАР.Поставщик в ВыбПоставщик);";
	Иначе
		Заг3 ="Piegўdўtўjs " + ВыбПоставщик.Код+"  "+ ВыбПоставщик.Наименование+". ";   
		ТекстЗап = ТекстЗап + "Условие (ТОВАР.Поставщик = ВыбПоставщик);";
		ФлВыбПост=1;   
	КонецЕсли;   
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗап) = 0 Тогда
		Возврат;
	КонецЕсли;  

	//Создание объекта типа Запрос
	// Получение информации по взаиморасчетам
	ЗапросО = СоздатьОбъект("Запрос");
	ТекстЗап = "Период с ДатаНачала";
 	Если ДатаКонца>=ПолучитьДатуТА() Тогда
		ДатаКонец=ПолучитьДатуТА();
		ДатаКон=ДатаКонец;
		ТекстЗап= ТекстЗап+";";
	Иначе
		ТекстЗап= ТекстЗап+" по ДатаКонца;";
	КонецЕсли;                                                  
	Вид1="ПриходнаяНакладная";                                      
	Вид2="РасходнаяНакладная";                                      
	Вид3="РасходнаяРеализатора";                                      
	Вид4="УслугиПеревозки";                                      
	
	
	
	ВыбФирма=глФирма;
	ТекстЗап = ТекстЗап +
	"//{{ЗАПРОС(Кредиты)
	|Фирма=Регистр.ВзаиморасчетыПокупателей.Фирма;
	|Клиент=Регистр.ВзаиморасчетыПокупателей.Клиент;
	|Агент=Регистр.ВзаиморасчетыПокупателей.Клиент.Агент;
	|Долг=Регистр.ВзаиморасчетыПокупателей.Долг;
	|СумБаз=Регистр.ВзаиморасчетыПокупателей.Долг;
	|КредДокум=Регистр.ВзаиморасчетыПокупателей.КредДокумент;
	|Группировка Агент;
	|Группировка Клиент без групп;
//	|Группировка Документ;
	|Функция КонДолг= КонОст(Долг);
	|Функция КонПросрДолг= КонОст(Долг) Когда ((((КредДокум.Вид()=Вид1)или(КредДокум.Вид()=Вид2)или(КредДокум.Вид()=Вид3)или(КредДокум.Вид()=Вид4))и(КредДокум.ДатаОплаты<ДатаКонца)));
//	|Функция ПрихДолг = Расход(СумБаз);          
	|Условие (Фирма=ВыбФирма);
	|Функция ПрихДолг = Приход(СумБаз);
	|"//}}ЗАПРОС
	;  

	Если ВыбАгент.Выбран()=0 Тогда
		//Без условий  
	ИначеЕсли ВыбАгент.ЭтоГруппа()=1 Тогда
		ТекстЗап=ТекстЗап+"Условие (Агент в ВыбАгент);";
	Иначе
		ТекстЗап=ТекстЗап+"Условие (Агент=ВыбАгент);";
	КонецЕсли;   

    Если ВыбКлиент.Выбран() = 0 Тогда
	ИначеЕсли ВыбКлиент.ЭтоГруппа() = 1 Тогда
		ТекстЗап = ТекстЗап + "Условие (Клиент в ВыбКлиент);";
	Иначе
		Если флГлКлиент = 1 Тогда
			табл = семПолучитьСписокПодчКлиентов( ВыбКлиент );
			сп = СоздатьОбъект( "СписокЗначений" );
			табл.Выгрузить(сп,,,"Клиент");
			сп.ДобавитьЗначение(ВыбКлиент);
			ТекстЗап = ТекстЗап + "Условие (Клиент в сп);";
		Иначе
			ТекстЗап=ТекстЗап+"Условие (Клиент=ВыбКлиент);";
		КонецЕсли;
	КонецЕсли; 
	
	// Если ошибка в запросе, то выход из процедуры
	Если ЗапросО.Выполнить(ТекстЗап)=0 Тогда
		Возврат;
	КонецЕсли;   

    КоличествоТоваров();
	
	 // формируем таблицу 1С:Торговля
	// Подготовка к заполнению выходных форм данными запроса
		Таб=СоздатьОбъект("Таблица"); 
		Если ФлагВыбора=0 Тогда
			Таб.ИсходнаяТаблица("Таблица1");
		Иначе
			Таб.ИсходнаяТаблица("ПоАгентам2");
		КонецЕсли;
		Таб.ВывестиСекцию("Отчет_"+ЯзыкОтчета);	
		
		ВсегоПрод=0;
		ВсегоНалог=0;
		ВсегоСкидка=0;
	 	ЧислоСтрок=0; 
	 	ВсегоКонКол=0;
	 	ВсегоКонСум=0;
	 	ИтогВсегоПродано=0;   // Общее количество товара по расходу   
	 	ВсегоВозвратТовар=0;
	 	ВсегоКолКлиентов=0;
	 	ВсегоКолДокум=0;
	 	ВсегоДолг=0;
	 	ВсегоПросрДолг=0;
	 	ВсегоПриход=0;  
	 	ВсегоВозврат=0;
	 	ВсегоКолТоваров=0;
	 	ВсегоКолТоваровУник=0;         
	 	ВсегоКолТоваровУникАгент=0;         
	 	
	 	УникальныхТоваров=СоздатьОбъект("СписокЗначений");

	 	Агенты=СоздатьОбъект("СписокЗначений");
		
		Пока Запрос.Группировка("Агент") = 1 Цикл
			Агенты.ДобавитьЗначение(Запрос.Агент);
		КонецЦикла;
                    
		Пока ЗапросО.Группировка("Агент") = 1 Цикл
			Если Агенты.НайтиЗначение(ЗапросО.Агент)=0 Тогда
				Агенты.ДобавитьЗначение(ЗапросО.Агент); 
			КонецЕсли;
		КонецЦикла;             
		
		Для к=1 По Агенты.РазмерСписка() Цикл
//		Пока ЗапросО.Группировка("Агент") = 1 Цикл

			ПоКлиентам.УдалитьСтроки();
			Агент=Агенты.ПолучитьЗначение(к);

			Если Агент.ЭтоГруппа()=1 Тогда
				Таб.ВывестиСекцию("АгентГруппа");
				Продолжить;
			КонецЕсли;
			
			ЧислоСтрок=ЧислоСтрок+1;
			
			КолКлиентов=0;
			ВозвратТовар=0;
			
            //  Итоговые данные
			ДолгПоАгенту=0;
			ДолгПоАгентуПроср=0;
			ПриходПоАгенту=0;
			ВозвратПоАгенту=0;
			ВозвратПоКлиенту=0;

			ПродСумма=0;
			ПродНалог=0;
			ПродСкидка=0;
			КолДокум=0;
			ПриходНал=0;

			Клиентов.УдалитьВсе();
			Запрос.вНачалоВыборки();
			Если Запрос.Получить(Агент,)=1 Тогда
				ВычислимОборот(); //Вычислим оборот по Документам
			КонецЕсли;     

			ЗапросТ.вНачалоВыборки();
			Рез=ЗапросТ.Получить(Агент,,);
			КолТоваров=?(Рез=1,ЗапросТ.ВсегоПрод,0);
                             
			УникальныхТоваров.УдалитьВсе();
			КолТоваровУник=0;
			КолТоваровУникАгент=0;
			Если Рез=1 Тогда
				Пока ЗапросТ.Группировка(2)=1 Цикл //По Клиентам
					Пока ЗапросТ.Группировка(3)=1 Цикл //По Товарам
						Если УникальныхТоваров.НайтиЗначение(ЗапросТ.Товар)=0 Тогда
							УникальныхТоваров.ДобавитьЗначение(ЗапросТ.Товар);
					    	КолТоваровУник=КолТоваровУник+1;							
						КонецЕсли;
						КолТоваровУникАгент=КолТоваровУникАгент+1;
					КонецЦикла;
				КонецЦикла;			
			КонецЕсли;
			
			ЗапросО.вНачалоВыборки();
			Если ЗапросО.Получить(Агент,)=1 Тогда
				Пока ЗапросО.Группировка(2)=1 Цикл
                    
					КонДолг=ЗапросО.КонДолг;  
					КонПросрДолг=ЗапросО.КонПросрДолг;
					ПрихДолг=ЗапросО.ПрихДолг;

					ТекКлиент=ЗапросО.Клиент;
					
					Рез=0;
					Если ПоКлиентам.НайтиЗначение(ТекКлиент,Рез,"Клиент")=1 Тогда
						ПоКлиентам.ПолучитьСтрокуПоНомеру(Рез);
						ПоКлиентам.ПриходКредит=ПоКлиентам.ПриходКредит+ПрихДолг;
						ПоКлиентам.Долг=ПоКлиентам.Долг+КонДолг;
						ПоКлиентам.ПросрДолг=ПоКлиентам.ПросрДолг+КонПросрДолг;
					Иначе
						ПоКлиентам.НоваяСтрока();
						ПоКлиентам.Клиент=ТекКлиент;
						ПоКлиентам.ПриходКредит=ПрихДолг;
   						ПоКлиентам.Долг=КонДолг;
   						ПоКлиентам.ПросрДолг=КонПросрДолг;
					КонецЕсли;
						
				КонецЦикла;
			КонецЕсли;                              

			ПоКлиентам.ВыбратьСтроки();
			Пока ПоКлиентам.ПолучитьСтроку()=1 Цикл
				ПоКлиентам.КлиентКод=ПоКлиентам.Клиент.Код;
			КонецЦикла;
			
			ПоКлиентам.Сортировать("КлиентКод");

			ПоКлиентам.ВыбратьСтроки();
			Пока ПоКлиентам.ПолучитьСтроку()=1 Цикл

				ТекКлиент="  "+ПоКлиентам.Клиент.Код+"  "+ПоКлиентам.Клиент.Наименование;
				
				ВозвратПоКлиенту=ПоКлиентам.Возврат;
				ПриходПоКлиенту=ПоКлиентам.ПриходНал+ПоКлиентам.ПриходКредит;
				ДолгПоКлиенту=ПоКлиентам.Долг;
				ДолгПоКлиентуПроср=ПоКлиентам.ПросрДолг;

//				Таб.ВывестиСекцию("Клиент");
				
			КонецЦикла;
			
			КолКлиентов=Клиентов.РазмерСписка();

			ПриходПоАгенту=ПоКлиентам.Итог("ПриходКредит")+ПоКлиентам.Итог("ПриходНал");
			ДолгПоАгенту=ДолгПоАгенту+ПоКлиентам.Итог("Долг");
			ДолгПоАгентуПроср=ДолгПоАгентуПроср+ПоКлиентам.Итог("ПросрДолг");
			
			ВсегоДолг=ВсегоДолг+ДолгПоАгенту;
			ВсегоПросрДолг=ВсегоПросрДолг+ДолгПоАгентуПроср;
			
			ВсегоПриход=ВсегоПриход+ПриходПоАгенту;
			ВсегоКолКлиентов=ВсегоКолКлиентов+КолКлиентов;
			ВсегоКолТоваров=ВсегоКолТоваров+КолТоваров;
			ВсегоКолТоваровУникАгент=ВсегоКолТоваровУникАгент+КолТоваров;
			
			ВсегоПрод=ВсегоПрод+ПродСумма;
			ВсегоКолДокум=ВсегоКолДокум+КолДокум;
			ВсегоНалог=ВсегоНалог+ПродНалог;
			ВсегоСкидка=ВсегоСкидка+ПродСкидка;
			ВозвратПоАгенту=ПоКлиентам.Итог("Возврат");
			ВсегоВозврат=ВсегоВозврат+ВозвратПоАгенту;
		
			ВсегоКолТоваровУник=ВсегоКолТоваровУник+УникальныхТоваров.РазмерСписка();
			Таб.ВывестиСекцию("Агент");
			Состояние("В отчет выведено "+ЧислоСтрок+" строк."); 
		КонецЦикла;   

//		Сообщить("Конец: "+ТекущееВремя());

		Таб.ВывестиСекцию("Итоги_"+ЯзыкОтчета);		
		// Вывод заполненной формы
		Таб.Опции(0,0,6,0,ПарСтрОтчДлинн);
		Таб.Защита(Константа.ФлагЗащитыТаблиц);
		Таб.ТолькоПросмотр(1);
		Таб.Показать("Объемы продаж по агентам ","");
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры    


//-------------------------------    
// Отчет по продажам Агентов
Процедура ОборотыПоАгентам()   
	
	Перем Стр;

	начЛог = семЗаписатьЛогНач( "Отчет", "Расход товаров за период", "Обработка", "Формирование отчета (по агентам)" );
	Запрос = СоздатьОбъект("Запрос");
	
	Заг="";
	Заг1="";
	Заг2="";  
	Заг3="";  
	Заг4="";  

//	Сообщить("Начало: "+ТекущееВремя());
	//Создание объекта типа Запрос

	ПризнакПродажа=глПолучитьПризнакОперацииПоПризнаку(Перечисление.ПризнРасхНакл.Продажа);
	ВозвратОтПокупателя=глПолучитьПризнакОперацииПоПризнаку(Перечисление.ПризнПрихНакл.ВозвратОтПокупателя);
	ПризнакКредитнаяНота=глПолучитьПризнакОперацииПоПризнаку(Перечисление.ПризнРасхНакл.КредитнаяНота);

	ТекстЗапроса = "Период с ДатаНачала";
 	Если ДатаКонца>=ПолучитьДатуТА() Тогда
		ДатаКонца=ПолучитьДатуТА();
		ТекстЗапроса = ТекстЗапроса + ";";
	Иначе
		ТекстЗапроса = ТекстЗапроса + " по ДатаКонца;";
	КонецЕсли; 

	ТекстЗапроса = ТекстЗапроса + 
	
	"//{{ЗАПРОС(ПродажиПоАгентам)
	|Товар = Регистр.ОборотыТоваров.Товар;
	|Клиент = Регистр.ОборотыТоваров.Клиент;
	|Склад = Регистр.ОборотыТоваров.Склад;
	|Агент = Регистр.ОборотыТоваров.Агент;
	|ВидОперации = Регистр.ОборотыТоваров.ВидОперации;
	|Количество = Регистр.ОборотыТоваров.Количество;
	|СуммаБазовая = Регистр.ОборотыТоваров.СуммаБазовая;
	|СуммаПродажная = Регистр.ОборотыТоваров.СуммаПродажная;
	|СуммаНДС = Регистр.ОборотыТоваров.СуммаНДС;
	|СуммаСкидки = Регистр.ОборотыТоваров.СуммаСкидки;
	|ПризнакОперации = Регистр.ОборотыТоваров.ПризнакОперации;
	|ФлагУчета = Регистр.ОборотыТоваров.ФлагУчета;
	|Функция КолПродано = Сумма(Количество) когда (ПризнакОперации = ПризнакПродажа);
	|Функция СуммаПродаж = Сумма(СуммаПродажная) когда (ПризнакОперации = ПризнакПродажа);
	|Функция НДСПродаж = Сумма(СуммаНДС) когда (ПризнакОперации = ПризнакПродажа);
	|Функция СуммаСкидкиПродаж = Сумма(СуммаСкидки) когда (ПризнакОперации = ПризнакПродажа);
	|Функция СуммаВозврата = Сумма(СуммаПродажная) когда(ПризнакОперации = ВозвратОтПокупателя);
	|Функция НДСВозврата = Сумма(СуммаНДС) когда(ПризнакОперации = ВозвратОтПокупателя);
	|Группировка Агент;
	|Группировка Клиент без групп;
	|Группировка Товар без групп;
	|Группировка Документ;
	|Условие(ВидОперации = ""-"");
	|Условие(Товар в ВыбТовар);
	|Условие(ФлагУчета = 0);
	|Условие((ПризнакОперации = ПризнакПродажа) ИЛИ (ПризнакОперации = ВозвратОтПокупателя) ИЛИ (ПризнакОперации = ПризнакКредитнаяНота));
	|"//}}ЗАПРОС
    ;

	Если ВыбАгент.Выбран()=0 Тогда
		Заг="Atskaite pa visiem aЄentiem";
	ИначеЕсли ВыбАгент.ЭтоГруппа()=1 Тогда
		ТекстЗапроса = ТекстЗапроса + "Условие (Агент в ВыбАгент);";
		Заг="AЄentu gruppa "+ВыбАгент.Наименование+".";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "Условие (Агент=ВыбАгент);";
		Заг="AЄents "+ВыбАгент.Наименование+".";
	КонецЕсли;   
	
    Если ВыбКлиент.Выбран() = 0 Тогда
		Заг1 = "Pa visўm klientiem. ";
	ИначеЕсли ВыбКлиент.ЭтоГруппа() = 1 Тогда
		Заг1 ="Кlientu  grupa " + ВыбКлиент.Наименование;
		ТекстЗапроса = ТекстЗапроса + "Условие (Клиент в ВыбКлиент);";
	Иначе
		Заг1 ="Klients " + ВыбКлиент.Код+"  " + ВыбКлиент.Наименование+". ";
		Если флГлКлиент = 1 Тогда
			табл = семПолучитьСписокПодчКлиентов( ВыбКлиент );
			сп = СоздатьОбъект( "СписокЗначений" );
			табл.Выгрузить(сп,,,"Клиент");
			сп.ДобавитьЗначение(ВыбКлиент);
			ТекстЗапроса = ТекстЗапроса + "Условие (Клиент в сп);";
		Иначе
			ТекстЗапроса=ТекстЗапроса+"Условие (Клиент=ВыбКлиент);";
		КонецЕсли;
	КонецЕсли; 
	                       
	Если ВыбСклад.Выбран() = 0 Тогда
		Если ЯзыкОтчета="LV" Тогда
			Заг4 = "Pa visўm noliktavam. ";
		ИначеЕсли ЯзыкОтчета="EE" Тогда
			Заг4 = "Kхik laod. ";
		КонецЕсли;
	ИначеЕсли ВыбСклад.ЭтоГруппа() = 1 Тогда
		Заг4 ="Noliktavu grupa " + ВыбСклад.Наименование+". ";
		ТекстЗапроса = ТекстЗапроса + "Условие (Склад в ВыбСклад);";
	Иначе
		Заг4 ="Noliktava " +ВыбСклад.Наименование+". ";
		ТекстЗапроса = ТекстЗапроса + "Условие (Склад = ВыбСклад);";
	КонецЕсли;
	
    Если ВыбТовар.Выбран() = 0 Тогда  
		Заг2= "Pa visўm prec§m. ";
	ИначеЕсли ВыбТовар.ЭтоГруппа() = 1 Тогда
		Заг2 ="Grupa " + ВыбТовар.Код+"  "+ ВыбТовар.Наименование+".";
		ТекстЗапроса = ТекстЗапроса + "Условие (ТОВАР в ВыбТовар);";   
	Иначе
		Заг2 ="Prece " + ВыбТовар.Код+"  " + ВыбТовар.Наименование+". ";
		ТекстЗапроса = ТекстЗапроса + "Условие (ТОВАР = ВыбТовар);";     
	КонецЕсли; 
	
    Если ВыбПоставщик.Выбран() = 0 Тогда   
//		Заг3 = "Pa visiem piegўdўtўjiem. "; 
	ИначеЕсли ВыбПоставщик.ЭтоГруппа() = 1 Тогда 
		Заг3 ="Grupa Piegўdўtўji   " + ВыбПоставщик.Наименование+". ";   
		ТекстЗапроса = ТекстЗапроса + "Условие (ТОВАР.Поставщик в ВыбПоставщик);";
	Иначе
		Заг3 ="Piegўdўtўjs " + ВыбПоставщик.Код+"  "+ ВыбПоставщик.Наименование+". ";   
		ТекстЗапроса = ТекстЗапроса + "Условие (ТОВАР.Поставщик = ВыбПоставщик);";
	КонецЕсли;   

	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;  

	// Получение информации по взаиморасчетам
	ЗапросО = СоздатьОбъект("Запрос");
	ТекстЗап = "Период с ДатаНачала";
 	Если ДатаКонца>=ПолучитьДатуТА() Тогда
		ДатаКонец=ПолучитьДатуТА();
		ДатаКон=ДатаКонец;
		ТекстЗап= ТекстЗап+";";
	Иначе
		ТекстЗап= ТекстЗап+" по ДатаКонца;";
	КонецЕсли;                                                  
	Вид1="ПриходнаяНакладная";                                      
	Вид1="РасходнаяНакладнаяНал";
	Вид2="РасходнаяНакладная";
	Вид3="РасходнаяРеализатора";
	Вид4="УслугиПеревозки";                                      
	
	ВыбФирма=глФирма;
	ТекстЗап = ТекстЗап +
	"//{{ЗАПРОС(Кредиты)
	|Фирма=Регистр.ВзаиморасчетыПокупателей.Фирма;
	|Клиент=Регистр.ВзаиморасчетыПокупателей.Клиент;
	|Агент=Регистр.ВзаиморасчетыПокупателей.Клиент.Агент;
	|Долг=Регистр.ВзаиморасчетыПокупателей.Долг;
	|СумБаз=Регистр.ВзаиморасчетыПокупателей.Долг;
	|КредДокум=Регистр.ВзаиморасчетыПокупателей.КредДокумент;
	|Группировка Агент упорядочить по Агент.Наименование; 
	|Группировка Клиент без групп;
//	|Группировка КредДокум;
	|Функция КонДолг= КонОст(Долг);
	|Функция КонПросрДолг= КонОст(Долг) Когда ((((КредДокум.Вид()=Вид1)или(КредДокум.Вид()=Вид2)или(КредДокум.Вид()=Вид3)или(КредДокум.Вид()=Вид4))и(КредДокум.ДатаОплаты<ДатаКонца)));
//	|Функция ПрихДолг = Расход(СумБаз);          
	|Условие (Фирма=ВыбФирма);
	|Функция ПрихДолг = Расход(СумБаз); 
	|"//}}ЗАПРОС
	;  

	Если ВыбАгент.Выбран()=0 Тогда
		//Без условий  
	ИначеЕсли ВыбАгент.ЭтоГруппа()=1 Тогда
		ТекстЗап=ТекстЗап+"Условие (((КредДокум.Вид()=Вид1)или(КредДокум.Вид()=Вид2)) И (КредДокум.Агент в ВыбАгент));";
	Иначе
		ТекстЗап=ТекстЗап+"Условие (((КредДокум.Вид()=Вид1)или(КредДокум.Вид()=Вид2)) И (КредДокум.Агент = ВыбАгент));";
	КонецЕсли;   

    Если ВыбКлиент.Выбран() = 0 Тогда
	ИначеЕсли ВыбКлиент.ЭтоГруппа() = 1 Тогда
		ТекстЗап = ТекстЗап + "Условие (Клиент в ВыбКлиент);";
	Иначе
		Если флГлКлиент = 1 Тогда
			табл = семПолучитьСписокПодчКлиентов( ВыбКлиент );
			сп = СоздатьОбъект( "СписокЗначений" );
			табл.Выгрузить(сп,,,"Клиент");
			сп.ДобавитьЗначение(ВыбКлиент);
			ТекстЗап = ТекстЗап + "Условие (Клиент в сп);";
		Иначе
			ТекстЗап=ТекстЗап+"Условие (Клиент=ВыбКлиент);";
		КонецЕсли;
	КонецЕсли; 
	
	// Если ошибка в запросе, то выход из процедуры
	Если ЗапросО.Выполнить(ТекстЗап)=0 Тогда
		Возврат;
	КонецЕсли;  
	
	СписокПараметров=СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение(ВыбАгент,"Агент");
	СписокПараметров.ДобавитьЗначение(ВыбКлиент,"Клиент");
	СписокПараметров.ДобавитьЗначение(ДатаКонца,"ДатаОтчета");
	ОткрытьФорму("Отчет.КлиентыАгентов"+"#",СписокПараметров);

	ТаблКлАгентов=глРасшифровка.Получить("ТаблицаАгентов");
//	ЗапросО.Выгрузить(ТаблКлАгентов);

	 // формируем таблицу 1С:Торговля
	// Подготовка к заполнению выходных форм данными запроса
		Таб=СоздатьОбъект("Таблица"); 
		Таб.ИсходнаяТаблица("ПродажиПоАгентам");
		Таб.ВывестиСекцию("Отчет_"+ЯзыкОтчета);	
		
		ВсегоПрод=0;
		ВсегоНалог=0;
		ВсегоСкидка=0;
	 	ЧислоСтрок=0; 
	 	ВсегоКонКол=0;
	 	ВсегоКонСум=0;
	 	ИтогВсегоПродано=0;   // Общее количество товара по расходу   
	 	ВсегоВозвратТовар=0;
	 	ВсегоКолКлиентов=0;
	 	ВсегоКолДокум=0;
	 	ВсегоДолг=0;
	 	ВсегоПросрДолг=0;
	 	ВсегоПриход=0;  
	 	ВсегоВозврат=0;
	 	ВсегоКолТоваров=0;
	 	ВсегоКолТоваровУник=0;         
	 	ВсегоКолТоваровУникАгент=0;         

	 	УникальныхТоваров=СоздатьОбъект("СписокЗначений");
	 	УникальныхДокументов=СоздатьОбъект("СписокЗначений");

		Пока Запрос.Группировка("Агент")=1 Цикл

			ПоКлиентам.УдалитьСтроки();
			Агент=Запрос.Агент;

			Состояние("Обрабатывается: "+Агент);
			
			Если Запрос.ЭтоГруппа("Агент")=1 Тогда
				Таб.ВывестиСекцию("АгентГруппа");
				Продолжить;
			КонецЕсли;
			
			ЧислоСтрок=ЧислоСтрок+1;
			
			ВозвратТовар=0;
			
            //  Итоговые данные
			ДолгПоАгенту=0;
			ДолгПоАгентуПроср=0;
			ПриходПоАгенту=0;
			ВозвратПоАгенту=0;
			ВозвратПоКлиенту=0;

			КолПродано=Запрос.КолПродано;
			СуммаПродаж=Запрос.СуммаПродаж;
			НДСПродаж=Запрос.НДСПродаж;    
			СуммаСкидкиПродаж=Запрос.СуммаСкидкиПродаж;
			
			СуммаВозврата=Запрос.СуммаВозврата;
			НДСВозврата=Запрос.НДСВозврата;

			КолКлиентов=0;
			КолДокум=0;
			КолТоваров=0;
			УникальныхТоваров.УдалитьВсе();
			УникальныхДокументов.УдалитьВсе();
			КолТоваровУник=0;
			КолТоваровУникАгент=0;
			
			Пока Запрос.Группировка("Клиент")=1 Цикл
                                  
				КолКлиентов=КолКлиентов+1; //Количество Клиентов

				Пока Запрос.Группировка("Товар")=1 Цикл

					Если УникальныхТоваров.НайтиЗначение(Запрос.Товар)=0 Тогда
						УникальныхТоваров.ДобавитьЗначение(Запрос.Товар);
				    	КолТоваровУник=КолТоваровУник+1;
					КонецЕсли;
					КолТоваровУникАгент=КолТоваровУникАгент+1;

					Пока Запрос.Группировка("Документ")=1 Цикл

						Док=Запрос.Документ;
						Если УникальныхДокументов.НайтиЗначение(Док)=0 Тогда
							УникальныхДокументов.ДобавитьЗначение(Док);
							КолДокум=КолДокум+1; //Количество Документов
							КолТоваров=КолТоваров+Док.КоличествоСтрок(); //Количество Товаров в Документе
						КонецЕсли;
						
					КонецЦикла;

				КонецЦикла;
				
			КонецЦикла;

			ЗапросО.вНачалоВыборки();
			
			рез=0;
			Если ТаблКлАгентов.НайтиСтроку("Агент",Агент,,1)>0 Тогда
				//ТаблКлАгентов.ПолучитьСтрокуПоНомеру(рез);
				ДолгПоАгенту=ТаблКлАгентов.ДолгКлиента;  
				ДолгПоАгентуПроср=ТаблКлАгентов.ПросроченныйДолг;
				ПриходПоАгенту=?(ЗапросО.Получить(Агент,)=1,ЗапросО.ПрихДолг,0);
			КонецЕсли;
			
			ВсегоДолг=ВсегоДолг+ДолгПоАгенту;
			ВсегоПросрДолг=ВсегоПросрДолг+ДолгПоАгентуПроср;
			
			ВсегоПриход=ВсегоПриход+ПриходПоАгенту;
			ВсегоКолКлиентов=ВсегоКолКлиентов+КолКлиентов;
			ВсегоКолТоваров=ВсегоКолТоваров+КолТоваров;
			ВсегоКолТоваровУникАгент=ВсегоКолТоваровУникАгент+КолТоваровУникАгент;
			
			ВсегоКолДокум=ВсегоКолДокум+КолДокум;
		
			ВсегоКолТоваровУник=ВсегоКолТоваровУник+УникальныхТоваров.РазмерСписка();
			Таб.ВывестиСекцию("Агент");
			Состояние("В отчет выведено "+ЧислоСтрок+" строк."); 
		КонецЦикла;   
                     
		
		ВсегоСуммаПродаж=Запрос.СуммаПродаж;
		ВсегоНДСПродаж=Запрос.НДСПродаж;
		ВсегоСуммаСкидкиПродаж=Запрос.СуммаСкидкиПродаж;
		ВсегоСуммаВозврата=Запрос.СуммаВозврата;
		ВсегоНДСВозврата=Запрос.НДСВозврата;
		
//		Сообщить("Конец: "+ТекущееВремя());

		Таб.ВывестиСекцию("Итоги_"+ЯзыкОтчета);		
		// Вывод заполненной формы
		Таб.Опции(0,0,6,0,ПарСтрОтчДлинн);
		Таб.Защита(Константа.ФлагЗащитыТаблиц);
		Таб.ТолькоПросмотр(1);
		Таб.Показать("Объемы продаж по агентам ","");
		
		семЗаписатьЛогКон( начЛог );
КонецПроцедуры    



//*******************************************
// Процедура генерации запроса ПустыеАгенты.
//
Процедура ПустыеАгенты()
	Перем Запрос, ТекстЗапроса, Таб;
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ПустАгент=ПолучитьПустоеЗначение("Справочник.Сотрудники");
	ТекстЗапроса = "Период с ДатаНачала";
 	Если ДатаКонца>=ПолучитьДатуТА() Тогда
		ДатаКонец=ПолучитьДатуТА();
		ДатаКон=ДатаКонец;
		ТекстЗапроса= ТекстЗапроса+";";
	Иначе
		ТекстЗапроса= ТекстЗапроса+" по ДатаКонца;";
	КонецЕсли; 

	
	ТекстЗапроса = ТекстЗапроса +
	"//{{ЗАПРОС(ПустыеАгенты)
	|Агент = Регистр.УчетКредита.Клиент.Агент, Регистр.Взаиморасчеты.Клиент.Агент;
	|Клиент = Регистр.УчетКредита.Клиент, Регистр.Взаиморасчеты.Клиент;
	|Долг = Регистр.УчетКредита.Долг;
	|Сумма = Регистр.Взаиморасчеты.СуммаБазовая;
	|Функция РасхДолг = Расход(Долг);
	|Функция ПрихДолг = Приход(Сумма);
	|Группировка Клиент без групп;
	|Условие (Агент=ВыбАгент);
	|"//}}ЗАПРОС
	;                 
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;

	// Заполнение полей "Заголовок"
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("ПустыеАгенты");
	Таб.ВывестиСекцию("Заголовок");
	Состояние("Заполнение выходной таблицы...");
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);
	Пока Запрос.Группировка(1) = 1 Цикл
		// Заполнение полей Документ
		Таб.ВывестиСекцию("Документ");
	КонецЦикла;
	// Заполнение полей "Итого"
	Таб.ВывестиСекцию("Итого");
	// Вывод заполненной формы
	Таб.ТолькоПросмотр(1);
	Таб.Показать("ПустыеАгенты", "");
КонецПроцедуры



//-------------------------------    
ДатаНачала=НачМесяца(РабочаяДата());
Если Число(ДатаНачала)=0 Тогда
	ДатаНачала='01.01.98';
Конецесли;  
ДатаКонца=РабочаяДата();
РежимЗапроса="";
//*******************************************

Клиентов=СоздатьОбъект("СписокЗначений");
ПоКлиентам=СоздатьОбъект("ТаблицаЗначений");
ПоКлиентам.НоваяКолонка("КлиентКод","Строка",10);
ПоКлиентам.НоваяКолонка("Клиент","Справочник.Клиенты");
ПоКлиентам.НоваяКолонка("Возврат","Число",19,5);
ПоКлиентам.НоваяКолонка("ПриходНал","Число",19,5);
ПоКлиентам.НоваяКолонка("ПриходКредит","Число",19,5);
ПоКлиентам.НоваяКолонка("Долг","Число",19,5);
ПоКлиентам.НоваяКолонка("ПросрДолг","Число",19,5);
КатегорияЦены=Константа.ОсновнаяКатегорияЦены;

СписокЯзыков.ДобавитьЗначение("LV");
СписокЯзыков.ДобавитьЗначение("EE");
СписокЯзыков.ДобавитьЗначение("LT");


ЯзыкОтчета=семТекСтрана();
Если ЯзыкОтчета="LV" Тогда
	СписокЯзыков.ТекущаяСтрока(1);
ИначеЕсли ЯзыкОтчета="EE" Тогда	
	СписокЯзыков.ТекущаяСтрока(2);
ИначеЕсли ЯзыкОтчета="LT" Тогда	
	СписокЯзыков.ТекущаяСтрока(3);
КонецЕсли;
;

спКодов = СоздатьОбъект( "СписокЗначений" );
спКодов.Установить("161",194);
спКодов.Установить("162",226);
спКодов.Установить("163",200);
спКодов.Установить("165",232);
спКодов.Установить("166",199);
спКодов.Установить("167",231);
спКодов.Установить("168",204);
спКодов.Установить("170",236);
спКодов.Установить("172",206);
спКодов.Установить("174",238);
спКодов.Установить("175",205);
спКодов.Установить("176",237);
спКодов.Установить("177",207);
спКодов.Установить("178",239);
спКодов.Установить("179",210);
спКодов.Установить("180",242);
спКодов.Установить("185",208);
спКодов.Установить("186",240);
спКодов.Установить("188",219);
спКодов.Установить("189",251);
спКодов.Установить("190",222);
спКодов.Установить("191",254);

