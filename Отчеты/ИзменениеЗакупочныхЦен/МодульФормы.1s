
Процедура ПриОткрытии()
	глПриОткрытии(Контекст,"ИзменениеЗакупочныхЦен");
	
КонецПроцедуры	


Процедура ПрихДокументы()
	Перем Запрос, ТекстЗапроса;
	начЛог = семЗаписатьЛогНач( "Отчет", "Отчет об изменении закупочных цен", "Обработка", "Формирование отчета" );
	спУсловий = СоздатьОбъект( "СписокЗначений" );
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(ПрихДокументы)
	|Период с ДатаС по ДатаПо;
	|Товар = Документ.ПриходнаяНакладная.Товар;
	|Клиент = Документ.ПриходнаяНакладная.Клиент;
	|Склад = Документ.ПриходнаяНакладная.Склад;
	|Закупщик = Документ.ПриходнаяНакладная.Товар.Закупщик;
	|Валюта = Документ.ПриходнаяНакладная.Валюта;
	|Цена = Документ.ПриходнаяНакладная.Цена;
	|ЦенаПриобретения = Документ.ПриходнаяНакладная.ЦенаПредыдущая;
	|ПризнакНакладной = Документ.ПриходнаяНакладная.ПризнакНакладной;
	|КатегорияЦены = Документ.ПриходнаяНакладная.КатегорияЦены;
	|Группировка Товар без групп;
	|Группировка Документ;
	|Группировка СтрокаДокумента;
	|Условие(ПризнакНакладной <> Перечисление.ПризнПрихНакл.ВозвратОтПокупателя);
	|Условие(Окр(Цена,2)<>Окр(ЦенаПриобретения,2));
	|";                                              
	
    Если ВыбТовар.Выбран() = 0 Тогда 
		спУсловий.ДобавитьЗначение("По всем товарам.");
	ИначеЕсли ВыбТовар.ЭтоГруппа() = 1 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие (Товар в ВыбТовар);";
		спУсловий.ДобавитьЗначение(Шаблон("По товарам группы ([ВыбТовар.Код]) [ВыбТовар.Наименование]."));
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие (Товар = ВыбТовар);";
		спУсловий.ДобавитьЗначение(Шаблон("По товару ([ВыбТовар.Код]) [ВыбТовар.Наименование]."));
	КонецЕсли;
	
    Если ВыбКлиент.Выбран() = 0 Тогда
		спУсловий.ДобавитьЗначение("По всем клиентам.");
	ИначеЕсли ВыбКлиент.ЭтоГруппа() = 1 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие (Клиент в ВыбКлиент);";
		спУсловий.ДобавитьЗначение(Шаблон("По клиентам группы ([ВыбКлиент.Код]) [ВыбКлиент.Наименование]."));
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие (Клиент = ВыбКлиент);";
		спУсловий.ДобавитьЗначение(Шаблон("По клиенту ([ВыбКлиент.Код]) [ВыбКлиент.Наименование]."));
	КонецЕсли;
	
    Если ВыбСклад.Выбран() = 0 Тогда
		спУсловий.ДобавитьЗначение("По всем складам.");
	ИначеЕсли ВыбСклад.ЭтоГруппа() = 1 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие (Склад в ВыбСклад);";
		спУсловий.ДобавитьЗначение(Шаблон("По складам группы ([ВыбСклад.Код]) [ВыбСклад.Наименование]."));
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие (Склад = ВыбСклад);";
		спУсловий.ДобавитьЗначение(Шаблон("По складу ([ВыбСклад.Код]) [ВыбСклад.Наименование]."));
	КонецЕсли;

	Если ВыбЗакупщик.Выбран() = 0 Тогда
		спУсловий.ДобавитьЗначение("По всем закупщикам.");
	ИначеЕсли ВыбЗакупщик.ЭтоГруппа() = 1 Тогда ТекстЗапроса = ТекстЗапроса + "
		|Условие (Закупщик в ВыбЗакупщик);";
		спУсловий.ДобавитьЗначение(Шаблон("По закупщикам группы ([ВыбЗакупщик.Код]) [ВыбЗакупщик.Наименование]."));
	Иначе ТекстЗапроса = ТекстЗапроса + "
		|Условие (Закупщик = ВыбЗакупщик);";
		спУсловий.ДобавитьЗначение(Шаблон("По клиенту ([ВыбЗакупщик.Код]) [ВыбЗакупщик.Наименование]."));
	КонецЕсли;

	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда Возврат; КонецЕсли;

	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Приходы");
	Таб.ВывестиСекцию("Заголовок");
	пУсловие = "";
	Для н = 1 по спУсловий.РазмерСписка() Цикл
		пУсловие = пУсловие + спУсловий.ПолучитьЗначение(н) + " ";
	КонецЦикла;
	Таб.ВывестиСекцию("Условие");
	Таб.ВывестиСекцию("Шапка");
	Таб.Опции(0,0,Таб.ВысотаТаблицы(),0,ПарСтрОтчДлинн);
	
	Пока Запрос.Группировка(1) = 1 Цикл
		Таб.ВывестиСекцию("Товар");
		Пока Запрос.Группировка(2) = 1 Цикл    
			Док=Запрос.Документ;
			Пока Запрос.Группировка(3) = 1 Цикл
				пИзм = Запрос.Цена - Запрос.ЦенаПриобретения;
				пИзм = ?(Запрос.ЦенаПриобретения>0,(пИзм / Запрос.ЦенаПриобретения)*100,0);
				Таб.ВывестиСекцию("Документ");
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Отчет об изменении зак. цен товаров","");
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры

Процедура Перемещения()
	Перем Запрос, ТекстЗапроса;
	начЛог = семЗаписатьЛогНач( "Отчет", "Отчет об изменении закупочных цен", "Обработка", "Формирование отчета" );
	спУсловий = СоздатьОбъект( "СписокЗначений" );
	Запрос = СоздатьОбъект("ODBCRecordSet");
	Если (ПустоеЗначение(ВыбСклад)=1) И (ПустоеЗначение(ВыбДок)=1) Тогда
		Предупреждение("Вы должны выбрать или склад или документ!");
		Возврат;
	КонецЕсли;
	
	Условие="";
	
	ВыбСклад=?(ВыбСклад.Выбран()=1,ВыбСклад,ВыбДок.СкладПолучатель);
	глДобавитьФильтр(Запрос,Условие,спУсловий,"$Перемещение","СкладПолучатель",ВыбСклад,"МестаХранения");
	глДобавитьФильтр(Запрос,Условие,спУсловий,"$Номенклатура","Закупщик",ВыбЗакупщик,"Сотрудники");
	глДобавитьФильтр(Запрос,Условие,спУсловий,"$ПартииТоваров","Товар",ВыбТовар,"Номенклатура");
	
	Если ПустоеЗначение(ВыбДок)=0 Тогда
		Условие=Условие+" AND $ПартииТоваров.Товар IN (SELECT $Док.Товар FROM $ДокументСтроки.Перемещение Док (NOLOCK) WHERE IDDOC=:ВыбДок)";
	КонецЕсли;
	
	ТекстЗапроса = " SELECT $Перемещение.Склад [Склад $Справочник.МестаХранения]
	|						, $Перемещение.СкладПолучатель [СкладПолучатель $Справочник.МестаХранения]
	|						, $ПеремещениеСтроки.Товар [Товар $Справочник.Номенклатура]
	|						, $Номенклатура.Закупщик [Закупщик $Справочник.Сотрудники]
	|						, Номенклатура.CODE ТоварКод
	|						, ROUND($ПартииТоваров.Стоимость/$ПартииТоваров.ОстатокТовара,2) Цена
	|						, (SELECT TOP 1 ROUND($ПартииТоваров2.Стоимость/$ПартииТоваров2.ОстатокТовара,2) 
	|						   FROM $Регистр.ПартииТоваров AS ПартииТоваров2 (NOLOCK)
	|						   WHERE $ПеремещениеСтроки.Товар = $ПартииТоваров2.Товар AND ПартииТоваров2.DATE_TIME_IDDOC<Журнал.DATE_TIME_IDDOC AND  ПартииТоваров2.DEBKRED = 0 AND $ПартииТоваров2.Склад = :ВыбСклад
	|								 AND ПартииТоваров2.DATE_TIME_IDDOC>=:Нач
	|						   ORDER BY DATE_TIME_IDDOC DESC) ЦенаПред
	|						, Перемещение.IDDOC [Док $Документ.Перемещение]
	|				 FROM $Документ.Перемещение AS Перемещение (NOLOCK)
	|				INNER JOIN $ДокументСтроки.Перемещение AS ПеремещениеСтроки (NOLOCK) ON Перемещение.IDDOC = ПеремещениеСтроки.IDDOC
	|				INNER JOIN _1SJOURN AS Журнал (NOLOCK) ON Перемещение.IDDOC = Журнал.IDDOC AND ((Журнал.CLOSED & 1) = 1)
	|				INNER JOIN $Регистр.ПартииТоваров AS ПартииТоваров (NOLOCK) ON ПеремещениеСтроки.IDDOC = ПартииТоваров.IDDOC AND $ПеремещениеСтроки.Товар = $ПартииТоваров.Товар AND ПеремещениеСтроки.LINENO_ = ПартииТоваров.LINENO_
	|																				AND (ПартииТоваров.DEBKRED = 0) AND ПартииТоваров.DATE_TIME_IDDOC BETWEEN :Нач AND :Кон ~
	|				INNER JOIN $Справочник.Номенклатура AS Номенклатура (NOLOCK) ON $ПеремещениеСтроки.Товар = Номенклатура.ID
	|				WHERE (Журнал.IDDOCDEF = $ВидДокумента.Перемещение) AND $ПартииТоваров.ОстатокТовара <> 0 " + Условие + "
	|					  AND Журнал.DATE_TIME_IDDOC BETWEEN :Нач AND :Кон ~
	|						 
	|";

	Запрос.УстановитьТекстовыйПараметр("Нач",ДатаС);
	Запрос.УстановитьТекстовыйПараметр("Кон",ДатаПо);
	Запрос.УстановитьТекстовыйПараметр("ВыбСклад",ВыбСклад);
	Запрос.УстановитьТекстовыйПараметр("ВыбДок",ВыбДок.ТекущийДокумент());
	
	итТабл=СоздатьОбъект("ИндексированнаяТаблица");
	Запрос.ВыполнитьИнструкцию(ТекстЗапроса,итТабл);
	//итТабл.Показать("");
	итТоварыДоки=СоздатьОбъект("ИндексированнаяТаблица");
	итТоварыДоки.Загрузить(итТабл);
	итТоварыДоки.ДобавитьИндекс("иТовар","*Товар,*Док");
	итТабл.Группировать("Товар : *Товар; Док : *Док","");
	
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Перемещения");
	Таб.ВывестиСекцию("Заголовок");
	пУсловие = "";
	Для н = 1 по спУсловий.РазмерСписка() Цикл
		пУсловие = пУсловие + спУсловий.ПолучитьЗначение(н) + " ";
	КонецЦикла;
	Таб.ВывестиСекцию("Условие");
	Таб.ВывестиСекцию("Шапка");
	Таб.Опции(0,0,Таб.ВысотаТаблицы(),0,ПарСтрОтчДлинн);
	
	итТабл.ВыбратьСтроки();
	Пока итТабл.ПолучитьСтроку() = 1 Цикл
		Таб.ВывестиСекцию("Товар");
		итДоки=итТабл.тзПотомки;
		итДоки.Сортировать("*Док");
		итДоки.ВыбратьСтроки();
		Пока итДоки.ПолучитьСтроку() = 1 Цикл
			Док=итДоки.Док;
			пИзм = итДоки.Цена - итДоки.ЦенаПред;
			Если пИзм=0 Тогда
				Продолжить;
			КонецЕсли;
			пИзм = ?(итДоки.ЦенаПред>0,(пИзм / итДоки.ЦенаПред)*100,0);
			Таб.ВывестиСекцию("Документ");
		КонецЦикла;
	КонецЦикла;

	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Отчет об изменении закупочных цен товаров","");
	семЗаписатьЛогКон( начЛог );	
КонецПроцедуры

Процедура ВыполнитьОтчет()
	Если флВидДок=1 Тогда
		ПрихДокументы();
	ИначеЕсли флВидДок=2 Тогда
		Перемещения();
	КонецЕсли;	
	
КонецПроцедуры

флВидДок=1;
ВыбДок.ВидыДляВыбора("ПриходнаяНакладная,Перемещение");