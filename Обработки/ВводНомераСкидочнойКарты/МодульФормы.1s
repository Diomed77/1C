////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
// 
Перем НомерКартыПередачи;
Перем Готово;


//******************************************************************************
// ОК()
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога:
//  кнопка "Ок"
//
// Описание:
//  Передаем в вызывавший обработку модуль результаты
//
Процедура ОК()
	
	Форма.Параметр.Установить("НомерКарты"	, НомерКарты);
	Форма.Параметр.Установить("СрокГодности", СрокГодности);
	Форма.Параметр.Установить("СтатусВозврата"	, 1);
	
КонецПроцедуры

////******************************************************************************
//// ПриИзмененииЦены()
////
//// Параметры: 
////  Нет
////
//// Вызывается из формул элементов диалога
//// Поле ввода цена
//// 
//// Возвращаемое значение:
////  Нет
////
//// Описание:
////  При нажатии на кнопку Enter в поле Цена выполняет действия,
////  как по кнопке ОК, и закрывает форму
////
//Процедура ПриИзмененииЦены()
//	
//	Если (Цена <> 0) Тогда
//		
//		// Количество и цену в возвращаемый параметр прописываем при закрытии
//        ОтработалаПриИзмененииЦены = 1;
//		Форма.Закрыть();
//	КонецЕсли;
//	
//КонецПроцедуры // ПриИзмененииЦены()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// 
// *****************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
	Если ТипЗначенияСтр(Форма.Параметр) <> "СписокЗначений" Тогда
		Предупреждение("Обработка вызывается только из формы!", 60);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Форма.Параметр.Установить("СтатусВозврата"	, 0);     
	
	Активизировать("НомерКарты");

КонецПроцедуры // ПриОткрытии()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриЗакрытии()
	
	Если Форма.АктивныйЭлемент() = "кнОтмена" Тогда  // Нажата кнопка "Отмена"
		Форма.Параметр.Установить("СтатусВозврата"	, 0);
	ИначеЕсли Готово = 1 Тогда // Прописываем возвращаемые количество и цену
		ОК();
	КонецЕсли;
КонецПроцедуры // ПриЗакрытии()

Процедура ПриВводеНомераКарты()

	НомерКартДляАнализа = НомерКарты;

	ЗаписьЖурналаРегистрации("Отсканирована карта с номером "+НомерКарты,,"Обработка",,3);	
	
	ПозВопрос 		= 0;
	ПозТочкаЗапятая	= 0;
	ПозРавно 		= 0;
	ПозВопрос		= Найти(НомерКартДляАнализа,"?");
	ПозСлэш			= Найти(НомерКартДляАнализа,"/"); //такой символ вместо вопроса на терминале вылезает
	ПозТочкаЗапятая	= Найти(НомерКартДляАнализа,";");
	ПозРавно		= Найти(НомерКартДляАнализа,"=");
	ПозКартыWZ		= Найти(НомерКартДляАнализа,"RTNC");
	
	Если ПозСлэш>ПозВопрос Тогда
		ПозВопрос = ПозСлэш;
	КонецЕсли;
	
	Если (ПозВопрос+ПозТочкаЗапятая+ПозКартыWZ)=0 Тогда
		НомерКарты=СокрЛП(НомерКартДляАнализа);
	ИначеЕсли ((ПозВопрос=0) ИЛИ (ПозТочкаЗапятая=0) ИЛИ (ПозВопрос<ПозТочкаЗапятая)) и (ПозКартыWZ=0) Тогда
		Предупреждение("Неправильный формат карты!");
		Возврат;
	КонецЕсли;
	
	Если ПозРавно=0 Тогда
		//обычная карта - можно найти клиента
		Если ПозКартыWZ>0 Тогда
			НомерКарты = СтрЗаменить(НомерКартДляАнализа,"RTNC","");
		Иначе
			НомерКарты = Сред(НомерКартДляАнализа,ПозТочкаЗапятая+1,ПозВопрос-ПозТочкаЗапятая-1);
		КонецЕсли;
	Иначе
		//карта со сроком годности -  банковская или партнерская
		НомерКарты = Сред(НомерКартДляАнализа,ПозТочкаЗапятая+1,ПозРавно-ПозТочкаЗапятая-1);
		пСрокГодности = Сред(НомерКартДляАнализа,ПозРавно+1,4);
		СрокГод = Лев(пСрокГодности,2);
		СрокМесяц = Сред(пСрокГодности,3,2);

		СрокГодности=Дата("01."+СрокМесяц+"."+СрокГод);
		Если СрокГодности<ТекущаяДата()	Тогда
			НомерКарты="";
			Предупреждение("У карты закончился срок годности <"+Формат(СрокГодности,"Д ДДММГГГГ")+">");
			Возврат;
		КонецЕсли;
	КонецЕсли;

	пСкидка=0;
	пКлиент="";
	пКритерий="";
	
	глПолучитьСкидкуИКлиентаVDB(НомерКарты,1,ККМФискальногоРегистратора.Код,пСкидка,пКлиент,пКритерий);
	Форма.Параметр.Установить("Скидка", пСкидка);
	Форма.Параметр.Установить("Клиент", пКлиент);
	Форма.Параметр.Установить("Критерий", пКритерий);

	Готово=1;
	Форма.Закрыть(0);
	
КонецПроцедуры

Готово=0;
