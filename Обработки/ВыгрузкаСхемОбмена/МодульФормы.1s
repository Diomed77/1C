Перем ХМЛ,МасТиповХМЛ[101];

//_____________________________________________________________________________
Функция ВыбратьФайл(ВыбФайл)
	Каталог1="";
	Файл1=ВыбФайл;
	Рез=ФС.ВыбратьФайл(1,Файл1,Каталог1,"Выберите файл XML","(*.xml)|*.xml|(*.*)|*.*","*.xml");
	Если Рез=1 Тогда
		ВыбФайл=Каталог1+Файл1;
	КонецЕсли;
	Возврат "";
КонецФункции


//_____________________________________________________________________________



Процедура ПросмотрВеткиДерева(Дерево,Таб,КолТаб=0,ВыводитьСостояние=0)
	Размер=Дерево.length;
	
	Для А=0 По Размер-1 Цикл  
		Если ВыводитьСостояние=1 Тогда
			Состояние("Веведено "+Цел(100*А/Размер)+" %");
		КонецЕсли;
		Элемент=Дерево.Item(А);
		Тип=Элемент.NodeType;
		Если Тип=1 Тогда
			//Сообщить(Таб+Элемент.nodeName+"  "+Элемент.nodeValue+СтрАтр);
			ИмяУзла=Элемент.nodeName;
			ЗначУзла=Элемент.nodeValue;
			ЗначПредставление=Элемент;
			Таб.ВывестиСекцию("Строка|Начало");
			Для С=1 По КолТаб Цикл
				Таб.ПрисоединитьСекцию("Пусто|Значение");
			КонецЦикла;
			Таб.ПрисоединитьСекцию("Строка|Значение");
			
			КоллекцияАтрибутов=Элемент.Attributes;
			КолАтрибутов=КоллекцияАтрибутов.length;
			Если КолАтрибутов>0 Тогда
				Для Б=0 По КолАтрибутов-1 Цикл
					Атрибут=КоллекцияАтрибутов.Item(Б);
					ИмяАтрибута=Атрибут.nodeName;
					ЗначАтрибута=Атрибут.nodeValue;
					Таб.ПрисоединитьСекцию("Строка|Атрибут");
				КонецЦикла;
			КонецЕсли;
			
			
			//Если ФлРаскрывать=1 Тогда
			ПросмотрВеткиДерева(Элемент.ChildNodes,Таб,КолТаб+1,ВыводитьСостояние-1);
			//КонецЕсли;
		Иначе
			Если Тип=3 Тогда
				ИмяУзла="";
			Иначе
				ИмяУзла=Элемент.nodeName+":";
			КонецЕсли;
			ЗначУзла=Элемент.nodeValue;
			ЗначПредставление=Элемент;
			Таб.ВывестиСекцию("Текст|Начало");
			Для С=1 По КолТаб Цикл
				Таб.ПрисоединитьСекцию("Пусто|Значение");
			КонецЦикла;
			Таб.ПрисоединитьСекцию("Текст|Значение");
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПросмотрДерева(Дерево,Имя="")
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("XML");
	Таб.ВывестиСекцию("Заголовок");
	ПросмотрВеткиДерева(Дерево,Таб,,?(Дерево.length>1,1,2));
	Таб.ТолькоПросмотр(0);
	Таб.Опции(0,0,0,0);
	Таб.Показать("Дерево XML "+Имя);
	Таб=0;
КонецПроцедуры
//_____________________________________________________________________________







//_____________________________________________________________________________
Функция УстановитьЭлемент(Элемент,ИмяРеквизита,Атрибут="")
	Реквизит=ХМЛ.createElement(ИмяРеквизита);
	Элемент.appendChild(Реквизит);
	Если Атрибут<>"" Тогда
		Реквизит.appendChild(ХМЛ.createTextNode(Атрибут));
	КонецЕсли;
	Возврат Реквизит;
КонецФункции //УстановитьЭлемент

Процедура УстановитьАтрибут(Элемент,ИмяРеквизита,Атрибут)
	Элемент.setAttribute(ИмяРеквизита,Атрибут);
КонецПроцедуры //ДобавитьЭлемент

//_____________________________________________________________________________
Функция НовыйПакет()
	Т=СоздатьОбъект("Текст");
	Т.ДобавитьСтроку("<?xml version=""1.0"" encoding=""windows-1251""?><Schema/>");
	ВремФайлЗаголовка=КаталогИб()+"temp.xml";
	Т.Записать(ВремФайлЗаголовка);Т=0;
	ХМЛ.load(ВремФайлЗаголовка);
	Узел=ХМЛ.DocumentElement;
	Возврат Узел;
КонецФункции //НовыйПакет


//_____________________________________________________________________________
Процедура ВыгрузитьОписаниеТипа(Пакет,Правила,РодительЭлемента="")
	Если Правила.ПризнакВыгрузки="Х" Тогда
		
		//описываем текущий тип (или класс) данных
		Синоним=СтрЗаменить(Сокрлп(Правила.Синоним)," ","_");
		Синоним=СтрЗаменить(Синоним,"#","_");
		
		Пока 1=1 Цикл
			
			//проверяем на признак задания элемента с путем
			Рез=Найти(Синоним,"/");
			Если Рез>0 Тогда
				СинонимЛев=Лев(Синоним,Рез-1);
				//смотрим - может такой элемент уже описывали...
				//если да, то новый не создаем, а только добавляем описание
				ВырПоиска="//ElementType[@name="""+СинонимЛев+"""]";
				ВыбрЭлементы=Пакет.selectNodes(ВырПоиска);
				Если ВыбрЭлементы.length>0 Тогда
					//						Пакет.removeChild(Реквизит);
					Реквизит=ВыбрЭлементы.Item(0);
				Иначе
					Реквизит=УстановитьЭлемент(Пакет,"ElementType");
				КонецЕсли;
				
				Реквизит.setAttribute("name",СинонимЛев);
				Реквизит.setAttribute("content","eltOnly");
				Реквизит.setAttribute("model","closed");
				Синоним=Сред(Синоним,Рез+1);
				СинонимСредн=Синоним;
				
				Рез=Найти(Синоним,"/");
				Если Рез>0 Тогда
					СинонимСредн=Лев(Синоним,Рез-1);
				КонецЕсли;
				Если Лев(СинонимСредн,1)="@" Тогда
					Элемент=УстановитьЭлемент(Реквизит,"attribute");
					Элемент.setAttribute("type",Сред(СинонимСредн,2));
				Иначе
					Элемент=УстановитьЭлемент(Реквизит,"element");
					Элемент.setAttribute("type",СинонимСредн);
					Если ((Сокрлп(Правила.Наименование)="Табличная часть")ИЛИ(Правила.Уровень()=2))И(Рез=0) Тогда //табличная часть и последний элемент
						Элемент.setAttribute("minOccurs",0);
						Элемент.setAttribute("maxOccurs","*");
					Иначе
						Элемент.setAttribute("minOccurs",1);
						Элемент.setAttribute("maxOccurs",1);
					КонецЕсли;
				КонецЕсли;
			Иначе
				//конец цикла или было простое объявление элемента
				//здесь может быть объявление как атрибута, так и элемента
				Если Лев(Синоним,1)="@" Тогда
					Синоним=Сред(Синоним,2);
					//Пакет.removeChild(Реквизит);
					Если РодительЭлемента="" Тогда
						Реквизит=УстановитьЭлемент(Пакет,"AttributeType");
					Иначе
						Реквизит=УстановитьЭлемент(РодительЭлемента,"AttributeType");
					КонецЕсли;
					Реквизит.setAttribute("name",Синоним);
					Реквизит.setAttribute("dt:type","string");
					Возврат;
				Иначе
					Реквизит=УстановитьЭлемент(Пакет,"ElementType");
				КонецЕсли;
				
				
				Реквизит.setAttribute("name",Синоним);
				Реквизит.setAttribute("model","closed");
				Если Правила.ЭтоГруппа()=0 Тогда
					Реквизит.setAttribute("content","textOnly");
					Реквизит.setAttribute("dt:type",МасТиповХМЛ[1+ТипЗначения(Правила.Значение)]);
				Иначе
					Реквизит.setAttribute("content","eltOnly");
				КонецЕсли;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если Правила.ЭтоГруппа()=0 Тогда
			Возврат;
		КонецЕсли;
		
		Спр=СоздатьОбъект("Справочник.ПравилаВыгрузки");
		Спр.ИспользоватьВладельца(ВыбрБаза);
		Спр.ИспользоватьРодителя(Правила);
		Спр.ВыбратьЭлементы();
		
		ЗаходитьВнутрь=0;
		ПредСиноним="";
		Пока Спр.ПолучитьЭлемент(ЗаходитьВнутрь)=1 Цикл
			Если Спр.ПризнакВыгрузки="Х" Тогда
				Синоним=СтрЗаменить(Сокрлп(Спр.Синоним)," ","_");
				Синоним=СтрЗаменить(Синоним,"#","_");
				Если Сокрлп(Спр.Синоним)="*" Тогда //Символ "*" - признак того, что не надо создавать отдельный класс - т.е. надо все нижние элементы перенести на уровень выше
					ЗаходитьВнутрь=1;
				Иначе
					ЗаходитьВнутрь=0;
					Рез=Найти(Синоним,"/");
					Если Рез>0 Тогда //если встретилось сложное задание элемента, то определение многострочной части будет дано выше (по тексту кода)
						Синоним=Лев(Синоним,Рез-1);
						Если ПредСиноним=Синоним Тогда                  //Доп/Клиент
							//уже было описание такого элемента!!!  Н-р://Доп/Сумма     - т.е. два раза элемент Доп не описываем
							Продолжить;
						КонецЕсли;
						ПредСиноним=Синоним;
						Если Лев(Синоним,1)="@" Тогда
							Элемент=УстановитьЭлемент(Реквизит,"attribute");
							Элемент.setAttribute("type",Сред(Синоним,2));
						Иначе
							Элемент=УстановитьЭлемент(Реквизит,"element");
							Элемент.setAttribute("type",Синоним);
							Элемент.setAttribute("minOccurs",1);
							Элемент.setAttribute("maxOccurs",1);
						КонецЕсли;
					Иначе
						Если Лев(Синоним,1)="@" Тогда
							Элемент=УстановитьЭлемент(Реквизит,"attribute");
							Элемент.setAttribute("type",Сред(Синоним,2));
						Иначе
							
							Элемент=УстановитьЭлемент(Реквизит,"element");
							Элемент.setAttribute("type",Синоним);
							Уровень=Правила.Уровень();
							Если (Сокрлп(Спр.Наименование)="Табличная часть") ИЛИ (Уровень=1)Тогда
								Элемент.setAttribute("minOccurs",0);
								Элемент.setAttribute("maxOccurs","*");
							Иначе
								Элемент.setAttribute("minOccurs",1);
								Элемент.setAttribute("maxOccurs",1);
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		//описываем вложенные типы (или классы) данных
		ЗаходитьВнутрь=0;
		Спр.ВыбратьЭлементы();
		Пока Спр.ПолучитьЭлемент(ЗаходитьВнутрь)=1 Цикл
			Если Спр.ПризнакВыгрузки="Х" Тогда
				Если Сокрлп(Спр.Синоним)="*" Тогда //Символ "*" - признак того, что не надо создавать отдельный класс - т.е. надо все нижние элементы перенести на уровень выше
					ЗаходитьВнутрь=1;
				Иначе
					ЗаходитьВнутрь=0;
					ВыгрузитьОписаниеТипа(Пакет,Спр.ТекущийЭлемент(),Реквизит);
//					ВыгрузитьОписаниеТипа(Пакет,Спр.ТекущийЭлемент());
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры //ВыгрузитьОписаниеТипа




Процедура Сформировать()
	Если ВыбрБаза.Выбран()=1 Тогда
		ХМЛ=СоздатьОбъект("Microsoft.XMLDOM");
		Пакет=НовыйПакет();
		//				Заходить=1;
		ИмяСхемы=СтрЗаменить(Сокрлп(ВыбПравила.Синоним)," ","_");
		Если ИмяСхемы="" Тогда
			ИмяСхемы="Данные";
		КонецЕсли;
		Пакет.setAttribute("name",ИмяСхемы);
		Пакет.setAttribute("xmlns","urn:schemas-microsoft-com:xml-data");
		Пакет.setAttribute("xmlns:dt","urn:schemas-microsoft-com:datatypes");
		Если ВыбПравила.Выбран()=1 Тогда
			ВыгрузитьОписаниеТипа(Пакет,ВыбПравила);
		Иначе 
			Спр=СоздатьОбъект("Справочник.ПравилаВыгрузки");
			Спр.ИспользоватьВладельца(ВыбрБаза);
			Спр.ВыбратьЭлементы();
			Пока Спр.ПолучитьЭлемент(0)=1 Цикл
				Если Спр.ПризнакВыгрузки="Х" Тогда
					Если Спр.ЭтоГруппа()=1 Тогда
						Состояние("Создание схемы обмена "+Спр.Наименование);
						ВыгрузитьОписаниеТипа(Пакет,Спр.ТекущийЭлемент());
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		ХМЛ.save(Файл);
		ХМЛ=0;
	КонецЕсли;
КонецПроцедуры


Процедура Просмотр()
	ТекстЗапроса="*";
	Состояние("Создается объект OLE.IXMLDOMDocument");
	ХМЛ=СоздатьОбъект("Microsoft.XMLDOM");
	Состояние("Загружается документ "+Файл);
	ХМЛ.resolveExternals=0;
	ХМЛ.load(Файл);
	Попытка
		Состояние("Производится обработка запроса "+ТекстЗапроса);
		ДеревоЗапроса=ХМЛ.SelectNodes(ТекстЗапроса);
	Исключение
		Предупреждение("Ошибка",10);
		возврат;
	КонецПопытки;
	Состояние("Вывод результата");
	ПросмотрДерева(ДеревоЗапроса);
	Возврат;
КонецПроцедуры //Просмотр



//инициализация
Для А=1 По 101 Цикл
	МасТиповХМЛ[А]="string";
КонецЦикла;

МасТиповХМЛ[1+1]="int";
МасТиповХМЛ[3+1]="date";

