//******************************************************************************
// функция ищет в списке значений элемент справочника с учетом групп
// 1 - есть элемент, 0 - нет
Функция НайтиВСписке(сп,Эл)
	Если сп.РазмерСписка()=0 Тогда Возврат 0; КонецЕсли;    
	Для н=1 По сп.РазмерСписка() Цикл
		Зн = сп.ПолучитьЗначение(н);
		Если Зн.ЭтоГруппа()=1 Тогда
			Если Эл.ПринадлежитГруппе(Зн)=1 Тогда Возврат 1; КонецЕсли;          
		Иначе
			Если Зн = Эл Тогда Возврат 1; КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат 0;
КонецФункции
// Добавляет элемент справочника в список значений
// сп - список значений, Тип - тип справочника, Режим - 1 - одиночный выбор, 2 - множественный

Процедура ДобавитьВСписок(сп,Тип,Режим) Экспорт
	спр = СоздатьОбъект(Тип);
	Если сп.РазмерСписка() > 0 Тогда
		спр.НайтиЭлемент(сп.ПолучитьЗначение(сп.ТекущаяСтрока()));
	КонецЕсли;
	Результат = 1;
	Пока Результат = 1 Цикл 
		спр.ВыборГруппы(1);
		выб = спр.Выбрать("Выбор","ДляВыбора");
		Результат = ?(Режим = 1,0,Мин(Выб,Результат));
		Если Выб = 0 Тогда Продолжить; КонецЕсли;
		Если НайтиВСписке(сп,спр.ТекущийЭлемент())=1 Тогда
			Предупреждение("Этот элемент в списке уже есть!!!");
			Продолжить;
		КонецЕсли;
		сп.ДобавитьЗначение(спр.ТекущийЭлемент());
		сп.ТекущаяСтрока(сп.РазмерСписка());
	КонецЦикла;
КонецПроцедуры
// Удоляет элементы из список значений
// сп - список значений, Режим - 1 - удаляет выбранное значение, 2 - удоляет всё
Процедура УдалитьИзСписка(сп,Режим) Экспорт
	Если сп.РазмерСписка()=0 Тогда Возврат; КонецЕсли;
	Если Режим = 1 Тогда 
		н = сп.ТекущаяСтрока(); 
		сп.УдалитьЗначение(сп.ТекущаяСтрока());
		Если н > 1 Тогда
			сп.ТекущаяСтрока(н-1);
		Иначе
			Если сп.РазмерСписка()>0 Тогда
				сп.ТекущаяСтрока(1);
			КонецЕсли;
		КонецЕсли;
	Иначе
		сп.УдалитьВсе();
	КонецЕсли;		
КонецПроцедуры 



//*******************************************
Процедура ПровестиДок()
	начЛог = семЗаписатьЛогНач( "Обработка", "Проведение документов по кредиту", "Обработка", "Проведение документов" );	
	Док=СоздатьОбъект("Документ");
	// Проверка главного клиента
	Стр=1;
	Док.УстановитьФильтр(1,0);
	сзСписокДокОплаты = СоздатьОбъект("СписокЗначений");
	сзСписокДокОплаты.ДобавитьЗначение("ДвиженияДенежныхСредств");
	сзСписокДокОплаты.ДобавитьЗначение("ПриходнаяНакладная");
	сзСписокДокОплаты.ДобавитьЗначение("Счет_фактура");
	сзСписокДокОплаты.ДобавитьЗначение("Взаимозачет");
	
	
	Для н = 1 По спКлиенты.РазмерСписка() Цикл
		ВыбКлиент = спКлиенты.ПолучитьЗначение(н);

		Док.ВыбратьПоЗначению(ДатаНачала,ДатаКонец,"Контрагент",ВыбКлиент);
		Стр=0;
		//семАвтоПроведение = 1;
		Пока Док.ПолучитьДокумент()=1 Цикл
			ВидДок=Док.Вид();
			Если Док.ПометкаУдаления()=1 Тогда
				Продолжить;
			КонецЕсли;
				
			Если (Док.Вид()="РасходнаяНакладнаяНал") или (Док.Вид()="Счет") Тогда
				Продолжить;    
			КонецЕсли;
			
			Если ТолькоОплаты=1 Тогда
				Если (сзСписокДокОплаты.Принадлежит(Док.Вид())=1) Тогда
				Иначе
					Продолжить;
				КонецЕсли;
			КонецЕсли;

			
			Если Док.Проведен()=1 Тогда
				Если ТолькоЗапись=1 Тогда
					ОбъектЗаписать(Док,,,1);
				Иначе
					Док.Провести(0,1); //Позже
				КонецЕсли;
				ЗаписьЖурналаРегистрации( "Автоматическое проведение документов по кредиту",, "Автоматическое проведение", Док.ТекущийДокумент(), 2 );
				
				Сообщить("Проведен документ "+Док.Вид()+" Nr."+Док.НомерДок+" от "+Док.ДатаДок+"  "+?(глЕстьРеквизитШапки("Клиент",Док.Вид())=1,Док.Клиент,""));
			КонецЕсли;


			Стр=Стр+1;
		КонецЦикла;
		
	КонецЦикла;
	
	//семАвтоПроведение = 0;
	семЗаписатьЛогКон( начЛог );	
	Предупреждение("Проведение завершено! Всего - "+Стр);
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	кОтложенныйМОД = 0;

КонецПроцедуры
//-----------------------------------


ДатаНачала=НачМесяца(РабочаяДата());
ДатаКонец=ПолучитьДатуТА();
