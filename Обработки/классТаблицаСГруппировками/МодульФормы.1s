
Перем тзДанные; //:ТаблицаЗначений
Перем тзГруппировкиСтрок, тзГруппировкиКолонок;
Перем тзУровни_Горизонталь, тзУровни_Вертикаль;
Перем фСвернуто_ВсяТаблица;
Перем стрФорматЧисел;

Перем НачальнаяКолонкаЦифр, КоличествоГрупп_Горизонталь, КоличествоГрупп_Вертикаль;

Перем СтекСтроки, СтекКолонки;

Перем секцияЗнак, облЗнак, секцияПоказатель, облПоказатель, секцияЦифра, облЦифра;
//===========================================================


//_____________________________________________________________________________
Функция Сам(Конт) Возврат Конт; КонецФункции //:Контекст

///******************************** ADirks 16.08.2007
Функция СоздатьТаблицуИтоговПоСтроке()
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ТЗ.НоваяКолонка("Итог", "Число");
	ТЗ.КоличествоСтрок(тзДанные.КоличествоКолонок());
	Возврат ТЗ;
КонецФункции
///******************************** ADirks 16.08.2007

///******************************** ADirks 16.08.2007
Функция СоздатьТаблицуГруппировокПоСтрокам()
	тзГрп = СоздатьОбъект("ТаблицаЗначений");
	тзГрп.НоваяКолонка("Идентификатор", "Строка");
	тзГрп.НоваяКолонка("Представление", "Строка");
	тзГрп.НоваяКолонка("НомерСтрокиДанных", "Число");
	тзГрп.НоваяКолонка("тзПотомки");
	тзГрп.НоваяКолонка("тзИтоги");
	тзГрп.НоваяКолонка("фСвернуто", "Число");
	тзГрп.НоваяКолонка("РазмерШрифта", "Число");
	тзГрп.НоваяКолонка("ЦветФона", "Число");
	
	Возврат тзГрп;
КонецФункции
///******************************** ADirks 16.08.2007

///******************************** ADirks 16.08.2007
Функция СоздатьТаблицуГруппировокПоКолонкам()
	тзГрп = СоздатьОбъект("ТаблицаЗначений");
	тзГрп.НоваяКолонка("Идентификатор", "Строка");
	тзГрп.НоваяКолонка("Представление", "Строка");
	тзГрп.НоваяКолонка("НомерКолонкиДанных", "Число");
	тзГрп.НоваяКолонка("тзПотомки");
	тзГрп.НоваяКолонка("тзИтоги");
	тзГрп.НоваяКолонка("фСвернуто", "Число");
	тзГрп.НоваяКолонка("РазмерШрифта", "Число");
	тзГрп.НоваяКолонка("ЦветФона", "Число");
	
	Возврат тзГрп;
КонецФункции
///******************************** ADirks 16.08.2007

///******************************** ADirks 16.08.2007
Процедура Инит(КонтекстФормы, ИдентификаторРеквизита, _тзДанные_) Экспорт
	Сам = Сам(Контекст);
	
	оФорма = СоздатьОбъект("Форма");
	оФорма.УстановитьФорму(КонтекстФормы.Форма);
	оФорма.СоздатьЭлементУправления(Сам, ИдентификаторРеквизита);
	Сам.Таблица.Опции(0, 1, 0, 0); 
	Сам.Таблица.ТолькоПросмотр(1);

	тзДанные = _тзДанные_;
	тзГруппировкиСтрок = СоздатьТаблицуГруппировокПоСтрокам();
	тзГруппировкиКолонок = СоздатьТаблицуГруппировокПоКолонкам();
	
	СтекСтроки  = СоздатьОбъект("Стек");
	СтекСтроки.Положить(тзГруппировкиСтрок);
	
	СтекКолонки = СоздатьОбъект("Стек");
	СтекКолонки.Положить(тзГруппировкиКолонок);
	
	НачальнаяКолонкаЦифр = 1;
	КоличествоГрупп_Горизонталь = 0;
	КоличествоГрупп_Вертикаль = 0;
	
	тзУровни_Горизонталь = СоздатьОбъект("ТаблицаЗначений");
	тзУровни_Горизонталь.НоваяКолонка("фСвернуто", "Число");
	тзУровни_Вертикаль = СоздатьОбъект("ТаблицаЗначений");
	тзУровни_Вертикаль.НоваяКолонка("фСвернуто", "Число");
	
	фСвернуто_ВсяТаблица = 0;
	
	стрФорматЧисел = "Ч20.2.,";
КонецПроцедуры
///******************************** ADirks 16.08.2007

///******************************** ADirks 16.08.2007
Функция ДобавитьПоказатель_Горизонталь(Идентификатор, Представление, НомерСтрокиДанных, РазмерШрифта, ЦветФона) Экспорт
	Перем тзГрп; //:ТаблицаЗначений
	
	РазмерСтека = СтекСтроки.Размер();
	Если (РазмерСтека+1) > НачальнаяКолонкаЦифр Тогда
		НачальнаяКолонкаЦифр = РазмерСтека + 1;
	КонецЕсли;
	
	тзГрп = СтекСтроки.Вершина();
	
	тзГрп.НоваяСтрока();
	тзГрп.Идентификатор = Идентификатор;
	тзГрп.Представление = Представление;
	тзГрп.НомерСтрокиДанных = НомерСтрокиДанных;
	
	тзГрп.РазмерШрифта = РазмерШрифта;
	тзГрп.ЦветФона = ЦветФона;

	Возврат 1;
КонецФункции
///******************************** ADirks 16.08.2007

///******************************** ADirks 16.08.2007
Функция ДобавитьГруппу_Горизонталь(Идентификатор, Представление, РазмерШрифта, ЦветФона) Экспорт
	Перем тзГрп; //:ТаблицаЗначений
	
	РазмерСтека = СтекСтроки.Размер();
	Если РазмерСтека > КоличествоГрупп_Горизонталь Тогда
		КоличествоГрупп_Горизонталь = РазмерСтека;
		тзУровни_Горизонталь.НоваяСтрока();
	КонецЕсли;

	тзГрп = СтекСтроки.Вершина();
	
	тзГрп.НоваяСтрока();
	тзГрп.Идентификатор = Идентификатор;
	тзГрп.Представление = Представление;
	тзГрп.тзПотомки = СоздатьТаблицуГруппировокПоСтрокам();
	тзГрп.тзИтоги = СоздатьТаблицуИтоговПоСтроке();
	
	тзГрп.РазмерШрифта = РазмерШрифта;
	тзГрп.ЦветФона = ЦветФона;
	
	СтекСтроки.Положить(тзГрп.тзПотомки);
	
	Возврат 1;
КонецФункции
///******************************** ADirks 16.08.2007

///******************************** ADirks 16.08.2007
Функция ЗавершитьГруппу_Горизонталь() Экспорт
	СтекСтроки.Взять();
	Возврат 1;
КонецФункции
///******************************** ADirks 16.08.2007

///******************************** ADirks 17.08.2007
Функция ДобавитьПоказатель_Вертикаль(Идентификатор, Представление, НомерКолонкиДанных) Экспорт
	Перем тзГрп; //:ТаблицаЗначений
	
	тзГрп = СтекКолонки.Вершина();
	
	тзГрп.НоваяСтрока();
	тзГрп.Идентификатор = Идентификатор;
	тзГрп.Представление = Представление;
	тзГрп.НомерКолонкиДанных = НомерКолонкиДанных;
	Возврат 1;
КонецФункции
///******************************** ADirks 17.08.2007

///******************************** ADirks 17.08.2007
Функция ДобавитьГруппу_Вертикаль(Идентификатор, Представление, РазмерШрифта, ЦветФона) Экспорт
	Перем тзГрп; //:ТаблицаЗначений
	
	РазмерСтека = СтекКолонки.Размер();
	Если РазмерСтека > КоличествоГрупп_Вертикаль Тогда
		КоличествоГрупп_Вертикаль = РазмерСтека;
		тзУровни_Вертикаль.НоваяСтрока();
	КонецЕсли;

	тзГрп = СтекКолонки.Вершина();
	
	тзГрп.НоваяСтрока();
	тзГрп.Идентификатор = Идентификатор;
	тзГрп.Представление = Представление;
	тзГрп.тзПотомки = СоздатьТаблицуГруппировокПоКолонкам();
	
	тзГрп.РазмерШрифта = РазмерШрифта;
	тзГрп.ЦветФона = ЦветФона;
	
	СтекКолонки.Положить(тзГрп.тзПотомки);
	
	Возврат 1;
КонецФункции
///******************************** ADirks 17.08.2007

///******************************** ADirks 17.08.2007
Функция ЗавершитьГруппу_Вертикаль() Экспорт
	СтекКолонки.Взять();
	Возврат 1;
КонецФункции
///******************************** ADirks 17.08.2007

///******************************** ADirks 04.09.2007
Процедура ЦветШрифтОбласти(Обл, тзГрп)
	Обл.ЦветФона(тзГрп.ЦветФона);

	Если тзГрп.РазмерШрифта > 0 Тогда
		Обл.РазмерШрифта(тзГрп.РазмерШрифта);
	КонецЕсли;
КонецПроцедуры
///******************************** ADirks 04.09.2007

///******************************** ADirks 17.08.2007
Функция _ПоказатьШапку(Т, тзГрп, Уровень = 1, нКолонка = 0, ПрефиксИдентификатора = "Верт")
	Если нКолонка = 0 Тогда
		нКолонка = НачальнаяКолонкаЦифр;
	КонецЕсли;
	нКолонокВыведено = 0;
	
	тзГрп.ВыбратьСтроки();
	Пока тзГрп.ПолучитьСтроку() = 1 Цикл
		Если тзГрп.НомерКолонкиДанных > 0 Тогда
			Обл = Т.Область(Уровень, нКолонка);
			Обл.ГоризонтальноеПоложение(3);
			Если тзГрп.НомерСтроки = 1 Тогда
				Обл.РамкаСлева(4);
			Иначе
				Обл.РамкаСлева(3);
			КонецЕсли;
			Обл.Текст = тзГрп.Представление;
			
			нКолонка = нКолонка + 1;
			нКолонокВыведено = нКолонокВыведено + 1;
			
		Иначе
			РасшифровкаПоказателя = "Грп" + РазделительСтрок + ПрефиксИдентификатора+"/"+тзГрп.Идентификатор;
			Если тзГрп.фСвернуто = 1 Тогда
				стрЗнакСвертки = "+ ";
			Иначе
				стрЗнакСвертки = "- ";
			КонецЕсли;
			
			н1 = нКолонка;
			Если тзГрп.фСвернуто = 0 Тогда
				нДобавка = _ПоказатьШапку(Т, тзГрп.тзПотомки, Уровень+1, нКолонка, ПрефиксИдентификатора+"/"+тзГрп.Идентификатор);
			Иначе
				нДобавка = 0;
			КонецЕсли;
			нКолонокВыведено = нКолонокВыведено + нДобавка;
			н2 = нКолонка;
			
			Обл = Т.Область(Уровень, н1, Уровень, н2);
			Обл.ГоризонтальноеПоложение(7);
			Обл.РамкаОбвести(4, 3, 4, 4);
			Обл.Расшифровка(РасшифровкаПоказателя, 0);
			ЦветШрифтОбласти(Обл, тзГрп);
			Обл.Полужирный(1);

			Обл = Т.Область(Уровень, н1);
			Обл.Текст = стрЗнакСвертки + тзГрп.Представление;
			
			//Продолжение заголовка вниз - для выделения итоговой строки (что-то вроде буквы Г на боку)
			Обл = Т.Область(Уровень, н2);
			Обл.РамкаСнизу(0);
			Обл = Т.Область(Уровень+1, н2, КоличествоГрупп_Вертикаль+1, н2);
			ЦветШрифтОбласти(Обл, тзГрп);
			Обл.Рамка(4,, 4);
			Обл.Расшифровка(РасшифровкаПоказателя, 0);
			
			нКолонка = нКолонка + 1;
			нКолонокВыведено = нКолонокВыведено + 1;
		КонецЕсли;
	КонецЦикла;
	
	Возврат нКолонокВыведено;
КонецФункции
///******************************** ADirks 17.08.2007

///******************************** ADirks 17.08.2007
Процедура РамкаДляЦифры(тзГрп = "")
	Если тзГрп = "" Тогда					//представление показателя
		облЦифра.Рамка(4, 3, 4, 0);
		//облЦифра.РамкаСлева(4);
		//облЦифра.РамкаСправа(4);
	ИначеЕсли тзГрп.НомерСтроки = 1 Тогда	//первая цифра
		облЦифра.Рамка(4, 3, 0, 0);
		//облЦифра.РамкаСлева(4);
		//облЦифра.РамкаСправа(0);
	Иначе									//Обычная цифра
		облЦифра.Рамка(3, 3, 0, 0);
	КонецЕсли;
КонецПроцедуры
///******************************** ADirks 17.08.2007

///******************************** ADirks 17.08.2007
Процедура РасшифровкаДляЦифры(НомерСтрокиДанных = 0, НомерКолонкиДанных = 0)
	Если НомерСтрокиДанных = 0 Тогда
		облЦифра.Расшифровка("", 2);
	Иначе
		Расшифровка = "Яч" +РазделительСтрок + НомерСтрокиДанных + РазделительСтрок + НомерКолонкиДанных;
		облЦифра.Расшифровка(Расшифровка, 0);
	КонецЕсли;
КонецПроцедуры
///******************************** ADirks 17.08.2007


///******************************** ADirks 17.08.2007
Функция _ВывестиСтроку(Т, тзГрпСтрок, тзГрпКолонок, фСвернуто, тзИтоги = "")
	Итог = 0;
	
	тзГрпКолонок.ВыбратьСтроки();
	Пока тзГрпКолонок.ПолучитьСтроку() = 1 Цикл
		Если тзГрпКолонок.НомерКолонкиДанных > 0 Тогда //Цифра
			Если тзИтоги = "" Тогда
				Сумма = тзДанные.ПолучитьЗначение(тзГрпСтрок.НомерСтрокиДанных, тзГрпКолонок.НомерКолонкиДанных);
				РасшифровкаДляЦифры(тзГрпСтрок.НомерСтрокиДанных, тзГрпКолонок.НомерКолонкиДанных);
				облЦифра.Полужирный(0);
			Иначе
				Сумма = тзИтоги.ПолучитьЗначение(тзГрпКолонок.НомерКолонкиДанных, 1);
				РасшифровкаДляЦифры();
				облЦифра.Полужирный(1);
			КонецЕсли;
			
			Если фСвернуто = 0 Тогда
				облЦифра.Текст = Формат(Сумма, стрФорматЧисел);
				РамкаДляЦифры(тзГрпКолонок);
				Т.ПрисоединитьСекцию(секцияЦифра);
			КонецЕсли;
			
		Иначе  //Итог по разделу
			Сумма = _ВывестиСтроку(Т, тзГрпСтрок, тзГрпКолонок.тзПотомки, Макс(тзГрпКолонок.фСвернуто, фСвернуто), тзИтоги);
			
			Если фСвернуто = 0 Тогда
				облЦифра.Текст = Формат(Сумма, стрФорматЧисел);;
				РасшифровкаДляЦифры();
				РамкаДляЦифры();
				облЦифра.Полужирный(1);
				Т.ПрисоединитьСекцию(секцияЦифра);
			КонецЕсли;
		КонецЕсли;

		Итог = Итог + Сумма;
	КонецЦикла;
	
	Возврат Итог;
КонецФункции
///******************************** ADirks 17.08.2007

///******************************** ADirks 17.08.2007
Процедура _Показать(Т, тзГрп, Уровень = 1, ПрефиксИдентификатора = "Гор")
	//Т//:Таблица
	
	стрПрефикс = ПовторитьСтроку("   ", Уровень-1);
	стрПрефикс = "";
	
	тзГрп.ВыбратьСтроки();
	Пока тзГрп.ПолучитьСтроку() = 1 Цикл
		НомерСтрокиДанных = тзГрп.НомерСтрокиДанных;
		Если ТипЗначения(тзГрп.тзПотомки) = 0 Тогда
			фЭтоТерминальныйУровень = 1;
		Иначе
			фЭтоТерминальныйУровень = 0;
		КонецЕсли;
		//Сообщить("фЭтоТерминальныйУровень = "+фЭтоТерминальныйУровень+", "+Уровень+", "+НомерСтрокиДанных);
		
		Если фЭтоТерминальныйУровень = 1 Тогда
			стрЗнакСвертки = "";
			РасшифровкаПоказателя = "";//ПолучитьПустоеЗначение();
			РежимРасшифровки = 2;
		Иначе
			Если тзГрп.фСвернуто = 1 Тогда
				стрЗнакСвертки = "+";
			Иначе
				стрЗнакСвертки = "-";
			КонецЕсли;
			РасшифровкаПоказателя = "Грп"+РазделительСтрок + ПрефиксИдентификатора+"/"+тзГрп.Идентификатор;
			РежимРасшифровки = 0;
		КонецЕсли;
		
		//Заголовки
		облЗнак.Полужирный(1);
		Для н = 1 По КоличествоГрупп_Горизонталь Цикл
			Если н = Уровень Тогда
				облЗнак.Текст = стрЗнакСвертки;
				облЗнак.ГоризонтальноеПоложение(3);
			ИначеЕсли н = (Уровень+1) Тогда
				облЗнак.Текст = тзГрп.Представление;
				облЗнак.ГоризонтальноеПоложение(1);
				//ЦветШрифтОбласти(облЗнак, тзГрп);
			Иначе
				облЗнак.Текст = "";
			КонецЕсли;
			облЗнак.Расшифровка(РасшифровкаПоказателя, РежимРасшифровки);

			Если н = 1 Тогда
				Т.ВывестиСекцию(секцияЗнак);
			Иначе
				Т.ПрисоединитьСекцию(секцияЗнак);
			КонецЕсли;
		КонецЦикла;

		Если фЭтоТерминальныйУровень = 1 Тогда //показатель выводим в секцию Показатель, с отступом
			облПоказатель.Текст = "   "+тзГрп.Представление;
		ИначеЕсли Уровень = КоличествоГрупп_Горизонталь Тогда //последний уровень выводим в секцию Показатель, без отступа
			облПоказатель.Текст = тзГрп.Представление;
		Иначе
			облПоказатель.Текст = "";
		КонецЕсли;
		облПоказатель.Расшифровка(РасшифровкаПоказателя, РежимРасшифровки);
		//ЦветШрифтОбласти(облПоказатель, тзГрп);
		Т.ПрисоединитьСекцию(секцияПоказатель);
		
		//Цифры - либо итоговые, либо исходные (нижний уровень)
		Если НомерСтрокиДанных = 0 Тогда
			 _ВывестиСтроку(Т, тзГрп, тзГруппировкиКолонок, 0, тзГрп.тзИтоги);
			
			//Форматирование
			Обл = Т.Область(Т.ВысотаТаблицы(), 1, Т.ВысотаТаблицы(), Т.ШиринаТаблицы());
			Обл.Полужирный(1);
			Обл.РамкаСверху(3);
			ЦветШрифтОбласти(Обл, тзГрп);

			нСтрока = нСтрока + 1;
			Если тзГрп.фСвернуто = 0 Тогда
				_Показать(Т, тзГрп.тзПотомки, Уровень+1, ПрефиксИдентификатора+"/"+тзГрп.Идентификатор)
			КонецЕсли;
			
		Иначе
			_ВывестиСтроку(Т, тзГрп, тзГруппировкиКолонок, 0);
			Обл = Т.Область(Т.ВысотаТаблицы(), 1, Т.ВысотаТаблицы(), Т.ШиринаТаблицы());
			ЦветШрифтОбласти(Обл, тзГрп);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
///******************************** ADirks 17.08.2007

///******************************** ADirks 04.09.2007
Процедура ВывестиСимволыРазворачиванияДляГоризонтальныхГруппировок(Т)
	ВысотаТаблицы = Т.ВысотаТаблицы();
	
	тзУровни_Горизонталь.ВыбратьСтроки();
	Пока тзУровни_Горизонталь.ПолучитьСтроку() = 1 Цикл
		фСвернуто = тзУровни_Горизонталь.фСвернуто;
		стрЗнакСвертки = ?(фСвернуто=1, "+", "-");
		Обл = Т.Область(ВысотаТаблицы, тзУровни_Горизонталь.НомерСтроки);
		Обл.Текст = стрЗнакСвертки;
		Обл.Расшифровка("ГорГрпВсе"+РазделительСтрок+тзУровни_Горизонталь.НомерСтроки, 0);
		Обл.ГоризонтальноеПоложение(3);
		Обл.ВертикальноеПоложение(3);
		Обл.Полужирный(1);
		Обл.Рамка(4, 4, 4, 4);
	КонецЦикла;
КонецПроцедуры
///******************************** ADirks 04.09.2007

///******************************** ADirks 06.09.2007
Процедура ВывестиСимволыРазворачиванияДляВертикальныхГруппировок(Т)
	тзУровни_Вертикаль.ВыбратьСтроки();
	Пока тзУровни_Вертикаль.ПолучитьСтроку() = 1 Цикл
		стрЗнакСвертки = ?(тзУровни_Вертикаль.фСвернуто=1, "+", "-");
		Обл = Т.Область(тзУровни_Вертикаль.НомерСтроки, КоличествоГрупп_Горизонталь);
		Обл.Текст = стрЗнакСвертки;
		Обл.Расшифровка("ВертГрпВсе"+РазделительСтрок+тзУровни_Вертикаль.НомерСтроки, 0);
		Обл.ГоризонтальноеПоложение(3);
		Обл.ВертикальноеПоложение(3);
		Обл.Полужирный(1);
		Обл.Рамка(4, 4, 4, 4);
	КонецЦикла;
КонецПроцедуры
///******************************** ADirks 06.09.2007

///******************************** ADirks 06.09.2007
Процедура ВывестиСимволРазворачиванияВсего(Т)
	стрЗнакСвертки = ?(фСвернуто_ВсяТаблица=1, "+", "-");
	Обл = Т.Область(1, 1);
	Обл.Текст = стрЗнакСвертки;
	Обл.Расшифровка("ГрпВсе", 0);
	Обл.ГоризонтальноеПоложение(3);
	Обл.ВертикальноеПоложение(3);
	Обл.Полужирный(1);
	Обл.Рамка(4, 4, 4, 4);
КонецПроцедуры
///******************************** ADirks 06.09.2007

///******************************** ADirks 16.08.2007
Функция Показать() Экспорт
	Перем Т;//:Таблица
	
	Сам = Сам(Контекст);

	Т = Сам.Таблица;
	Т.Очистить();
	
	//Подготовим секции и области для печати
	секцияЗнак = Т.ПолучитьСекцию("Строка|Знак");
	облЗнак = секцияЗнак.Область(1, 1);
	секцияПоказатель = Т.ПолучитьСекцию("Строка|ЗаголовокСтроки");
	облПоказатель = секцияПоказатель.Область(1, 1);
	секцияЦифра = Т.ПолучитьСекцию("Строка|Значение");
	облЦифра = секцияЦифра.Область(1, 1);;
	

	//Выведем первую строку, чтобы установить правильную ширину колонок
	Для н = 1 По КоличествоГрупп_Горизонталь Цикл
		Если н = 1 Тогда
			Т.ВывестиСекцию(секцияЗнак);
		Иначе
			Т.ПрисоединитьСекцию(секцияЗнак);
		КонецЕсли;
	КонецЦикла;
	Т.ПрисоединитьСекцию(секцияПоказатель);
	
	_ПоказатьШапку(Т, тзГруппировкиКолонок);
	ВысотаШапки = Т.ВысотаТаблицы();
	
	Обл = Т.Область(ВысотаШапки, 1, ВысотаШапки, Т.ШиринаТаблицы());
	Обл.РамкаСнизу(4);
	
	ВывестиСимволРазворачиванияВсего(Т);
	ВывестиСимволыРазворачиванияДляВертикальныхГруппировок(Т);
	ВывестиСимволыРазворачиванияДляГоризонтальныхГруппировок(Т);
	
	_Показать(Т, тзГруппировкиСтрок);
	
	//Рамка снизу
	Обл = Т.Область(Т.ВысотаТаблицы(), 1, Т.ВысотаТаблицы(), Т.ШиринаТаблицы());
	Обл.РамкаСнизу(4);

	Т.Опции(0,, ВысотаШапки, КоличествоГрупп_Горизонталь+1); 
	Т.Показать();
	
	Возврат 1;
КонецФункции
///******************************** ADirks 16.08.2007


///******************************** ADirks 16.08.2007
Процедура _РассчитатьИтоги_Горизонталь(тзГрп)
	тзГрп.ВыбратьСтроки();
	Пока тзГрп.ПолучитьСтроку() = 1 Цикл
		Если тзГрп.НомерСтрокиДанных > 0 Тогда
			Продолжить;
		КонецЕсли;
		
		тзПотомки = тзГрп.тзПотомки;
		тзИтоги = тзГрп.тзИтоги;
		тзИтоги.Заполнить(0,,, 1);
		
		_РассчитатьИтоги_Горизонталь(тзПотомки);
		
		тзПотомки.ВыбратьСтроки();
		Пока тзПотомки.ПолучитьСтроку() = 1 Цикл
			Если тзПотомки.НомерСтрокиДанных = 0 Тогда
				тзИтогиПотомок = тзПотомки.тзИтоги;
				н = тзИтоги.КоличествоСтрок();
				Пока н >= 1 Цикл
					Сумма = тзИтоги.ПолучитьЗначение(н, 1) + тзИтогиПотомок.ПолучитьЗначение(н, 1);
					тзИтоги.УстановитьЗначение(н, 1, Сумма);
					н = н - 1;
				КонецЦикла;
			Иначе
				нКол = тзИтоги.КоличествоСтрок();
				Пока нКол >= 1 Цикл
					Сумма = тзИтоги.ПолучитьЗначение(нКол, 1) + тзДанные.ПолучитьЗначение(тзПотомки.НомерСтрокиДанных, нКол);
					тзИтоги.УстановитьЗначение(нКол, 1, Сумма);
					нКол = нКол - 1;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры
///******************************** ADirks 16.08.2007

///******************************** ADirks 16.08.2007
Процедура РассчитатьИтоги() Экспорт
	_РассчитатьИтоги_Горизонталь(тзГруппировкиСтрок);
КонецПроцедуры
///******************************** ADirks 16.08.2007


///******************************** ADirks 04.09.2007
Процедура _УстановитьФлагСверткиДляУровня(тзГрп, тзУровни, НужныйУровень, фСвернуто, Уровень = 1)
	Если Уровень > НужныйУровень Тогда
		Возврат; //ниже лезть ни к чему
	КонецЕсли;
	
	Если фСвернуто = 0 Тогда //если разворачивается какой-то уровень, то нужно развернуть и все вышестоящие
		тзУровни.УстановитьЗначение(Уровень, "фСвернуто", 0);
	ИначеЕсли Уровень = НужныйУровень Тогда
		тзУровни.УстановитьЗначение(Уровень, "фСвернуто", фСвернуто);
	КонецЕсли;

	тзГрп.ВыбратьСтроки();
	Пока тзГрп.ПолучитьСтроку() = 1 Цикл
		Если Уровень = НужныйУровень Тогда
			тзГрп.фСвернуто = фСвернуто;
		Иначе
			Если фСвернуто = 0 Тогда //если разворачивается какой-то уровень, то нужно развернуть и все вышестоящие
				тзГрп.фСвернуто = 0;
			КонецЕсли;
			
			Если ТипЗначения(тзГрп.тзПотомки) <> 0 Тогда
				_УстановитьФлагСверткиДляУровня(тзГрп.тзПотомки, тзУровни, НужныйУровень, фСвернуто, Уровень+1);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
///******************************** ADirks 04.09.2007

///******************************** ADirks 04.09.2007
Процедура _УстановитьФлагСверткиВсе(фСвернуто) Экспорт
	фСвернуто_ВсяТаблица = фСвернуто;

	Для Уровень = 1 По КоличествоГрупп_Горизонталь Цикл
		_УстановитьФлагСверткиДляУровня(тзГруппировкиСтрок, тзУровни_Горизонталь, Уровень, фСвернуто_ВсяТаблица);
	КонецЦикла;

	Для Уровень = 1 По КоличествоГрупп_Вертикаль Цикл
		_УстановитьФлагСверткиДляУровня(тзГруппировкиКолонок, тзУровни_Вертикаль, Уровень, фСвернуто_ВсяТаблица);
	КонецЦикла;
КонецПроцедуры
///******************************** ADirks 04.09.2007


///******************************** ADirks 04.09.2007
Процедура СвернутьВсе_Горизонталь(Уровень) Экспорт
	_УстановитьФлагСверткиДляУровня(тзГруппировкиСтрок, тзУровни_Горизонталь, Уровень, 1);
КонецПроцедуры
///******************************** ADirks 04.09.2007

///******************************** ADirks 04.09.2007
Процедура РазвернутьВсе_Горизонталь(Уровень) Экспорт
	_УстановитьФлагСверткиДляУровня(тзГруппировкиСтрок, тзУровни_Горизонталь, Уровень, 0);
КонецПроцедуры
///******************************** ADirks 04.09.2007

///******************************** ADirks 04.09.2007
Процедура СвернутьВсе_Вертикаль(Уровень) Экспорт
	_УстановитьФлагСверткиДляУровня(тзГруппировкиКолонок, тзУровни_Вертикаль, Уровень, 1);
КонецПроцедуры
///******************************** ADirks 04.09.2007

///******************************** ADirks 04.09.2007
Процедура РазвернутьВсе_Вертикаль(Уровень) Экспорт
	_УстановитьФлагСверткиДляУровня(тзГруппировкиКолонок, тзУровни_Вертикаль, Уровень, 0);
КонецПроцедуры
///******************************** ADirks 04.09.2007

///******************************** ADirks 04.09.2007
Процедура СвернутьВсе() Экспорт
	_УстановитьФлагСверткиВсе(1);
КонецПроцедуры
///******************************** ADirks 04.09.2007

///******************************** ADirks 04.09.2007
Процедура РазвернутьВсе() Экспорт
	_УстановитьФлагСверткиВсе(0);
КонецПроцедуры
///******************************** ADirks 04.09.2007


///******************************** ADirks 16.08.2007
Функция ПереключитьСостояние(ПолныйПутьКУзлу) Экспорт
	сзПуть = СтрокуВСписок(ПолныйПутьКУзлу, "/", 1);
	РазмерСписка = сзПуть.РазмерСписка();
	
	//В зависимости от типа группировки выберем нужную таблицу группировок
	ВертГор = сзПуть.ПолучитьЗначение(1);
	Если ВертГор = "Верт" Тогда
		тзГрп = тзГруппировкиКолонок;
	Иначе
		тзГрп = тзГруппировкиСтрок;
	КонецЕсли;

	//По полному пути найдём нужную группировку
	Для н = 2 По РазмерСписка Цикл
		Идентификатор = сзПуть.ПолучитьЗначение(н);
		рез = НайтиСтрокуТЗ(тзГрп, "Идентификатор", Идентификатор);
		//Сообщить(Идентификатор+" - "+рез);
		Если н < РазмерСписка Тогда
			тзГрп = тзГрп.тзПотомки;
		КонецЕсли;
	КонецЦикла;

	Если ТипЗначенияСтр(тзГрп.тзПотомки) <> "ТаблицаЗначений" Тогда //Терминальная строка
		Возврат -1;
	КонецЕсли;
	
	//Переключение состояния
	тзГрп.фСвернуто = (тзГрп.фСвернуто + 1) % 2;
	
	Возврат тзГрп.фСвернуто;
КонецФункции
///******************************** ADirks 16.08.2007


///******************************** ADirks 04.09.2007
Функция ПереключитьСостояниеВсе_Горизонталь(Уровень) Экспорт
	фСвернуто = тзУровни_Горизонталь.ПолучитьЗначение(Уровень, "фСвернуто");
	фСвернуто = (фСвернуто + 1) % 2;
	_УстановитьФлагСверткиДляУровня(тзГруппировкиСтрок, тзУровни_Горизонталь, Уровень, фСвернуто);
	
	Возврат фСвернуто;
КонецФункции
///******************************** ADirks 04.09.2007

///******************************** ADirks 04.09.2007
Функция ПереключитьСостояниеВсе_Вертикаль(Уровень) Экспорт
	фСвернуто = тзУровни_Вертикаль.ПолучитьЗначение(Уровень, "фСвернуто");
	фСвернуто = (фСвернуто + 1) % 2;
	_УстановитьФлагСверткиДляУровня(тзГруппировкиКолонок, тзУровни_Вертикаль, Уровень, фСвернуто);
	
	Возврат фСвернуто;
КонецФункции
///******************************** ADirks 04.09.2007

///******************************** ADirks 04.09.2007
Функция ПереключитьСостояниеВсе() Экспорт
	фСвернуто_ВсяТаблица = (фСвернуто_ВсяТаблица + 1) % 2;
	
	_УстановитьФлагСверткиВсе(фСвернуто_ВсяТаблица);
	
	Возврат фСвернуто_ВсяТаблица;
КонецФункции
///******************************** ADirks 04.09.2007
