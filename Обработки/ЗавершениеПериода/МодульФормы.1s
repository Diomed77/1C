Перем ПодчДок;
Перем МассивДокументовПереноса;
Перем МассивОставляемыхДокументов;
Перем МаксСтрокДокум;
//--------------------------
Процедура Флажки(Реж)
	Если Реж=1 Тогда
		Если Удалять=1 Тогда
			Помечать=0;
		Иначе
			Помечать=1;
		КонецЕсли;
	Иначе
		Если Помечать=1 Тогда
			Удалять=0;
		Иначе
			Удалять=1;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
//--------------------------
Процедура ЗаполнитьШапку(Докум)
	Докум.Автор=Пользователь;  
	Докум.Фирма=Константа.ОсновнаяФирма;
	Докум.ТипУчета=ДефТипУчета(Докум);
	Докум.ДатаДок=ДатаКонцаПериода;
	Докум.Основание="Закрытие отчетного периода "+Строка(ДатаКонцаПериода);
КонецПроцедуры

//-------------------------
Функция ЗаполнитьОстаткиТоваров()
	Докум=СоздатьОбъект("Документ.ПереносОстаткиТоваров");
	Докум.АвтоВремяКонецДня();
	
	Запрос=СоздатьОбъект("Запрос");
	ТекстЗапроса=
	"//{{ЗАПРОС(ОстаткиТоваров)
	|Период с '01.01.1990' по ДатаКонцаПериода;
	|Обрабатывать НеПомеченныеНаУдаление;
	|Товар = Регистр.ОстаткиТоваров.Товар;
	|Склад = Регистр.ОстаткиТоваров.Склад;
	|Тов = Регистр.ОстаткиТоваров.ОстатокТовара;
	|Группировка Товар упорядочить по Товар.Наименование без групп;
	|Группировка Склад упорядочить по Склад.Наименование без групп;
	|Функция ОстатокТов = КонОст(Тов);
	|"//}}ЗАПРОС
	;
	Если Запрос.Выполнить(ТекстЗапроса)=0 Тогда 
		Предупреждение("Системная ошибка выполнения запроса по Регистр.ОстаткиТоваров!"); 
		Возврат 1; 
	КонецЕсли;
	
	ЧислоСтрокДокум=0;
	Заполняем=0;
	Пока Запрос.Группировка("Товар")=1 Цикл
		Если Запрос.Товар.Выбран()=0 Тогда
			Продолжить;
		КонецЕсли;
		Пока Запрос.Группировка("Склад")=1 Цикл
			Если Запрос.Склад.Выбран()=0 Тогда
				Продолжить;
			КонецЕсли;
			Если ЧислоСтрокДокум=0 Тогда
				глСоздатьНовыйОбъект(Докум);
				ЗаполнитьШапку(Докум);
				Заполняем=1;
			КонецЕсли;
			// заполним табличную часть
			ЧислоСтрокДокум=ЧислоСтрокДокум+1;
			Докум.НоваяСтрока();
			Докум.Товар=Запрос.Товар; 
			Докум.Склад=Запрос.Склад; 
			Докум.ФлагУчета=1;
			Докум.ОстатокТовара=Запрос.ОстатокТов;
			Если ЧислоСтрокДокум=МаксСтрокДокум Тогда
				//Закомментировано Инсталлятором МОД:Докум.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Докум, );
	//Конец текста, вставленного Инсталлятором МОД

				МассивДокументовПереноса.ДобавитьЗначение(Докум.ТекущийДокумент(),"");
				Сообщить("Создан документ "+ Докум);
				ЧислоСтрокДокум=0;
				Заполняем=0;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Если Заполняем=1 Тогда
		//Закомментировано Инсталлятором МОД:Докум.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Докум, );
	//Конец текста, вставленного Инсталлятором МОД

		МассивДокументовПереноса.ДобавитьЗначение(Докум.ТекущийДокумент(),"");
		Сообщить("Создан документ "+ Докум);
	КонецЕсли;
	Возврат 0; 
КонецФункции
//-------------------------
Функция ЗаполнитьРезервыТоваров()
	Докум=СоздатьОбъект("Документ.ПереносРезервыТоваров");
	Докум.АвтоВремяКонецДня();
	
	Запрос=СоздатьОбъект("Запрос");
	ТекстЗапроса=
	"//{{ЗАПРОС(РезервыТоваров)
	|Период с '01.01.1990' по ДатаКонцаПериода;
	|Обрабатывать НеПомеченныеНаУдаление;
	|Товар = Регистр.РезервыТоваров.Товар;
	|ПоСчету = Регистр.РезервыТоваров.ПоСчету;
	|Резерв = Регистр.РезервыТоваров.РезервТовара;
	|Группировка Товар без групп;
	|Группировка ПоСчету;
	|Функция Рез = КонОст(Резерв);
	|"//}}ЗАПРОС
	;
	Если Запрос.Выполнить(ТекстЗапроса)=0 Тогда 
		Предупреждение("Системная ошибка выполнения запроса по Регистр.РезервыТоваров!"); 
		Возврат 1; 
	КонецЕсли;
	
	ЧислоСтрокДокум=0;
	Заполняем=0;
	Пока Запрос.Группировка("Товар")=1 Цикл
		Если Запрос.Товар.Выбран()=0 Тогда
			Продолжить;
		КонецЕсли;
		Пока Запрос.Группировка("ПоСчету")=1 Цикл
			Если Запрос.ПоСчету.Выбран()=0 Тогда
				Продолжить;
			КонецЕсли;
			Если ЧислоСтрокДокум=0 Тогда
				глСоздатьНовыйОбъект(Докум);
				ЗаполнитьШапку(Докум);
				Заполняем=1;
			КонецЕсли;
			// заполним табличную часть
			ЧислоСтрокДокум=ЧислоСтрокДокум+1;
			Докум.НоваяСтрока();
			Докум.Товар=Запрос.Товар; 
			Докум.ПоСчету=Запрос.ПоСчету; 
			Докум.РезервТовара=Запрос.Рез; 
			Если ЧислоСтрокДокум=МаксСтрокДокум Тогда
				//Закомментировано Инсталлятором МОД:Докум.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Докум, );
	//Конец текста, вставленного Инсталлятором МОД

				МассивДокументовПереноса.ДобавитьЗначение(Докум.ТекущийДокумент(),"");
				Сообщить("Создан документ "+ Докум);
				ЧислоСтрокДокум=0;
				Заполняем=0;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Если Заполняем=1 Тогда
		//Закомментировано Инсталлятором МОД:Докум.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Докум, );
	//Конец текста, вставленного Инсталлятором МОД

		МассивДокументовПереноса.ДобавитьЗначение(Докум.ТекущийДокумент(),"");
		Сообщить("Создан документ "+ Докум);
		ЧислоСтрокДокум=0;
		Заполняем=0;
	КонецЕсли;
	Возврат 0; 
КонецФункции
//-------------------------
Функция ЗаполнитьВзаиморасчетыПокупателей()
	Докум=СоздатьОбъект("Документ.ПереносВзаиморасчетыПокупателей");
	Докум.АвтоВремяКонецДня();
	
	Запрос=СоздатьОбъект("Запрос");
	ТекстЗапроса=
	"//{{ЗАПРОС(ВзаиморасчетыПокупателей)
	|Период с '01.01.1990' по ДатаКонцаПериода;
	|Обрабатывать НеПомеченныеНаУдаление;
	|Клиент = Регистр.ВзаиморасчетыПокупателей.Клиент;
	|ИзмФирма = Регистр.ВзаиморасчетыПокупателей.Фирма;
	|СтавкаНДС = Регистр.ВзаиморасчетыПокупателей.СтавкаНДС;
	|ВидОтгрузки = Регистр.ВзаиморасчетыПокупателей.ВидОтгрузки;
	|КредДокумент = Регистр.ВзаиморасчетыПокупателей.КредДокумент;
	|Долг = Регистр.ВзаиморасчетыПокупателей.Долг;
	|Группировка ИзмФирма;
	|Группировка Клиент упорядочить по Клиент.Наименование без групп;
	|Группировка СтавкаНДС;
	|Группировка ВидОтгрузки;
	|Группировка КредДокумент;
	|Функция ОстатокДолга = КонОст(Долг);
	|"//}}ЗАПРОС
	;
	Если Запрос.Выполнить(ТекстЗапроса)=0 Тогда 
		Предупреждение("Системная ошибка выполнения запроса по Регистр.ВзаиморасчетыПокупателей!"); 
		Возврат 1; 
	КонецЕсли;
	
	ЧислоСтрокДокум=0;
	Заполняем=0;
	Пока Запрос.Группировка("ИзмФирма")=1 Цикл
		Пока Запрос.Группировка("Клиент")=1 Цикл
			Если Запрос.Клиент.Выбран()=0 Тогда
				Продолжить;
			КонецЕсли;
			Пока Запрос.Группировка("СтавкаНДС")=1 Цикл
				Пока Запрос.Группировка("ВидОтгрузки")=1 Цикл
					Пока Запрос.Группировка("КредДокумент")=1 Цикл
						Если Запрос.КредДокумент.Выбран()=0 Тогда
							Продолжить;
						КонецЕсли;
						Если ЧислоСтрокДокум=0 Тогда
							глСоздатьНовыйОбъект(Докум);
							ЗаполнитьШапку(Докум);
							Заполняем=1;
						КонецЕсли;
						// заполним табличную часть
						ЧислоСтрокДокум=ЧислоСтрокДокум+1;
						Докум.НоваяСтрока();
						Докум.Клиент=Запрос.Клиент; 
						Докум.ИзмФирма=Запрос.ИзмФирма; 
						Докум.СтавкаНДС=Запрос.СтавкаНДС; 
						Докум.ВидОтгрузки=Запрос.ВидОтгрузки; 
						Докум.КредДокумент=Запрос.КредДокумент; 
						Докум.Долг=Запрос.ОстатокДолга; 
						Если ЧислоСтрокДокум=МаксСтрокДокум Тогда
							//Закомментировано Инсталлятором МОД:Докум.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Докум, );
	//Конец текста, вставленного Инсталлятором МОД

							МассивДокументовПереноса.ДобавитьЗначение(Докум.ТекущийДокумент(),"");
							Сообщить("Создан документ "+ Докум);
							ЧислоСтрокДокум=0;
							Заполняем=0;
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	Если Заполняем=1 Тогда
		//Закомментировано Инсталлятором МОД:Докум.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Докум, );
	//Конец текста, вставленного Инсталлятором МОД

		МассивДокументовПереноса.ДобавитьЗначение(Докум.ТекущийДокумент(),"");
		Сообщить("Создан документ "+ Докум);
	КонецЕсли;
	Возврат 0; 
КонецФункции
//-------------------------
Функция ЗаполнитьВзаиморасчетыПоставщиков()
	Докум=СоздатьОбъект("Документ.ПереносВзаиморасчетыПоставщиков");
	Докум.АвтоВремяКонецДня();
	
	Запрос=СоздатьОбъект("Запрос");
	ТекстЗапроса=
	"//{{ЗАПРОС(ВзаиморасчетыПоставщиков)
	|Период с '01.01.1990' по ДатаКонцаПериода;
	|Обрабатывать НеПомеченныеНаУдаление;   
	|ИзмФирма = Регистр.ВзаиморасчетыПоставщиков.Фирма;
	|Клиент = Регистр.ВзаиморасчетыПоставщиков.Клиент;
	|ВидОтгрузки = Регистр.ВзаиморасчетыПоставщиков.ВидОтгрузки;
	|КредДокумент = Регистр.ВзаиморасчетыПоставщиков.КредДокумент;
	|Долг = Регистр.ВзаиморасчетыПоставщиков.Долг;
	|Группировка ИзмФирма;
	|Группировка Клиент; 
	|Группировка ВидОтгрузки;
	|Группировка КредДокумент;
	|Функция ОстатокДолга = КонОст(Долг);
	|"//}}ЗАПРОС
	;
	Если Запрос.Выполнить(ТекстЗапроса)=0 Тогда 
		Предупреждение("Системная ошибка выполнения запроса по Регистр.ВзаиморасчетыПоставщиков!"); 
		Возврат 1; 
	КонецЕсли;
	
	ЧислоСтрокДокум=0;
	Заполняем=0; 
	ТЗ=СоздатьОбъект("ТаблицаЗначений");
	Пока Запрос.Группировка("ИзмФирма")=1 Цикл
		Пока Запрос.Группировка("Клиент")=1 Цикл
			Если Запрос.Клиент.Выбран()=0 Тогда
				Продолжить;
			КонецЕсли; 
			Пока Запрос.Группировка("ВидОтгрузки")=1 Цикл
				Пока Запрос.Группировка("КредДокумент")=1 Цикл
					Если Запрос.КредДокумент.Выбран()=0 Тогда
						Продолжить;
					КонецЕсли;
					Если ЧислоСтрокДокум=0 Тогда
						глСоздатьНовыйОбъект(Докум);
						ЗаполнитьШапку(Докум);
						Заполняем=1;
					КонецЕсли;
					// заполним табличную часть
					ЧислоСтрокДокум=ЧислоСтрокДокум+1;
					Докум.НоваяСтрока();
					Докум.ИзмФирма=Запрос.ИзмФирма; 
					Докум.Клиент=Запрос.Клиент; 
					Докум.ВидОтгрузки=Запрос.ВидОтгрузки; 
					Докум.КредДокумент=Запрос.КредДокумент; 
					Докум.Долг=Запрос.ОстатокДолга; 
					Если ЧислоСтрокДокум=МаксСтрокДокум Тогда
						//Закомментировано Инсталлятором МОД:Докум.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Докум, );
	//Конец текста, вставленного Инсталлятором МОД

						МассивДокументовПереноса.ДобавитьЗначение(Докум.ТекущийДокумент(),"");
						Сообщить("Создан документ "+ Докум);
						ЧислоСтрокДокум=0;
						Заполняем=0;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	Если Заполняем=1 Тогда
		//Закомментировано Инсталлятором МОД:Докум.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Докум, );
	//Конец текста, вставленного Инсталлятором МОД

		МассивДокументовПереноса.ДобавитьЗначение(Докум.ТекущийДокумент(),"");
		Сообщить("Создан документ "+ Докум);
	КонецЕсли;
	Возврат 0; 
КонецФункции
//-------------------------
Функция ЗаполнитьПартииТоваров()
	Докум=СоздатьОбъект("Документ.ПереносПартииТоваров");
	Докум.АвтоВремяКонецДня();
	
	Запрос=СоздатьОбъект("Запрос");
	ТекстЗапроса=
	"//{{ЗАПРОС(ПартииТоваров)
	|Период с '01.01.1990' по ДатаКонцаПериода;
	|Обрабатывать НеПомеченныеНаУдаление;
	|Товар = Регистр.ПартииТоваров.Товар;
	|Фирма = Регистр.ПартииТоваров.Фирма;
	|Статус = Регистр.ПартииТоваров.Статус;
	|Контрагент = Регистр.ПартииТоваров.Контрагент;
	|ПрихДокумент = Регистр.ПартииТоваров.ПрихДокумент;
	|Склад = Регистр.ПартииТоваров.Склад;
	|ОстатокТовара = Регистр.ПартииТоваров.ОстатокТовара;
	|Стоимость = Регистр.ПартииТоваров.Стоимость;
	|ПродСтоимость = Регистр.ПартииТоваров.ПродСтоимость;
	|НДС = Регистр.ПартииТоваров.НДС;
	|НП = Регистр.ПартииТоваров.НП;
	|Группировка Фирма упорядочить по Фирма.Код;
	|Группировка Товар упорядочить по Товар.Код без групп;
	|Группировка Статус;
	|Группировка Контрагент;
	|Группировка ПрихДокумент; 
	|Группировка Склад; 
	|Функция ОстатокТов = КонОст(ОстатокТовара);
	|Функция ОстатокСтоимость = КонОст(Стоимость);
	|Функция ОстатокПродСтоимость = КонОст(ПродСтоимость);
	|Функция ОстатокНДС = КонОст(НДС);
	|Функция ОстатокНП = КонОст(НП);
	|"//}}ЗАПРОС
	;
	Если Запрос.Выполнить(ТекстЗапроса)=0 Тогда 
		Предупреждение("Системная ошибка выполнения запроса по Регистр.ПартииТоваров!"); 
		Возврат 1; 
	КонецЕсли;
	
	Док=СоздатьОбъект("Документ"); 
	Рег=СоздатьОбъект("Регистр.ПартииТоваров"); 
	
	ЧислоСтрокДокум=0;
	Заполняем=0;
	Пока Запрос.Группировка("Фирма")=1 Цикл
		Пока Запрос.Группировка("Товар")=1 Цикл
			Если Запрос.Товар.Выбран()=0 Тогда
				Продолжить;
			КонецЕсли;
			Если Запрос.Товар.ВидТовара=Перечисление.ВидыТоваров.Услуга Тогда
				// услуги здесь в этих регистрах не учитываем
				Продолжить;
			КонецЕсли;
			Пока Запрос.Группировка("Статус")=1 Цикл
				Пока Запрос.Группировка("Контрагент")=1 Цикл
					Пока Запрос.Группировка("ПрихДокумент")=1 Цикл
						Пока Запрос.Группировка("Склад")=1 Цикл	
							Если ЧислоСтрокДокум=0 Тогда
								глСоздатьНовыйОбъект(Докум);
								ЗаполнитьШапку(Докум);
								Заполняем=1;
							КонецЕсли;
							// заполним табличную часть
							ЧислоСтрокДокум=ЧислоСтрокДокум+1;
							Докум.НоваяСтрока();
							Докум.Товар=Запрос.Товар; 
							Докум.ИзмФирма=Запрос.Фирма; 
							Докум.Статус=Запрос.Статус; 
							Докум.Контрагент=Запрос.Контрагент; 
							Докум.ПрихДокумент=Запрос.ПрихДокумент; 
							Докум.Склад=Запрос.Склад; 
							Докум.ОстатокТовара=Запрос.ОстатокТов;
							Докум.Стоимость=Запрос.ОстатокСтоимость;
							Докум.ПродСтоимость=Запрос.ОстатокПродСтоимость;
							Докум.НДС=Запрос.ОстатокНДС;
							Докум.НП=Запрос.ОстатокНП;
							Если ЧислоСтрокДокум=МаксСтрокДокум Тогда
								//Закомментировано Инсталлятором МОД:Докум.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Докум, );
	//Конец текста, вставленного Инсталлятором МОД

								МассивДокументовПереноса.ДобавитьЗначение(Докум.ТекущийДокумент(),"");
								Сообщить("Создан документ "+ Докум);
								ЧислоСтрокДокум=0;
								Заполняем=0;
							КонецЕсли;
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	Если Заполняем=1 Тогда
		//Закомментировано Инсталлятором МОД:Докум.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Докум, );
	//Конец текста, вставленного Инсталлятором МОД

		МассивДокументовПереноса.ДобавитьЗначение(Докум.ТекущийДокумент(),"");
		Сообщить("Создан документ "+ Докум);
	КонецЕсли;
	Возврат 0; 
КонецФункции
//-------------------------   
Функция ЗаполнитьАлкаголь()
	Докум=СоздатьОбъект("Документ.ПереносУчетаАлкаголя");
	Докум.АвтоВремяКонецДня();
	
	Запрос=СоздатьОбъект("Запрос");
	ТекстЗапроса=
	"//{{ЗАПРОС(УчетАлкаголя)
	|Период с '01.01.1990' по ДатаКонцаПериода;
	|Обрабатывать НеПомеченныеНаУдаление;
	|Товар = Регистр.УчетАлкоголя.Товар; 
	|УчетныеЕдиницы = Регистр.УчетАлкоголя.УчетныеЕдиницы; 
	|ПриходныйДокумент = Регистр.УчетАлкоголя.ПриходныйДокумент;
	|Склад = Регистр.УчетАлкоголя.Склад;
	|ОстатокТовара = Регистр.УчетАлкоголя.ОстатокТовара;
	|Стоимость = Регистр.УчетАлкоголя.Стоимость;
	|Группировка Товар упорядочить по Товар.Код без групп; 
	|Группировка УчетныеЕдиницы; 
   	|Группировка Склад; 
	|Группировка ПриходныйДокумент; 
	|Функция ОстатокТов = КонОст(ОстатокТовара);
	|Функция ОстатокСтоимость = КонОст(Стоимость);
	|"//}}ЗАПРОС
	;
	Если Запрос.Выполнить(ТекстЗапроса)=0 Тогда 
		Предупреждение("Системная ошибка выполнения запроса по Регистр.УчетАлкаголя!"); 
		Возврат 1; 
	КонецЕсли;
	
	Док=СоздатьОбъект("Документ"); 
	Рег=СоздатьОбъект("Регистр.УчетАлкоголя"); 
	
	ЧислоСтрокДокум=0;
	Заполняем=0;
		Пока Запрос.Группировка("Товар")=1 Цикл
			Если Запрос.Товар.Выбран()=0 Тогда
				Продолжить;
			КонецЕсли;
			Пока Запрос.Группировка("УчетныеЕдиницы")=1 Цикл
				Пока Запрос.Группировка("Склад")=1 Цикл
					Пока Запрос.Группировка("ПриходныйДокумент")=1 Цикл
						
							Если ЧислоСтрокДокум=0 Тогда
								глСоздатьНовыйОбъект(Докум);
								ЗаполнитьШапку(Докум);
								Заполняем=1;
							КонецЕсли;
							// заполним табличную часть
							ЧислоСтрокДокум=ЧислоСтрокДокум+1;
							Докум.НоваяСтрока();
							Докум.Товар=Запрос.Товар; 
							Докум.УчетныеЕдиницы=Запрос.УчетныеЕдиницы; 
							Докум.ПриходныйДокумент=Запрос.ПриходныйДокумент; 
							Докум.Склад=Запрос.Склад; 
							Докум.ОстатокТовара=Запрос.ОстатокТов;
							Докум.Стоимость=Запрос.ОстатокСтоимость;
							Если ЧислоСтрокДокум=МаксСтрокДокум Тогда
								//Закомментировано Инсталлятором МОД:Докум.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Докум, );
	//Конец текста, вставленного Инсталлятором МОД

								МассивДокументовПереноса.ДобавитьЗначение(Докум.ТекущийДокумент(),"");
								Сообщить("Создан документ "+ Докум);
								ЧислоСтрокДокум=0;
								Заполняем=0;
							КонецЕсли;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	Если Заполняем=1 Тогда
		//Закомментировано Инсталлятором МОД:Докум.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Докум, );
	//Конец текста, вставленного Инсталлятором МОД

		МассивДокументовПереноса.ДобавитьЗначение(Докум.ТекущийДокумент(),"");
		Сообщить("Создан документ "+ Докум);
	КонецЕсли;
	Возврат 0; 
КонецФункции
//-------------------------

Функция ЗаполнитьКасса()
	Докум=СоздатьОбъект("Документ.ПереносКасса");
	Докум.АвтоВремяКонецДня();
	
	Запрос=СоздатьОбъект("Запрос");
	ТекстЗапроса=
	"//{{ЗАПРОС(Касса)
	|Период с '01.01.1990' по ДатаКонцаПериода;
	|Обрабатывать НеПомеченныеНаУдаление;
	|Валюта = Регистр.Касса.Валюта;
	|Касса = Регистр.Касса.Касса;
	|Наличность = Регистр.Касса.Наличность;
	|Статья = Регистр.Касса.Статья;
	|Группировка Валюта;
	|Группировка Касса;
	|Функция Нал = КонОст(Наличность);
	|"//}}ЗАПРОС
	;
	Если Запрос.Выполнить(ТекстЗапроса)=0 Тогда 
		Предупреждение("Системная ошибка выполнения запроса по Регистр.Касса!"); 
		Возврат 1; 
	КонецЕсли;
	
	ЧислоСтрокДокум=0;
	Заполняем=0;
	Пока Запрос.Группировка("Валюта")=1 Цикл
		Если Запрос.Валюта.Выбран()=0 Тогда
			Продолжить;
		КонецЕсли;
		Пока Запрос.Группировка("Касса")=1 Цикл		    
			Если ЧислоСтрокДокум=0 Тогда
				глСоздатьНовыйОбъект(Докум);
				ЗаполнитьШапку(Докум);
				Заполняем=1;
			КонецЕсли;
			// заполним табличную часть
			ЧислоСтрокДокум=ЧислоСтрокДокум+1;
			Докум.НоваяСтрока();
			Докум.Валюта=Запрос.Валюта; 
			Докум.Касса=Запрос.Касса;
			Докум.Наличность=Запрос.Нал;
			Докум.Статья=Запрос.Статья;
			Если ЧислоСтрокДокум=МаксСтрокДокум Тогда
				//Закомментировано Инсталлятором МОД:Докум.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Докум, );
	//Конец текста, вставленного Инсталлятором МОД

				МассивДокументовПереноса.ДобавитьЗначение(Докум.ТекущийДокумент(),"");
				Сообщить("Создан документ "+ Докум);
				ЧислоСтрокДокум=0;
				Заполняем=0;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Если Заполняем=1 Тогда
		//Закомментировано Инсталлятором МОД:Докум.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Докум, );
	//Конец текста, вставленного Инсталлятором МОД

		МассивДокументовПереноса.ДобавитьЗначение(Докум.ТекущийДокумент(),"");
		Сообщить("Создан документ "+ Докум);
	КонецЕсли;
	Возврат 0; 
КонецФункции
//---------------------
Функция НеРазрешеноУдалять(Докум)
	Если Удалять=1 Тогда
		Если МассивОставляемыхДокументов.НайтиЗначение(Докум)<>0 Тогда
			Возврат 1;
		Иначе
			Док=СоздатьОбъект("Документ");
			Возврат Док.ВыбратьПодчиненныеДокументы(ДатаКонцаПериода+1,РабочаяДата(),Докум);
		КонецЕсли; 
	Иначе
		Возврат  МассивОставляемыхДокументов.НайтиЗначение(Докум);
	КонецЕсли;
КонецФункции
//---------------------
Процедура ЗаполнитьМассивОставляемыхДокументов()
	Для Н=1 По  МассивДокументовПереноса.РазмерСписка() Цикл
		А="";
		ДокПерен=МассивДокументовПереноса.ПолучитьЗначение(Н,А);
		МассивОставляемыхДокументов.ДобавитьЗначение(ДокПерен,"");
	КонецЦикла;
	Если Удалять=1 Тогда
		Для Н=1 По  МассивДокументовПереноса.РазмерСписка() Цикл
			А="";
			ДокПерен=МассивДокументовПереноса.ПолучитьЗначение(Н,А);
			Вид=ДокПерен.Вид();
			Если 	НЕ((Вид="ПереносРезервыТоваров")
			ИЛИ (Вид="ПереносПартииТоваров")
			ИЛИ (Вид="ПереносВзаиморасчетыПокупателей")
			ИЛИ (Вид="ПереносВзаиморасчетыПоставщиков")) Тогда
				Продолжить;
			КонецЕсли;
			ДокПерен.ВыбратьСтроки();
			Пока ДокПерен.ПолучитьСтроку()=1 Цикл
				Если Вид="ПереносРезервыТоваров" Тогда
					МассивОставляемыхДокументов.ДобавитьЗначение(ДокПерен.ПоСчету,"");
				ИначеЕсли 	(Вид="ПереносПартииТоваров") Тогда
					МассивОставляемыхДокументов.ДобавитьЗначение(ДокПерен.ПрихДокумент,"");
				ИначеЕсли 	(Вид="ПереносВзаиморасчетыПокупателей") 
				ИЛИ (Вид="ПереносВзаиморасчетыПоставщиков") Тогда
					МассивОставляемыхДокументов.ДобавитьЗначение(ДокПерен.КредДокумент,"");
					//К приходному документу подцепим пдчиненный документ "Регистрация счета фактуры полученной"
					Если ПодчДок.ВыбратьПодчиненныеДокументы(,,ДокПерен.КредДокумент)=1 Тогда
						Пока ПодчДок.ПолучитьДокумент()=1 Цикл
							Если ПодчДок.Вид()="РегистрацияСчета_фактуры" Тогда
								МассивОставляемыхДокументов.ДобавитьЗначение(ПодчДок.ТекущийДокумент(),"");	
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
//---------------------
Процедура Выполнить()
	Если МонопольныйРежим()=0 Тогда
		Предупреждение("Эту операцию можно производить только в монопольном режиме !");
		Возврат;
	КонецЕсли;
	Если ДатаКонцаПериода>ПолучитьДатуТА() Тогда
		Предупреждение("Нельзя указывать дату конца закрываемого периода позже даты ТА!");
		Возврат;
	КонецЕсли;
	Если Число(ДатаКонцаПериода)=0 Тогда
		Предупреждение("Установите дату окончания периода!");
		Возврат;
	КонецЕсли;
	Если Вопрос("Вы создали резерную копию базы данных? Если нет, сделать это сейчас ещё не поздно.
	|Продолжить выполнение?",4)<>6 Тогда
		Возврат;
	КонецЕсли; 
	
	Сообщить("Создаем документы переноса остатков регистров !");
	МассивДокументовПереноса=СоздатьОбъект("СписокЗначений");
	МассивОставляемыхДокументов=СоздатьОбъект("СписокЗначений");
	
	НачатьТранзакцию();
	
	//----- 
	Если ЗаполнитьОстаткиТоваров()=1 Тогда
		ОтменитьТранзакцию(); 
		Возврат;
	КонецЕсли;
	//----- 
	Если ЗаполнитьРезервыТоваров()=1 Тогда
		ОтменитьТранзакцию(); 
		Возврат;
	КонецЕсли;
	//----- 
	Если ЗаполнитьПартииТоваров()=1 Тогда
		ОтменитьТранзакцию(); 
		Возврат;
	КонецЕсли;
	//-----  
	Если ЗаполнитьВзаиморасчетыПокупателей()=1 Тогда
		ОтменитьТранзакцию(); 
		Возврат;
	КонецЕсли;
	//-----  
	Если ЗаполнитьВзаиморасчетыПоставщиков()=1 Тогда
		ОтменитьТранзакцию(); 
		Возврат;
	КонецЕсли;
	//----- 
	Если ЗаполнитьКасса()=1 Тогда
		ОтменитьТранзакцию(); 
		Возврат;
	КонецЕсли;
	////----------
	//Если ЗаполнитьАлкаголь()=1 Тогда
	//	ОтменитьТранзакцию(); 
	//	Возврат;
	//КонецЕсли;   
	//----- 
	ЗафиксироватьТранзакцию();
	
	Сообщить("Документы переноса остатков регистров созданы!!!"); 
	
	Сообщить("Заполняем массив оставляемых документов");
	ЗаполнитьМассивОставляемыхДокументов();
	Сообщить("Удаление старых документов!!!");
	ЗаписьЖурналаРегистрации("Закрытие отчетного периода и удаление документов");
	
	Док=СоздатьОбъект("Документ");
	Док.ВыбратьДокументы('01.01.80',ДатаКонцаПериода);
	Пока Док.ПолучитьДокумент()=1 Цикл     
		Если (Док.Вид()="КалькуляционнаяКарта") ИЛИ (Док.Вид()="ЗаменаИнгредиента")Тогда
			Продолжить;
		КонецЕсли;	
		// документы, на которые есть ссылки в измерениях регистров пропускаем
		Если НеРазрешеноУдалять(Док.ТекущийДокумент())<>0 Тогда
			// Снимаем проведение всех старых документов
			Если Док.Проведен()=1 Тогда  
				//Не распроводим полученные счет-фактуры
				Если Док.Вид()<>"РегистрацияСчета_фактуры" Тогда
					Сообщить("    Сделан непроведенным "+Док+" от "+Док.ДатаДок);
					Док.СделатьНеПроведенным();
				КонецЕсли;
			КонецЕсли;
		Иначе
			Сообщить("    Удален "+Док+" от "+Док.ДатаДок);
			ЗаписьЖурналаРегистрации("    Удален "+Док+" от "+Док.ДатаДок);
			//Закомментировано Инсталлятором МОД:Док.Удалить(Удалять);
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектУдалить(Док, Удалять);
	//Конец текста, вставленного Инсталлятором МОД

		КонецЕсли;
	КонецЦикла;
	Сообщить("ВСЕ оставшиеся старые документы сняты с проведения!");
	
	Для Н=1 По  МассивДокументовПереноса.РазмерСписка() Цикл
		А="";
		Док.НайтиДокумент(МассивДокументовПереноса.ПолучитьЗначение(Н,А));
		Док.Провести();
	КонецЦикла;
	Сообщить("Документы переноса остатков проведены !");
	
	Константа.ДатаЗапретаРедактирования=ДатаКонцаПериода;
	Сообщить("Константа.ДатаЗапретаРедактирования - установлена на "+ДатаКонцаПериода);
	Константа.ДатаПоследнегоЗавершенияПериода=ДатаКонцаПериода;
	Сообщить("Константа.ДатаПоследнегоЗавершенияПериода - установлена на "+ДатаКонцаПериода);
КонецПроцедуры
//----------------
ДатаКонцаПериода=РабочаяДата();
Удалять=1;
Помечать=0;
МаксСтрокДокум=100;
ПодчДок=СоздатьОбъект("Документ");
