#ЗагрузитьИзФайла Omron2810.txt

Перем ККМ;
Перем Расшифровка;
Перем Ширина;
Перем НомерОтдела;


//********************************************************************************
Функция ОбработкаОшибок()
        
	Если ФС.СуществуетФайл("status.tmp") = 1 Тогда
		ФайлР=СоздатьОбъект("Текст");
		ФайлР.Открыть(ФС.ТекКаталог()+"\status.tmp");
		
		Стр=ФайлР.ПолучитьСтроку(1);
		
		Если Число(Стр)>0 Тогда
			Возврат 1;    
		Иначе
			Возврат 0;
		КонецЕсли;
	Иначе
		Возврат 0;
	КонецЕсли;

КонецФункции

//********************************************************************************
Процедура Подключить()
	Если ККМ.РежимККМ=Перечисление.РежимыККМ.ФР Тогда
		РаботаСФискальнымРегистратором=0;
		Если ЗагрузитьВнешнююКомпоненту("FprnM1C.dll")<>0  Тогда
			ФискальныйРегистратор = СоздатьОбъект("AddIn.FprnM45");  // Создание объекта внешней компоненты
			Если ПустоеЗначение(ФискальныйРегистратор) = 0 Тогда
				Сообщить("ККМ Элвес Микро-Ф подключен");
			КонецЕсли;
			ФискальныйРегистратор.DeviceEnabled=1;
			Если ОбработкаОшибок() = 1 Тогда
			    Возврат;
			КонецЕсли;
			ФискальныйРегистратор.Mode = 1;
			ФискальныйРегистратор.Password = "1";
			ФискальныйРегистратор.SetMode();
			Если ОбработкаОшибок() = 1 Тогда
			    Возврат;
			КонецЕсли;
			РаботаСФискальнымРегистратором=1;
		Иначе
		 	//Сообщить("Не удалось загрузить драйвер для FP-600");	
		КонецЕсли;
	ИначеЕсли ККМ.РежимККМ=Перечисление.РежимыККМ.OffLine Тогда
		Сообщить("ВНИМАНИЕ!!! ККМ RS2810 не поддерживает режим Off-Line!");
	ИначеЕсли ККМ.РежимККМ=Перечисление.РежимыККМ.OnLine Тогда
		Сообщить("ВНИМАНИЕ!!! ККМ RS2810 не поддерживает режим On-Line!");
	КонецЕсли;
КонецПроцедуры
//********************************************************************************
Процедура Отключить()
	Если РаботаСФискальнымРегистратором=1 Тогда
        // переводим ккм в режим выбора
		ФискальныйРегистратор.Mode = 0;
		ФискальныйРегистратор.Password = "0";
		ФискальныйРегистратор.SetMode();
		Если ОбработкаОшибок() = 1 Тогда
		    Возврат;
		КонецЕсли;
		// отключаем драйвер
		ФискальныйРегистратор.DeviceEnabled=0;
		Если ОбработкаОшибок() = 0 Тогда
			// удалось отключить
			РаботаСФискальнымРегистратором=0;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

    
Процедура ПечататьЧек() Экспорт            

	Док=Расшифровка.Получить("Документ");

	Если ПустоеЗначение(Док)=1 Тогда
	    Возврат;
	КонецЕсли;

	Если Док.КоличествоСтрок()=0 Тогда
		Предупреждение("Документ пустой!");
		Возврат;
	КонецЕсли;
	
	Если ПустоеЗначение(Док.Клиент)=1 Тогда
		Предупреждение("Вы должны выбрать Клиента!");
		Возврат;
	КонецЕсли;          
	
	Если ПустоеЗначение(Док.ВидПлатежа)=1 Тогда
		Предупреждение("Вы должны выбрать вид Платежа!");
		Возврат;
	КонецЕсли;
               
	Если Вопрос("Вы уверены?","Да+Нет")="Да" Тогда
	Иначе
		Возврат;
	КонецЕсли;
	                   
	
	//Закомментировано Инсталлятором МОД:Док.Записать();
	//Начало текста, вставленного Инсталлятором МОД    
	Док.Записать();
//	ОбъектЗаписать(Док, );
	//Конец текста, вставленного Инсталлятором МОД


	Если Док.Выбран()=0 Тогда
		Предупреждение("Перед печать чека документ должен быть сохранен!");
		Возврат;
	КонецЕсли;      
	
	Деньги=0;//Окр(Док.Итог("Сумма")+Док.Итог("НДС"),2);
	Вал=Док.Валюта;
	Вал1=Док.Валюта;
	Плат="CASH";

	СуммаДок=Окр(Док.Итог("Сумма")+Док.Итог("НДС"),2);


	Чек=СоздатьОбъект("Текст");

	Чек.КодоваяСтраница(0); //ДОС кодовая страница
	
	Если Док.ПризнакНакладной=Перечисление.ПризнПрихНакл.ВозвратОтПокупателя Тогда
	Иначе                                                                 

		Параметр	= СоздатьОбъект("СписокЗначений");
		Параметр.ДобавитьЗначение(Док.ВидПлатежа, "ВидПлатежа");	
		Параметр.ДобавитьЗначение(Деньги		, "ПолученоДенег");	
		Параметр.ДобавитьЗначение(СуммаДок		, "СуммаДок");
		
		// открываем форму обработки
		ОткрытьФормуМодально("Обработка.ВводДенегПоКассе", Параметр);
			
		// получаем параметр возврата.
		Если Параметр.Получить("СтатусВозврата") = 0 Тогда
		    Возврат;
		КонецЕсли;
		
		Док.ВидПлатежа		    = Параметр.Получить("ВидПлатежа");
		Док.Получено  			= Параметр.Получить("ПолученоДенег");
		Док.ПолученоКарта		= Параметр.Получить("ПолученоКарта");
		Док.ПолученоПодарочнаяКарта	= Параметр.Получить("ПолученоПодарочнаяКарта");
		Док.ПодарочнаяКарта	        = Параметр.Получить("ПодарочнаяКарта");
		    
		Док.Получено1=0;
		
		Если Док.Получено > 0 Тогда
			Док.ВидПлатежа=Перечисление.ВидыПлатежа.Наличные;
		ИначеЕсли Док.ПолученоКарта>0 Тогда
			Док.ВидПлатежа=Перечисление.ВидыПлатежа.Карта;
		ИначеЕсли Док.ПолученоПодарочнаяКарта>0 Тогда
			Док.ВидПлатежа=Перечисление.ВидыПлатежа.ПодарочнаяКарта;
		КонецЕсли;
		
		Если ПустоеЗначение(Док.ВалютаПлатежа)=0 Тогда
			Если Док.ВалютаПлатежа=Док.ВалютаПлатежа1 Тогда
				Док.ВалютаПлатежа1=0;
				Док.Получено=Док.Получено+Док.Получено1;
				Док.Получено1=0;
			КонецЕсли;
		КонецЕсли;
		
		Вал=Док.ВалютаПлатежа;
		Вал1=Док.ВалютаПлатежа1;
		Деньги=Док.Получено;
		Деньги1=Док.Получено1;
	КонецЕсли;

	НаимСтр="";
	Адрес="";
	КодНДС="";
	Основание="";
	
	Если Константа.ЧастноеЛицо=Док.Клиент Тогда
		Если Док.ПризнакНакладной=Перечисление.ПризнПрихНакл.ВозвратОтПокупателя Тогда
			НаимСтр=СтрЗаменить(WinToDos(СокрЛП(Док.Клиент)),"""","'");
			Адрес=СтрЗаменить(WinToDos(СокрЛП(Док.Основание)),"""","'");
			КодНДС="";
		Иначе			
			НаимСтр=СтрЗаменить(WinToDos(СокрЛП(Док.Клиент)),"""","'");
			Адрес=СтрЗаменить(WinToDos(СокрЛП(Док.Основание)),"""","'");
			КодНДС="";
		КонецЕсли;
	Иначе
		НаимСтр=СтрЗаменить(WinToDos(СокрЛП(Док.Клиент.ПолноеНаименование)),"""","'");
		Адрес=СтрЗаменить(WinToDos(СокрЛП(Док.клиент.ЮридическийАдрес)),"""","'");
		Основание=СтрЗаменить(СокрЛП(Док.Основание),"""","'");
		
		КодНДС=?(Док.Клиент.НеПлательщик=0,"LV","")+СокрЛП(Док.Клиент.ИНН);    
	КонецЕсли;

	//Добавляем в шапку наименование клиента	
	
	Чек.ДобавитьСтроку("Comment: TEXT = """+WinToDos("----Pirc§js----")+"""");
    Если ПустаяСтрока(СокрЛП(НаимСтр))=0 Тогда
		Чек.ДобавитьСтроку("Comment: TEXT = """+СокрЛП(Лев(НаимСтр,Ширина))+"""");
		если ПустаяСтрока(Сред(СокрЛП(НаимСтр),Ширина+1,Ширина))=0 Тогда
			Чек.ДобавитьСтроку("Comment: TEXT = """+СокрЛП(Сред(НаимСтр,Ширина+1,Ширина))+"""");
		КонецЕсли;             
		
		если ПустаяСтрока(Сред(СокрЛП(НаимСтр),Ширина*2+1,Ширина))=0 Тогда
			Чек.ДобавитьСтроку("Comment: TEXT = """+СокрЛП(Сред(НаимСтр,Ширина*2+1,Ширина))+"""");
		КонецЕсли;
		
    КонецЕсли;

	Если (ПустаяСтрока(СокрЛП(КодНДС))=0) Тогда
		Чек.ДобавитьСтроку("Comment: TEXT = """+WinToDos("ReЄ.Nr.:")+"""");
		Чек.ДобавитьСтроку("Comment: TEXT = """+СокрЛП(КодНДС)+"""");
	КонецЕсли;	

	Если (ПустаяСтрока(Адрес)=0) Тогда
		Чек.ДобавитьСтроку("Comment: TEXT = """+СокрЛП(Лев(Адрес,Ширина))+"""");

		если ПустаяСтрока(Сред(СокрЛП(Адрес),Ширина+1,Ширина))=0 Тогда
			Чек.ДобавитьСтроку("Comment: TEXT = """+СокрЛП(Сред(Адрес,Ширина+1,Ширина))+"""");
		КонецЕсли;

		если ПустаяСтрока(Сред(СокрЛП(Адрес),Ширина*2+1,Ширина))=0 Тогда
			Чек.ДобавитьСтроку("Comment: TEXT = """+СокрЛП(Сред(Адрес,Ширина*2+1,Ширина))+"""");
		КонецЕсли;

		если ПустаяСтрока(Сред(СокрЛП(Адрес),Ширина*3+1,Ширина))=0 Тогда
			Чек.ДобавитьСтроку("Comment: TEXT = """+СокрЛП(Сред(Адрес,Ширина*3+1,Ширина))+"""");
		КонецЕсли;
		
	КонецЕсли;
	
	Если (ПустаяСтрока(Основание)=0) Тогда
		Чек.ДобавитьСтроку("Comment: TEXT = """+СокрЛП(Лев(Основание,Ширина))+"""");

		если ПустаяСтрока(Сред(СокрЛП(Основание),Ширина+1,Ширина))=0 Тогда
			Чек.ДобавитьСтроку("Comment: TEXT = """+СокрЛП(Сред(Основание,Ширина+1,Ширина))+"""");
		КонецЕсли;

		если ПустаяСтрока(Сред(СокрЛП(Основание),Ширина*2+1,Ширина))=0 Тогда
			Чек.ДобавитьСтроку("Comment: TEXT = """+СокрЛП(Сред(Основание,Ширина*2+1,Ширина))+"""");
		КонецЕсли;
		
		если ПустаяСтрока(Сред(СокрЛП(Основание),Ширина*3+1,Ширина))=0 Тогда
			Чек.ДобавитьСтроку("Comment: TEXT = """+СокрЛП(Сред(Основание,Ширина*2+1,Ширина))+"""");
		КонецЕсли;
		
	КонецЕсли;
	
	Чек.ДобавитьСтроку("Comment: TEXT = ""PPR Nr. """);
	Чек.ДобавитьСтроку("Comment: TEXT = """+СокрЛП(Док.НомерДок)+"""");
	Чек.ДобавитьСтроку("Comment: TEXT = ""Kas.:"+СокрЛП(Лев(WinToDos(Док.Автор),Ширина-5))+"""");
	Чек.ДобавитьСтроку("Comment: TEXT = ""---------------""");

	СумЧек=0;
	НСтр=0;

	ДокСкидка=Окр(Док.Итог("Скидка")*1.18,2);
	Док.ВыбратьСтроки();
	Пока Док.ПолучитьСтроку()=1 Цикл
                            
		Если ПустоеЗначение(Док.Товар)=1 Тогда
			Предупреждение("В строке "+Док.НомерСтроки+" не выбран Товар!");
			Возврат;
		КонецЕсли;
		
		Если ПустоеЗначение(Док.Всего)=1 Тогда
			Предупреждение("В строке "+Док.НомерСтроки+" не указана сумма Товара!");
			Возврат;
		КонецЕсли;

		НСтр=НСтр+1;
		ТоварКод=Док.Товар.Код;
		НаимТовар=СтрЗаменить(WinToDos(СокрЛП(Док.Товар.НаименованиеДляЦенника)),"""","");
		ЕдИзм=WinToDos(СокрЛП(Строка(Док.Единица)));
		КолВо=Док.Количество*Док.Коэффициент;
		                                 
		Сум=Окр(Док.Всего,2);
		
		СумЧек=СумЧек+Сум;
		
		Если Док.КоличествоСтрок()=НСтр Тогда //Сравниваем последнюю строку с общей суммой
			Если Окр(СумЧек,2)>СуммаДок Тогда
			    Сум=Сум-(СумЧек-СуммаДок);
			Иначе
				Сум=Сум+(СумЧек-СуммаДок);
			КонецЕсли;    
		КонецЕсли;		
		
		Чек.ДобавитьСтроку("Comment: TEXT = """+Лев(НаимТовар,Ширина)+"""");

		Чек.ДобавитьСтроку("Comment: TEXT = """+КолВо+" "+ЕдИзм+" x """);
		Чек.ДобавитьСтроку("Comment: TEXT = """+СокрЛП(Формат(Док.ЦенаСНДС,"Ч11.2"))+" "+Док.Валюта+"""");

		Если Док.ПризнакНакладной=Перечисление.ПризнПрихНакл.ВозвратОтПокупателя Тогда
		Иначе                      
			Если Док.Товар.ВидТовара<>Перечисление.ВидыТоваров.Услуга Тогда
				Если Док.Скидка>0 Тогда
					Чек.ДобавитьСтроку("Comment: TEXT = ""Atl:"+СокрЛП(Формат(Док.Скидка*1.18,"Ч11.2"))+"""");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		
		Если Док.ПризнакНакладной=Перечисление.ПризнПрихНакл.ВозвратОтПокупателя Тогда
			Чек.ДобавитьСтроку("RETURN: DEPTNR = "+НомерОтдела+"; AMOUNT = "+СокрЛП(Формат(Сум,"Ч11.2"))+"; NAME="""+ТоварКод+"""");
		Иначе
			Чек.ДобавитьСтроку("SALE: DEPTNR = "+НомерОтдела+"; AMOUNT = "+СокрЛП(Формат(Сум,"Ч11.2"))+"; NAME="""+ТоварКод+"""");
		КонецЕсли;
		
	КонецЦикла;

	Если Док.ПризнакНакладной=Перечисление.ПризнПрихНакл.ВозвратОтПокупателя Тогда
	Иначе
//		Если Док.Итог("Скидка")>0 Тогда
//			Чек.ДобавитьСтроку("Comment: TEXT = "" Atlaide: "+СокрЛП(Формат(ДокСкидка,"Ч11.2"))+"""");
//			Чек.ДобавитьСтроку("DISCOUNT: AMOUNT = "+СокрЛП(Формат(Док.Итог("Скидка")*1.18,"Ч11.2")));
//		КонецЕсли;
	КонецЕсли;

	Возврат_=?(Док.ПризнакНакладной=Перечисление.ПризнПрихНакл.ВозвратОтПокупателя,1,0);
	
	Если Док.ПризнакНакладной=Перечисление.ПризнПрихНакл.ВозвратОтПокупателя Тогда
		Если (Док.ВидПлатежа=Перечисление.ВидыПлатежа.Карта) Тогда
			Чек.ДобавитьСтроку("PAYMENT: MEDIA=CARD");
		ИначеЕсли (Док.ВидПлатежа=Перечисление.ВидыПлатежа.ПодарочнаяКарта) Тогда
			Предупреждение("Нельзя при возврате указывать вид платежа <<Подарочная Карта>>!");
			Возврат;
		Иначе
			Чек.ДобавитьСтроку("PAYMENT:");
		КонецЕсли;
		
	Иначе
                                       
		Если Док.ПолученоПодарочнаяКарта>0 Тогда
			Чек.ДобавитьСтроку("Comment: TEXT = ""Davanu karte: """);
			Чек.ДобавитьСтроку("Comment: TEXT = """+Лев(Док.ПодарочнаяКарта,Ширина)+"""");
			Чек.ДобавитьСтроку("PAYMENT: MEDIA=MISC4; AMOUNT = "+СокрЛП(Формат(Док.ПолученоПодарочнаяКарта,"Ч11.2")));
		КонецЕсли;
		
		Если Док.ПолученоКарта>0 Тогда
			Чек.ДобавитьСтроку("PAYMENT: MEDIA=CARD; AMOUNT = "+СокрЛП(Формат(Док.ПолученоКарта,"Ч11.2")));
		КонецЕсли;
		
	   Если Деньги>0 Тогда
			Чек.ДобавитьСтроку("PAYMENT: " +?(Вал<>Константа.БазоваяВалюта,"FOREIGNNR = "+Вал.Код+";","")+ " AMOUNT = "+СокрЛП(Формат(Деньги,"Ч11.2")));
	   КонецЕсли;			

	   Если Деньги1>0 Тогда
			Если Вал1.Выбран()=1 Тогда
				Чек.ДобавитьСтроку("PAYMENT: " +?(Вал1<>Константа.БазоваяВалюта,"FOREIGNNR = "+Вал1.Код+";","")+ " AMOUNT = "+СокрЛП(Формат(Деньги1,"Ч11.2")));
			КонецЕсли;			   
	   КонецЕсли;

	КонецЕсли;
    
	ФайлН=Прав(СокрЛП(СтрЗаменить(Док.НомерДок,"-","")),8)+".txt";
	
	//УтилПеч="RS2810s.EXE";
	УтилПеч="command /c RS2810s.EXE";
	
  	ФС.УстТекКаталог(СокрЛП(ККМ.КаталогОбменаДанными));
                                                     
  	//Записать файл с чеком в текущую директорию
	//Закомментировано Инсталлятором МОД:Чек.Записать(СокрЛП(ФС.ТекКаталог())+"\"+ФайлН);
	//Начало текста, вставленного Инсталлятором МОД                                      
	Чек.Записать(СокрЛП(ФС.ТекКаталог())+"\"+ФайлН);
//	ОбъектЗаписать(Чек, СокрЛП(ФС.ТекКаталог())+"\"+ФайлН);
	//Конец текста, вставленного Инсталлятором МОД
 
	Чек=0;
 	       
	Док.ЧекПробитККМ=1;
	Док.ККМ=ККМФискальногоРегистратора;
	
	//Закомментировано Инсталлятором МОД:Док.Записать();
	//Начало текста, вставленного Инсталлятором МОД
//	ОбъектЗаписать(Док, );
	//Конец текста, вставленного Инсталлятором МОД

	Попытка
		Рез=Док.Провести();
	Исключение   
		Док.ЧекПробитККМ=0;
		Док.ККМ=0;
	КонецПопытки;

//	Если (Док.Проведен()=0) Тогда
//		Предупреждение("Документ не проведен. Чек не может быть пробит!");
//		Док.ЧекПробитККМ=0;
//		Док.ККМ=0;
//		Док.Записать();
//		Возврат;
//	КонецЕсли;
		
	ПовторПечати=1;
  	Пока ПовторПечати=1 Цикл

		ПовторПечати=0;
		
		Если ФС.СуществуетФайл("RS2810s.ERR") = 1 Тогда
			ФС.ПереименоватьФайл("RS2810s.ERR","RS2810s"+ДатаЧисло(ТекущаяДата())+ДатаМесяц(ТекущаяДата())+".LOG",1);
		КонецЕсли;
		
		//Проверка на утилиту печати Чека.
		Если ФС.СуществуетФайл(УтилПеч) = 1 Тогда
		Иначе     
		   Сигнал();
		   Предупреждение("Отсутствует утилита -" + УтилПеч + "- для печати Чека. Обратитесь к системному администратору!");
		   Возврат;
		КонецЕсли;                                        
                                 
		КомандаСистемы(УтилПеч+" "+ФайлН);
		
		
		Если ОбработкаОшибок() = 1 Тогда
			Рез=Вопрос("Произошла ошибка печати Чека. Устраните ошибку и нажмите кнопку ""Да"", "+РазделительСтрок+" либо если все нормально - ""Нет""!","Да+Нет+Отмена");
		    Если Рез="Нет" Тогда
				ФС.УдалитьФайл(ФайлН);
			ИначеЕсли Рез="Да" Тогда
				ПовторПечати=1;
			Иначе
				Сообщить("Произошла ошибка при печати чека. Чек не пробит!");
				Док.ЧекПробитККМ=0;
				Док.ККМ=0;
					//Закомментировано Инсталлятором МОД:Док.Записать();
		//Начало текста, вставленного Инсталлятором МОД                 
				Док.Записать();
				//	ОбъектЗаписать(Док, );
		//Конец текста, вставленного Инсталлятором МОД
	
				Возврат;
			КонецЕсли;
		Иначе
			ФС.УдалитьФайл(ФайлН);
		КонецЕсли;
		
  	КонецЦикла;

	Док.Форма.Закрыть(0);
	
КонецПроцедуры

//******************************************************************
Процедура ВнестиСменныеДеньги()     
	

	Чек=СоздатьОбъект("Текст");
	Чек.КодоваяСтраница(0); //ДОС кодовая страница

	деньги=0;
	
	Если ВвестиЧисло(деньги,"Введите сумму",10,2)=0 Тогда
		Возврат;	    
	КонецЕсли;
	
	Если Вопрос("Вы уверены?","Да+Нет")="Да" Тогда
	Иначе
		Возврат;
	КонецЕсли;

	Если деньги>0 Тогда
		Чек.ДобавитьСтроку("RCV_ON_ACC: AMOUNT = "+СокрЛП(Формат(деньги,"Ч11.2")));
	КонецЕсли;
	
	//УтилПеч="RS2810s.EXE";
	УтилПеч="command /c RS2810s.EXE";
	
  	ФС.УстТекКаталог(СокрЛП(ККМ.КаталогОбменаДанными));
                                                     
  	//Записать файл с чеком в текущую директорию
	//Закомментировано Инсталлятором МОД:Чек.Записать(СокрЛП(ФС.ТекКаталог())+"\acc_in.txt");
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Чек, СокрЛП(ФС.ТекКаталог())+"\acc_in.txt");
	//Конец текста, вставленного Инсталлятором МОД
 
	Чек=0;
 	
	ПовторПечати=1;
  	Пока ПовторПечати=1 Цикл

		ПовторПечати=0; 
		Если ФС.СуществуетФайл("RS2810s.ERR") = 1 Тогда
			ФС.ПереименоватьФайл("RS2810s.ERR","RS2810s"+ДатаЧисло(ТекущаяДата())+ДатаМесяц(ТекущаяДата())+".LOG",1);
		КонецЕсли;

		//Проверка на утилиту печати Чека.
		Если ФС.СуществуетФайл(УтилПеч) = 1 Тогда
		Иначе     
		   Сигнал();
		   Предупреждение("Отсутствует утилита -" + УтилПеч + "- для печати Чека. Обратитесь к системному администратору!");
		   Возврат;
		КонецЕсли;                                        
                                 
		КомандаСистемы(УтилПеч+" acc_in.txt");
		
		//Проверка на ошибку печати кассового чека
		Если ОбработкаОшибок() = 1 Тогда       
		    Если Вопрос("Произошла ошибка печати Чека. Устраните ошибку и нажмите кнопку ""Повтор""!","Повтор+Отмена")<>"Повтор" Тогда
				Сообщить("Произошла ошибка при печати чека. Чек не пробит!");
				Возврат;
			КонецЕсли;
				
			ПовторПечати=1;
		Иначе    
			ФС.УдалитьФайл("acc_in.txt");
		КонецЕсли;
		
  	КонецЦикла;
		
	
КонецПроцедуры

//********************************************************************************
Процедура ПечататьСуммовойЧек() Экспорт

	Док=Расшифровка.Получить("Документ");

	Если ПустоеЗначение(Док)=1 Тогда
	    Возврат;
	КонецЕсли;                       
	
	Если  ПустоеЗначение(Док.Клиент)=1 Тогда
		Предупреждение("Не выбран клиент!");
		Возврат;
	КонецЕсли;
	
	Если ПустоеЗначение(Док.Сумма)=1 Тогда
		Предупреждение("Не введена сумма!");
		Возврат;
	КонецЕсли;

	Если ПустоеЗначение(Док.Валюта)=1 Тогда
		Предупреждение("Не выбрана валюта!");
		Возврат;
	КонецЕсли;
	
	Если Вопрос("Вы уверены?","Да+Нет")="Да" Тогда
	Иначе
		Возврат;
	КонецЕсли;
	
	//Закомментировано Инсталлятором МОД:Док.Записать();
	//Начало текста, вставленного Инсталлятором МОД    
	Док.Записать();
//	ОбъектЗаписать(Док, );
	//Конец текста, вставленного Инсталлятором МОД


	Если Док.Выбран()=0 Тогда
		Предупреждение("Перед печать чека документ должен быть сохранен!");
		Возврат;
	КонецЕсли;

	Если (Док.ВидОплаты=Перечисление.ВидыОплаты.Возврат) Тогда
    Иначе
		Если ПустоеЗначение(Док.ВалютаПлатежа)=0 Тогда
			Если Док.ВалютаПлатежа=Док.ВалютаПлатежа1 Тогда
				Док.ВалютаПлатежа1=0;
				Док.Получено=Док.Получено+Док.Получено1;
				Док.Получено1=0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Деньги=0;//Окр(Док.Итог("Сумма")+Док.Итог("НДС"),2);
	
	Если ПустоеЗначение(Док.ВалютаПлатежа)=1 Тогда
		Док.ВалютаПлатежа=Константа.БазоваяВалюта;
	КонецЕсли;
	
	Вал=Док.Валюта;
	Вал1=Док.Валюта;
	Плат="CASH";

	СуммаДок=Док.Сумма*КурсДляВалюты(Док.Валюта,Док.ДатаДок);
	
	Чек=СоздатьОбъект("Текст");
	Чек.КодоваяСтраница(0); //ДОС кодовая страница
	
	Если (Док.ВидОплаты=Перечисление.ВидыОплаты.Возврат) ИЛИ (СуммаДок<0) Тогда
	Иначе                                                                 
		
		Параметр	= СоздатьОбъект("СписокЗначений");
		Параметр.ДобавитьЗначение(Док.ВидПлатежа, "ВидПлатежа");	
		Параметр.ДобавитьЗначение(Деньги		, "ПолученоДенег");	
		Параметр.ДобавитьЗначение(СуммаДок		, "СуммаДок");
		
		// открываем форму обработки
		ОткрытьФормуМодально("Обработка.ВводДенегПоКассе", Параметр);
			
		// получаем параметр возврата.
		Если Параметр.Получить("СтатусВозврата") = 0 Тогда
		    Возврат;
		КонецЕсли;
		
		Док.ВидПлатежа		    = Параметр.Получить("ВидПлатежа");
		Деньги	                = Параметр.Получить("ПолученоДенег");
		ПодарочнаяКарта	        = Параметр.Получить("ПодарочнаяКарта");
		    
		Док.ВидПлатежа		    = Параметр.Получить("ВидПлатежа");
		Док.Получено  			= Параметр.Получить("ПолученоДенег");
		Док.ПолученоКарта		= Параметр.Получить("ПолученоКарта");
		Док.ПолученоПодарочнаяКарта	= Параметр.Получить("ПолученоПодарочнаяКарта");
		Док.ПодарочнаяКарта	        = Параметр.Получить("ПодарочнаяКарта");
		    
		Док.Получено1=0;
		
		Если Док.Получено > 0 Тогда
			Док.ВидПлатежа=Перечисление.ВидыПлатежа.Наличные;
		ИначеЕсли Док.ПолученоКарта>0 Тогда
			Док.ВидПлатежа=Перечисление.ВидыПлатежа.Карта;
		ИначеЕсли Док.ПолученоПодарочнаяКарта>0 Тогда
			Док.ВидПлатежа=Перечисление.ВидыПлатежа.ПодарочнаяКарта;
		КонецЕсли;
		
		Если ПустоеЗначение(Док.ВалютаПлатежа)=0 Тогда
			Если Док.ВалютаПлатежа=Док.ВалютаПлатежа1 Тогда
				Док.ВалютаПлатежа1=0;
				Док.Получено=Док.Получено+Док.Получено1;
				Док.Получено1=0;
			КонецЕсли;
		КонецЕсли;
		
		Вал=Док.ВалютаПлатежа;
		Вал1=Док.ВалютаПлатежа1;
		Деньги=Док.Получено;
		Деньги1=Док.Получено1;  
		
		Если ПустоеЗначение(Вал)=1 Тогда
			Вал=Константа.ОсновнаяВалюта;
		КонецЕсли;
	КонецЕсли;
                        
	НаимСтр=СтрЗаменить(WinToDos(СокрЛП(Док.КлиентНаим)),"""","'");
	Адрес=СтрЗаменить(WinToDos(СокрЛП(Док.клиент.ЮридическийАдрес)),"""","'");
	Основание=СтрЗаменить(СокрЛП(Док.Основание),"""","'");
	
	Если Константа.ЧастноеЛицо=Док.Клиент Тогда
		КодНДС="";
		Адрес=СтрЗаменить(WinToDos(СокрЛП(Док.Основание)),"""","'");
		Основание="";
	Иначе
		КодНДС=WinToDos("LV"+СокрЛП(Док.Клиент.ИНН));    
	КонецЕсли;
	
	//Добавляем в шапку наименование клиента	
//	Чек.ДобавитьСтроку("Comment: TEXT = """+WinToDos(Строка(Док.ТипОплаты))+"""");

	Чек.ДобавитьСтроку("Comment: TEXT = """+WinToDos("----Pirc§js----")+"""");
    Если ПустаяСтрока(СокрЛП(НаимСтр))=0 Тогда
		Чек.ДобавитьСтроку("Comment: TEXT = """+Лев(СокрЛП(НаимСтр),Ширина)+"""");
		если ПустаяСтрока(Сред(СокрЛП(НаимСтр),Ширина+1,Ширина))=0 Тогда
			Чек.ДобавитьСтроку("Comment: TEXT = """+Сред(СокрЛП(НаимСтр),Ширина+1,Ширина)+"""");
		КонецЕсли;

		если ПустаяСтрока(Сред(СокрЛП(НаимСтр),Ширина*2+1,Ширина))=0 Тогда
			Чек.ДобавитьСтроку("Comment: TEXT = """+СокрЛП(Сред(НаимСтр,Ширина*2+1,Ширина))+"""");
		КонецЕсли;
		
	КонецЕсли;                         
	
	Если (ПустаяСтрока(СокрЛП(КодНДС))=0) Тогда
		Чек.ДобавитьСтроку("Comment: TEXT = """+WinToDos("ReЄ.Nr.:")+"""");
		Чек.ДобавитьСтроку("Comment: TEXT = """+СокрЛП(КодНДС)+"""");
	КонецЕсли;	
	
	Если (ПустаяСтрока(Адрес)=0) Тогда
		Чек.ДобавитьСтроку("Comment: TEXT = """+Лев(СокрЛП(Адрес),Ширина)+"""");

		если ПустаяСтрока(Сред(СокрЛП(Адрес),Ширина+1,Ширина))=0 Тогда
			Чек.ДобавитьСтроку("Comment: TEXT = """+Сред(СокрЛП(Адрес),Ширина+1,Ширина)+"""");
		КонецЕсли;                    
		
		если ПустаяСтрока(Сред(СокрЛП(Адрес),Ширина*2+1,Ширина))=0 Тогда
			Чек.ДобавитьСтроку("Comment: TEXT = """+СокрЛП(Сред(Адрес,Ширина*2+1,Ширина))+"""");
		КонецЕсли;     
		
		если ПустаяСтрока(Сред(СокрЛП(Адрес),Ширина*3+1,Ширина))=0 Тогда
			Чек.ДобавитьСтроку("Comment: TEXT = """+СокрЛП(Сред(Адрес,Ширина*3+1,Ширина))+"""");
		КонецЕсли;
		
		
	КонецЕсли;

	Чек.ДобавитьСтроку("Comment: TEXT = ""Dokum.:""");
	Чек.ДобавитьСтроку("Comment: TEXT = """+СокрЛП(Док.НомерДок)+"""");
	
	Чек.ДобавитьСтроку("Comment: TEXT = ""Kas.:"+Лев(WinToDos(СокрЛП(Док.Автор)),Ширина-5)+"""");
	Чек.ДобавитьСтроку("Comment: TEXT = """+WinToDos("--------------")+"""");

	если ПустаяСтрока(СокрЛП(Основание))=0 Тогда
		Чек.ДобавитьСтроку("Comment: TEXT = """+WinToDos(Лев(СокрЛП(Основание),Ширина))+"""");
		
		если ПустаяСтрока(Сред(СокрЛП(Основание),Ширина+1,Ширина))=0 Тогда
			Чек.ДобавитьСтроку("Comment: TEXT = """+WinToDos(Сред(СокрЛП(Основание),Ширина+1,Ширина))+"""");
		КонецЕсли;

		если ПустаяСтрока(Сред(СокрЛП(Основание),Ширина*2+1,Ширина))=0 Тогда
			Чек.ДобавитьСтроку("Comment: TEXT = """+WinToDos(Сред(СокрЛП(Основание),Ширина*2+1,Ширина))+"""");
		КонецЕсли;

		если ПустаяСтрока(Сред(СокрЛП(Основание),Ширина*3+1,Ширина))=0 Тогда
			Чек.ДобавитьСтроку("Comment: TEXT = """+WinToDos(Сред(СокрЛП(Основание),Ширина*3+1,Ширина))+"""");
		КонецЕсли;
		
	КонецЕсли;
	
	СумЧек=0;
	НСтр=0;

	Если (Док.ВидОплаты=Перечисление.ВидыОплаты.Возврат) ИЛИ (СуммаДок<0) Тогда
		
		Чек.ДобавитьСтроку("RETURN: DEPTNR = "+НомерОтдела+"; AMOUNT = "+СокрЛП(Формат(Абс_(СуммаДок),"Ч11.2")));

		Если (Док.ВидПлатежа=Перечисление.ВидыПлатежа.Карта) Тогда
			Чек.ДобавитьСтроку("PAYMENT: MEDIA=CARD");
		ИначеЕсли (Док.ВидПлатежа=Перечисление.ВидыПлатежа.ПодарочнаяКарта) Тогда
			Предупреждение("Нельзя при возврате указывать вид платежа <<Подарочная Карта>>!");
			Возврат;
		Иначе
			Чек.ДобавитьСтроку("PAYMENT:");
		КонецЕсли;
		
	Иначе

		Чек.ДобавитьСтроку("SALE: DEPTNR = "+НомерОтдела+"; AMOUNT = "+СокрЛП(Формат(Абс_(СуммаДок),"Ч11.2")));
		
		Если Док.ПолученоПодарочнаяКарта>0 Тогда
			Чек.ДобавитьСтроку("Comment: TEXT = ""Davanu karte: """);
			Чек.ДобавитьСтроку("Comment: TEXT = """+Лев(Док.ПодарочнаяКарта,Ширина)+"""");
			Чек.ДобавитьСтроку("PAYMENT: MEDIA=MISC4; AMOUNT = "+СокрЛП(Формат(Док.ПолученоПодарочнаяКарта,"Ч11.2")));
		КонецЕсли;
		
		Если Док.ПолученоКарта>0 Тогда
			Чек.ДобавитьСтроку("PAYMENT: MEDIA=CARD; AMOUNT = "+СокрЛП(Формат(Док.ПолученоКарта,"Ч11.2")));
		КонецЕсли;
		
	   Если Деньги>0 Тогда
			Чек.ДобавитьСтроку("PAYMENT: " +?(Вал<>Константа.БазоваяВалюта,"FOREIGNNR = "+Вал.Код+";","")+ " AMOUNT = "+СокрЛП(Формат(Деньги,"Ч11.2")));
	   КонецЕсли;			

	   Если Деньги1>0 Тогда
			Если Вал1.Выбран()=1 Тогда
				Чек.ДобавитьСтроку("PAYMENT: " +?(Вал1<>Константа.БазоваяВалюта,"FOREIGNNR = "+Вал1.Код+";","")+ " AMOUNT = "+СокрЛП(Формат(Деньги1,"Ч11.2")));
			КонецЕсли;			   
	   КонецЕсли;
			
	КонецЕсли;
    
	ФайлН=Прав(СокрЛП(Док.НомерДок),8)+".txt";
	
	//УтилПеч="RS2810s.EXE";
	УтилПеч="command /c RS2810s.EXE";
	
  	ФС.УстТекКаталог(СокрЛП(ККМ.КаталогОбменаДанными));
                                                     
  	//Записать файл с чеком в текущую директорию
	//Закомментировано Инсталлятором МОД:Чек.Записать(СокрЛП(ФС.ТекКаталог())+"\"+ФайлН);
	//Начало текста, вставленного Инсталлятором МОД                                      
	Чек.Записать(СокрЛП(ФС.ТекКаталог())+"\"+ФайлН);
//	ОбъектЗаписать(Чек, СокрЛП(ФС.ТекКаталог())+"\"+ФайлН);
	//Конец текста, вставленного Инсталлятором МОД
 
	Чек=0;
 	
	ПовторПечати=1;
  	Пока ПовторПечати=1 Цикл

		ПовторПечати=0;
		
		Если ФС.СуществуетФайл("RS2810s.ERR") = 1 Тогда
			ФС.ПереименоватьФайл("RS2810s.ERR","RS2810s"+ДатаЧисло(ТекущаяДата())+ДатаМесяц(ТекущаяДата())+".LOG",1);
		КонецЕсли;
		
		//Проверка на утилиту печати Чека.
		Если ФС.СуществуетФайл(УтилПеч) = 1 Тогда
		Иначе     
		   Сигнал();
		   Предупреждение("Отсутствует утилита -" + УтилПеч + "- для печати Чека. Обратитесь к системному администратору!");
		   Возврат;
		КонецЕсли;                                        
                                 
		КомандаСистемы(УтилПеч+" "+ФайлН);
		
		
		Если ОбработкаОшибок() = 1 Тогда
			Рез=Вопрос("Произошла ошибка печати Чека. Устраните ошибку и нажмите кнопку ""Да"", "+РазделительСтрок+" либо если все нормально - ""Нет""!","Да+Нет+Отмена");
		    Если Рез="Нет" Тогда
				ФС.УдалитьФайл(ФайлН);
			ИначеЕсли Рез="Да" Тогда
				ПовторПечати=1;
			Иначе
				Сообщить("Произошла ошибка при печати чека. Чек не пробит!");
				Док.ЧекПробитККМ=0;
				Док.ККМ=0;
					//Закомментировано Инсталлятором МОД:Док.Записать();
		//Начало текста, вставленного Инсталлятором МОД                 
				Док.Записать();
				//	ОбъектЗаписать(Док, );
		//Конец текста, вставленного Инсталлятором МОД
	
				Возврат;
			КонецЕсли;
		Иначе
			ФС.УдалитьФайл(ФайлН);
		КонецЕсли;
		
  	КонецЦикла;

	Док.ЧекПробитККМ=1;
	Док.ККМ=ККМФискальногоРегистратора;
	
	//Закомментировано Инсталлятором МОД:Док.Записать();
	//Начало текста, вставленного Инсталлятором МОД
//	ОбъектЗаписать(Док, );
	//Конец текста, вставленного Инсталлятором МОД

	Док.Провести();
	
	Док.Форма.Закрыть(0);
	
КонецПроцедуры

//******************************************************************
Процедура ВыбратьДеньги()     
	

	Чек=СоздатьОбъект("Текст");
	Чек.КодоваяСтраница(0); //ДОС кодовая страница

	деньги=0;
	
	Если ВвестиЧисло(деньги,"Введите сумму",10,2)=0 Тогда
		Возврат;
	КонецЕсли;           
	
	Если Вопрос("Вы уверены?","Да+Нет")="Да" Тогда
	Иначе
		Возврат;
	КонецЕсли;
	
	Если деньги>0 Тогда
		Чек.ДобавитьСтроку("PAID_OUT: AMOUNT = "+СокрЛП(Формат(деньги,"Ч11.2")));
	КонецЕсли;
	
	//УтилПеч="RS2810s.EXE";
	УтилПеч="command /c RS2810s.EXE";
	
  	ФС.УстТекКаталог(СокрЛП(ККМ.КаталогОбменаДанными));
                                                     
  	//Записать файл с чеком в текущую директорию
	//Закомментировано Инсталлятором МОД:Чек.Записать(СокрЛП(ФС.ТекКаталог())+"\acc_out.txt");
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Чек, СокрЛП(ФС.ТекКаталог())+"\acc_out.txt");
	//Конец текста, вставленного Инсталлятором МОД
 
	Чек=0;
 	
	ПовторПечати=1;
  	Пока ПовторПечати=1 Цикл

		ПовторПечати=0; 
		Если ФС.СуществуетФайл("RS2810s.ERR") = 1 Тогда
			ФС.ПереименоватьФайл("RS2810s.ERR","RS2810s"+ДатаЧисло(ТекущаяДата())+ДатаМесяц(ТекущаяДата())+".LOG",1);
		КонецЕсли;

		//Проверка на утилиту печати Чека.
		Если ФС.СуществуетФайл(УтилПеч) = 1 Тогда
		Иначе     
		   Сигнал();
		   Предупреждение("Отсутствует утилита -" + УтилПеч + "- для печати Чека. Обратитесь к системному администратору!");
		   Возврат;
		КонецЕсли;                                        
                                 
		КомандаСистемы(УтилПеч+" acc_out.txt");
		
		//Проверка на ошибку печати кассового чека
		Если ОбработкаОшибок() = 1 Тогда       
			
		    Если Вопрос("Произошла ошибка. Устраните ошибку и нажмите кнопку ""Повтор""!","Повтор+Отмена")<>"Повтор" Тогда
				Сообщить("Произошла ошибка. Внесение сменных денег не произошло!");
				Возврат;
			КонецЕсли;
				
			ПовторПечати=1;
		Иначе    
			ФС.УдалитьФайл("acc_out.txt");
		КонецЕсли;
		
  	КонецЦикла;
		
	
КонецПроцедуры

//******************************************************************
Процедура Xотчет()     
	
                               
	Если Вопрос("Сейчас будет произведена печать X-отчета. Вы уверены, что хотите это сделать?","Да+Нет")="Да" Тогда
	Иначе
		Возврат;
	КонецЕсли;

	
	Чек=СоздатьОбъект("Текст");
	Чек.КодоваяСтраница(0); //ДОС кодовая страница

	Чек.ДобавитьСтроку("REPORT: TYPE = X");
	
	//УтилПеч="RS2810s.EXE";
	УтилПеч="command /c RS2810s.EXE";
	
  	ФС.УстТекКаталог(СокрЛП(ККМ.КаталогОбменаДанными));
                                                     
  	//Записать файл с чеком в текущую директорию
	//Закомментировано Инсталлятором МОД:Чек.Записать(СокрЛП(ФС.ТекКаталог())+"\report.txt");
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Чек, СокрЛП(ФС.ТекКаталог())+"\report.txt");
	//Конец текста, вставленного Инсталлятором МОД
 
	Чек=0;
 	
	ПовторПечати=1;
  	Пока ПовторПечати=1 Цикл

		ПовторПечати=0; 
		Если ФС.СуществуетФайл("RS2810s.ERR") = 1 Тогда
			ФС.ПереименоватьФайл("RS2810s.ERR","RS2810s"+ДатаЧисло(ТекущаяДата())+ДатаМесяц(ТекущаяДата())+".LOG",1);
		КонецЕсли;

		//Проверка на утилиту печати Чека.
		Если ФС.СуществуетФайл(УтилПеч) = 1 Тогда
		Иначе     
		   Сигнал();
		   Предупреждение("Отсутствует утилита -" + УтилПеч + "- для печати Чека. Обратитесь к системному администратору!");
		   Возврат;
		КонецЕсли;                                        
                                 
		КомандаСистемы(УтилПеч+" report.txt");
		
		//Проверка на ошибку печати кассового чека
		Если ОбработкаОшибок() = 1 Тогда       
		    Если Вопрос("Произошла ошибка печати Чека. Устраните ошибку и нажмите кнопку ""Повтор""!","Повтор+Отмена")<>"Повтор" Тогда
				Сообщить("Произошла ошибка при печати чека. Чек не пробит!");
				Возврат;
			КонецЕсли;
				
			ПовторПечати=1;
		Иначе    
			ФС.УдалитьФайл("report.txt");
		КонецЕсли;
		      
		
  	КонецЦикла;

  	Сообщить("ККМ OMRON-RS2810 отработала печать X-отчета");
	
КонецПроцедуры


//********************************************************************************
Процедура ЗагрузкаВалют()     
	

	Чек=СоздатьОбъект("Текст");
	Чек.КодоваяСтраница(0); //ДОС кодовая страница

	вал=СоздатьОбъект("Справочник.Валюты");
	вал.НайтиПоКоду(1);   
	Если Вал.Выбран()=1 Тогда
		Чек.ДобавитьСтроку("PROGRAM: FOREIGNNR = "+Вал.Код+"; RATE = "+СокрЛП(Формат(1/КурсДляВалюты(Вал,ТекущаяДата()),"Ч7.4"))+"; NAME = """+СокрЛП(Вал.Сокр_Назв)+"""");
	КонецЕсли;
	
	вал.НайтиПоКоду(2);
	Если Вал.Выбран()=1 Тогда
		Чек.ДобавитьСтроку("PROGRAM: FOREIGNNR = "+Вал.Код+"; RATE = "+СокрЛП(Формат(1/КурсДляВалюты(Вал,ТекущаяДата()),"Ч7.4"))+"; NAME = """+СокрЛП(Вал.Сокр_Назв)+"""");
	КонецЕсли;

	Чек.ДобавитьСтроку("PROGRAM: FOREIGNNR = 3; RATE = 1.0000; NAME = ""KARTE""");
	
//	Чек.ДобавитьСтроку("PROGRAM: FOREIGNNR = 3; RATE = 0.0001; NAME = "" """);
//	Чек.ДобавитьСтроку("PROGRAM: FOREIGNNR = 4; RATE = 0.0001; NAME = "" """);
//	Чек.ДобавитьСтроку("PROGRAM: FOREIGNNR = 5; RATE = 0.0001; NAME = "" """);

	//УтилПеч="RS2810s.EXE";
	УтилПеч="command /c RS2810s.EXE";
	
  	ФС.УстТекКаталог(СокрЛП(ККМ.КаталогОбменаДанными));
                                                     
  	//Записать файл с чеком в текущую директорию
	//Закомментировано Инсталлятором МОД:Чек.Записать(СокрЛП(ФС.ТекКаталог())+"\curr.txt");
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Чек, СокрЛП(ФС.ТекКаталог())+"\curr.txt");
	//Конец текста, вставленного Инсталлятором МОД
 
	Чек=0;
 	
	ПовторПечати=1;
  	Пока ПовторПечати=1 Цикл

		ПовторПечати=0; 
		Если ФС.СуществуетФайл("RS2810s.ERR") = 1 Тогда
			ФС.ПереименоватьФайл("RS2810s.ERR","RS2810s"+ДатаЧисло(ТекущаяДата())+ДатаМесяц(ТекущаяДата())+".LOG",1);
		КонецЕсли;

		//Проверка на утилиту печати Чека.
		Если ФС.СуществуетФайл(УтилПеч) = 1 Тогда
		Иначе     
		   Сигнал();
		   Предупреждение("Отсутствует утилита -" + УтилПеч + "- для печати Чека. Обратитесь к системному администратору!");
		   Возврат;
		КонецЕсли;                                        
                                 
		КомандаСистемы(УтилПеч+" curr.txt");
		
		//Проверка на ошибку печати кассового чека
		Если ОбработкаОшибок() = 1 Тогда       
		    Если Вопрос("Произошла ошибка печати Чека. Устраните ошибку и нажмите кнопку ""Повтор""!","Повтор+Отмена")<>"Повтор" Тогда
				Сообщить("Произошла ошибка при печати чека. Чек не пробит!");
				Возврат;
			КонецЕсли;
				
			ПовторПечати=1;
		Иначе    
			ФС.УдалитьФайл("curr.txt");
		КонецЕсли;
		
  	КонецЦикла;
		
	         
  	Сообщить("ККМ RS2810 Загрузка валют выполнена!");
КонецПроцедуры

//********************************************************************************

Процедура ЗакрытиеСмены()
	Если ККМ.РежимККМ=Перечисление.РежимыККМ.ФР Тогда
                                                                                       
		Если Вопрос("Сейчас будет произведена печать Z-отчета. Вы уверены, что хотите это сделать?","Да+Нет")="Да" Тогда
		Иначе
			Возврат;
		КонецЕсли;

		
		Чек=СоздатьОбъект("Текст");
		Чек.КодоваяСтраница(0); //ДОС кодовая страница
               
		Чек.ДобавитьСтроку("REPORT: TYPE = Z");		  
		
		//УтилПеч="RS2810s.EXE";
		УтилПеч="command /c RS2810s.EXE";
	
	  	ФС.УстТекКаталог(СокрЛП(ККМ.КаталогОбменаДанными));
                                                     
	  	//Записать файл с чеком в текущую директорию
		//Закомментировано Инсталлятором МОД:Чек.Записать(СокрЛП(ФС.ТекКаталог())+"\zreport.txt");
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Чек, СокрЛП(ФС.ТекКаталог())+"\zreport.txt");
	//Конец текста, вставленного Инсталлятором МОД
 
		Чек=0;
 	
		ПовторПечати=1;
	  	Пока ПовторПечати=1 Цикл
	
			ПовторПечати=0; 
			Если ФС.СуществуетФайл("RS2810s.ERR") = 1 Тогда
				ФС.ПереименоватьФайл("RS2810s.ERR","RS2810s"+ДатаЧисло(ТекущаяДата())+ДатаМесяц(ТекущаяДата())+".LOG",1);
			КонецЕсли;
	
			//Проверка на утилиту печати Чека.
			Если ФС.СуществуетФайл(УтилПеч) = 1 Тогда
			Иначе     
			   Сигнал();
			   Предупреждение("Отсутствует утилита -" + УтилПеч + "- для печати Чека. Обратитесь к системному администратору!");
			   Возврат;
			КонецЕсли;                                        
	                                 
			КомандаСистемы(УтилПеч+" zreport.txt");
			
			//Проверка на ошибку печати кассового чека
			Если ОбработкаОшибок() = 1 Тогда       
			    Если Вопрос("Произошла ошибка печати Чека. Устраните ошибку и нажмите кнопку ""Повтор""!","Повтор+Отмена")<>"Повтор" Тогда
					Сообщить("Произошла ошибка при печати чека. Чек не пробит!");
					Возврат;
				КонецЕсли;
					
				ПовторПечати=1;
			Иначе    
				ФС.УдалитьФайл("zreport.txt");
			КонецЕсли;
			
	  	КонецЦикла;
		
		Сообщить("ККМ RS2810 отработала печать Z-отчета");

	ИначеЕсли ККМ.РежимККМ=Перечисление.РежимыККМ.OffLine Тогда
		Сообщить("ККМ RS2810 в режиме OffLine" + РазделительСТрок +
		               "не поддерживает печать Z-отчета");
	ИначеЕсли ККМ.РежимККМ=Перечисление.РежимыККМ.OnLine Тогда
		Сообщить("ККМ RS2810 в режиме OnLine" + РазделительСТрок +
		               "не поддерживает печать Z-отчета");
	КонецЕсли;
КонецПроцедуры
//********************************************************************************
Процедура ПриОткрытии()
	Если глФлагРасшифровки=1 Тогда
		Расшифровка=глРасшифровка;
		Если Расшифровка.РазмерСписка()<>0 Тогда
			ККМ=Расшифровка.Получить("ККМ");
			Если ПустоеЗначение(ККМ)=1 Тогда
				СтатусВозврата(0);
			    Возврат;
			КонецЕсли;
			Если НЕ(ККМ.ТипККМ=Перечисление.ТипыККМ.OmronRS2810) Тогда
				Сообщить("Передан неверный тип ККМ");
				СтатусВозврата(0);
			    Возврат;
			КонецЕсли;          
			
			НомерОтдела=ККМ.НомерОтдела;
			Если ПустоеЗначение(НомерОтдела)=1 Тогда
			    НомерОтдела=1;
			КонецЕсли;
			
			Процесс=Расшифровка.Получить("Процесс");
			Если Процесс="Подключить" Тогда
				Подключить();
			ИначеЕсли Процесс="Отключить" Тогда
				Отключить();
			ИначеЕсли Процесс="ПечататьЧек" Тогда
				ПечататьЧек();
			ИначеЕсли (Процесс="ПечататьСуммовойЧек") ИЛИ (Процесс="ПечататьЧекСокр") Тогда
				ПечататьСуммовойЧек();                   
			ИначеЕсли Процесс="ЗагрузкаВалют" Тогда
				ЗагрузкаВалют();
			ИначеЕсли Процесс="ВнестиСменныеДеньги" Тогда
				ВнестиСменныеДеньги();				
			ИначеЕсли Процесс="ВыбратьДеньги" Тогда
				ВыбратьДеньги();				
			ИначеЕсли Процесс="Xотчет" Тогда
				Xотчет();				
			ИначеЕсли Процесс="ЗакрытиеСмены" Тогда
				ЗакрытиеСмены();
			Иначе
				Сообщить("Для обработки ККМ RS2810 передан неизвестный процесс");
			КонецЕсли;
			СтатусВозврата(0);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Ширина=16;
