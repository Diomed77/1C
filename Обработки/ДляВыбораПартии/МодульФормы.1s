Перем Товар;
Перем внКонтекст;
Перем ОбщРег, РегПартии;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ

//******************************************************************************
// РасшифровкаРеквизита(Рекв)
//
// Параметры:
//  Рекв - реквизит, форму которого необходимо открыть
// Возвращаемое значение:
//  нет.
// Описание:
//  открывает форму дополнительного реквизита справочника, переданного через
//  параметр.

Процедура РасшифровкаРеквизита(Рекв)
	
	Тек = тПартии.ТекущаяСтрока();
	
	Если ПустоеЗначение(Тек) = 0 Тогда
		ОткрытьФорму(Рекв,,1);
	Иначе
		Предупреждение("Не выбрана партия!", 60);
	КонецЕсли;
	
КонецПроцедуры // РасшифровкаРеквизита() 

//******************************************************************************
// ПроизвестиВыбор(Партия)
//
// Параметры:
//  Партия - элемент справочника "Партии"
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога:
//  Кнопка "<Автоподбор партий>".
//
// Описание:
//  Производит запись в список возврата выбранную партию
//
Процедура ПроизвестиВыбор(Партия)
	
	Форма.Параметр.Установить("Партия",Партия);
	Форма.Параметр.Установить("СтатусВозврата", 1);
	
КонецПроцедуры // ПроизвестиВыбор()

                                                   
//******************************************************************************
// ПересчетРегистров()
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога:
//
// Описание:
// 	Производит пересчет регистров в соответствии с выбранными значениями
//	фильтра.
//
Процедура ПересчетРегистров()

	
	Запрос=СоздатьОбъект("ODBCRecordSet");
	ТекстЗапроса="SELECT ПартииОстатки.Статус
	|					, ПартииОстатки.Контрагент [Поставщик $Справочник.Контрагенты]
	|					, ПартииОстатки.ПрихДокумент [ПриходныйДокумент $Документ]
	|					, ПартииОстатки.Партия [Партия $Справочник.Партии]
	|					, NULLIF(ПартииОстатки.СрокРеализации,'1753-01-01') СрокРеализ
	|					, ПартииОстатки.ОстатокТовараОстаток Ост
	|					, ПартииОстатки.СтоимостьОстаток Стоим
	|			  FROM $РегистрОстатки.ПартииТоваров("+?(внКонтекст.СравнитьТА()=-1,":Позиция ~","")+",,
	|												(Товар = :ВыбТовар)
	|												AND (Склад = :ВыбСклад)
	|												AND (Фирма = :ВыбФирма),
	|												(Статус, Контрагент, ПрихДокумент, Партия, СрокРеализации),
	|												(ОстатокТовара, Стоимость)) AS ПартииОстатки
	|			  WHERE ПартииОстатки.ОстатокТовараОстаток > 0 
	|			  ORDER BY ПартииОстатки.ОстатокТовараОстаток DESC
	|";

	Запрос.УстановитьТекстовыйПараметр("ВыбТовар",Товар);
	Запрос.УстановитьТекстовыйПараметр("ВыбСклад",Склад);
	Запрос.УстановитьТекстовыйПараметр("ВыбФирма",Фирма);

	Запрос.УстановитьТекстовыйПараметр("Позиция",СформироватьПозициюДокумента(внКонтекст.ТекущийДокумент(),-1));

	табл=Запрос.ВыполнитьИнструкцию(ТекстЗапроса);
	табл.Выгрузить(тПартии);
	тПартии.ВидимостьКолонки("Партия",0);
	тПартии.УстановитьПараметрыКолонки("Статус",,,,,2);
	тПартии.УстановитьПараметрыКолонки("Поставщик",,,,,25);
	тПартии.УстановитьПараметрыКолонки("ПриходныйДокумент",,,,"Приходный документ",20);
	тПартии.УстановитьПараметрыКолонки("СрокРеализ",,,,,10);
	тПартии.УстановитьПараметрыКолонки("Ост",,,,,10);
	тПартии.УстановитьПараметрыКолонки("Стоим","Число",12,2,,12);

КонецПроцедуры // ПересчетРегистров()

                
////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
	Если ТипЗначенияСтр(Форма.Параметр) <> "СписокЗначений" Тогда
		Предупреждение("Форма вызывается только для целей подбора партий в документе!", 60);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	 
	внКонтекст	= Форма.Параметр.Получить("Контекст");
	Фирма		= Форма.Параметр.Получить("Фирма");
	Товар		= Форма.Параметр.Получить("Товар");
	Склад		= Форма.Параметр.Получить("Склад");
	Партия		= Форма.Параметр.Получить("Партия");
	
	Форма.Параметр.Установить("СтатусВозврата"	, 0);

	ПересчетРегистров();
	
	Если ПустоеЗначение(Партия) = 0 Тогда
		рез=0;
		Если тПартии.НайтиЗначение(Партия,рез,"Партия")=1 Тогда
			тПартии.ТекущаяСтрока(рез);
		КонецЕсли;
	КонецЕсли;
	
	
	Форма.ОбработкаВыбораСтроки(1);
	
КонецПроцедуры // ПриОткрытии()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриВыбореСтроки()
	
	ТекСтрока=тПартии.ТекущаяСтрока();
	Если ПустоеЗначение(ТекСтрока) = 0 Тогда
		Если тПартии.Партия.Выбран() = 1 Тогда
			ПроизвестиВыбор(тПартии.Партия);
			Форма.Закрыть();
			Возврат;
		КонецЕсли;
		СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры // ПриВыбореСтроки()
//Начало текста, вставленного Инсталлятором МОД
