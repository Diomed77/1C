
///<class name = "Общие.Форма.Привязки"
///Описание = "Класс служит для управления привязками и сплиттерами на форме. 
///Сплиттер - это такой элемент управления, который разделяет группы элеменов на форме, и позволяет менять размеры элементов при помощи перетаскивания сплиттера. В качестве сплиттера может быть использован любой диалоговый элемент на форме.
///При создании сплиттера автоматически выполняется подстройка левой/верхней границы и ширины/высоты на основании анализа координат элементов в разделяемых группах.
///Для функционирования привязок в управляющий объект должны транслироваться следующие события FormEx
///  - ПослеОткрытия()
///  - ПриИзмененииРазмераОкна()
///Для функционирования сплиттеров в управляющий объект должны транслироваться следующие события FormEx
///  - при открытии формы сказать Форма.ИспользоватьСлой(...) даже если на форме всего один слой!
///  - ПриНажатииЛевойКнопки()
///  - ПриОтжатииЛевойКнопки()
///  - ПриДвиженииМыши()
///Для правильного отображения курсоров над сплиттерами нужно:
///  - при переключении слоёв, или изменении видимости сплиттеров вызывать метод ПриИзмененииВидимости()"
///БазовыеКлассы = "РасширениеФормы"
///ИспользуетКлассы = "FormEx::РасширениеФормы, FormEx::АтрибутФормы"
///Версия = "1.0"
///Автор = "Диркс Алексей"
///Пример = "
///Расположение элементов:
///текстДеревоГруппОС текстВертСплиттер МногострочнаяЧасть
///текстГорСплиттер
///кнОС
///Инициализирующий код:
///    оПривязки = СоздатьОбъект('Общие.Форма.Привязки');
///    оПривязки.Добавить('МногострочнаяЧасть', 'НН', 'Форма', 'ПП', 'Форма');
///    оПривязки.Добавить('текстГорСплиттер', 'ВН', 'Форма', 'ПП', 'Форма');
///    оПривязки.Добавить('кнОС', 'ВН', 'Форма', 'ПП', 'Форма');
///    оПривязки.ДобавитьВертСплиттер('текстВертСплиттер', 'текстДеревоГруппОС, кнОС, текстГорСплиттер', 'МногострочнаяЧасть');
///    оПривязки.ДобавитьГорСплиттер('текстГорСплиттер', 'текстДеревоГруппОС', 'кнОС');">
класс Общие.Форма.Привязки = классФормаПривязки2@MD : РасширениеФормы
{
	///<method name = "Добавить" Тип = "Число">
	///<Синтаксис>Добавить(ИмяАтр, ...)</Синтаксис>
	///<Описание>Привязывает атрибут формы к другим атрибутам. Параметры привязок должны передаваться после имени атрибута, и составлять пары (ТипПривязки, ИмяБазовогоАтрибута).
	///Все привязки - это привязки края атрибута (верх, низ, лево, право) к краю другого атрибута. Вид привязки может задаваться как в виде строки, так и константой самого класса.
	///Возможные виды привязок:
	///  - ЛЛ (привЛево) - левый край к левому краю;
	///  - ЛП (привЛевоКПраво) - левый край к правому;
	///  - ПЛ (привПраво) - правый край к левому;
	///  - ПП (привПравоКПраво) - правый край к правому;
	///  - ВВ (привВерх) - верхний край к верхнему;
	///  - ВН (привВерхКНизу) - верхний край к нижнему;
	///  - НВ (привНиз) - нижний край к верхнему;
	///  - НН (привНизКНизу) - нижний край к нижнему.
	///В качестве базового атрибута (т.е. того, к которому осуществляется привязка) может использоваться любой атрибут формы, и сама форма.</Описание>
	///<returns type = "Число">1 - атрибут добавлен в привязки, 0 - ошибка.</returns>
	///<sig>
	Число Добавить(Строка ИмяАтр, ...);
	Число Привязка(Строка ИмяАтр, ...);
	///</sig>
	///</method>
	

	///<method name = "МинимальныеРазмеры" Тип = "">
	///<returns type = ""></returns>
	///<Синтаксис>МинимальныеРазмеры(ИмяАтр, [МинШирина = -1], ]МинВысота = -1])</Синтаксис>
	///<Описание></Описание>
	///<sig>
	void МинимальныеРазмеры(Строка ИмяАтр, Число МинШирина = -1, Число МинВысота = -1);
	///</sig>
	///</method>
	
	///<method name = "КонтролироватьРазмеры">
	///<Синтаксис>КонтролироватьРазмеры(ИмяАтр, флаг)</Синтаксис>
	///<Описание>Метод позволяет отключить контроль минимальной ширины/высоты элементов формы. Предназначен в основном для сплиттеров.</Описание>
	///<sig>
	void КонтролироватьРазмеры(Строка ИмяАтр, Число флаг);
	///</sig>
	///</method>

	///<method name = "ДобавитьВертСплиттер">
	///<Синтаксис>ДобавитьВертСплиттер(стрАтрибутСплиттер, стрАтрибутыСлева, стрАтрибутыСправа, [Ширина = 5])</Синтаксис>
	///<Описание>Добавляет вертикальный сплиттер</Описание>
	///<param name = "стрАтрибутСплиттер" type = "Строка">Идентификатор атрибута формы, который будет использоваться в качестве сплиттера</param>
	///<param name = "стрАтрибутыСлева" type = "Строка">Список идентификаторов атрибутов формы, которые находятся слева от сплиттера, и размерами которых нужно управлять. Разделители - запятые (символ ',')</param>
	///<param name = "стрАтрибутыСправа" type = "Строка">Список идентификаторов атрибутов формы, которые находятся справа от сплиттера, и размерами которых нужно управлять. Разделители - запятые (символ ',')</param>
	///<sig>
	void ДобавитьВертСплиттер(Строка стрАтрибутСплиттер, Строка стрАтрибутыСлева, Строка стрАтрибутыСправа, Число Ширина = 5);
	///</sig>
	///</method>
	
	///<method name = "ДобавитьГорСплиттер">
	///<Синтаксис>ДобавитьГорСплиттер(стрАтрибутСплиттер, стрАтрибутыСверху, стрАтрибутыСнизу, [Высота = 5])</Синтаксис>
	///<Описание>Добавляет горизонтальный сплиттер</Описание>
	///<param name = "стрАтрибутСплиттер" type = "Строка">Идентификатор атрибута формы, который будет использоваться в качестве сплиттера</param>
	///<param name = "стрАтрибутыСверху" type = "Строка">Список идентификаторов атрибутов формы, которые находятся сверху от сплиттера, и размерами которых нужно управлять. Разделители - запятые (символ ',')</param>
	///<param name = "стрАтрибутыСнизу" type = "Строка">Список идентификаторов атрибутов формы, которые находятся снизу от сплиттера, и размерами которых нужно управлять. Разделители - запятые (символ ',')</param>
	///<sig>
	void ДобавитьГорСплиттер(Строка стрАтрибутСплиттер, Строка стрАтрибутыСверху, Строка стрАтрибутыСнизу, Число Высота = 5);
	///</sig>
	///</method>
	
	///<method name = "СостояниеСплиттеров" Тип = "ИндексированнаяТаблица">
	///<Синтаксис>СостояниеСплиттеров()</Синтаксис>
	///<Описание>Возвращает таблицу с текущим состоянием сплиттеров.</Описание>
	///<returns type = "ИндексированнаяТаблица">Текущее состояние сплиттеров</returns>
	///<Пример>итСостояние = оПривязки.СостояниеСплиттеров();
	///СохранитьЗначение("Сплиттеры", итСостояние.ВСтроку());</Пример>
	///<sig>
	ИндексированнаяТаблица СостояниеСплиттеров();
	///</sig>
	///</method>
	
	///<method name = "ВосстановитьСостояниеСплиттеров">
	///<Синтаксис>ВосстановитьСостояниеСплиттеров(итСостояние)</Синтаксис>
	///<Описание>Восстанавливает состояние сплиттеров, ранее сохраненное с помощью метода СостояниеСплиттеров().</Описание>
	///<param name = "итСостояние" type = "ИндексированнаяТаблица, Строка">ИТ или строка.</param>
	///<Пример>стрСплиттеры = ВосстановитьЗначение("Сплиттеры");
	///оПривязки.ВосстановитьСостояниеСплиттеров(стрСплиттеры);</Пример>
	///<sig>
	void ВосстановитьСостояниеСплиттеров(Неопределенный итСостояние);
	///</sig>
	///</method>
	
	///<ОбработчикиСобытий>
	///<sig>
	void ПриНажатииЛевойКнопки(Число Сост, Число ЛевоМ, Число ВерхМ, Неопределенный ФСО = 0);
	void ПриОтжатииЛевойКнопки(Число Сост, Число ЛевоМ, Число ВерхМ, Неопределенный ФСО = 0);
	void ПриДвиженииМыши(Число Сост, Число ЛевоМ, Число ВерхМ, Неопределенный ФСО = 0);
	///</sig>
	///</ОбработчикиСобытий>
};
///</class>
