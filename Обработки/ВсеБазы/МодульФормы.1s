Перем ДаДА,НетНет,Форма_Параметр;
//_____________________________________________________________________________
//_____________________________________________________________________________
Процедура Спр_УстановитьАтрибут(Спр,ТекущаяКолонка,Времен)
	Если (Форма_Параметр.Вид()="ПравилаЗагрузки")И
	(ТекущаяКолонка="ПризнакВыгрузки") Тогда
		Спр.УстановитьАтрибут("ПризнакЗагрузки",Времен);
	Иначе
		Спр.УстановитьАтрибут(ТекущаяКолонка,Времен);
	КонецЕсли;
КонецПроцедуры //Спр_УстановитьАтрибут


Процедура КопироватьДляВсех()
	ТекСтрока=Таб.ТекущаяСтрока();
	ТекКолонка=Таб.ТекущаяКолонка();
	Если (ТекКолонка="База")ИЛИ(ТекКолонка="Путь") Тогда
	    Возврат;
	КонецЕсли;
	Если Таб.КоличествоСтрок()=0 Тогда
		Возврат;
	КонецЕсли;
	
	
	Времен=Таб.ПолучитьЗначение(ТекСтрока,ТекКолонка);
	Таб.ВыбратьСтроки();
	Для Ц=1 по Таб.КоличествоСтрок() Цикл
		Спр=СоздатьОбъект("Справочник."+Форма_Параметр.Вид());
		Спр.НайтиЭлемент(Таб.ПолучитьЗначение(Ц,"Реквизит"));
		Спр_УстановитьАтрибут(Спр,Таб.ТекущаяКолонка(),Времен);
		Спр.Записать();
		Таб.УстановитьЗначение(Ц,Таб.ТекущаяКолонка(),Времен);
	КонецЦикла;
	глВыгрБазаМОДВыгр="";
	глВыгрБазаМОДЗагр="";
КонецПроцедуры

//_____________________________________________________________________________

Процедура ВвестиДанные()
	Если (Таб.ТекущаяКолонка()<>"База")И(Таб.ТекущаяКолонка()<>"Путь") Тогда
	глВыгрБазаМОДВыгр="";
	глВыгрБазаМОДЗагр="";
		Если Таб.ТекущаяКолонка()="Синхронизация" Тогда
			Времен=Таб.ПолучитьЗначение(Таб.ТекущаяСтрока(),Таб.ТекущаяКолонка());
			Если Времен=ДаДа Тогда
				Времен="-";
			ИначеЕсли Времен="-" Тогда
				Времен=ДаДа;
			КонецЕсли;
			Спр=СоздатьОбъект(ТипЗначенияСтр(Форма_Параметр)+"."+Форма_Параметр.Вид());
			Спр.НайтиЭлемент(Таб.ПолучитьЗначение(Таб.ТекущаяСтрока(),"Реквизит"));
			
			Спр_УстановитьАтрибут(Спр,Таб.ТекущаяКолонка(),Времен);
			
			Спр.Записать();
			Таб.УстановитьЗначение(Таб.ТекущаяСтрока(),Таб.ТекущаяКолонка(),Времен);
			Возврат;
		КонецЕсли;
		
		
		
		Если (Таб.ТекущаяКолонка()="ВклУсловие")
		или (Таб.ТекущаяКолонка()="ВклЗначение")
		или (Лев(Таб.ТекущаяКолонка(),7)="Признак") Тогда
			Времен=Таб.ПолучитьЗначение(Таб.ТекущаяСтрока(),Таб.ТекущаяКолонка());
			Если Времен=ДаДа Тогда
				Времен=НетНет;
			Иначе
				Времен=ДаДа;
			КонецЕсли;
			Спр=СоздатьОбъект(ТипЗначенияСтр(Форма_Параметр)+"."+Форма_Параметр.Вид());
			Спр.НайтиЭлемент(Таб.ПолучитьЗначение(Таб.ТекущаяСтрока(),"Реквизит"));
			
			Спр_УстановитьАтрибут(Спр,Таб.ТекущаяКолонка(),Времен);
			
			Спр.Записать();
			Таб.УстановитьЗначение(Таб.ТекущаяСтрока(),Таб.ТекущаяКолонка(),Времен);
		Иначе
			Времен=Таб.ПолучитьЗначение(Таб.ТекущаяСтрока(),Таб.ТекущаяКолонка());
			Тип=?(ТипЗначения(Времен)<10,ТипЗначенияСтр(Времен),ТипЗначенияСтр(Времен)+"."+Времен.Вид());
			Если Тип="Строка" Тогда
				ВвестиСтроку(Времен,"",120,0);
			Иначе
				ВвестиЗначение(Времен,"",Тип,,);
			КонецЕсли;
			Спр=СоздатьОбъект(ТипЗначенияСтр(Форма_Параметр)+"."+Форма_Параметр.Вид());
			Спр.НайтиЭлемент(Таб.ПолучитьЗначение(Таб.ТекущаяСтрока(),"Реквизит"));
			Спр.УстановитьАтрибут(Таб.ТекущаяКолонка(),Времен);
			Спр.Записать();
			Таб.УстановитьЗначение(Таб.ТекущаяСтрока(),Таб.ТекущаяКолонка(),Времен);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//_____________________________________________________________________________
Функция Навигация()
	ПризнакВыгрузки=Таб.ПолучитьЗначение(Таб.ТекущаяСтрока(),2);
КонецФункции

//_____________________________________________________________________________
Процедура ДобавитьВТаблицу(Спр)
	Если Спр.Выбран()=1 Тогда
		Таб.НоваяСтрока();
		Таб.База=Спр.Владелец.Наименование;
		Таб.Синоним=Спр.Синоним;
		Если (Форма_Параметр.ЭтоГруппа()=0) Тогда
			Если Форма_Параметр.Вид()="ПравилаЗагрузки" Тогда
				Таб.Синхронизация=Спр.Синхронизация;
			КонецЕсли;
			Таб.Условие=Спр.Условие;
			Таб.Значение=Спр.Значение;
			Таб.ВклУсловие=Спр.ВклУсловие;
			Таб.ВклЗначение=Спр.ВклЗначение;
		Иначе
			Если Форма_Параметр.Родитель="Документы" Тогда
				Таб.Движения=Спр.Движения;
			КонецЕсли;
		КонецЕсли;
		Если Форма_Параметр.Вид()="ПравилаВыгрузки" Тогда
			Таб.ПризнакВыгрузки=Спр.ПризнакВыгрузки;
		Иначе
			Таб.ПризнакВыгрузки=Спр.ПризнакЗагрузки;
		КонецЕсли;
		Таб.Реквизит=Спр.ТекущийЭлемент();
	КонецЕсли;
КонецПроцедуры //

//_____________________________________________________________________________

Процедура ПриОткрытии()
	Если ТипЗначенияСтр(Форма.Параметр)<>"СписокЗначений" Тогда
		Предупреждение("Это служебная обработка !",10);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	Форма_Параметр=Форма.Параметр.Получить("Элемент");
	Если Форма.Параметр.Получить("Команда")="ВсеСтрокиБазы" Тогда
		Команда=1;
		Форма_База=Форма.Параметр.Получить("База");
		Форма.Т_Заголовок.Видимость(0);
		Форма.Заголовок("Значение реквизита "+Форма_Параметр.Наименование+" в объектах:",0);
	Иначе
		Команда=0;
		Форма.Заголовок("Значение реквизита в базах:",0);
	КонецЕсли;
	Таб.Очистить();
	Таб.НоваяКолонка("База","Строка",,,"База",10,,);
	Если Команда=1 Тогда
		Таб.ВидимостьКолонки("База",0);   //в этом режиме (когда 1-я база) эта колонка не нужна
		Таб.НоваяКолонка("Путь","Строка"); //зато путь у всех реквизитов будет разный...
	КонецЕсли;
	Таб.НоваяКолонка("Синоним","Строка",,,"Синоним",10,,);
	Таб.НоваяКолонка("ПризнакВыгрузки","Строка",1,,"?",3,,);
	Таб.НоваяКолонка("Реквизит","Справочник."+Форма_Параметр.Вид(),,,"Реквизит",0,,);
	//======================
	//======================
	Если (Форма_Параметр.ЭтоГруппа()=0) Тогда
		Перем1="";
		Попытка
			Если (Сред(Форма_Параметр.Наименование,1,1)<>"#") Тогда
				Если Форма_Параметр.Родитель.Родитель.Наименование="Справочники" Тогда
					Об=СоздатьОбъект("Справочник."+Форма_Параметр.Родитель.Наименование);
					глСоздатьНовыйОбъект(Об);
					Перем1=Об.ПолучитьАтрибут(Форма_Параметр.Наименование);
					Если Форма_Параметр.Наименование="Код" Тогда
						Перем1=Об.Код
					ИначеЕсли Форма_Параметр.Наименование="Наименование" Тогда
						Перем1=Об.Наименование;
					ИначеЕсли Форма_Параметр.Наименование="Родитель" Тогда
						Перем1=Об.Родитель;
					ИначеЕсли Форма_Параметр.Наименование="Владелец" Тогда
						Перем1=Об.Владелец;
					КонецЕсли;
				ИначеЕсли Форма_Параметр.Родитель.Родитель.Родитель.Наименование="Документы"  Тогда
					Об=СоздатьОбъект("Документ."+Форма_Параметр.Родитель.Родитель.Наименование);
					глСоздатьНовыйОбъект(Об);
					Перем1=Об.ПолучитьАтрибут(Форма_Параметр.Наименование);
					Об=0;
				ИначеЕсли Форма_Параметр.Родитель.Родитель.Родитель.Наименование="Планы счетов"  Тогда
				КонецЕсли;
			КонецЕсли;
		Исключение
		КонецПопытки;
		
		//======================
		
		Перем1=?((ТипЗначения(Перем1)<10)ИЛИ(ТипЗначения(Перем1)>12),ТипЗначенияСтр(Перем1),ТипЗначенияСтр(Перем1)+"."+Перем1.Вид());
		Если Форма_Параметр.Вид()="ПравилаЗагрузки" Тогда
			Таб.НоваяКолонка("Синхронизация","Строка",,,"С",2,,);
		КонецЕсли;
		Таб.НоваяКолонка("Условие",Перем1,,,"Условие",10,,);
		Таб.НоваяКолонка("ВклУсловие","Строка",,,"У",2,,);
		Таб.НоваяКолонка("Значение",Перем1,,,"Значение",10,,);
		Таб.НоваяКолонка("ВклЗначение","Строка",,,"З",2,,);
	Иначе
		Если Форма_Параметр.Родитель.Наименование="Документы" Тогда
			Таб.НоваяКолонка("Движения","Строка",1,,"Движ.",0,,);
		КонецЕсли;
	КонецЕсли;
	Таб.ВидимостьКолонки("Реквизит",0,);
	Если Команда=1 Тогда //если это режим "показать все одинаковые строки одной базы",
						//то обрабатываем только одну базу по новому алгоритму
			Спр2=СоздатьОбъект("Справочник."+Форма_Параметр.Вид());
			Спр2.ИспользоватьВладельца(Форма_Параметр.Владелец);
			
			//ищем самую верхнюю папку (т.е. папку типа объекта)
			Родитель0=Форма_Параметр.Родитель;
			Пока Родитель0.Родитель.Выбран()=1 Цикл
			     Родитель0=Родитель0.Родитель;
			КонецЦикла;
	
	        Если Родитель0.ЭтоГруппа()=1 Тогда
				Спр2.ИспользоватьРодителя(Родитель0);
			КонецЕсли;
			
		    ДлинаН=СтрДлина(Форма_Параметр.Наименование);//длина наименования
			Спр2.ВыбратьЭлементы();
			Пока Спр2.ПолучитьЭлемент()=1 Цикл
			Если Спр2.Наименование=Форма_Параметр.Наименование Тогда
				ДобавитьВТаблицу(Спр2);	
				Путь=Спр2.ПолноеНаименование();
				Таб.Путь=Лев(Путь,СтрДлина(Путь)-ДлинаН-1);
			КонецЕсли;    
			КонецЦикла;
		
		
	Иначе 
		Спр1=СоздатьОбъект("Справочник.ПериферийныеБазы");
		Спр1.ВыбратьЭлементы();
		Пока Спр1.ПолучитьЭлемент()>0 Цикл
			Спр=СоздатьОбъект("Справочник."+Форма_Параметр.Вид());
			Спр.ИспользоватьВладельца(Спр1.ТекущийЭлемент());
			Спр.ВключатьПодчиненные(1);
			Если Форма_Параметр.Родитель.Выбран()=1 Тогда
				Если Форма_Параметр.Родитель.Родитель.Выбран()=1 Тогда
					Если Форма_Параметр.Родитель.Родитель.Родитель.Выбран()=1 Тогда
						Если Форма_Параметр.Родитель.Родитель.Родитель.Родитель.Выбран()=1 Тогда
							Спр.НайтиПоНаименованию(Форма_Параметр.родитель.родитель.Родитель.Родитель.Наименование);
							Спр.ИспользоватьРодителя(Спр.ТекущийЭлемент());
						КонецЕсли;
						Спр.НайтиПоНаименованию(Форма_Параметр.Родитель.родитель.родитель.Наименование);
						Спр.ИспользоватьРодителя(Спр.ТекущийЭлемент());
					КонецЕсли;
					Спр.НайтиПоНаименованию(Форма_Параметр.родитель.родитель.Наименование);
					Спр.ИспользоватьРодителя(Спр.ТекущийЭлемент());
				КонецЕсли;
				Спр.НайтиПоНаименованию(Форма_Параметр.родитель.Наименование);
				Спр.ИспользоватьРодителя(Спр.ТекущийЭлемент());
			КонецЕсли;
			Спр.НайтиПоНаименованию(Форма_Параметр.Наименование);
			ДобавитьВТаблицу(Спр);	
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры //ПриОткрытии

Процедура ПриПовторномОткрытии()
ПриОткрытии();
КонецПроцедуры


ДаДА="Х";
НетНет="";
