Перем Параметр;

// *****************************************************************************
Процедура Подключить()
	
	// подключение торгового оборудования
	НачальнаяСтрокаНастройки	= глСуществуетФайлНастройки();
	Если НачальнаяСтрокаНастройки = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// открываем файл
	ФайлНастройки	= СоздатьОбъект("Текст");
	ФайлНастройки.Открыть(ИмяФайлаНастройки);
	
	// читаем настройку
	Настройка		= ЗначениеИзСтрокиВнутр(ФайлНастройки.ПолучитьСтроку(НачальнаяСтрокаНастройки + 1));
    
	РозничныйТорговыйСклад	= Настройка.Получить("РозничныйТорговыйСклад");
	РозничнаяКатегорияЦены	= Настройка.Получить("РозничнаяКатегорияЦены");
	// *****************************************************************************
	// ДИСПЛЕЙ ПОКУПАТЕЛЯ
	
	РаботаСДисплеемПокупателя	= Настройка.Получить("РаботаСДисплеемПокупателя");  	
	Если РаботаСДисплеемПокупателя = 1 Тогда                                        		
		ТипДисплеяПокупателя		= Настройка.Получить("ТипДисплеяПокупателя");
		ПараметрыДисплеяПокупателя	= ЗначениеИзСтрокиВнутр(ФайлНастройки.ПолучитьСтроку(НачальнаяСтрокаНастройки + 4));		
		Если ТипЗначения(ПараметрыДисплеяПокупателя) <> 0 Тогда
			глКомандаДисплею(Параметр, "");                    				
			Если ПустоеЗначение(ДисплейПокупателя) = 0 Тогда
				глКомандаДисплею("Бегущая строка", "");
			КонецЕсли;                                         			
		Иначе
			// отсутствуют настройки
			ДисплейПокупателя			= 0;
			РаботаСДисплеемПокупателя	= 0;                   		
		КонецЕсли;		
	КонецЕсли;    
	// *****************************************************************************
	// СКАНЕР ШТРИХКОДА
	
	РаботаСоСканеромШтрихКода	= Настройка.Получить("РаботаСоСканеромШтрихКода");	
	Если РаботаСоСканеромШтрихКода = 1 Тогда
		//Если Параметр = "Подключить" Тогда 			
		//	СканерШтрихКода				= 0;
		//	РаботаСоСканеромШтрихКода	= 0;			
		//	Если ЗагрузитьВнешнююКомпоненту("ScanOPOS.dll")<>0 Тогда
		//		СканерШтрихКода=СоздатьОбъект("AddIn.Scanner");  	
		//		Если СканерШтрихКода.УстройствоВключено = 0 Тогда
		//			Если СканерШтрихКода.Подсоединить("Scanner") = СписокКонстантOPOS.Получить("OPOS_SUCCESS") Тогда
		//				Если СканерШтрихКода.Занять(1) = СписокКонстантOPOS.Получить("OPOS_SUCCESS") Тогда							
		//					СканерШтрихКода.УстройствоВключено	= 1;
		//					Если СканерШтрихКода.Результат = СписокКонстантOPOS.Получить("OPOS_SUCCESS") Тогда								
		//						РаботаСоСканеромШтрихКода	= 1;								
		//					КонецЕсли;                          							
		//				КонецЕсли;                              						
		//			КонецЕсли;                                  					
		//		КонецЕсли;                                      	
		//	КонецЕсли;
		//	
		//	Если РаботаСоСканеромШтрихКода	= 0 Тогда           				
		//		//Сообщить("НЕ УДАЛОСЬ подключить сканер штрих-кода!!!");
		//		СканерШтрихКода	= 0;				
		//	Иначе                   				
		//		СканерШтрихКода.ОчиститьВход();
		//		СканерШтрихКода.ОчиститьВыход();				
		//		СканерШтрихКода.ПосылкаДанных	= 1;				
		//	КонецЕсли;
		//	
		//ИначеЕсли Параметр = "Отключить" Тогда  			
		//	Если ПустоеЗначение(СканерШтрихКода) = 0 Тогда
		//		СканерШтрихКода.УстройствоВключено	= 1;
		//		СканерШтрихКода.Отсоединить();
		//	КонецЕсли;                          			
		//КонецЕсли;	// Если Параметр = "..." Тогда		
	КонецЕсли;	// Если РаботаСоСканеромШтрихКода = 1 Тогда  	
	// *****************************************************************************
	// ПРИНТЕР ЭТИКЕТОК
	
	РаботаСПринтеромЭтикеток	= Настройка.Получить("РаботаСПринтеромЭтикеток");      	
	Если РаботаСПринтеромЭтикеток = 1 Тогда
		ТипПринтераЭтикеток		= Настройка.Получить("ТипПринтераЭтикеток");           		
		глКомандаПринтеруЭтикеток(Параметр, "");
	КонецЕсли;  	
	// *****************************************************************************
	// ТЕРМИНАЛ СБОРА ДАННЫХ
	
	РаботаСтерминалом	= Настройка.Получить("РаботаСтерминалом");	
	Если РаботаСтерминалом = 1 Тогда
		ТипТерминала	= Настройка.Получить("ТипТерминала");     		
		глКомандаТерминалу(Параметр, "");
	КонецЕсли;                                                    	
	// *****************************************************************************
	// ВЕСЫ
	
	РаботаСвесами	= Настройка.Получить("РаботаСвесами");        	
	Если РаботаСвесами = 1 Тогда
		ТипВесов	= Настройка.Получить("ТипВесов");             		
		глКомандаВесам(Параметр, "");
	КонецЕсли;                                                    	
	// *****************************************************************************
	// НЕАВТОМАТИЗИРОВАННАЯ ККМ
	
	РаботаНеавтоматизированнойККМ	= Настройка.Получить("РаботаНеавтоматизированнойККМ");
	Если РаботаНеавтоматизированнойККМ = 1 Тогда
		НеавтоматизированнаяККМ	= Настройка.Получить("НеавтоматизированнаяККМ");
	КонецЕсли;                                                    
	// *****************************************************************************
	// ФИСКАЛЬНЫЙ РЕГИСТРАТОР
	
	РаботаСФискальнымРегистратором	= Настройка.Получить("РаботаСФискальнымРегистратором");	
	Если РаботаСФискальнымРегистратором = 1 Тогда                                          		
		РаботаСФискальнымРегистратором	= 0;
		ФискальныйРегистратор			= 0;
		ККМФискальногоРегистратора		= Настройка.Получить("ККМФискальногоРегистратора");		
		Если ПустоеЗначение(ККМФискальногоРегистратора) = 0 Тогда
			ПортПодключенияККМФискальногоРегистратора	= ККМФискальногоРегистратора.ПортПодключения;
		Иначе
			ПортПодключенияККМФискальногоРегистратора	= 0;
		КонецЕсли;
		// вызов обработки обслуживания ККМ
		ИмяОбработки	= глИмяОбработкиОбслуживанияККМ(ККМФискальногоРегистратора);   	
		
		Если ПустоеЗначение(ИмяОбработки) = 0 Тогда
			Расшифровка	= СоздатьОбъект("СписокЗначений");			
			Расшифровка.ДобавитьЗначение(ККМФискальногоРегистратора	, "ККМ");
			Расшифровка.ДобавитьЗначение(Параметр					, "Процесс");
			Расшифровка.ДобавитьЗначение("ИмяОбработки"				, "Отчет");
			
			глРасшифровка		= Расшифровка;
			глФлагРасшифровки	= 1;                                           			
			ОткрытьФорму("Обработка." + ИмяОбработки + "#");  
//			Сообщить(ИмяОбработки);
			//Загрузка Валют                                  
			глФлагРасшифровки	= 0;
			глРасшифровка		= 0;
		КонецЕсли;                                            
	КонецЕсли;                                                
    // *****************************************************************************
	// ККМ OFFLine
	
	РаботаККМвOFFLine	= Настройка.Получить("РаботаККМвOFFLine");
	Если РаботаККМвOFFLine = 1 Тогда   		
		РаботаККМвOFFLine	= 0;
		СписокККМ_OFFLine	= ЗначениеИзСтрокиВнутр(ФайлНастройки.ПолучитьСтроку(НачальнаяСтрокаНастройки + 2));		
		ПереченьДрайверовККМ_OFFLine	= СоздатьОбъект("СписокЗначений");
		Если СписокККМ_OFFLine.РазмерСписка() <> 0 Тогда			
			Представление	= "";                       			
			Для Индекс = 1 По СписокККМ_OFFLine.РазмерСписка() Цикл				
				ККМвOFFLine	= СписокККМ_OFFLine.ПолучитьЗначение(Индекс, Представление);
				СписокККМ_OFFLine.УстановитьЗначение(Индекс, ККМвOFFLine, "", 1);				
				// вызов обработки обслуживания ККМ
				ИмяОбработки	= глИмяОбработкиОбслуживанияККМ(ККМвOFFLine);    				
				Если ПустоеЗначение(ИмяОбработки) = 0 Тогда                      					
					глРасшифровка	= СоздатьОбъект("СписокЗначений");           					
					глРасшифровка.ДобавитьЗначение(ККМвOFFLine, "ККМ");
					глРасшифровка.ДобавитьЗначение("Подключить", "Процесс");
					глРасшифровка.ДобавитьЗначение("ИмяОбработки", "Отчет");     					
					глФлагРасшифровки	= 1;                                     					
					ОткрытьФорму("Обработка." + ИмяОбработки + "#");             					
					глФлагРасшифровки	= 0;
					глРасшифровка		= 0;                                     					
				КонецЕсли;                                                       				
			КонецЦикла;

			Подключено	= 0;
			Для Индекс = 1 По СписокККМ_OFFLine.РазмерСписка() Цикл   				
				Представление	= "";
				ККМвOFFLine		= СписокККМ_OFFLine.ПолучитьЗначение(Индекс, Представление);				
				Если ПустоеЗначение(Представление) = 1 Тогда
					Сообщить("НЕ УДАЛОСЬ подключить ККМ (" + ККМвOFFLine + ") в режиме OffLine!!!");					
				Иначе
					Подключено	= 1;					
				КонецЕсли;          				
			КонецЦикла;
			
			Если Подключено = 1 Тогда
				РаботаККМвOFFLine	= 1;				
			КонецЕсли;                  			
		КонецЕсли;                      		
	КонецЕсли;                          
    // *****************************************************************************
	// ККМ ONLine
	
	РаботаККМвOnLine	= Настройка.Получить("РаботаККМвOnLine");
	Если РаботаККМвOnLine = 1 Тогда  		
		РаботаККМвOnLine	= 0;
		СписокККМ_OnLine	= ЗначениеИзСтрокиВнутр(ФайлНастройки.ПолучитьСтроку(НачальнаяСтрокаНастройки + 3));		
		ПереченьДрайверовККМ_OnLine	= СоздатьОбъект("СписокЗначений");
		Представление				= "";		
		Если СписокККМ_OnLine.РазмерСписка() <> 0 Тогда			
			Для Индекс = 1 По СписокККМ_OnLine.РазмерСписка() Цикл				
				ККМвOnLine	= СписокККМ_OnLine.ПолучитьЗначение(Индекс, Представление);
				СписокККМ_OnLine.УстановитьЗначение(Индекс, ККМвOnLine, "", 1);				
				// вызов обработки обслуживания ККМ
				ИмяОбработки	= глИмяОбработкиОбслуживанияККМ(ККМвOnLine);   				
				Если ПустоеЗначение(ИмяОбработки) = 0 Тогда                    					
					глРасшифровка		= СоздатьОбъект("СписокЗначений");     					
					глРасшифровка.ДобавитьЗначение(ККМвOnLine, "ККМ");
					глРасшифровка.ДобавитьЗначение("Подключить", "Процесс");
					глРасшифровка.ДобавитьЗначение("ИмяОбработки", "Отчет");   					
					глФлагРасшифровки	= 1;                                   					
					ОткрытьФорму("Обработка." + ИмяОбработки + "#");           					
					глФлагРасшифровки	= 0;
					глРасшифровка		= 0;                                   					
				КонецЕсли;
			КонецЦикла;                                                        
			Подключено	= 0;
			Для Индекс = 1 По СписокККМ_OnLine.РазмерСписка() Цикл             				
				Представление	= "";
				ККМвOnLine		= СписокККМ_OnLine.ПолучитьЗначение(Индекс, Представление);   				
				Если ПустоеЗначение(Представление) = 1 Тогда
					Сообщить("НЕ УДАЛОСЬ подключить ККМ (" + ККМвOnLine + ") в режиме OnLine!!!");					
				Иначе
					Подключено	= 1;					
				КонецЕсли;          				
			КонецЦикла;             			
			Если Подключено = 1 Тогда
				РаботаККМвOnLine	= 1;				
			КонецЕсли;                  			
		КонецЕсли;                      		
	КонецЕсли;                          
КонецПроцедуры

//********************************************************************************
Процедура ПриОткрытии()   	
    Если ПустоеЗначение(Форма.Параметр) = 1 Тогда
        Параметр	= "Подключить";		
	Иначе
		Параметр	= Форма.Параметр;		
	КонецЕсли;                       	
	Подключить();                    	
	СтатусВозврата(0);               	
КонецПроцедуры
