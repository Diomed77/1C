//******************************************************************************
// Название:
// 		Универсальная обработка для простановки Идентификаторов GUID.
// Описание:
// 		Используется для простановки Идентификаторов GUID в справочники, а так же позволяет
//		отыскивать и замещать дубли идентификатров в справочниках.
//		Рекомендуется для использования с ПО "Агент+" для карманных персональных компьютеров.
// Распространяется:
//		Свободно.
// Авторские права:
// 		(c) ООО "Агент Плюс" 2005
// 		тел. (8512) 69-18-17
// 		e-mail: support@agentplus.ru, site: www.agentplus.ru
//******************************************************************************

Перем Версия;
Перем V7SysInfo;

//******************************************************************************
Процедура кнВыполнитьВыбор()
	
	ОчиститьОкноСообщений();
	
	ВидСпр 		= СписВидСпр.ПолучитьЗначение(СписВидСпр.ТекущаяСтрока());
	Спр			= СоздатьОбъект("Справочник."+ВидСпр);
	СпрДляПоиска= СоздатьОбъект("Справочник."+ВидСпр);
	Обработано = 0; Кол = 0;
	МетСпр 		= Метаданные.Справочник(ВидСпр);
	Подчиненный	= МетСпр.Владелец.Выбран();
	
	Если перОперация = 1 Тогда //Простановка идентификаторов
		
		Если ВыбЭлемент.Выбран()=1 Тогда
		    Если ВыбЭлемент.ЭтоГруппа()=1 Тогда
		        Спр.ИспользоватьРодителя(ВыбЭлемент);
			Иначе //выбран элемент
				Спр.НайтиЭлемент(ВыбЭлемент);
				Если ПустоеЗначение(Спр.Идентификатор)=0 Тогда
				    Если Вопрос("У выбранного элемента уже назначен идентификатор! Переназначить?",4)<>6 Тогда
				        Возврат;
				    КонецЕсли;
				КонецЕсли;
				Идентификатор=V7SysInfo.СоздатьGUID();
				Пока СпрДляПоиска.НайтиПоРеквизиту("Идентификатор",Идентификатор,1)=1 Цикл
					Идентификатор=V7SysInfo.СоздатьGUID();
				КонецЦикла;
				Спр.Идентификатор=Идентификатор;
				Спр.Записать();
				Предупреждение("Идентификатор у элемента успешно проставлен.",6);
				Возврат;
		    КонецЕсли;
		КонецЕсли;
		
		НачатьТранзакцию();
		
		Если Подчиненный = 1 Тогда
		    Спр.ВыбратьЭлементы(0);
		Иначе
			Спр.ВыбратьЭлементы();
		КонецЕсли;
		
		Пока Спр.ПолучитьЭлемент()=1 Цикл
			Обработано=Обработано+1;
			Если Обработано % 100 = 0 Тогда
			    Состояние("Обработано элементов: "+Строка(Обработано)+". Проставлено идентификаторов: "+Кол);
			КонецЕсли;
		    Если ПустоеЗначение(Спр.Идентификатор)=1 Тогда
				Спр.Идентификатор=V7SysInfo.СоздатьGUID();
				Спр.Записать();
		        Кол=Кол+1;
				Если Кол % 1000 = 0 Тогда
				    ЗафиксироватьТранзакцию();
					НачатьТранзакцию();
				КонецЕсли;
		    КонецЕсли;
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
		Сообщить("Обработано элементов: "+Строка(Обработано)+". Проставлено идентификаторов: "+Кол,"i");
		Предупреждение("Идентификаторы проставлены.",20);
		
	Иначе //Поиск дублей
		
		Состояние("Подготовка к поиску дублей идентификаторов...");
		Т=СоздатьОбъект("ТаблицаЗначений");
		Т.НоваяКолонка("Элемент");
		Т.НоваяКолонка("Идент","Строка");

		Если Подчиненный = 1 Тогда
		    Спр.ВыбратьЭлементы(0);
		Иначе
			Спр.ВыбратьЭлементы();
		КонецЕсли;

		Пока Спр.ПолучитьЭлемент()=1 Цикл
			Т.НоваяСтрока(); Т.Элемент=Спр.ТекущийЭлемент(); Т.Идент=Спр.Идентификатор;
			Кол=Кол+1; Если Кол % 500 = 0 Тогда Состояние("Подготовка: "+Кол); КонецЕсли;
		КонецЦикла;
		
		Т.Сортировать("+Идент");
		КолСтрок=Т.КоличествоСтрок();
		Если КолСтрок = 0 Тогда
		    Предупреждение("Справочник пустой",10);
			Возврат;
		КонецЕсли;
		КоэфСтр=100/КолСтрок; Кол=0; ТекПроц=-1; ТекИдент=-1; ТекЭл="";
		
		Т.ВыбратьСтроки();
		Пока Т.ПолучитьСтроку()=1 Цикл
		    Кол=Кол+1; Процент=Цел(Кол*КоэфСтр);
			Если Процент<>ТекПроц Тогда
			    ТекПроц=Процент; Состояние("Поиск дублей: "+ТекПроц+" %");
			КонецЕсли;
			Идент=Т.Идент;
			Наим="Код: "+СокрП(Т.Элемент.Код)+", "+СокрП(Т.Элемент);
			Если Идент=ТекИдент Тогда
				Обработано=Обработано+1;
				Сообщить("Дубль идентификатора у эл. "+Наим+" с эл. "+ТекЭл,"!");
				Если флТолькоПоиск=0 Тогда
					Идентификатор=V7SysInfo.СоздатьGUID();
					Пока СпрДляПоиска.НайтиПоРеквизиту("Идентификатор",Идентификатор,1)=1 Цикл
						Идентификатор=V7SysInfo.СоздатьGUID();
					КонецЦикла;
				    Если Спр.НайтиЭлемент(Т.Элемент)=1 Тогда
				        Спр.Идентификатор=Идентификатор;
						Спр.Записать();
						Сообщить("Исправлен дубль у элемента "+Спр.ТекущийЭлемент(),"i");
					КонецЕсли;
				КонецЕсли;
			Иначе
				ТекИдент=Идент; ТекЭл=Наим;
			КонецЕсли;
		КонецЦикла;
		Сообщить("Найдено дублей: "+Обработано,"i");
		Предупреждение("Поиск дублей завершен.");
		
	КонецЕсли;

КонецПроцедуры

//******************************************************************************
Процедура перОперацияВыбор()
	Форма.флТолькоПоиск.Доступность( ?(перОперация = 1, 0, 1) );
КонецПроцедуры //перОперацияВыбор()

//******************************************************************************
Процедура СписВидСпрВыбор()
	ВидСпр=СписВидСпр.ПолучитьЗначение(СписВидСпр.ТекущаяСтрока());
	Форма.ВыбЭлемент.НазначитьТип("Справочник."+ВидСпр);
	Форма.ВыбЭлемент.ВыборГруппы(1);
КонецПроцедуры // СписВидСпрВыбор()

//******************************************************************************
Процедура ПриОткрытии()
	//Заполнение списка справочников
	Для ИндСпр = 1 По Метаданные.Справочник() Цикл
		ЕстьИдентификатор = 0;
	    МетСпр = Метаданные.Справочник(ИндСпр);
		Для ИндРкв = 1 По МетСпр.Реквизит() Цикл
			Рекв = МетСпр.Реквизит(ИндРкв);
			Если ВРег(Рекв.Идентификатор) = "ИДЕНТИФИКАТОР" Тогда
				Если (Рекв.Тип = "Строка") И (Рекв.Длина >= 36) Тогда
				    Если (Рекв.Сортировка = 1) Тогда
						ЕстьИдентификатор = 1;
						Прервать;
					Иначе
						Сообщить("Справочник """ + МетСпр.Идентификатор
						 	+ """: у реквизита ""Идентивикатор"" не установлен признак ""Сортировка""!","!");
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если ЕстьИдентификатор = 1 Тогда
			СписВидСпр.ДобавитьЗначение(МетСпр.Идентификатор);
		КонецЕсли;
	КонецЦикла;
	
	Если СписВидСпр.РазмерСписка() = 0 Тогда
	    Сообщить("В конфигурации не найдено ни одного справочника с реквизитом ""Идентификатор"" (тип ""Строка"", длина >= 36 символов)!","!");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	СписВидСпр.ТекущаяСтрока(1);
	СписВидСпрВыбор();
	
	//Загрузка "v7plus.dll"
	//Если ЗагрузитьВнешнююКомпоненту(КаталогИБ() + "v7plus.dll") <> 1 Тогда
	//	Если ЗагрузитьВнешнююКомпоненту(КаталогИБ() + "ExtForms\" + "v7plus.dll") <> 1 Тогда		
	//		Если ЗагрузитьВнешнююКомпоненту(КаталогПрограммы() + "v7plus.dll") <> 1 Тогда
	//			Сообщить("Компонента v7plus.dll не найдена!","!");
	//			СтатусВозврата(0);
	//			Возврат;
	//		КонецЕсли;	
	//	КонецЕсли;
	//КонецЕсли;
	
	флТолькоПоиск = 1; 
	перОперация = 2; 
	перОперацияВыбор();
	
	V7SysInfo = СоздатьОбъект("AddIn.V7SysInfo");
	
	Форма.Заголовок("(V " + Версия + ")", 1);
КонецПроцедуры // ПриОткрытии()

Версия = "22.09.05/5"; //Версия обработки: Дата/Модификация
