Перем ККМ;
Перем Расшифровка;     
Перем Win2Dos[255];
//********************************************************************************
Функция WinToDos(Str) 
    k=1;
    стр="";
    Пока k<=StrLen(Str) Цикл
		kk=Mid(Str,k,1);
		kkk=Asc(kk);
		Если kkk>160 Тогда
   			стр=стр+Win2Dos[kkk];
   		Иначе
   			стр=стр+kk;
   		КонецЕсли;
   		k=k+1;
	конеццикла;
   	
	Возврат стр;
КонецФункции

Функция ОбработкаОшибок()
	Если ФискальныйРегистратор.ResultCode < 0 Тогда
		Сообщить(ФискальныйРегистратор.ResultDescription);
		Возврат 1;
	Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции
//********************************************************************************
Процедура Подключить()
	Если ККМ.РежимККМ=Перечисление.РежимыККМ.ФР Тогда
		РаботаСФискальнымРегистратором=0;
		Если ЗагрузитьВнешнююКомпоненту("FprnM1C.dll")<>0  Тогда
			ФискальныйРегистратор = СоздатьОбъект("AddIn.FprnM45");  // Создание объекта внешней компоненты
			Если ПустоеЗначение(ФискальныйРегистратор) = 0 Тогда
				Сообщить("ККМ Элвес Микро-Ф подключен");
			КонецЕсли;
			ФискальныйРегистратор.DeviceEnabled=1;
			Если ОбработкаОшибок() = 1 Тогда
			    Возврат;
			КонецЕсли;
			ФискальныйРегистратор.Mode = 1;
			ФискальныйРегистратор.Password = "1";
			ФискальныйРегистратор.SetMode();
			Если ОбработкаОшибок() = 1 Тогда
			    Возврат;
			КонецЕсли;
			РаботаСФискальнымРегистратором=1;
		Иначе
		 	//Сообщить("Не удалось загрузить драйвер для FP-600");	
		КонецЕсли;
	ИначеЕсли ККМ.РежимККМ=Перечисление.РежимыККМ.OffLine Тогда
		Сообщить("ВНИМАНИЕ!!! ККМ FP-600 не поддерживает режим Off-Line!");
	ИначеЕсли ККМ.РежимККМ=Перечисление.РежимыККМ.OnLine Тогда
		Сообщить("ВНИМАНИЕ!!! ККМ FP-600 не поддерживает режим On-Line!");
	КонецЕсли;
КонецПроцедуры
//********************************************************************************
Процедура Отключить()
	Если РаботаСФискальнымРегистратором=1 Тогда
        // переводим ккм в режим выбора
		ФискальныйРегистратор.Mode = 0;
		ФискальныйРегистратор.Password = "0";
		ФискальныйРегистратор.SetMode();
		Если ОбработкаОшибок() = 1 Тогда
		    Возврат;
		КонецЕсли;
		// отключаем драйвер
		ФискальныйРегистратор.DeviceEnabled=0;
		Если ОбработкаОшибок() = 0 Тогда
			// удалось отключить
			РаботаСФискальнымРегистратором=0;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

    
Процедура ПечататьЧек() Экспорт

	Док=Расшифровка.Получить("Документ");

	Если ПустоеЗначение(Док)=1 Тогда
	    Возврат;
	КонецЕсли;

	Если Док.КоличествоСтрок()=0 Тогда
		Предупреждение("Документ пустой!");
		Возврат;
	КонецЕсли;
	
	Если ПустоеЗначение(Док.Клиент)=1 Тогда
		Предупреждение("Вы должны выбрать Клиента!");
		Возврат;
	КонецЕсли;
	
	Док.ПриЗаписиПерепроводить(0);
	
	//Закомментировано Инсталлятором МОД:Док.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Док, );
	//Конец текста, вставленного Инсталлятором МОД

	


	Если Док.Выбран()=0 Тогда
		Предупреждение("Перед печатью чека документ должен быть сохранен!");
		Возврат;
	КонецЕсли;

	Деньги=Окр(Док.Итог("Сумма")+Док.Итог("НДС"),2);
	                     
	Чек=СоздатьОбъект("Текст");

	Чек.КодоваяСтраница(0);
	СуммаДок=Окр(Док.Итог("Сумма")+Док.Итог("НДС"),2);
	
	Если Док.ПризнакНакладной=Перечисление.ПризнПрихНакл.ВозвратОтПокупателя Тогда
		Чек.ДобавитьСтроку("STORNO");
	Иначе
		ВвестиЧисло(Деньги,"Введите сумму от клиента",11,2,300);
		Деньги=?(Деньги<СуммаДок,СуммаДок,Деньги);
		Чек.ДобавитьСтроку("FISCAL");
	КонецЕсли;
    
	
	//Если Константа.РозничныйКлиент=Док.Клиент Тогда
	//	НаимСтр="";
	//	Адрес="";
		КодНДС="";
	//Иначе
		НаимСтр=WinToDos(СокрЛП(Док.клиент.ПолноеНаименование));
		Адрес=WinToDos(СокрЛП(Док.клиент.ЮридическийАдрес));
		//КодНДС=WinToDos("ReЄ.Nr. "+СокрЛП(Док.Клиент.Рег_налог));
	//КонецЕсли;
	
	Чек.ДобавитьСтроку("TOP --------------------------------------");
    Если ПустаяСтрока(НаимСтр)=0 Тогда
		Чек.ДобавитьСтроку("TOP     "+НаимСтр);
    КонецЕсли;

    Если ПустаяСтрока(Адрес)=0 Тогда
		Чек.ДобавитьСтроку("TOP     "+Адрес);
    КонецЕсли;

	Если ПустаяСтрока(КодНДС)=0 Тогда
		Чек.ДобавитьСтроку("TOP     "+КодНДС);
    КонецЕсли;

	Чек.ДобавитьСтроку("TOP     PPR Nr. "+СокрЛП(Док.НомерДок));
	Чек.ДобавитьСтроку("TOP     Kasieris: "+WinToDos(СокрЛП(Док.Автор)));
	Чек.ДобавитьСтроку("TOP --------------------------------------");
 
	СумЧек=0;
	НСтр=0;
	
	Док.ВыбратьСтроки();
	Пока Док.ПолучитьСтроку()=1 Цикл
            
		НСтр=НСтр+1;
		ТоварКод=Док.Товар.Код;
		НаимТовар=WinToDos(СокрЛП(Док.Товар.Наименование));
		КолВо=Док.Количество*Док.Коэффициент;
		                                 
		Сум=Док.Сумма+Док.НДС;
		
		СумЧек=СумЧек+Сум;

		Если Док.КоличествоСтрок()=НСтр Тогда //Сравниваем последнюю строку с общей суммой
			Если СумЧек>СуммаДок Тогда
			    Сум=Сум-(СумЧек-СуммаДок);
			Иначе
				Сум=Сум+(СуммаДок-СумЧек);
			КонецЕсли;    
		КонецЕсли;		
		
		СумСтр=СтрЗаменить(СокрЛП(Формат(Сум,"Ч11.2")),".","");
		Чек.ДобавитьСтроку("DAT "+Шаблон("[ТоварКод] [НаимТовар] [КолВо] [Док.Единица] x [Окр(Док.ЦенаСНДС,2)] = єAє[СумСтр]"));
		
	КонецЦикла;


	Если Док.ПризнакНакладной=Перечисление.ПризнПрихНакл.ВозвратОтПокупателя Тогда
		Чек.ДобавитьСтроку(WinToDos(Шаблон("BOT       Atgriezt [Док.Валюта.Сокр_назв]: [Деньги #Ч11.2]")));
	Иначе     
		Чек.ДобавитьСтроку(WinToDos(Шаблон("BOT        Saґemts [Док.Валюта.Сокр_назв]: [Деньги #Ч11.2]")));
		Чек.ДобавитьСтроку(WinToDos(Шаблон("BOT         Izdots [Док.Валюта.Сокр_назв]: [Деньги-СуммаДок #Ч11.2]")));
	КонецЕсли;

	Если Док.Итог("Скидка")>0 Тогда
		Чек.ДобавитьСтроку(WinToDos(Шаблон("BOT        Atlaide [Док.Валюта.Сокр_назв]: [Док.Итог(""Скидка"") #Ч11.2]")));
	КонецЕсли;

	Попытка
//	  	ФС.УдалитьКаталог(КаталогИБ()+"\Check");
	Исключение
	КонецПопытки;
	
	ФайлН=Прав(СокрЛП(Док.НомерДок),8)+".txt";
	
	УтилПеч="FPRTDRV"+ККМ.ПортПодключения+".EXE";
	УтилСерв="FPRTSRV"+ККМ.ПортПодключения+".EXE";
	
//  ФС.УстТекКаталог(КаталогИБ()+"\Check\");
//	ФС.СоздатьКаталог(СокрЛП(ККМ.КаталогОбменаДанными));
  	ФС.УстТекКаталог(СокрЛП(ККМ.КаталогОбменаДанными));
                                                     
  	//Записать файл с чеком в текущую директорию
	
	//Закомментировано Инсталлятором МОД:Чек.Записать(СокрЛП(ФС.ТекКаталог())+"\"+ФайлН);
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Чек, СокрЛП(ФС.ТекКаталог())+"\"+ФайлН);
	//Конец текста, вставленного Инсталлятором МОД

	
 
	Чек=0;
 	
	ПовторПечати=1;
  	Пока ПовторПечати=1 Цикл

		ПовторПечати=0;
		ФС.УдалитьФайл("error.fp");

		//Проверка на утилиту печати Чека.
		Если ФС.СуществуетФайл(УтилПеч) = 1 Тогда
		Иначе     
		   Сигнал();
		   Предупреждение("Отсутствует утилита -" + УтилПеч + "- для печати Чека. Обратитесь к системному администратору!");
		   Возврат;
		КонецЕсли;                                        
                                 
		КомандаСистемы(УтилПеч+" "+ФайлН);
		
		//Проверка на ошибку печати кассового чека
		Если ФС.СуществуетФайл("error.fp") = 1 Тогда
			
		    Если Вопрос("Произошла ошибка печати Чека. Устраните ошибку и нажмите кнопку ""Повтор""!","Повтор+Отмена")<>"Повтор" Тогда
				Сообщить("Произошла ошибка при печати чека. Чек не пробит!");
				Возврат;
			КонецЕсли;
			
			ПовторПечати=1;
		Иначе
			ФС.УдалитьФайл(ФайлН);
		КонецЕсли;
		
		КомандаСистемы(УтилСерв+" CUSTDISP "+СуммаДок);
		//Пауза(5);
		КомандаСистемы(УтилСерв+" CUSTDISP ");

//		КомандаСистемы("FISPRINT.BAT "+ФайлН+" "+СуммаДок+" "+ККМ.ПортПодключения);
		

  	КонецЦикла;

	Док.ЧекПробитККМ=1;  
	Док.ККМ=ККМФискальногоРегистратора;
	
	Док.ПриЗаписиПерепроводить(0);
	
	//Закомментировано Инсталлятором МОД:Док.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Док, );
	//Конец текста, вставленного Инсталлятором МОД

	

	Если Док.Провести()=0 Тогда
		Счет=СоздатьОбъект("Документ.Счет");
		
		Кл=Док.Клиент;
		Кл.ИспользоватьДату(Док.ДатаДок);
		                                    
		глСоздатьНовыйОбъект(Счет);
		Счет.Клиент=Док.Клиент;
		Счет.СрокРезервирования=3;
		Счет.Валюта=Кл.ВалютаВзаиморасчетов;
		Счет.Глубина=Кл.Глубина;
		Счет.Дилер=Кл.Дилер;
		Счет.КлиентНаим=Кл.Полное_Назв;
		Счет.СкидкаНакл=Кл.КлиентСкидка;
		
		Счет.Автор=Пользователь;

		Счет.НомерДок=СокрЛП(Константа.ПрефиксНомераСчета)+Прав("00000"+Строка(Константа.ТекущийНомерСчета+1),5);
		Константа.ТекущийНомерСчета=Константа.ТекущийНомерСчета+1;

		Счет.ДатаДок=Док.ДатаДок;

		// Для базовой валюты курс всегда равен 1, поэтому отображаем курс Основной валюты
		Счет.Дата_Курса=Счет.ДатаДок;
		Счет.Курс=КурсДляВалюты(Счет.Валюта,Счет.Дата_Курса);
		Счет.Фирма=Константа.ОснФирма;
		Счет.Склад=Док.Склад;
		Счет.ТипЦен=Перечисление.ТипыРасхЦен.Розничные;
		Счет.СрокРезервирования=Константа.ОснСрокРезервирования;
		
		Док.ВыбратьСтроки();                          
		
		Пока Док.ПолучитьСтроку()=1 Цикл
			Счет.НоваяСтрока();
			Счет.Товар=Док.Товар;
			Счет.Количество=Док.Количество;
			
			Счет.ТовКод=Док.Товар.Код;
			Счет.Цена=Док.Цена;
			Счет.Единица=Док.Единица;
			Счет.Коэффициент=Док.Коэффициент;
			Счет.Сумма=Док.Цена*Док.Количество*Док.Коэффициент;
			Счет.НДС=Док.НДС;
			Счет.РознЦена=Док.РознЦена;
			Счет.Скидка=Док.Скидка;
		КонецЦикла;                        
		
//		Счет.ПоДокументу=Док.ТекущийДокумент();
		
		//Закомментировано Инсталлятором МОД:Счет.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Счет, );
	//Конец текста, вставленного Инсталлятором МОД

	


		Док.ПоСчету=Счет.ТекущийДокумент();
		
		//Закомментировано Инсталлятором МОД:Док.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Док, );
	//Конец текста, вставленного Инсталлятором МОД

	


		Счет.Провести();
		                  
		Сообщить("Для документа "+Док.ТекущийДокумент()+" был создан документ "+Счет.ТекущийДокумент()+"!");
		
	КонецЕсли;
	
	Док.Форма.Закрыть(0);
	
КонецПроцедуры


//********************************************************************************

Процедура ПечататьКопиюЧека()

	Док=Расшифровка.Получить("Документ");
	Если ПустоеЗначение(Док)=1 Тогда
	    Возврат;
	КонецЕсли;

	Деньги=Окр(Док.Итог("Сумма")+Док.Итог("НДС"),2);
	
	Чек=СоздатьОбъект("Текст");

	Чек.КодоваяСтраница(0);

	СуммаДок=Окр(Док.Итог("Сумма")+Док.Итог("НДС"),2);
	Деньги=?(Деньги<СуммаДок,СуммаДок,Деньги);

	Если Константа.РозничныйКлиент=Док.Клиент Тогда
		НаимСтр="";
		Адрес="";
		КодНДС="";
	Иначе
		НаимСтр=WinToDos(СокрЛП(Док.клиент.Полное_Назв));
		Адрес=WinToDos(СокрЛП(Док.клиент.Юр_Адрес));
		КодНДС=WinToDos("ReЄ.Nr. "+СокрЛП(Док.Клиент.ИНН));
	КонецЕсли;
	
	Чек.ДобавитьСтроку("NONFISCAL");

	Чек.ДобавитьСтроку(" --------------------------------------");

    Если ПустаяСтрока(НаимСтр)=0 Тогда
		Чек.ДобавитьСтроку("     "+НаимСтр);
    КонецЕсли;

    Если ПустаяСтрока(Адрес)=0 Тогда
		Чек.ДобавитьСтроку("     "+Адрес);
    КонецЕсли;

	Если ПустаяСтрока(КодНДС)=0 Тогда
		Чек.ДобавитьСтроку("     "+КодНДС);
    КонецЕсли;

	Чек.ДобавитьСтроку("     PPR Nr. "+СокрЛП(Док.НомерДок));
	Чек.ДобавитьСтроку("     Kasieris: "+WinToDos(СокрЛП(Док.Автор)));
	Чек.ДобавитьСтроку(" --------------------------------------");

	Док.ВыбратьСтроки();
	Пока Док.ПолучитьСтроку()=1 Цикл
                                
		ТоварКод=Док.Товар.Код;
		НаимТовар=WinToDos(СокрЛП(Док.Товар.Наименование));
		КолВо=Док.Количество*Док.Коэффициент;
		СумСтр=Формат(Док.Сумма+Док.НДС,"Ч11.2");
		Чек.ДобавитьСтроку(Шаблон("[ТоварКод] [НаимТовар] "));
		Чек.ДобавитьСтроку(Шаблон("[КолВо] [Док.Единица] x [Окр(Док.ЦенаСНДС,2)] = [СумСтр]"));
		
	КонецЦикла;


	Если Док.ПризнакНакладной=Перечисление.ПризнПрихНакл.ВозвратОтПокупателя Тогда
		Чек.ДобавитьСтроку(WinToDos(Шаблон("       Atgriezt [Док.Валюта.Сокр_назв]: [Деньги #Ч11.2]")));
	Иначе     
		Чек.ДобавитьСтроку(WinToDos(Шаблон("        Saґemts [Док.Валюта.Сокр_назв]: [Деньги #Ч11.2]")));
		Чек.ДобавитьСтроку(WinToDos(Шаблон("         Izdots [Док.Валюта.Сокр_назв]: [Деньги-СуммаДок #Ч11.2]")));
	КонецЕсли;

	Если Док.Итог("Скидка")>0 Тогда
		Чек.ДобавитьСтроку(WinToDos(Шаблон("        Atlaide [Док.Валюта.Сокр_назв]: [Док.Итог(""Скидка"") #Ч11.2]")));
	КонецЕсли;

	ФайлНК=Прав(СокрЛП(Док.НомерДок),7)+"C.txt";
	
  	
  	//Закомментировано Инсталлятором МОД:Чек.Записать(КаталогИБ()+"\Check\"+ФайлНК);
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Чек, КаталогИБ()+"\Check\"+ФайлНК);
	//Конец текста, вставленного Инсталлятором МОД

	
         
  	
  	ФС.УстТекКаталог(КаталогИБ()+"\Check\");

  	КомандаСистемы("FISPRINT.BAT "+ФайлНК+" "+СуммаДок);

КонецПроцедуры

//******************************************************************
Процедура ЗагрузкаТоваров()
	Сообщить("ККМ Элвес Микро-Ф не поддерживает загрузку товаров" + РазделительСтрок +
	         "в режиме фискального регистратора!");
КонецПроцедуры

//********************************************************************************

Процедура ЗакрытиеСмены()
	Если ККМ.РежимККМ=Перечисление.РежимыККМ.ФР Тогда

		ФискальныйРегистратор.Mode = 3;
		ФискальныйРегистратор.Password = "30";
		ФискальныйРегистратор.SetMode();
		Если ОбработкаОшибок() = 1 Тогда
			Возврат;
		КонецЕсли;

		ФискальныйРегистратор.ТипОтчета = 1;
		ФискальныйРегистратор.Отчет();
		Если ОбработкаОшибок() = 1 Тогда
			Возврат;
		КонецЕсли;
		
		Сообщить("ККМ Элвес Микро-Ф отработала печать Z-отчета");

		ФискальныйРегистратор.Mode = 1;
		ФискальныйРегистратор.Password = "1";
		ФискальныйРегистратор.SetMode();
		Если ОбработкаОшибок() = 1 Тогда
		    Возврат;
		КонецЕсли;
		
	ИначеЕсли ККМ.РежимККМ=Перечисление.РежимыККМ.OffLine Тогда
		Сообщить("ККМ Элвес Микро-Ф в режиме OffLine" + РазделительСТрок +
		               "не поддерживает печать Z-отчета");
	ИначеЕсли ККМ.РежимККМ=Перечисление.РежимыККМ.OnLine Тогда
		Сообщить("ККМ Элвес Микро-Ф в режиме OnLine" + РазделительСТрок +
		               "не поддерживает печать Z-отчета");
	КонецЕсли;
КонецПроцедуры
//********************************************************************************
Процедура ПриОткрытии()
	Если глФлагРасшифровки=1 Тогда
		Расшифровка=глРасшифровка;
		Если Расшифровка.РазмерСписка()<>0 Тогда
			ККМ=Расшифровка.Получить("ККМ");
			Если ПустоеЗначение(ККМ)=1 Тогда
				СтатусВозврата(0);
			    Возврат;
			КонецЕсли;
			Если НЕ(ККМ.ТипККМ=Перечисление.ТипыККМ.FP600) Тогда
				Сообщить("Передан неверный тип ККМ");
				СтатусВозврата(0);
			    Возврат;
			КонецЕсли;
			Процесс=Расшифровка.Получить("Процесс");
			Если Процесс="Подключить" Тогда
				Подключить();
			ИначеЕсли Процесс="Отключить" Тогда
				Отключить();
			ИначеЕсли Процесс="ПечататьЧек" Тогда
				ПечататьЧек();
			ИначеЕсли Процесс="ПечататьКопиюЧека" Тогда
				ПечататьКопиюЧека();
			Иначе
				Сообщить("Для обработки Фискального регистратора FP-600 передан неизвестный процесс");
			КонецЕсли;
			СтатусВозврата(0);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
