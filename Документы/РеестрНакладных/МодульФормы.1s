Перем Срок;
Перем ДатаНачала;
Перем Валюта_Прежн;
Перем Курс_Прежн;


Функция ОснованиеДок()
	Возврат ДокОсн.НомерДок;
	  
//	Если (Докум.Вид()="РасходнаяНакладная") ИЛИ
//		 (Докум.Вид()="РасходнаяНакладнаяНал") Тогда
//		 Возврат " Nr. "+Докум.ДокументОснование.НомерДок;
////		 Возврат ПеревестиНаГосЯзык(Докум.ДокументОснование.Вид())+" Nr. "+Докум.ДокументОснование.НомерДок;
//	КонецЕсли;
КонецФункции   

Процедура СортОснДок()

	ТЗ=СоздатьОбъект("ТаблицаЗначений");

	ВыгрузитьТабличнуюЧасть(ТЗ,);
	ТЗ.НоваяКолонка("ОснНомДок","Строка",12);     
	                 
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку()=1 Цикл
		ТЗ.ОснНомДок=?(ТЗ.ДокОсн.Выбран()=1,ТЗ.ДокОсн.НомерДок,"");
	КонецЦикла;
	
	ТЗ.Сортировать("ОснНомДок");
	                            
	ЗагрузитьТабличнуюЧасть(ТЗ);
	
КонецПроцедуры

//------------------------
Процедура ПриОткрытии()
	ПроверкаРазрешенияРедактирования(Контекст);
КонецПроцедуры
//------------------------

Процедура семЗаполнить( Дополнить = 0 )
	
	ДатаНач=НачМесяца(ДатаДок);
	ДатаКон=КонМесяца(ДатаНач);
	
	ТекстЗапроса="
	|			  SELECT РасходнаяНакладная.IDDOC [Ссылка $Документ]
	|					, $ВидДокумента.РасходнаяНакладная [Ссылка_вид $ВидДокумента]
	|					, $РасходнаяНакладная.Склад [Склад $Справочник.МестаХранения]
	|					, $РасходнаяНакладная.Валюта [Валюта $Справочник.Валюты]
	|					, $РасходнаяНакладная.ВсегоСуммаШ ВсегоСуммаШ
	|					, $РасходнаяНакладная.ВсегоНДСШ ВсегоНДСШ
	|					, $РасходнаяНакладная.СтавкаНДС [СтавкаНДС $Перечисление.ЗначенияНДС] 
	|			  FROM $Документ.РасходнаяНакладная AS РасходнаяНакладная (NOLOCK)
	|		  	  INNER JOIN _1SJOURN AS Журнал (NOLOCK) ON РасходнаяНакладная.IDDOC = Журнал.IDDOC
	|			  WHERE ((Журнал.CLOSED & 1) = 1)
	|					AND (Журнал.IDDOCDEF = $ВидДокумента.РасходнаяНакладная)
	|					AND Журнал.DATE_TIME_IDDOC BETWEEN :ДатаНач AND :ДатаКон~
	|					AND $РасходнаяНакладная.Склад IN (SELECT Val FROM #Склады)
	|					AND $РасходнаяНакладная.Клиент = :ВыбКлиент

	|			  UNION ALL
	|			  SELECT МарочныйОтчет.IDDOC [Ссылка $Документ]
	|					, $ВидДокумента.МарочныйОтчет [Ссылка_вид $ВидДокумента]
	|					, $МарочныйОтчет.Склад [Склад $Справочник.МестаХранения]
	|					, $МарочныйОтчет.Валюта [Валюта $Справочник.Валюты]
	|					, $МарочныйОтчет.ВсегоСуммаШ ВсегоСуммаШ
	|					, $МарочныйОтчет.ВсегоНДСШ ВсегоНДСШ
	|					, :СтавкаНДС [СтавкаНДС $Перечисление.ЗначенияНДС] 
	|			  FROM $Документ.МарочныйОтчет AS МарочныйОтчет (NOLOCK)
	|		  	  INNER JOIN _1SJOURN AS Журнал2 (NOLOCK) ON МарочныйОтчет.IDDOC = Журнал2.IDDOC
	|			  WHERE ((Журнал2.CLOSED & 1) = 1)
	|					AND (Журнал2.IDDOCDEF = $ВидДокумента.МарочныйОтчет)
	|					AND Журнал2.DATE_TIME_IDDOC BETWEEN :ДатаНач AND :ДатаКон~
	|					AND $МарочныйОтчет.Склад IN (SELECT Val FROM #Склады)
	|					AND $МарочныйОтчет.Клиент = :ВыбКлиент
	|";

	Запрос = СоздатьОбъект( "ODBCRecordSet" );
	
	Запрос.УстановитьТекстовыйПараметр("ДатаНач",ДатаНач);
	Запрос.УстановитьТекстовыйПараметр("ДатаКон",ДатаКон);
	Запрос.УстановитьТекстовыйПараметр("ВыбКлиент",Клиент);
	Запрос.УстановитьТекстовыйПараметр("СтавкаНДС",Константа.ОсновнаяСтавкаНДС);
	Запрос.УложитьСписокОбъектов(СкладОтбора,"#Склады","МестаХранения");

//	Запрос.Отладка(1);
	табл=Запрос.ВыполнитьИнструкцию(ТекстЗапроса);
	
	УдалитьСтроки();
	табл.Сортировать("Ссылка",1);
	табл.ВыбратьСтроки();
	Пока табл.ПолучитьСтроку()=1 Цикл
		НоваяСтрока();
		НомДок		= Табл.Ссылка.НомерДок;
		Склад		= Табл.Склад;
		Докум		= Табл.Ссылка;
		СуммаДокум 	= табл.ВсегоСуммаШ;
		СуммаНДС 	= табл.ВсегоНДСШ;
		СтавкаНДС	= табл.СтавкаНДС;
	КонецЦикла;
КонецПроцедуры


//----------------------------------------------- 
Процедура ДополнитьДокумент();
	Если КоличествоСтрок()=0 Тогда
		Сообщить("Документ пустой.Выполнить сначала режим ''Заполнить документ''!");
		Возврат;
	КонецЕсли;  
	
	Доки=СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(Доки,"Докум");

	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл                                       
		
	    Если (Докум.ДатаДок<>ДатаОтчета) ИЛИ (Докум.Проведен()=0) ИЛИ (Докум.Выбран()=0) Тогда
	      	УдалитьСтроку();
		  	ВыбратьСтроки();
		  	Продолжить;
	    КонецЕсли;
		
		Если СкладОтбора.Выбран()=0 Тогда
		ИначеЕсли СкладОтбора.ЭтоГруппа()=1 Тогда
			Если Докум.Склад.ПринадлежитГруппе(СкладОтбора)=0 Тогда
		      	УдалитьСтроку();
			  	ВыбратьСтроки();
			  	Продолжить;
			КонецЕсли;
		Иначе
			Если Докум.Склад<>СкладОтбора Тогда
		      	УдалитьСтроку();
			  	ВыбратьСтроки();
			  	Продолжить;
			КонецЕсли;
		КонецЕсли;	
		
	КонецЦикла;
	
	Док=СоздатьОбъект("Документ");
	Док.УстановитьФильтр(1,0);
	Док.ВыбратьДокументы(ДатаОтчета,ДатаОтчета);
	Пока Док.ПолучитьДокумент() = 1 Цикл
		СуммаДок="";
		Стр=Док.Вид();   
		Если (Стр="РасходнаяНакладная") ИЛИ (Стр="РасходнаяНакладнаяНал") ИЛИ (Стр="РасходнаяРеализатора") Тогда
			
			Если СкладОтбора.Выбран()=0 Тогда
			ИначеЕсли СкладОтбора.ЭтоГруппа()=1 Тогда
				Если Док.Склад.ПринадлежитГруппе(СкладОтбора)=0 Тогда
				    Продолжить;
				КонецЕсли;
			Иначе
				Если Док.Склад<>СкладОтбора Тогда
				    Продолжить;
				КонецЕсли;
			КонецЕсли;	
			                                 
			Если (Док.ПризнакНакладной=Перечисление.ПризнРасхНакл.Продажа) 
			 ИЛИ (Док.ПризнакНакладной=Перечисление.ПризнРасхНакл.ВозвратПоставщику) 
			 ИЛИ (Док.ПризнакНакладной=Перечисление.ПризнРасхНакл.Переработка) Тогда
			Иначе
			    Продолжить;
			КонецЕсли;
			
			Если Док.Проведен()=0 Тогда
				Если Док.ПометкаУдаления()=1 Тогда
				// Проверим аннулированные документы ,если они есть в документе,удалим их  
					ВыбратьСтроки();
					Пока ПолучитьСтроку()>0 Цикл
						Если Док.ТекущийДокумент()=Докум Тогда
							УдалитьСтроку();
							Прервать;
						КонецЕсли; 
					КонецЦикла;
				КонецЕсли;
			Иначе
				// Проведенные документы
				// Проверим,записан ли уже этот документ
				ВыбратьСтроки();
				ФлНайден=0;
				Пока ПолучитьСтроку()>0 Цикл
					Если Док.ТекущийДокумент()=Докум Тогда
						СуммаДокум=Строка(Окр(Докум.Итог("Сумма")+Докум.Итог("НДС"),2))+" "+Докум.Валюта;
						НомДок=Докум.НомерДок;
						Склад=Док.Склад;
						Клиент=Док.Клиент;
						ФлНайден=1;
						Прервать;
					КонецЕсли; 
				КонецЦикла;

				Если ФлНайден=0 Тогда
					НоваяСтрока();
					НомДок=Док.НомерДок;
					Докум=Док.ТекущийДокумент();
					СуммаДокум=Строка(Окр(Док.Итог("Сумма")+Док.Итог("НДС"),2))+" "+Док.Валюта;
                	Склад=Док.Склад;      
					Клиент=Док.Клиент;
//					Экспедитор=Док.Экспедитор;
                //	ВремяОтгрузки=Док.ВремяОтгрузки;
				КонецЕсли;				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//-----------------------------------------------
Процедура ВводНового(флКопирования);
	
	ЗаполнитьШапку(Контекст); //заполняем обязательные реквизиты в любом случае
	Если флКопирования = 0 Тогда
		Валюта = Константа.ОсновнаяВалютаПродажи;
	КонецЕсли;
	ДатаДок=РабочаяДата();      

	Дата_Курса = ДатаДок;
	Курс = КурсДляВалюты( Валюта, Дата_Курса );
	Валюта_Прежн = Валюта;
	Курс_Прежн = Курс;
	
КонецПроцедуры

//-----------------------------------------------
Процедура ВводНаОсновании(ДокОснование)
	Предупреждение("Реестр Заказов нельзя вводить на основании других документов!");
	СтатусВозврата(0);
КонецПроцедуры
//-----------------------------------------------
Процедура Печать(Режим)
	Фирма.ИспользоватьДату(ДатаДок);      
	Таб=СоздатьОбъект("Таблица");
	Таб.ВывестиСекцию("Шапка");
	ВыбратьСтроки();  
	Ном=0; 
	Пока ПолучитьСтроку() = 1 Цикл  
		Ном=Ном+1;
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;

	ПечОплатаЕвро="";
	Если Валюта=Рубли Тогда
		ПечОплатаЕвро=Шаблон("Kopў apmaksai  [Пересчет(Итог(""СуммаДокум""),Валюта,ДатаДок,Евро,ДатаДок) #N12.2] [Евро]");		
	КонецЕсли;

	Таб.ВывестиСекцию("Подвал");
	Таб.Опции(0,0,0,0,ПарСтрДок);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);

	Таб.Показать("Печать сводного счета","");
КонецПроцедуры 

//-----------------------------------------------    
Процедура ПоказатьСумму()
	СуммаДокум=Строка(Окр(Докум.Итог("Сумма")+Докум.Итог("НДС"),2))+" "+Докум.Валюта.Сокр_Назв;
	Отметка=" ";
    Клиент=Докум.Клиент;
	Склад=Докум.Склад;
КонецПроцедуры
//-------------------------------------------------   

Процедура ПриОкончанииРедактированияСтроки()
                          
	Если Форма.ТекущаяКолонка()="Экспедитор" Тогда
		Если Докум.Вид()="РасходнаяНакладнаяНал" Тогда
			ККМ=0;			
			Если ПустоеЗначение(Экспедитор)=0 Тогда
		        ККМ=Экспедитор.Касса;
			КонецЕсли;
			
	//		Если Докум.ККМ<>ККМ Тогда
				Накл=СоздатьОбъект("Документ.РасходнаяНакладнаяНал");
				Накл.НайтиДокумент(Докум);
				Если Накл.Выбран()=1 Тогда
				    Накл.ККМ=ККМ;
					Накл.Записать();
					Если Накл.Провести()=0 Тогда
						СтатусВозврата(0);
					КонецЕсли;
				КонецЕсли;          
				
				
	//		КонецЕсли;
		
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	Если семМожноЗаписать( Контекст ) = 0 Тогда Возврат; КонецЕсли;
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД

Процедура ПриНачалеРедактированияСтроки()
	Если Форма.ТекущаяКолонка()="Открыть" Тогда
		Если Докум.Выбран()=1 Тогда
			ОткрытьФорму(Докум);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры


Форма.СкладОтбора.ВыборГруппы(1);
//--------------------------------------
