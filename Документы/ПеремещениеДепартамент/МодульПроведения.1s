Перем регОстатки,  регРезервы;
Перем кРазрешитьОтрОстатки, кРазрешитьПродРезерв;

Функция семПроверкаКоличества( пТовар, пКол )
	// проверка остатка товара
	Если кРазрешитьОтрОстатки = Да Тогда Возврат 1; КонецЕсли;
	ОстатокТовара = регОстатки.СводныйОстаток( пТовар, Склад,, "ОстатокТовара" );
	Если ( ОстатокТовара < пКол ) Тогда
		промБазЕд = пТовар.БазоваяЕдиницаИзмерения;
		Сообщить(Шаблон("Остаток товара [ОстатокТовара] [промБазЕд]. Требуемое количество [пКол] [промБазЕд]."),"I");
		НеПроводить(Контекст,Шаблон("Не хватает [пКол-ОстатокТовара] [промБазЕд]."));
		Возврат 0;
	КонецЕсли;
			
	// проверка свободного остатка товара
	Если кРазрешитьПродРезерв = Да Тогда Возврат 1; КонецЕсли;
	Резерв = регРезервы.СводныйОстаток( пТовар,, "РезервТовара" );
	РезервПоСчету = 0;
	Если ДокументОснование.Выбран() = 1 Тогда
		Если ДокументОснование.Проведен() = 1 Тогда
			Если ДокументОснование.Вид() = "Счет" Тогда
				РезервПоСчету=регРезервы.Остаток(пТовар,ДокументОснование,"РезервТовара");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	ПолныйОстаток = регОстатки.СводныйОстаток(пТовар,,,"ОстатокТовара");  
	Резерв = Макс( 0, Резерв - РезервПоСчету );
	СвободныйРесурс = Макс( 0, ПолныйОстаток - Резерв );
	Если СвободныйРесурс < пКол Тогда
		промБазЕд = пТовар.БазоваяЕдиницаИзмерения;
		Сообщить(Шаблон("Нет нужного свободного количества товара ([пТовар.Код]) [пТовар.Наименование]."),"!");
		Сообщить(Шаблон("Всего осталось [ПолныйОстаток] [промБазЕд]. В резерве [Резерв+РезервПоСчету] [промБазЕд] из них по счету [РезервПоСчету] [промБазЕд]."),"I");
		Сообщить(Шаблон("Свободный остаток [СвободныйРесурс] [промБазЕд]. Требуемое количество [пКол] [промБазЕд]."),"I");
		НеПроводить(Контекст,Шаблон("Не хватает [пКол-СвободныйРесурс] [промБазЕд]."));
		Возврат 0;
	КонецЕсли;
        Возврат 1;
КонецФункции

//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаПроведения() Далее
//Конец текста, вставленного Инсталлятором МОД
Процедура стар_ОбработкаПроведения()
//Закомментировано Инсталлятором МОД:Процедура ОбработкаПроведения()
	
	кРазрешитьОтрОстатки = глРазрОтрицОстатки;
	кРазрешитьПродРезерв = семРазрешитьПродаватьРезерв( Контекст );

	Если семМожноПровести( Контекст ) = 0 Тогда Возврат; КонецЕсли;

	Если (ДатаДок>ТекущаяДата()) И (Пользователь.РазрПровБудущейДатой=0) Тогда
		НеПроводить(Контекст,"Нельзя проводить документ будущей датой!");
		Возврат;
	КонецЕсли;
	
	
	Если Склад.Выбран()=0 Тогда
		НеПроводить(Контекст,"Не указан склад откуда производится перемещение!");
		Возврат;
	КонецЕсли;               
	                
	Если глПроверкаСкладаПоПользователю(Контекст,Склад)=0 Тогда
		НеПроводить(Контекст,"Нельзя использовать данный склад!");
		Возврат;
	КонецЕсли;
	
	Если Склад.ДляВыгрузки=0 Тогда
		НеВыгружать=1;
	Иначе
		НеВыгружать=0;
	КонецЕсли;
	              
	Если ПустоеЗначение(ПризнакПеремещения)=1 Тогда
		НеПроводить(Контекст,"Не указан признак перемещения!");
		Возврат;
	КонецЕсли;

	Если ПризнакПеремещения = Перечисление.ПризнакиПеремещения.Отправитель Тогда
		Спр=СоздатьОбъект("Справочник.МестаХраненияДепартаментов");
		Спр.НайтиПоКоду(СкладОтправитель.Код);
		Если Спр.Выбран()=1 Тогда
			СкладДепартамента=Спр.ТекущийЭлемент();
		КонецЕсли;
	КонецЕсли;
	
	
	Если (СкладДепартамента.Выбран()=0) Тогда
		НеПроводить(Контекст,"Не указан Департамент, которому производится перемещение!");
		Возврат;
	КонецЕсли;  
	
	
	Если (ГрупповаяОбработка()=0) Тогда
		Если (Агент.Выбран()=0) Тогда
			НеПроводить(Контекст,"Не выбран агент!");
			Возврат;
		КонецЕсли;  
	КонецЕсли;
	
	       
	ОтменитьЗапись = 0;
	СпрПартии 	   = СоздатьОбъект("Справочник.Партии");
	// а в эту ТЗ запомним партии, чтобы в транзакции не затрагивать наш док
	// после записи всех партий - пропишем их в документ всех сразу
	ТЗПартии = СоздатьОбъект("ТаблицаЗначений");
	ТЗПартии.НоваяКолонка("НомерСтрокиДок");
	ТЗПартии.НоваяКолонка("Партия");
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если (Партия.Выбран() = 0) и (Товар.Выбран() = 1) Тогда
			СпрПартии.ИспользоватьВладельца(Товар);
			Если СпрПартии.НайтиПоРеквизиту("СрокРеализации",СрокРеализ,0)=0 Тогда
				глСоздатьНовыйОбъект(СпрПартии); 
			КонецЕсли;
			Попытка
				//Закомментировано Инсталлятором МОД:СпрПартии.Записать();
				//Начало текста, вставленного Инсталлятором МОД
				СпрПартии.Записать();
				//Конец текста, вставленного Инсталлятором МОД
			Исключение  
				Сообщить("Строка документа: " + НомерСтроки + " Ошибка: " + ОписаниеОшибки());
				ОтменитьЗапись = 1;
				Прервать;
			КонецПопытки;
			ТЗПартии.НоваяСтрока();
			ТЗПартии.НомерСтрокиДок = НомерСтроки;
			ТЗПартии.Партия = СпрПартии.ТекущийЭлемент();
		КонецЕсли;
	КонецЦикла; 
	
	Если ОтменитьЗапись=0 Тогда  
		// запишем созданные партии
		// теперь занесем партии в спецификацию нашего документа
		ТЗПартии.ВыбратьСтроки();
		Пока ТЗПартии.ПолучитьСтроку()=1 Цикл
			ПолучитьСтрокуПоНомеру(ТЗПартии.НомерСтрокиДок);
			Партия = ТЗПартии.Партия;
		КонецЦикла;
	КонецЕсли;
	
	// сем \\
	ЕстьЗаявка = 0;
	ЗакрыватьРезерв=0;
	Если ДокументОснование.Выбран() = 1 Тогда
		Если ДокументОснование.Вид() = "Счет" Тогда
			Если ДокументОснование.Проведен()=1 Тогда
				Если (Константа.НовыйМеханизмПретензий.Получить(ДатаДок)=Да) Тогда 
					//закрываем резерв только в случае, если заявка оформлена на пополнение склада и конечным документом является документ перемещения
					ЗакрыватьРезерв = 1;
				ИначеЕсли (Константа.НовыйМеханизмПретензий.Получить(ДатаДок)<>Да) Тогда //по старой системе закрываем резервы по заявке в любом случае
					ЗакрыватьРезерв = 1;
				КонецЕсли;
				ЕстьЗаявка = 1;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	// сем //

	
	// по Регистру ОстаткиТоваров (здесь проходят учет все типы накладных )
	        
	Регистры=СоздатьОбъект("Регистры");
	регОстатки=Регистры.ОстаткиТоваров;
	// сем \\
	//Если ЕстьЗаявка = 1 Тогда
		регРезервы = Регистры.РезервыТоваров; 
		//регРезервы.УстановитьЗначениеФильтра( "ПоСчету", ДокументОснование, 1 );
		регСпецЗаказы = Регистры.СпецЗаказы;
		регСпецЗаказы.УстановитьЗначениеФильтра( "ПоСчету", ДокументОснование, 1 );
		
		РегКомпл 	= Регистры.КомплектацияЗаявок;
		РегКомпл.УстановитьЗначениеФильтра( "ПоСчету", ДокументОснование, 1 );
		
	//КонецЕсли;
	// сем //
	
	Если ИтогиАктуальны()=0 Тогда
		Регистры.Актуальность(1);
		ТоварЛист=СоздатьОбъект("СписокЗначений");
		ВыгрузитьТабличнуюЧасть(ТоварЛист,"Товар");
		регОстатки.УстановитьЗначениеФильтра("Товар",ТоварЛист,2);
		регОстатки.УстановитьЗначениеФильтра("Склад",Склад,1);
		регОстатки.ВременныйРасчет();
		// сем \\
		Если ЕстьЗаявка = 1 Тогда
			регРезервы.ВременныйРасчет();
			регСпецЗаказы.ВременныйРасчет();
			РегКомпл.ВременныйРасчет();
		КонецЕсли;
		// сем //
		Регистры.РассчитатьРегистрыНа(ТекущийДокумент());
	КонецЕсли;
	
	СебестоимостьШ = 0;
	
	Если ПризнакПеремещения=Перечисление.ПризнакиПеремещения.Получатель Тогда 
		ВыбратьСтроки();
		Пока ПолучитьСтроку() > 0 Цикл
			Если Товар.Выбран() = 0 Тогда
				Сообщить(Шаблон( "В документе [Вид()] Nr. [НомерДок] от [ДатаДок] Не указан товар, который перемещается!" ));
				Продолжить;
			КонецЕсли;
			Если Товар.ВидТовара=Перечисление.ВидыТоваров.Услуга Тогда
				// услуги здесь в этих регистрах не учитываем
				Продолжить;
			КонецЕсли;
			
			Товар.ИспользоватьДату(ДатаДок);
			
			ОстатокТовара=0;
			БазСто=0;
			ВалСто=0;
			
			Если семПроверкаКоличества( Товар, Количество * Коэффициент ) = 0 Тогда
				Возврат;
			КонецЕсли;
			
			Регистр.ОстаткиТоваров.ПривязыватьСтроку(НомерСтроки);
			Регистр.ОстаткиТоваров.Фирма	= Фирма;
			Регистр.ОстаткиТоваров.ОстатокТовара=Количество * Коэффициент;
			Регистр.ОстаткиТоваров.Склад=Склад;
			Регистр.ОстаткиТоваров.Товар=Товар;
			
			Регистр.ОстаткиТоваров.ФлагУчета=7;  //Внешнее перемещение   - Расход
			Регистр.ОстаткиТоваров.ДвижениеРасходВыполнить();   
			
		КонецЦикла; 
		
	Иначе //ПризнакПеремещения=Перечисление.ПризнакПеремещения.Отправитель
		ВыбратьСтроки();
		Пока  ПолучитьСтроку()>0 Цикл
			
			Если Товар.Выбран()=0 Тогда
				Сообщить(Шаблон( "В документе [Вид()] Nr. [НомерДок] от [ДатаДок] Не указан товар, который перемещается!" ));
				Продолжить;
			КонецЕсли;
			
			Если Товар.ВидТовара=Перечисление.ВидыТоваров.Услуга Тогда
				// услуги здесь в этих регистрах не учитываем
				Продолжить;
			КонецЕсли;
			
			Товар.ИспользоватьДату(ДатаДок);
			
			ОбщееКоличество=Количество*Коэффициент;
			регОстатки.СводныеОстатки(Товар,Склад);
			
			// Для приходной накладной
			СуммаВал=Себестоимость;
			СуммаРуб=Себестоимость;
			// Обновим закупочную цену в справочнике Товары
			Если регОстатки.ОстатокТовара>=0 Тогда
				ТекКол=регОстатки.ОстатокТовара+ Количество* Коэффициент;
				ТекСум=Сумма;        //регОстатки.БазоваяСтоимость+ 
				ТекЦена=ТекСум/ТекКол; // В LS
				
			КонецЕсли;
			               
			Регистр.ОстаткиТоваров.ПривязыватьСтроку(НомерСтроки);
			Регистр.ОстаткиТоваров.Фирма	= Фирма;
			Регистр.ОстаткиТоваров.Склад=Склад;
			Регистр.ОстаткиТоваров.ОстатокТовара=ОбщееКоличество;
			Регистр.ОстаткиТоваров.Товар=Товар;
			Регистр.ОстаткиТоваров.ФлагУчета=8;   //Внешнее перемещение приход
			Регистр.ОстаткиТоваров.ДвижениеПриходВыполнить();
//			СебестоимостьШ = СебестоимостьШ + Регистр.ОстаткиТоваров.БазоваяСтоимость;
			
		КонецЦикла;
	КонецЕсли;
	         
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// по Регистру ПартииТоваров
	Если ТипУчета<Фин Тогда
		Если ПогашениеПартииТоваров(Контекст,"Упр") = 1 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если ТипУчета>Упр Тогда
		Если ПогашениеПартииТоваров(Контекст,"Фин") = 1 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	//Для внутренних перемещений не делать движения по регистру
	Если (СкладДепартамента.Клиент.Выбран()=1)  Тогда
		глОборотыТоваров(Контекст); 
	КонецЕсли;
			
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	Если глЗаполнитьРеквизитыДокументаШ(Контекст)=0 Тогда
	    Сообщить("Внимание: Не удалось заполнить реквизиты Ш. Обязательно обратитесь к админстратору!!!","!");
	КонецЕсли;
	
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// продажа товара, принятого на реализацию
	РегПартДляРеализации = СоздатьОбъект("Регистр.ПартииТоваров");
	РегПартДляРеализации.ВыбратьДвиженияДокумента(ТекущийДокумент());
	Пока РегПартДляРеализации.ПолучитьДвижение() = 1 Цикл
	    Если не(РегПартДляРеализации.Статус = Принятый) 
		или (РегПартДляРеализации.Приход = 1) Тогда
	        Продолжить;
	    КонецЕсли;
		Если ПогашениеДолгаПоКредиту(Контекст,РегПартДляРеализации.ПрихДокумент,РегПартДляРеализации.Стоимость+РегПартДляРеализации.НДС,РегПартДляРеализации.Товар.СтавкаНДС,"Упр",Строка(РегПартДляРеализации.Товар.ВидТовара)) = 1 Тогда
			Возврат;
		КонецЕсли;
		
		Регистр.ПродажаВзятогоНаРеализацию.ПривязыватьСтроку(РегПартДляРеализации.НомерСтроки());
		ДокПриходнаяРеализатора = РегПартДляРеализации.ПрихДокумент;
		Регистр.ПродажаВзятогоНаРеализацию.Фирма  = РегПартДляРеализации.Фирма;
		Регистр.ПродажаВзятогоНаРеализацию.Клиент = ДокПриходнаяРеализатора.Клиент;
		Регистр.ПродажаВзятогоНаРеализацию.Товар  = РегПартДляРеализации.Товар;
		Регистр.ПродажаВзятогоНаРеализацию.ОстатокТовара = РегПартДляРеализации.ОстатокТовара;
		Регистр.ПродажаВзятогоНаРеализацию.ПродСтоимость = РегПартДляРеализации.Стоимость;
		Регистр.ПродажаВзятогоНаРеализацию.ДвижениеПриходВыполнить();
	КонецЦикла;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// сем \\
	Если ( ЗакрыватьРезерв = 1 ) и ( ПризнакПеремещения = Перечисление.ПризнакиПеремещения.Получатель ) Тогда
		глПогашениеПоРезервам(Контекст,ДокументОснование,регРезервы,регСпецЗаказы,РегКомпл);
		глДвиженияПоКомплектации(Контекст);
	КонецЕсли;
	// сем //
КонецПроцедуры
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаПроведения()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	Если ПроведениеМОД(Контекст)=1 Тогда
	    Возврат;
	КонецЕсли;
	стар_ОбработкаПроведения();
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаУдаленияПроведения()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	Если ПроведениеПоАлгоритмуМОД=1 Тогда
	    Возврат;
	КонецЕсли;
	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	ПриОтменеПроведенияДокумента(ТекущийДокумент());
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД

