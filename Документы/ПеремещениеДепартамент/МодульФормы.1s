Перем Валюта_Прежн;
Перем Курс_Прежн;
Перем Режим;

Процедура УстЦены() Далее

Процедура РассчСумму(СебесСумма=0) Далее

//------------------------
Procedure Choice() //Stas
	Режим="ПоискТоваров";
	ОткрытьПодбор("Номенклатура","ДляПодбора");
	УстановитьЗначениеВПодборе("Склад",Константа.ОсновнойСклад);

endProcedure   



Процедура семЗаполнитьПоСпискуЗаявок(сп)
	Если сп.РазмерСписка() = 0 Тогда 
		Сообщить( "Нет данных для заполнения." ); Возврат;
	Иначе
		промЗаявка = сп.ПолучитьЗначение( 1 );
	КонецЕсли;
	
	Автор = Пользователь;
	Фирма = Константа.ОсновнаяФирма;
	IDD = ПолучитьУникальныйIDD();
	ТипУчета = промЗаявка.ТипУчета;
	ФинУчет = ?( ТипУчета > Упр, 1, 0 );
	
	ДатаДок = РабочаяДата();
	ДатаПоставки = ДатаДок;
	
	Склад=промЗаявка.Склад;
	
    КатегорияЦены=промЗаявка.КатегорияЦены;
	
	регРезервы = СоздатьОбъект( "Регистр.РезервыТоваров" );
	Если ПолучитьДатуТА()>ДатаДок Тогда
		регРезервы.ВременныйРасчет();
		РассчитатьРегистрыНа( ДатаДок+1 );
	КонецЕсли;
	Для н = 1 по сп.РазмерСписка() Цикл
		промЗаявка = сп.ПолучитьЗначение( н );
		промЗаявка.ВыбратьСтроки();
		Пока промЗаявка.ПолучитьСтроку()=1 Цикл
			Если промЗаявка.Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга Тогда // услуги
				НоваяСтрока();
				Товар = промЗаявка.Товар; 
				ТовКод = Товар.Код;
				РознЦена = ЦенаТовараПоКатегории(Контекст,КатегорияЦены,1);

				Количество=промЗаявка.Количество;
				Единица=промЗаявка.Единица;
				УстЦены();
				РассчСумму();
				Продолжить;
			КонецЕсли;                                                                 
			
			РезервПоСчету = регРезервы.Остаток( промЗаявка.Товар, промЗаявка, "РезервТовара" );
			Если РезервПоСчету > 0 Тогда
				НоваяСтрока();
				Товар=промЗаявка.Товар; 
				ТовКод   = Товар.Код;
				Единица=промЗаявка.Единица;
				РознЦена = ЦенаТовараПоКатегории(Контекст,КатегорияЦены,1);
				Коэффициент=промЗаявка.Коэффициент;
				Количество=РезервПоСчету/Коэффициент;
				Цена=Пересчет(промЗаявка.Цена,промЗаявка.Валюта,ДатаДок,Рубли,ДатаДок);
				//в этом случае когда накладная выписывается на клиента как фирму, оформившую заявку цены пересчитываем согласно условиям
				//в случае, когда заявка оформлена на конечного клиента - цены введенные вручную сохраняем
				Если (промЗаявка.ВидСкидки = Перечисление.ВидСкидки.Документ)  Тогда
					// не рассчитываем сумму для заявок введенных для местных клиентов
					РассчСумму();
				Иначе
					УстЦены();
					РассчСумму();
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

//**************************

Процедура ВводСкидки()
    Врем01=ВвестиЧисло(СкидкаНакл,"Введите скидку на накладную", 5,2);
КонецПроцедуры

//**************************
ПРоцедура РассчСумму(СебесСумма=0)
    Товар.ИспользоватьДату(ДатаДок);
	Сумма=Окр(Цена*Количество*Коэффициент,2,1);
	Цена=Сумма/(Количество*Коэффициент);
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	НДС = Сумма*ПроцентНДС(СтавкаНДС)/100;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Скидка=ЦенаТовараПоКатегории(Контекст,КатегорияЦены,1)*Количество*Коэффициент-Сумма;
КонецПроцедуры

//-----------------------------------------------
Процедура Доступ()

	Если ПризнакПеремещения=Перечисление.ПризнакиПеремещения.Получатель Тогда
		Форма.СкидкаЛ.Видимость(1);
		Форма.СкидкаНакл_.Видимость(1);
		Форма.ВводСкидки.Видимость(1);
		Форма.Себестоимость.Видимость(0);
		Форма.Скидка.Видимость(1); 
		Форма.СрокРеализ.Видимость(0);
		Форма.ДатаПроизв.Видимость(0);
	Иначе
		Форма.СкидкаЛ.Видимость(0);
		Форма.СкидкаНакл_.Видимость(0);
		Форма.ВводСкидки.Видимость(0);
		Форма.Себестоимость.Видимость(1);
		Форма.Скидка.Видимость(0);
		Форма.СрокРеализ.Видимость(1);
		Форма.ДатаПроизв.Видимость(1);
	КонецЕсли;

КонецПроцедуры

//************************************


//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи() Далее
//Конец текста, вставленного Инсталлятором МОД
Процедура стар_ПриЗаписи()
//Закомментировано Инсталлятором МОД:Процедура ПриЗаписи()
	Если семМожноЗаписать( Контекст ) = 0 Тогда Возврат; КонецЕсли;
	Если (ДатаДок>ТекущаяДата()) и (Выбран()=0) Тогда
		АвтоВремяОтключить();
		УстановитьВремя(6,0,0);  
	ИначеЕсли  ДатаДок>ТекущаяДата() Тогда
		АвтоВремяНачалоДня();
	КонецЕсли;      

	//присвоение номера строгой отчетности\\
	//Если семПрисвоитьНовыйНомер( контекст ) = 0 Тогда Возврат; КонецЕсли;
	//присвоение номера строгой отчетности//
 	Если семПроверкаУникальностиНомера( контекст ) = 0 Тогда Возврат; КонецЕсли;

	ВсегоСуммаШ = Итог("Сумма");                           
	
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// надо записать партии
	Если ПризнакПеремещения = Перечисление.ПризнакиПеремещения.Получатель Тогда
		Спр=СоздатьОбъект("Справочник.МестаХранения");
		Спр.НайтиПоКоду(СкладДепартамента.Код);
		Если Спр.Выбран()=1 Тогда
			СкладОтправитель=Спр.ТекущийЭлемент();
		КонецЕсли;
		
	    Возврат;
	КонецЕсли;
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
КонецПроцедуры
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
//	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	стар_ПриЗаписи();
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД




Процедура ПриОткрытии()
	ПроверкаРазрешенияРедактирования(Контекст);
	Доступ(); 
	Тип.ДобавитьЗначение("Упр.");
	Тип.ДобавитьЗначение("Общ.");
	Тип.ДобавитьЗначение("Фин.");
	Тип.ТекущаяСтрока(ТипУчета+1);
	семЗаголовокОкна(контекст);
КонецПроцедуры
//-----------------------------------------------

Процедура УстЦены()
	Товар.ИспользоватьДату(ДатаДок);
	ВалПродТовара=Товар.ВалютаПродажи;
	РознЦена=ЦенаТовараПоКатегории(Контекст,КатегорияЦены,1);
	Если ПризнакПеремещения=Перечисление.ПризнакиПеремещения.Получатель Тогда
		Цена=РознЦена;
	КонецЕсли;
КонецПроцедуры
//-----------------------------------------------

Процедура ВычСкидки()
	УстЦены();
	Скидка=РознЦена*Количество*Коэффициент-Сумма;
КонецПроцедуры

//-----------------------------------------------
Процедура УчестьСкидкуПоСтр()
	Клиент.ИспользоватьДату(ДатаДок);
	Товар.ИспользоватьДату(ДатаДок);
	
	ЗапретСкидки=0;
	спр = СоздатьОбъект( "Справочник.Цены" );
	спр.ИспользоватьВладельца( Товар );
	спр.ВыбратьЭлементы();
	Пока спр.ПолучитьЭлемент() = 1 Цикл
		Если спр.ПометкаУдаления() = 1 Тогда 
			Продолжить; 
		КонецЕсли;
		Если (спр.КатегорияЦены = КатегорияЦены) Тогда
			ЗапретСкидки=спр.ЗапретСкидки;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗапретСкидки=1 Тогда
		Предупреждение("У данного товара нельзя устанавливать цену вручную!");
		Возврат;;
	КонецЕсли;
	
	ПроцентСкидки=0;
// Проверим ручное изменение цены
// Если цену меняем вручную (РознЦена приравнивается к введенной цене и она отлична от цены из каталога),
// тогда   не   действует   ни   одна   скидка
// Проверим скидку в окошечке накладной
	Если СкидкаНакл<>0 Тогда
		ПроцентСкидки=СкидкаНакл;
 // Проверим скидку на товар
 	ИначеЕсли Товар.ТовСкидка<>0 Тогда
 		ПроцентСкидки=Товар.ТовСкидка;
 	Иначе
		// Получим скидку на товарные группы по данному клиенту
		КлТовСкидка=ПолучитьКлТовСкидку(Контекст);
		Если КлТовСкидка<>"нет" Тогда
			ПроцентСкидки=КлТовСкидка;
		Иначе
			// Проверим скидку на клиента
			Если Клиент.КлиентСкидка<>0 Тогда
				ПроцентСкидки=Клиент.КлиентСкидка;
			Иначе
//			// Проверим скидку в окошечке накладной
//				Если СкидкаНакл<>0 Тогда
//					ПроцентСкидки=СкидкаНакл;
//				Иначе
				// Нет ни одной скидки
					ПроцентСкидки=0;
//				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
         // Новая цена с учетом скидки накладной
	Если ПризнакПеремещения=Перечисление.ПризнакиПеремещения.Получатель Тогда
		Цена=(РознЦена-(РознЦена*ПроцентСкидки/100));
	КонецЕсли;

    Скидка=(РознЦена-Цена)*Количество*Коэффициент;
	РассчСумму();
КонецПроцедуры
//----------------------------------------------

Процедура ИзменЕдин()
    Пром=Единица;
	Пром.ИспользоватьДату(ДатаДок);
	Коэффициент=Единица.Коэффициент;
КонецПроцедуры
//-----------------------------------------------
Процедура УстСкладаПолучателя()
	Скл=СоздатьОбъект("Справочник.МестаХранения");
	Скл.ИспользоватьДату(ДатаДок);
	Если Скл.Выбрать("Выберите Склад получатель","")>0 Тогда
		СкладПолучатель=Скл.ТекущийЭлемент();
	КонецЕсли;
КонецПроцедуры

//----------------------------------------------

Процедура УстанКоличества()
Если Товар.Выбран() >0 Тогда
    // цену товара при перемещении не определяем,
	// т.к.при проводке накладной будет перемещена стоимость товара
	Если Количество=0 Тогда
		Количество=1;
	КонецЕсли;
	Коэффициент=0;
	// устанавливаем единицу измерения
	Спр=СоздатьОбъект("Справочник.Единицы");
	Спр.ИспользоватьДату(ДатаДок);
	Спр.ИспользоватьВладельца(Товар);
	Спр.ВыбратьЭлементы();
	Пока Спр.ПолучитьЭлемент()>0 Цикл
		Если Спр.Единица=Товар.БазоваяЕдиницаИзмерения Тогда
   			 // если базовая единица уже прописана в Справочнике "Единицы"
			Единица=Спр.ТекущийЭлемент();
			Коэффициент=Спр.Коэффициент;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	// если базовая единица еще не  прописана в Справочнике "Единицы"
	глСоздатьНовыйОбъект(Спр);
	Спр.Единица=Товар.БазоваяЕдиница;
	Спр.Коэффициент=1;
	Спр.Наименование=Строка(Товар.БазоваяЕдиница);
	//Закомментировано Инсталлятором МОД:Спр.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Спр, );
	//Конец текста, вставленного Инсталлятором МОД

	//Закомментировано Инсталлятором МОД:Спр.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Спр, );
	//Конец текста, вставленного Инсталлятором МОД

	

	Единица=Спр.ТекущийЭлемент();
	Коэффициент=1;
КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура Подбор()
	Режим="Каталог";
	ОткрытьПодбор("Номенклатура","ДляПодбора");
	УстановитьЗначениеВПодборе("Склад",Склад);
КонецПроцедуры
//-----------------------------------------------
Процедура ПодборПоПрайсу()
	Режим="Прайс";
	ОткрытьПодбор("Прайс_лист","ФормаСписка");
	УстановитьЗначениеВПодборе("Склад",Склад);
КонецПроцедуры
//-----------------------------------------------
Процедура ОбработкаПодбора(Выб)
		Если Константа.ЗапрашиватьКоличество=Перечисление.Булево.Да Тогда
			Кол=1;
			Цен=0;  
			Себ=0;           
			СрокР=ДатаДок;
			Если ВвестиЧисло(Кол,"Введите количество",10,3)=1 Тогда
				          
				Если ПризнакПеремещения=Перечисление.ПризнакиПеремещения.Получатель Тогда
				Иначе
					вводСеб=ВвестиЧисло(Себ,"Введите суммарную себестоимость товара",19,5);
					вводЦен=ВвестиЧисло(Цен,"Введите продажную цену товара",17,5);
				КонецЕсли;
				НоваяСтрока();
				Товар=Выб;
				Количество=Кол;

				Если ПризнакПеремещения=Перечисление.ПризнакиПеремещения.Получатель Тогда
				Иначе
					Себестоимость=Себ;
					Цена=Цен;
				КонецЕсли;

			Иначе
				Возврат;
			КонецЕсли;
		Иначе
			НоваяСтрока();
			Товар=Выб;
			Количество=1;
		КонецЕсли;
		ТовКод=Товар.Код;
		УстанКоличества();  
		РассчСумму();
		АктивизироватьСтроку();
		УстЦены();           
		РассчСумму();
		УчестьСкидкуПоСтр();  
КонецПроцедуры
//-----------------------------------------------

Процедура ВыбСкладДепартамента()
	
	Если ПустоеЗначение(СкладДепартамента)=0 Тогда
		Агент = СкладДепартамента.Клиент.Агент;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПечатьСоСроками()
	
	Если Выбран() = 0 Тогда 
		Сообщить("Ошибка печати накладной.","!");
		Сообщить("Можно печатать только записанную накладную.","I");
		Возврат; 
	КонецЕсли;

	//Если (Константа.МетодСписанияТоваров=Перечисление.МетодыСписанияТоваров.ПоФИФО)
	//ИЛИ (Константа.МетодСписанияТоваров=Перечисление.МетодыСписанияТоваров.ПоСрокамРеализации)
						//Тогда
						
	Назв="Pavadz®me";
	НомерНакл = НомерДок;
	Если Итог("Скидка")>0 Тогда
	    ПечСкидка=1;
	КонецЕсли;      
	
	Если Проведен()=0 Тогда
		Сообщить("Вывести сроки реализации на печать можно только для проведенного документа!Проведите документ!");
	Иначе
		Рег=СоздатьОбъект("Регистр.ПартииТоваров");
		Фирма.ИспользоватьДату(ДатаДок);
		Таб=СоздатьОбъект("Таблица");
		Таб.ИсходнаяТаблица("Таблица1");
	// Получим строку с номерами сертификатов
                                         
		Если ПризнакПеремещения=Перечисление.ПризнакиПеремещения.Получатель Тогда
			Отправитель=Шаблон("[Склад.Наименование], Adrese: [Склад.Адрес]");
			Получатель=Шаблон("[СкладДепартамента.Наименование], Adrese: [СкладДепартамента.Адрес]");
			Выдал=Склад.МОЛ;//.Получить(ДатаДок);
			Принял="";
		Иначе
			Отправитель=Шаблон("[СкладДепартамента.Наименование], Adrese: [СкладДепартамента.Адрес]");
			Получатель=Шаблон("[Склад.Наименование], Adrese: [Склад.Адрес]");
			Принял=Склад.МОЛ;//.Получить(ДатаДок);
			Выдал="";
		КонецЕсли;

		НомераСертификатов=СформироватьСтрокуСертификатов(Контекст);
		СпецОтм="";
		ПечСумСкидки="Atlaide (-)";
                            
		
		Таб.ВывестиСекцию("Шапка|Основная");
		Если ПечСкидка=1 Тогда
			Таб.ПрисоединитьСекцию("Шапка|Скидка");	    
		КонецЕсли;
		Если ПечШтрихКод=1 Тогда
			Таб.ПрисоединитьСекцию("Шапка|ШтрихКод");	    
		КонецЕсли;
		
		ВыбратьСтроки();
		Ном=0;
		ОбщСумма=0;
		ПродСумма=0;    

		ТекКол=0;
		
		ТЗ=СоздатьОбъект("ТаблицаЗначений");
		ТЗ.НоваяКолонка("Товар","Справочник.Номенклатура");
		ТЗ.НоваяКолонка("Количество","Число",17,3);
		ТЗ.НоваяКолонка("Стоимость","Число",17,5);
		ТЗ.НоваяКолонка("СрокРеализ","Дата");
		
		Рег.ВыбратьДвиженияДокумента(ТекущийДокумент());
		Пока Рег.ПолучитьДвижение()>0 Цикл
			
			ТЗ.НоваяСтрока();
			ТЗ.Товар=Рег.Товар;
			ТЗ.Количество=?(Рег.Приход=1,-Рег.ОстатокТовара,Рег.ОстатокТовара);
			ТЗ.Стоимость=?(Рег.Приход=1,-Рег.Стоимость,Рег.Стоимость);
			ТЗ.СрокРеализ=Рег.СрокРеализации;
		КонецЦикла;
			    
		ТЗ.Свернуть("Товар,СрокРеализ","Количество,Стоимость");
		
		Пока ПолучитьСтроку() = 1 Цикл
                            
			ТЗ.ВыбратьСтроки();
			Пока ТЗ.ПолучитьСтроку()=1 Цикл
				Если ТЗ.Товар<>Товар Тогда
				    Продолжить;
				КонецЕсли;
				
				ТекКол=ТЗ.Количество;
				
				ПечКодДляРозницы="";
				Если (Склад.ВидСклада=Перечисление.ВидыСкладов.Розничный)  Тогда
					ПечКодДляРозницы=Товар.КодДляРозницы;
				КонецЕсли;
				
				ПечКоличество=ТекКол;
			    ЗакСумма=ТЗ.Стоимость;
				СрокРеализ_=ТЗ.СрокРеализ;
				ОбщСумма=ОбщСумма+ЗакСумма;
				ПродСумма=ПродСумма+Цена*ПечКоличество;
                
				Попытка
					ПроцСкидка=Скидка/(ЦенаТовараПоКатегорииДляТовара(Товар,КатегорияЦены,,ДатаДок)*ТекКол)*100;
				Исключение   
					ПроцСкидка=0;
				КонецПопытки;
				
				Ном=Ном+1;       
				Таб.ВывестиСекцию("Строка|Основная");
				
				Если ПечСкидка=1 Тогда
					Таб.ПрисоединитьСекцию("Строка|Скидка");	    
				КонецЕсли;

				Если ПечШтрихКод=1 Тогда
					Таб.ПрисоединитьСекцию("Строка|ШтрихКод");	    
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
		
		Таб.ВывестиСекцию("Подвал|Основная");
	
		Если ПечСкидка=1 Тогда
			Таб.ПрисоединитьСекцию("Подвал|Скидка");	    
		КонецЕсли;

		Если ПечШтрихКод=1 Тогда
			Таб.ПрисоединитьСекцию("Подвал|ШтрихКод");	    
		КонецЕсли;
		
		Таб.Защита(Константа.ФлагЗащитыТаблиц);
		Таб.ТолькоПросмотр(1);
		Таб.Опции(0,0,0,0,ПарСтрДок);
		Таб.ПараметрыСтраницы(1,100,1,,,,,,,1);
		Таб.Показать("Печать накладной","");
	КонецЕсли;
//КонецЕсли;
КонецПроцедуры


//**********************************************

Процедура ПечатьРасход()
	
	Меню=СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение(1,"Печать со сроками (только товары)");
	Меню.ДобавитьЗначение(2,"Печать");
	выб=1;
	Если Меню.ВыбратьЗначение(выб,,,,1)=1 Тогда
	Иначе
		Возврат;
	КонецЕсли;
	
	Если выб=1 Тогда
		ПечатьСоСроками();
	КонецЕсли;
	
	Фирма.ИспользоватьДату(ДатаДок);
	Таб=СоздатьОбъект("Таблица");

	НомераСертификатов=СформироватьСтрокуСертификатов(Контекст);
                                          
	
	Если ПризнакПеремещения=Перечисление.ПризнакиПеремещения.Получатель Тогда
		Отправитель=Шаблон("[Склад.Наименование], Adrese: [Склад.Адрес]");
		Получатель=Шаблон("[СкладДепартамента.Наименование], Adrese: [СкладДепартамента.Адрес]");
		Выдал=Склад.МОЛ;
		Принял="";
	Иначе
		Отправитель=Шаблон("[СкладДепартамента.Наименование], Adrese: [СкладДепартамента.Адрес]");
		Получатель=Шаблон("[Склад.Наименование], Adrese: [Склад.Адрес]");
		Принял=Склад.МОЛ;
		Выдал="";
	КонецЕсли;
	
	Таб.ВывестиСекцию("Шапка|Основная");
	Если ПечСкидка=1 Тогда
		Таб.ПрисоединитьСекцию("Шапка|Скидка");	    
	КонецЕсли;
	Если ПечШтрихКод=1 Тогда
		Таб.ПрисоединитьСекцию("Шапка|ШтрихКод");	    
	КонецЕсли;
	
	// получим закуп.цены и суммы
	// по Регистру ОстаткиТоваров
	Рег=СоздатьОбъект("Регистр.ПартииТоваров");
	спТовары=СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(спТовары,"Товар");
	Рег.УстановитьЗначениеФильтра("Товар",спТовары,2);
	Рег.УстановитьЗначениеФильтра("Склад",Склад,1);
	Дат=ПолучитьДатуТА();
	Если (Дат=ДатаДок) И (Проведен()>0) Тогда
		Рег.ВременныйРасчет();
		РассчитатьРегистрыНа(ТекущийДокумент());
	 ИначеЕсли Дат>ДатаДок Тогда
	 // если итоги не актуальны, то остатки берем из временногно расчета Регистра
		Рег.ВременныйРасчет();
		Если Проведен()>0 Тогда
			РассчитатьРегистрыНа(ТекущийДокумент());
		Иначе
			РассчитатьРегистрыНа(ДатаДок);
		КонецЕсли;
	КонецЕсли;

	ВыбратьСтроки();
	Ном=0;
	ОбщСумма=0;
	ПродСумма=0;
	ИтогСуммаПеч=0;
	ИтогНдсПеч=0;

	ТС=СоздатьОбъект("ТаблицаЗначений");
	ТС=ПолучитьСтоимостьТоваровПоПартиям(Контекст);
	
	Пока ПолучитьСтроку() = 1 do
	// Вычислим, сколько всего данного товара

		ЗакЦена = 0;
		рез=0;
		Если ТС.НайтиЗначение(Товар,рез,"Товар")=1 Тогда
			ТС.ПолучитьСтрокуПоНомеру(рез);
			ЗакЦена = ТС.Стоимость;
		КонецЕсли;
		//Ост=Рег.СводныйОстаток(Фирма,Товар,,,,Склад,,,"ОстатокТовара");
        //Стоим=Рег.СводныйОстаток(Фирма,Товар,,,,Склад,,,"Стоимость");
        //Если Ост<>0 Тогда
     	//	ЗакЦена=Стоим/Ост;
		//Иначе
		//	ЗакЦена=0;
		//КонецЕсли;
			
		
		ПечКодДляРозницы="";
		Если (Склад.ВидСклада=Перечисление.ВидыСкладов.Розничный)  Тогда
			ПечКодДляРозницы=Товар.КодДляРозницы;
		КонецЕсли;
		
		ТекКол = Количество*Коэффициент;
		ПечКоличество=ТекКол;
	    ЗакСумма=ЗакЦена*ПечКоличество;
		СрокРеализ_="";
		ОбщСумма=ОбщСумма+ЗакСумма;
		ПродСумма=ПродСумма+Цена*ПечКоличество;
			
		Попытка
			ПроцСкидка=Скидка/(ЦенаТовараПоКатегорииДляТовара(Товар,КатегорияЦены,,ДатаДок)*ТекКол)*100;
		Исключение   
			ПроцСкидка=0;
		КонецПопытки;
		
		Ном=Ном+1;       
		Таб.ВывестиСекцию("Строка|Основная");
		
		Если ПечСкидка=1 Тогда
			Таб.ПрисоединитьСекцию("Строка|Скидка");	    
		КонецЕсли;

		Если ПечШтрихКод=1 Тогда
			Таб.ПрисоединитьСекцию("Строка|ШтрихКод");	    
		КонецЕсли;
		
	КонецЦикла;;

	Таб.ВывестиСекцию("Подвал|Основная");

	Если ПечСкидка=1 Тогда
		Таб.ПрисоединитьСекцию("Подвал|Скидка");	    
	КонецЕсли;

	Если ПечШтрихКод=1 Тогда
		Таб.ПрисоединитьСекцию("Подвал|ШтрихКод");	    
	КонецЕсли;
	
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,0,0,ПарСтрДок);
	Таб.ПараметрыСтраницы(1,100,1,,,,,,,1);
	Таб.Показать("Печать накладной","");
КонецПроцедуры

//**********************************************


Процедура ПечатьПриход()

	Фирма.ИспользоватьДату(ДатаДок);
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Таблица1");
                        
	Отправитель=Шаблон("[СкладДепартамента.Наименование], Adrese: [СкладДепартамента.Адрес]");
	Получатель=Шаблон("[Склад.Наименование], Adrese: [Склад.Адрес]");
	
	Принял=Склад.МОЛ;
	Выдал="";


	НомераСертификатов=СформироватьСтрокуСертификатов(Контекст);

	Таб.ВывестиСекцию("Шапка");
	// получим закуп.цены и суммы
	// по Регистру ОстаткиТоваров
	Дат=ПолучитьДатуТА();

	ВыбратьСтроки();
	Ном=0;
	ОбщСумма=0;
	ИтогСуммаПеч=0;
	ИтогНдсПеч=0;

	Пока ПолучитьСтроку() = 1 do
	// Вычислим, сколько всего данного товара
        СрокРеализ_=СрокРеализ;
	    ЗакСумма=Себестоимость;
		ПечКоличество=Количество;

		ОбщСумма=ОбщСумма+ЗакСумма;
		ПродСумма=ПродСумма+Цена*ПечКоличество;

         //		Товар.ИспользоватьДату(ДатаДок);
		Ном=Ном+1;  
		
		Попытка
			ПроцСкидка=Скидка/(ЦенаТовараПоКатегорииДляТовара(Товар,КатегорияЦены,,ДатаДок)*ПечКоличество)*100;
		Исключение   
			ПроцСкидка=0;
		КонецПопытки;

		ПечКодДляРозницы="";
		Если (Склад.ВидСклада=Перечисление.ВидыСкладов.Розничный)  Тогда
			ПечКодДляРозницы=Товар.КодДляРозницы;
		КонецЕсли;
		
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;

	Таб.ВывестиСекцию("Подвал");
	Таб.Опции(0,0,0,0,ПарСтрДок);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ПараметрыСтраницы(1,100,1,,,,,,,1);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Печать накладной","");
КонецПроцедуры


//-----------------------------------------------
Процедура ВводНового(ФлКопирования);
	
	ЗаполнитьШапку(Контекст);
	             
	Если ФлКопирования=1 Тогда
		Возврат;	    
	КонецЕсли;
	
	Если СокрП(НомерДок)="" Тогда
		НомерДок="Пер-00001";
	КонецЕсли;
	ДатаДок=РабочаяДата();
	Склад=Константа.ОсновнойСклад;
	СкладПолучатель=Константа.ОсновнойСклад;
	ПризнакПеремещения=Перечисление.ПризнакиПеремещения.Получатель;
	КатегорияЦены=Константа.ОсновнаяКатегорияЦены;
	
	СтавкаНДС=Перечисление.ЗначенияНДС.НДС0;

КонецПроцедуры

//-----------------------------------------------
Процедура ВводНаОсновании(ДокОснование)   
	Если семМожноВводитьНаОснованииСчета( ДокОснование, "Расходная" ) = 0 Тогда СтатусВозврата( 0 ); Возврат; КонецЕсли;
	Если семМожноВводитьНаОснованииСчета( ДокОснование, "Перемещение" ) = 0 Тогда СтатусВозврата( 0 ); Возврат; КонецЕсли;
	Если семМожноВводитьНаОснованииСчета( ДокОснование, "СнятиеРезерва" ) = 0 Тогда СтатусВозврата( 0 ); Возврат; КонецЕсли;
		
	Если ДокОснование.Вид() = "Счет" Тогда
		// сем \\
		Если ДокОснование.ПометкаУдаления() = 1 Тогда
			Сообщить("Нельзя вводить документ на основании удаленного документа.","I");
			СтатусВозврата( 0 );
			Возврат;
		КонецЕсли;
		Если ДокОснование.Проведен() = 0 Тогда
			Сообщить("Нельзя вводить документ на основании непроведенного документа.","I");
			СтатусВозврата( 0 );
			Возврат;
		КонецЕсли;
		// сем //
		Если ПустоеЗначение(ДокОснование.Комплектовщик)=0 Тогда
			Комплектовщик=ДокОснование.Комплектовщик;
		Иначе
			Комплектовщик = семВыбратьКомплектовщика();
			Если Комплектовщик.Выбран() = 0 Тогда
				Предупреждение( "Не выбран комплектовщик." );
				СтатусВозврата( 0 );
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		ДокументОснование=ДокОснование;

		ЗаполнениеПоРезервам=0;
		Если (Константа.НовыйМеханизмПретензий.Получить(ДатаДок)=Да) И (ПустоеЗначение(ДокОснование.Склад.МестоКомплектации)=0) Тогда
			ЗаполнениеПоРезервам=1;
		КонецЕсли;
		
		Если (ДокОснование.ВидЗаявки=Перечисление.ВидыЗаявок.ЗаявкаНаВозврат) Тогда
			ЗаполнениеПоРезервам=0;
		КонецЕсли;
		
		Если  ЗаполнениеПоРезервам=1 Тогда
			ПризнакПеремещения=Перечисление.ПризнакиПеремещения.Получатель;
			СостЗаявки=глПолучитьСостояниеЗаявки(ДокОснование);
			Если СостЗаявки="Ожидает отгрузки" Тогда
				сп=СоздатьОбъект("СписокЗначений");
				сп.ДобавитьЗначение(ДокОснование);
				семЗаполнитьПоСпискуЗаявок(сп);
			Иначе
				Предупреждение("Нельзя оформлять документ на основании заявки в состоянии <"+СостЗаявки+">!");
				СтатусВозврата(0);				
			КонецЕсли;
			Возврат;
		КонецЕсли;
		
	КонецЕсли;

	//Если ДокОснование.Вид() = "Счет" Тогда
	//	ДокТест = СоздатьОбъект("Документ");
	//	Если ДокТест.ВыбратьПодчиненныеДокументы(,,ДокОснование) = 1 Тогда    
	//		Пока ДокТест.ПолучитьДокумент() = 1 Цикл
	//			Если ДокТест.ПометкаУдаления() = 1 Тогда
	//				Продолжить;
	//			КонецЕсли;
	//			Предупреждение("Электронка "+ДокОснование+" уже имеет подчиненный документ "+ДокТест);
	//			СтатусВозврата(0);
	//		КонецЦикла;
	//	КонецЕсли;		
	//КонецЕсли;
	
	ЗаполнитьШапку(Контекст);

	
	Если (ДокОснование.Вид()="Счет") ИЛИ
			(ДокОснование.Вид()="Перемещение") ИЛИ
			(ДокОснование.Вид()="РасходнаяНакладнаяНал") ИЛИ
 			(ДокОснование.Вид()="РасходнаяНакладная") ИЛИ
 			(ДокОснование.Вид()="ПриходнаяНакладная") ИЛИ
 			(ДокОснование.Вид()="РасходнаяРеализатора") ИЛИ
 			(ДокОснование.Вид()="ПриходнаяРеализатора") Тогда
		Если СокрП(НомерДок)="" Тогда
			НомерДок="Пер-00001";
		КонецЕсли;
        
		Если глЕстьРеквизитШапки( "КатегорияЦены", ДокОснование.Вид() ) = 1 Тогда
			КатегорияЦены=ДокОснование.КатегорияЦены;
		Иначе
			КатегорияЦены=Константа.ОсновнаяКатегорияЦены;
		КонецЕсли;
		ТипУчета = ДокОснование.ТипУчета;
		ДокументОснование = ДокОснование;
		ПризнакПеремещения=Перечисление.ПризнакиПеремещения.Получатель;
		ДатаДок=РабочаяДата();
		Фирма=ДокОснование.Фирма;
		Автор=Пользователь;
		Склад=ДокОснование.Склад;
		
		СкладПолучатель=Константа.ОсновнойСклад;
//		Если (ДокОснование.Вид()="Перемещение") Тогда
			Основание=ПеревестиНаГосЯзык(ДокОснование.Вид())+" Nr. " + ДокОснование.НомерДок + " от " + ДокОснование.ДатаДок;
//		КонецЕсли;  
		
		ДокОснование.ВыбратьСтроки();
		Пока ДокОснование.ПолучитьСтроку()=1 Цикл
			НоваяСтрока();
			ТовКод = ДокОснование.Товар.Код;
			Товар = ДокОснование.Товар;
			Количество = ДокОснование.Количество;
			Единица = ДокОснование.Единица;
			Коэффициент = ДокОснование.Коэффициент;
			Цена = ДокОснование.Цена;
			ЦенаСНДС = ДокОснование.ЦенаСНДС;
			Сумма = ДокОснование.Сумма;
			Скидка = ДокОснование.Скидка;
			//Себестоимость
			РознЦена = ДокОснование.РознЦена;
			//ШтрихКод
			НДС = ДокОснование.НДС;
			//СрокРеализ
			//ДатаПроизв
			//Партия
			ВидСкидки = ДокОснование.ВидСкидки;
			Выч_суммы_накл_сНП(Контекст);
			Скидка = Окр( Скидка, 2, 1 );
		КонецЦикла;

	Иначе
		Предупреждение("Накладную перемещения нельзя вводить на основании выбранного вида документа!!!");
		СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры
//-----------------------------------------------

// При входе в Форму запомним промежуточные переменные
Form.Defbutton("Ok");
