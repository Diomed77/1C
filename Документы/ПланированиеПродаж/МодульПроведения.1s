Перем ЧислоРабочихДнейВНеделе;

//******************************************************************************
// ЯвляетсяРабочимДнем(Д)
// Параметры: Д - дата
// Возвращаемое значение: 1, если Д является рабочим днем 0, иначе
// Описание:
//  Проверяет, является ли дата рабочим днем в соответсвии с настройкой рабочей недели
Функция ЯвляетсяРабочимДнем(Д)
	Если НомерДняНедели(Д)>ЧислоРабочихДнейВНеделе Тогда
		Возврат 0;
	Иначе
		Возврат 1;
	КонецЕсли;	
КонецФункции	// ЯвляетсяРабочимДнем()

//******************************************************************************
// ЧислоРабочихДнейМежду(Д1,Д2)
// Параметры: Д1 и Д2 - даты
// Возвращаемое значение: Число рабочих дней между Д1 и Д2 включительно
// Описание:
//  Расчет количества рабочих дней между датами в соответствии с установленной
//  длиной рабочей недели.
//  
Функция ЧислоРабочихДнейМежду(Д1,Д2)
	Перем ОбщееЧислоДней, ЧислоПолныхНедель, ЧислоДнейВНеполнойНеделе;     
	Перем ЧислоРабочихДней;
	// если дата конца меньше даты начала, то число дней = 0
	Если Д1>Д2 Тогда
		Возврат 0;
	КонецЕсли;
	ОбщееЧислоДней = (Д2-Д1)+1;                                      
	ЧислоДнейВНеполнойНеделе = ОбщееЧислоДней % 7;
	ЧислоПолныхНедель = Окр((ОбщееЧислоДней - ЧислоДнейВНеполнойНеделе)/7);
	ЧислоРабочихДней = ЧислоРабочихДнейВНеделе*ЧислоПолныхНедель;
	Для Индекс = 0 По (ЧислоДнейВНеполнойНеделе-1) Цикл
		ЧислоРабочихДней = ЧислоРабочихДней + ЯвляетсяРабочимДнем(Д2-Индекс);
	КонецЦикла;	
	Возврат ЧислоРабочихДней;           
КонецФункции	// ЧислоРабочихДнейМежду()        


// ********************
//
Процедура стар_ОбработкаПроведения()


    //Здесь следует написать алгоритм проведения документа
	глПроверкаРежимаБлокировки(Контекст);

	Если ПустоеЗначение(Валюта)=1 Тогда
		Валюта = Константа.ОсновнаяВалютаПродажи;
	КонецЕсли;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		План = Пересчет(ПланВал,Валюта,ДатаДок,Рубли,1);
	КонецЦикла;
	
	Возврат;
	
	ЧислоРабочихДнейВНеделе = 5;
	ВыбратьСтроки();
	
	Пока ПолучитьСтроку()=1 Цикл
			ПланПродаж_=План;
			НачДата=НачМесяца(ДатаДок);
			КонДата=КонМесяца(ДатаДок);
			КолРабДней=ЧислоРабочихДнейМежду(НачДата,КонДата);
			
			СуммаПланПродаж=0;
			с=0;
			НомРабДней=0;

			ТекДата=НачДата;
			Пока ТекДата<=КонДата Цикл
				Если ЯвляетсяРабочимДнем(ТекДата)=1 Тогда
					НомРабДней=НомРабДней+1;
					Состояние("Дата: "+ТекДата);
					Регистр.ПланированиеПродаж.ПривязыватьСтроку(НомерСтроки);
					Регистр.ПланированиеПродаж.Агент=Агент;
					Регистр.ПланированиеПродаж.ДатаПлана=ТекДата;
					Регистр.ПланированиеПродаж.ПланПродаж=ПланПродаж_/КолРабДней;
//					Регистр.ПланированиеПродаж.ПланБрПрибыли=ПланБрПрибыли_/КолРабДней;
					СуммаПланПродаж=СуммаПланПродаж+Окр(Регистр.ПланированиеПродаж.ПланПродаж,2);
//					СуммаПланБрПрибыли=СуммаПланБрПрибыли+Окр(Регистр.ПланированиеПродаж.ПланБрПрибыли,2);
					Если НомРабДней=КолРабДней  Тогда
						Регистр.ПланированиеПродаж.ПланПродаж=Регистр.ПланированиеПродаж.ПланПродаж-(СуммаПланПродаж-ПланПродаж_);
//						Регистр.ПланированиеПродаж.ПланБрПрибыли=Регистр.ПланированиеПродаж.ПланБрПрибыли-(СуммаПланБрПрибыли-ПланБрПрибыли_);
					КонецЕсли;

					Регистр.ПланированиеПродаж.ДвижениеПриходВыполнить();
					
				КонецЕсли;
				
				ТекДата=ТекДата+1;
			КонецЦикла;
			
	КонецЦикла;

КонецПроцедуры

Процедура ОбработкаПроведения()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	Если ПроведениеМОД(Контекст)=1 Тогда
		Возврат;
	КонецЕсли;
	стар_ОбработкаПроведения();
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	Если ПроведениеПоАлгоритмуМОД=1 Тогда
		Возврат;
	КонецЕсли;
	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	ПриОтменеПроведенияДокумента(ТекущийДокумент());
КонецПроцедуры

