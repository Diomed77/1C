Перем спТоваров;

Функция ПроверкаДаты()
	промДата = Дата( ДатаГод( ДатаДок ), ДатаМесяц( ДатаДок ), 5 );
	Если ( РабочаяДата() > промДата ) и ( НазваниеНабораПрав() <> "Администратор" ) Тогда
//		Возврат "Нельзя изменять документы позже 6-го числа!";
	КонецЕсли;   
КонецФункции

Процедура ПриЗаписи()
///	Если семМожноЗаписать( Контекст ) = 0 Тогда Возврат; КонецЕсли;
	Результат = ПроверкаДаты();
	Если ПустоеЗначение( Результат ) = 0 Тогда
		Предупреждение( Результат );
		СтатусВозврата( 0 );
		Возврат;
	КонецЕсли;
КонецПроцедуры

Процедура Очистить()
	Ответ = Вопрос( "Все строки будут удалены. Продолжить?", 4 );
	Если Ответ = 6 Тогда УдалитьСтроки(); КонецЕсли;
КонецПроцедуры

Процедура Подбор()
	ВыгрузитьТабличнуюЧасть( спТоваров, "Товар" );
	ОткрытьПодбор("Номенклатура","ФормаСписка");
КонецПроцедуры

Процедура ОбработкаПодбора( ВыбТовар )
	Если ВыбТовар.Выбран() = 0 Тогда НеКатит = 1;
	ИначеЕсли ВыбТовар.ЭтоГруппа() = 0 Тогда НеКатит = 1;
	ИначеЕсли ВыбТовар.Уровень() > 2 Тогда НеКатит = 1;
	КонецЕсли;
	Если НеКатит = 1 Тогда 
		Предупреждение( "В документ вводятся только группы 1-го и 2-го уровней." );
		Возврат;
	КонецЕсли;
	Если спТоваров.НайтиЗначение( ВыбТовар ) > 0 Тогда 
		Предупреждение( "В документе не может быть одинаковых групп." );
		Возврат;
	КонецЕсли;
	ВыбПлан = 0; ВвестиЧисло( ВыбПлан, "Планируемое кол-во продаж", 6, 0 );
	НоваяСтрока();
	Товар = ВыбТовар;
	План = ВыбПлан;
	Уровень = ВыбТовар.Уровень();
	Родитель = ?( Товар.Родитель.Выбран() = 0, Товар, Товар.Родитель );
	спТоваров.ДобавитьЗначение( ВыбТовар );
	СортироватьСтроки("+Родитель,+Уровень,+Товар");
	АктивизироватьСтроку();
КонецПроцедуры

Функция ФорматВывода( парам )
	Если парам = "Уровень1" Тогда
		Если Уровень = 1 Тогда Возврат 4;
		ИначеЕсли Уровень > 1 Тогда Возврат 2;
		КонецЕсли;
	ИначеЕсли парам = "Уровень2" Тогда
		Если Уровень < 2 Тогда Возврат 0;
		ИначеЕсли Уровень = 2 Тогда Возврат 4;
		Иначе  Возврат 2;
		КонецЕсли;
	ИначеЕсли парам = "Уровень3" Тогда
		Возврат ?( Уровень = 3, 4, 0 );
	КонецЕсли;
КонецФункции

Процедура Заполнить()
	сп = СоздатьОбъект( "СписокЗначений" );
	сп.ДобавитьЗначение( 0, "все уровени" );
	сп.ДобавитьЗначение( 1, "только 1-й уровень" );
	сп.ДобавитьЗначение( 2, "только 2-й уровень" );
	Выбор = 0; 	
	Если сп.ВыбратьЗначение( Выбор, "",,,1 ) < 1 Тогда Возврат; КонецЕсли;
	спр = СоздатьОбъект( "Справочник" );
	Запрос = СоздатьОбъект( "Запрос" );
	ТекстЗапроса = "
	|//{{ЗАПРОС(ЗапасыТоваров)
	|Обрабатывать НеПомеченныеНаУдаление;
	|Товар = Справочник.Номенклатура.Родитель;
	|Группировка Товар;
	|";
	Если Запрос.Выполнить( ТекстЗапроса ) = 0 Тогда Возврат; КонецЕсли;
	спТоваров= СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть( спТоваров, "Товар" );
	н = 0;
	Пока Запрос.Группировка( "Товар" ) = 1 Цикл
		пТовар = Запрос.Товар;
		Если пТовар.Выбран() = 0 Тогда Продолжить; КонецЕсли;
		Если спТоваров.НайтиЗначение( пТовар ) > 0 Тогда Продолжить; КонецЕсли;
		Если пТовар.Уровень() > 2 Тогда Продолжить; КонецЕсли;
		Если Выбор > 0 Тогда
			Если пТовар.Уровень() <> Выбор Тогда Продолжить; КонецЕсли;
		КонецЕсли;
		НоваяСтрока();
		Товар =  пТовар;
		Уровень = пТовар.Уровень();
		Родитель = ?( пТовар.Родитель.Выбран() = 0, пТовар, пТовар.Родитель );
		спТоваров.ДобавитьЗначение( пТовар );
		 н = н + 1; Состояние( "Добавлено "+н+" элементов." );
	КонецЦикла; 
	СортироватьСтроки("+Родитель,+Уровень,+Товар");
КонецПроцедуры

Процедура ВводНового(ФлКопирования)
	Если Пользователь.РазрПланирование = 0 Тогда
		Предупреждение( "Недостаточно полномочий пользователя!" );
		СтатусВозврата( 0 ); Возврат;
	КонецЕсли;           
	ЗаполнитьШапку( Контекст );
	
	Если ФлКопирования=1 Тогда
		Возврат;	    
	КонецЕсли;
	Отдел = Автор.Родитель;
КонецПроцедуры

Процедура ПриОткрытии()
	Если Пользователь.РазрПланирование = 0 Тогда
		Предупреждение( "Недостаточно полномочий пользователя!" );
		СтатусВозврата( 0 ); Возврат;
	КонецЕсли;
	Форма.Отдел.ВыборГруппы( 1 );
	//ПроверкаРазрешенияРедактирования( Контекст );
	Если Проведен() = 1 Тогда Форма.ТолькоПросмотр( 1 ); КонецЕсли;
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.кнОК.Доступность( 0 );
		Форма.КнопкаПоУмолчанию("кнЗакрыть");
		Форма.кнЗаполнить.Доступность( 0 );
		Форма.кнПодбор.Доступность( 0 );
		Форма.кнОчистить.Доступность( 0 );
	Иначе
		Форма.КнопкаПоУмолчанию("кнОК");
	КонецЕсли;
	
	спТоваров= СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть( спТоваров, "Товар" );
	
КонецПроцедуры

Процедура ПриИзмененииПорядкаСтрок()
	Предупреждение( "В этом документе нельзя изменять порядок строк." );
	СтатусВозврата( 0 );
КонецПроцедуры

Процедура ПриВводеСтроки()
	//Предупреждение( "В этом документе новые строки вводятся только через подбор." );
	СтатусВозврата( 0 );
КонецПроцедуры

//======================================================================
Процедура кнИмпорт()
	ТекстЗапроса = "SELECT Спр.ID [Товар $Справочник.Номенклатура]
	|					   , Спр.PARENTID [Родитель $Справочник.Номенклатура]
	|					   , $Спр.УровеньИерархии+1 Уровень
	|					   , Markup*100 План
	|				FROM TEST.dbo.Plans_Markup Plans
	|				INNER JOIN $Справочник.Номенклатура Спр (NOLOCK) ON Спр.CODE = Plans.GROUP_CODE 
	|				INNER JOIN $Справочник.Номенклатура Спр2 (NOLOCK) ON Спр.PARENTID = Спр2.ID
	|				WHERE Plans.Depart_Code = :КодОтдела
	|				ORDER BY Спр2.CODE, Спр.CODE
	|";
	
	Запрос = СоздатьОбъект("ODBCRecordSet");
	Запрос.УстановитьТекстовыйПараметр("КодОтдела",Отдел.Код);
	
	тт=Запрос.ВыполнитьИнструкцию(ТекстЗапроса);
	ЗагрузитьТабличнуюЧасть(тт);
	
КонецПроцедуры // кнИмпорт
//Процедура ПоКнопкеОк()
//	Записать();
//	Если ПравоДоступа("ПроведениеДокумента", "Документ.ПланированиеНаценки" ) = 1 Тогда
//		Провести();
//	КонецЕсли;
//	Форма.Закрыть( 0 );
//КонецПроцедуры

