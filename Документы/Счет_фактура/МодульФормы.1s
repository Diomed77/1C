Перем ИнформационнаяСтрока;
Перем Валюта_Прежн;
Перем Курс_Прежн;
Перем ЗаполнитьАвто;

Процедура ВыборКлиента(Режим="Изменение") Далее

Процедура ЗаполнитьДокумент() Далее

Функция Доступ()
	Если ВидКлиента=Перечисление.ВидыКлиентов.Покупатель Тогда
		//Форма.ВидКомпенсации.Доступность(0);
		Форма.лВидДохода.Видимость(0);
		Форма.ВидДохода.Видимость(0);
		Форма.ВлияетНаРеализацию.Видимость(1);
		Форма.БН.Видимость(1);
	Иначе
		Форма.ВидКомпенсации.Доступность(1);	
		
		Если ДатаДок<='01.01.2010' Тогда
			Форма.лВидДохода.Видимость(1);
			Форма.ВидДохода.Видимость(1);
		Иначе
			Форма.лВидДохода.Видимость(0);
			Форма.ВидДохода.Видимость(0);
			Форма.ВидДохода.Доступность(0);
		КонецЕсли;
		
		Если ВидКомпенсации=Перечисление.ВидПолученнойКомпенсации.ОтдельныйСчет Тогда
			Форма.ВлияетНаРеализацию.Доступность(1);
		Иначе
			Форма.ВлияетНаРеализацию.Доступность(0);
		КонецЕсли;
		
		Если ВидСчетаФактуры=Перечисление.ВидыСчетовФактур.Подтвержденная Тогда
			Форма.ПричинаОтказаОтПретензии.Доступность(1);
		Иначе
			Форма.ПричинаОтказаОтПретензии.Доступность(0);
		КонецЕсли;
		Форма.БН.Видимость(0);
	КонецЕсли;               
	                               
	Если (ВидКлиента=Перечисление.ВидыКлиентов.Поставщик) Тогда
		Форма.кнЗаполнить.Видимость(1);
	Иначе
		Форма.кнЗаполнить.Видимость(0);
	КонецЕсли;
	
	Возврат "";
КонецФункции

//----------------------------------------------------
Функция ИнфОдоговоре()
	Если Клиент.Выбран()=1 Тогда
		Если СтрДлина(СокрЛП(Клиент.Договор))=0 Тогда
			Возврат("Договора нет!!!");
		Иначе
			Возврат(Клиент.Договор);
		КонецЕсли;
	Иначе
		Возврат("");
	КонецЕсли;
КонецФункции

//****************************************************************
Процедура ВыборВидаКлиента()
	Если ВидКлиента=Перечисление.ВидыКлиентов.Покупатель Тогда
		ВидКомпенсации=Перечисление.ВидПолученнойКомпенсации.ОтдельныйСчет;
	Иначе
		ВидКомпенсации=Перечисление.ВидПолученнойКомпенсации.КредитнаяНота;
		ВидДохода=Перечисление.ВидыДоходов.КоррекцияДохода;
	КонецЕсли;	
	//ДатаОплаты = семПолучитьДатуОплаты( Клиент, ВидКлиента, ДатаДок );

КонецПроцедуры

//======================================================================
Процедура ПриВыбореВидаСчета()
	
	Если ВидКредитнойНоты=Перечисление.ВидыКредитныхНот.КомпенсацияПредпродажнаяПодготовка Тогда
	Иначе
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореВидаСчета()

Процедура ВывестиЗаголовок()
	Если ВидСчетаФактуры=Перечисление.ВидыСчетовФактур.Подтвержденная Тогда
		Форма.лЗаголовок.Заголовок("СЧЕТ-ФАКТУРА  Nr. ");
	Иначе
		Форма.лЗаголовок.Заголовок("СЧЕТ-ФАКТУРА  Nr. (Неподтв.)");
	КонецЕсли;
КонецПроцедуры

//------------------------
Процедура ПриОткрытии()        
	ПриЗаписиПерепроводить(1);                     
	Если ДатаДок<=Константа.ДатаЗапретаРедактированияСчетов Тогда
		Форма.ТолькоПросмотр(1);
		Предупреждение("Разрешен только просмотр документа!",4);
		Возврат;
	КонецЕсли;

//	ПроверкаРазрешенияРедактирования(Контекст);
	УстановкаРеквизитаТип(Контекст);
	Тип.ДобавитьЗначение("Упр.");
	Тип.ДобавитьЗначение("Общ.");
	Тип.ДобавитьЗначение("Фин.");
	Тип.ТекущаяСтрока(ТипУчета+1);
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.ОК.Доступность(0);
		Форма.КнопкаПоУмолчанию("Закрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("ОК");
	КонецЕсли;
	
	Если ПустоеЗначение(Форма.Параметр)=0 Тогда
		Клиент=Форма.Параметр.Получить("Поставщик");
		ВидКлиента=Перечисление.ВидыКлиентов.Поставщик;
		ВидКредитнойНоты=Форма.Параметр.Получить("ВидКредитнойНоты");
		ВидСчетаФактуры=Форма.Параметр.Получить("ВидСчетаФактуры");
		ВыборКлиента();
		ВыборВидаКлиента();
		Если Форма.Параметр.Получить("Заполнить")=1 Тогда
			ЗаполнитьДокумент();
		КонецЕсли;
	КонецЕсли;
	
	ПоДокументу.ВидыДляВыбора("ПриходнаяНакладная,Счет_фактура,РасходнаяНакладная");
	ВывестиЗаголовок();
КонецПроцедуры
//-----------------------------------------------
//-----------------------------------------------
//-----------------------------------------------
Процедура ПриВводеСтроки()
//	Предупреждение("Документ Счет-фактура следует вводить только в режиме ''Ввод на основании'', ввод дополнительных строк запрещен!");
//	СтатусВозврата(0);
КонецПроцедуры

Процедура семУстановитьВалюту( флКопирования )
	Если флКопирования = 0 Тогда
		Валюта = Константа.ОсновнаяВалютаПродажи;
	КонецЕсли;
	Дата_Курса = ДатаДок;
	Курс = КурсДляВалюты( Валюта, Дата_Курса );
	Валюта_Прежн = Валюта;
	Курс_Прежн = Курс;
КонецПроцедуры

Процедура ВводНового( флКопирования );

	ЗаполнитьШапку(Контекст);
	 семУстановитьВалюту( флКопирования );
	                         
	ДатаДок=РабочаяДата();     

	ДатаНачала=НачМесяца(ДатаДок);
	ДатаКонца=КонМесяца(ДатаДок);
	                
	ВидКлиента=Перечисление.ВидыКлиентов.Поставщик;
	ВидДохода=Перечисление.ВидыДоходов.ЧистыйДоход;
	ВыборВидаКлиента();
	
	Если (Пользователь.РазрПодтвСчетаФакт = 0) ИЛИ (ПустоеЗначение(Форма.Параметр)=0) Тогда
		ВидСчетаФактуры = Перечисление.ВидыСчетовФактур.Неподтвержденная;
	Иначе
		сп = СоздатьОбъект( "СписокЗначений" );
		сп.ДобавитьЗначение(Перечисление.ВидыСчетовФактур.Неподтвержденная);
		сп.ДобавитьЗначение(Перечисление.ВидыСчетовФактур.Подтвержденная);
		Если сп.ВыбратьЗначение(ВидСчетаФактуры,,,,0) = 0 Тогда СтатусВозврата(0); Возврат; КонецЕсли;
		
		Если ВидСчетаФактуры = Перечисление.ВидыСчетовФактур.Подтвержденная Тогда
			Агент = "";
		КонецЕсли;
	КонецЕсли;
	//Если ВвестиПеречисление(ВидСчетаФактуры,,)=1 Тогда
	//Иначе
	//	СтатусВозврата(0);
	//КонецЕсли;          
	
	
	
	СтавкаНДС     = Константа.ОсновнаяСтавкаНДС;		
	
	ВывестиЗаголовок();   
	                
КонецПроцедуры
//-----------------------------------------------
Функция ПосчитатьЦенуБезНП(Товар,Цена,ДатаД) 
	ПроцНП=Товар.НалогСПродаж.Получить(ДатаД);
	ЦенаБезНП=(Цена*100)/(100+ПроцНП);
	Возврат ЦенаБезНП;
КонецФункции
//-----------------------------------------------
Процедура ВводНаОсновании(ДокОснование,Переоформление=0)
	Если ДокОснование.Проведен()=0  Тогда
		Предупреждение("Счет-фактуру нельзя вводить на основании не проведенного документа!");
		СтатусВозврата(0); Возврат;
	КонецЕсли;
	Если Пользователь.РазрПодтвСчетаФакт = 0 Тогда
		Сообщить("Ошибка создания документа!","!");
		Сообщить("Нет прав на создание Подтвержденного счета-фактуры","I");
		СтатусВозврата(0); Возврат;
	КонецЕсли;

	ЗаполнитьШапкуНаОсн(Контекст,ДокОснование);
	
	                                         
	ТТ			= "";             
	Валюта		= ДокОснование.Валюта;
	ДатаДок		= РабочаяДата();
	Дата_курса	= ДатаДок;
	Курс		= КурсДляВалюты(Валюта,Дата_Курса);
	Валюта_Прежн= Валюта;
	Курс_Прежн	= Курс;    
                        
	Клиент		= ДокОснование.Клиент;
	Агент		= ДокОснование.Агент;
	ВидКлиента	= ДокОснование.ВидКлиента;
	ВыборВидаКлиента();              
	ВыборКлиента();
	ВидСчетаФактуры	= Перечисление.ВидыСчетовФактур.Подтвержденная;
	ВидКредитнойНоты= ДокОснование.ВидКредитнойНоты;
	СтавкаНДС     	= ДокОснование.СтавкаНДС;		
	НомерОригинальный = ДокОснование.НомерОригинальный;

	ВывестиЗаголовок();   
	                 
	ДокументОснование=ДокОснование;
	Если ДокОснование.ВидСчетаФактуры=Перечисление.ВидыСчетовФактур.Подтвержденная Тогда
		ПоДокументу = ДокОснование;
		Агент = "";
	КонецЕсли;
	
	ДокОснование.ВыгрузитьТабличнуюЧасть(ТТ);
	ЗагрузитьТабличнуюЧасть(ТТ);
	
КонецПроцедуры
//-------------------------
Процедура Переоформить()
	Если (ДокументОснование.Выбран()=1) Тогда
		Пока КоличествоСтрок()>0 Цикл
			ВыбратьСтроки();
			Пока ПолучитьСтроку()>0 Цикл
				УдалитьСтроку();
			КонецЦикла;
		КонецЦикла;
		ВводНаОсновании(ДокументОснование,1);
		Тип.ТекущаяСтрока(ТипУчета+1);
		Форма.Обновить();
	Иначе
		Предупреждение("Счет-фактуру нельзя переоформлять. Нет документа основания!");
		Возврат;
	КонецЕсли;
КонецПроцедуры      


//***********************
Процедура ЗаполнитьДок()  
	Док=СоздатьОбъект("Документ");
	                  
	Если КоличествоСтрок()>0 Тогда
		Если Вопрос("Все строки будут удалены. Продолжить?","Да+Нет")="Да" Тогда 
			УдалитьСтроки();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Док.ВыбратьПоЗначению(ДатаНачала,ДатаКонца,"Контрагент",Клиент);
	Пока Док.ПолучитьДокумент()=1 Цикл
		Если (Док.Вид()="РасходнаяНакладная") Тогда
		 	Если (Док.ПризнакНакладной<>Перечисление.ПризнРасхНакл.Продажа) Тогда
		 		Продолжить;
		 	КонецЕсли;
		 	
		 	НоваяСтрока();
		 	Документ=Док.ТекущийДокумент();
		 	Цена=Док.Итог("Сумма");
		 	Сумма=Цена;
		 	НДС=Док.Итог("НДС");
		ИначеЕсли (Док.Вид()="МарочныйОтчет") Тогда
		 	НоваяСтрока();
		 	Документ=Док.ТекущийДокумент();
//		 	НДС=Док.Итог("Сумма")-Док.Итог("Сумма")/(1+ПроцентНДС(Константа.ОсновнаяСтавкаНДС)/100);
			НДС=Док.Итог("НДС");
		 	Цена=Док.Итог("Сумма")-НДС;
		 	Сумма=Цена;           
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры                            	


Процедура ПечатьРекламации()
	
	Если Проведен()=0 Тогда
		Предупреждение("Невозможна печать не проведенного документа!");
		Возврат;
	КонецЕсли;
	Таб=СоздатьОбъект("Таблица");
	Оплата="";
	ПечВидКомпенсации="";
	Если Клиент.Страна<>Константа.СтранаРезидент Тогда
		Таб.ИсходнаяТаблица("ПоставщикРекламацияEN");
		Зн=0;
		Если ВидКомпенсации=Перечисление.ВидПолученнойКомпенсации.ОтдельныйСчет Тогда
			Оплата=Шаблон("Payment due to: [ДатаОплаты]");
		КонецЕсли;
		Если ВидКредитнойНоты=Перечисление.ВидыКредитныхНот.КомпенсацияПредпродажнаяПодготовка Тогда
			ПечВидКомпенсации="Packing costs";
		КонецЕсли;
	Иначе                                
		Если ВидКомпенсации=Перечисление.ВидПолученнойКомпенсации.ОтдельныйСчет Тогда
			Оплата=Шаблон("Apmaksўt l®dz: [ДатаОплаты]   ar pўrskait®jumu");
		КонецЕсли;
		Таб.ИсходнаяТаблица("Поставщик");
		
		Если ВидКредитнойНоты=Перечисление.ВидыКредитныхНот.ШтрафныеСанкции Тогда
			ПечатьНДС="PVN : -----";
			
		Иначе
				
			ПечатьНДС=Шаблон("PVN [СтавкаНДС]: [ОКР(итог(""НДС""),2) #N8.2] [валюта]");
			
		КонецЕсли;
			
	КонецЕсли;

	НомСтр=1;
	прд="";
	           
	Фирма.ИспользоватьДату(ДатаДок);
	Если не(проведен()=1) Тогда
//		Таб.ИсходнаяТаблица("Предоплата");
		образ="Projekts";
	иначе          
		образ="";
	КонецЕсли;
	
	Таб.ВывестиСекцию("Шапка");
	ВыбратьСтроки();
	Ном=0;        
	
	СтрокНаЛист=0;
	
	Запрос=СоздатьОбъект("ODBCRecordSet");
	ТекстЗапроса = "SELECT $УчетКомпенсацийОтПоставщиков.СутьПретензии [СутьПретензии $Справочник.Претензии]
	|						, $УчетКомпенсацийОтПоставщиков.Товар [Товар $Справочник.Номенклатура]
	|						, $УчетКомпенсацийОтПоставщиков.Количество Количество
	|						, $УчетКомпенсацийОтПоставщиков.Сумма Сумма
	|						, $УчетКомпенсацийОтПоставщиков.ПоДокументу [ПоДокументу $Документ.ПретензияПолученная]
	|						, RIGHT($УчетКомпенсацийОтПоставщиков.ПрихДокумент,9) [ПрихДокумент $Документ.ПриходнаяНакладная]
	|						, '' Комментарий
	|				FROM $Регистр.УчетКомпенсацийОтПоставщиков AS УчетКомпенсацийОтПоставщиков With (NOLOCK)
	|				WHERE (УчетКомпенсацийОтПоставщиков.IDDOC = :ТекДок)
	|				AND (УчетКомпенсацийОтПоставщиков.DEBKRED = 1)
	|				UNION ALL 
	|				SELECT $ПустойИД  СутьПретензии
	|					  , $ДокС.Товар [Товар $Справочник.Номенклатура]
	|					  , $ДокС.Количество Количество
	|					  , $ДокС.Сумма Сумма
	|					  , $ДокС.ДокументОснованиеС [ПоДокументу $Документ.ПретензияПолученная]
	|					  , RIGHT($ДокС.ПоДокументуС,9) [ПрихДокумент $Документ.ПриходнаяНакладная]
	|					  , $ДокС.Комментарий Комментарий 
	|				FROM $ДокументСтроки.Счет_фактура ДокС (NOLOCK) 
	|				WHERE (ДокС.IDDOC = :ТекДок) AND $ДокС.Товар NOT IN (SELECT $Рег.Товар 
	|																	 FROM $Регистр.УчетКомпенсацийОтПоставщиков AS Рег (NOLOCK) 
	|																	 WHERE IDDOC = :ТекДок AND DEBKRED = 1)
	|";
	
	Запрос.УстановитьТекстовыйПараметр("ТекДок",ТекущийДокумент());
	итПретензии = СоздатьОбъект("ИндексированнаяТаблица");	
	Запрос.ВыполнитьИнструкцию(ТекстЗапроса,итПретензии);
	
	НСтр=0;
	итПретензии.Группировать("Товар:*Товар; СутьПретензии:СутьПретензии","Количество,Сумма");	
	итПретензии.ВыбратьСтроки();
	Пока итПретензии.ПолучитьСтроку() = 1 Цикл
		
		Товар_=итПретензии.Товар;
		Если ПустоеЗначение(Товар_)=0 Тогда
			ПечКодПоставщика = Товар_.КодПоставщика;
		КонецЕсли;
		ПечТовар = Товар_.НаименованиеАнгл;
			
		итСутиПретензий=итПретензии.тзПотомки;
		итСутиПретензий.ВыбратьСтроки();
		Пока итСутиПретензий.ПолучитьСтроку() = 1 Цикл
	
			НСтр=НСтр+1;
			ПечСутьПретензии="";
			
			ПечНомерДок="";
			Если ПустоеЗначение(итСутиПретензий.ПрихДокумент)=0 Тогда
				ПечНомерДок=итСутиПретензий.ПрихДокумент.НомерДок;
			КонецЕсли;
			
			ПечСутьПретензии 	= итСутиПретензий.СутьПретензии.НаименованиеEN;
			ПечСутьПретензииКод = итСутиПретензий.СутьПретензии.Код;
			
			ПечДокОсн 			= итСутиПретензий.ПоДокументу;
			ПечКол 				= итСутиПретензий.Количество;
			ПечСумма 			= итСутиПретензий.Сумма;
			ПечЦена 			= ПечСумма/ПечКол;
			
			Если ПустоеЗначение(итСутиПретензий.СутьПретензии)=0 Тогда
				ПечСтрока = Шаблон("[ПечТовар] by claim [ПечСутьПретензии]   Nr. [ПечДокОсн.НомерДок] dd [ПечДокОсн.ДатаДок]");
			Иначе
				ПечСтрока = Шаблон("[итСутиПретензий.Комментарий]");
			КонецЕсли;
			
			Таб.ВывестиСекцию("Строка");
		КонецЦикла;	
	КонецЦикла;	
	
	
	//Если СтрокНалист>16 Тогда
	//	таб.newPage(); 
	//	Если РежимПечати = "Подробно" Тогда
	//		Таб.ВывестиСекцию("Пропуск");
	//	Иначе
	//		Таб.ВывестиСекцию("Пропуск|Кратко");
	//	КонецЕсли;
	//КонецЕсли;
	             
	СуммаБазВал=?(Валюта<>Константа.БазоваяВалюта,Шаблон("([Итог(""Сумма"")*Курс #N11.2] [Константа.БазоваяВалюта])"),"");
	СуммаПВНБазВал=?(Валюта<>Константа.БазоваяВалюта,Шаблон("([ОКР(итог(""НДС""),2)*Курс #N8.2] [Константа.БазоваяВалюта])"),"");
	СуммаСПВНБазВал=?(Валюта<>Константа.БазоваяВалюта,Шаблон("([(Итог(""Сумма"")+Итог(""НДС""))*Курс #N11.2] [Константа.БазоваяВалюта])"),"");

	ПечСуммаДопВал="";
	Если (Валюта=Рубли) И (ПустоеЗначение(Евро)=0) Тогда
		ИтогоДопВал = Пересчет(Окр(Итог("Сумма")+Итог("НДС"),2,1),Валюта,Курс,Евро,ДатаДок);
		ПечСуммаДопВал=Шаблон("Kopў: [ИтогоДопВал #N11.2] [Евро]");
	КонецЕсли;
	
	Таб.ВывестиСекцию("Кончик");
	Таб.Опции(0,0,0,0,ПарСтрДок);   
	Таб.параметрыСтраницы(1,100,1,5,5,40,5,2,2,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Reclamation","");

КонецПроцедуры 


Процедура Печать()
	Таб=СоздатьОбъект("Таблица");
	Оплата="";
	ПечВидКомпенсации="";
	// ANNASID >>
	РежимПечати = "КраткоПоСтрокам";
	ДопСекция="";
	// ANNASID <<
	Если ВидКлиента=Перечисление.ВидыКлиентов.Поставщик Тогда
		Если Клиент.Страна<>Константа.СтранаРезидент Тогда
			ДопСекция="|Кратко";
			Таб.ИсходнаяТаблица("ПоставщикEN");
			Меню=СоздатьОбъект("СписокЗначений");
			Меню.ДобавитьЗначение("Кратко");
			Меню.ДобавитьЗначение("КраткоПоСтрокам","Кратко по строкам");
			Меню.ДобавитьЗначение("Подробно");
			Зн=0;
			Если Меню.ВыбратьЗначение(,,Зн,,1)=0 Тогда
				Возврат;
			КонецЕсли;
			РежимПечати = Меню.ПолучитьЗначение(Зн);
			Если ВидКомпенсации=Перечисление.ВидПолученнойКомпенсации.ОтдельныйСчет Тогда
				Оплата=Шаблон("Payment due to: [ДатаОплаты]");
			КонецЕсли;
			Если ВидКредитнойНоты=Перечисление.ВидыКредитныхНот.КомпенсацияПредпродажнаяПодготовка Тогда
				ПечВидКомпенсации="Packing costs";
			КонецЕсли;
		Иначе                                
			Если ВидКомпенсации=Перечисление.ВидПолученнойКомпенсации.ОтдельныйСчет Тогда
				Оплата=Шаблон("Apmaksўt l®dz: [ДатаОплаты]   ar pўrskait®jumu");
			КонецЕсли;
			Таб.ИсходнаяТаблица("Поставщик");
			
			Если ВидКредитнойНоты=Перечисление.ВидыКредитныхНот.ШтрафныеСанкции Тогда
				ПечатьНДС="PVN : -----";
				
			Иначе
				
				ПечатьНДС=Шаблон("PVN [СтавкаНДС]: [ОКР(итог(""НДС""),2) #N8.2] [валюта]");
				
			КонецЕсли;
			
		КонецЕсли;
	ИначеЕсли ВидКлиента=Перечисление.ВидыКлиентов.Покупатель Тогда
		Если (семТекСтрана() = "LT") Тогда
			сп=СоздатьОбъект("СписокЗначений");
			сп.Установить( "Документ", ТекущийДокумент() );
			сп.Установить( "Язык", "Лит" );
			сп.Установить( "флВозврат", 1);
			ОткрытьФорму( "Отчет", сп, КаталогИБ() + "ExtForms\Печать\ПечатьНакладнойLT.ert" );
			Возврат;
		КонецЕсли;
		
		Если Клиент.Страна<>Константа.СтранаРезидент Тогда
			Таб.ИсходнаяТаблица("ПокупательСчетEN");
			Если фс.СуществуетФайл(КаталогИБ()+"en_"+СокрЛП(Валюта.Наименование)+".spl")=1 Тогда     
				Пропись(КаталогИБ()+"en_"+СокрЛП(Валюта.Наименование)+".spl");
			КонецЕсли;
		Иначе
			Таб.ИсходнаяТаблица("ПокупательСчет"+?(глКодСтраныПользователя="LV","",глКодСтраныПользователя));
		КонецЕсли;
		                                                                                   
		ПечатьНДС=Шаблон("[СтавкаНДС]: [ОКР(итог(""НДС""),2) #N8.2] [валюта]");
	КонецЕсли;
	

	НомСтр=1;
	прд="";
	           
	Фирма.ИспользоватьДату(ДатаДок);
	Если не(проведен()=1) Тогда
//		Таб.ИсходнаяТаблица("Предоплата");
		образ="Projekts";
	иначе          
		образ="";
	КонецЕсли;
	
	
	Если РежимПечати = "Подробно" Тогда
		Таб.ВывестиСекцию("Шапка");
	Иначе
		Таб.ВывестиСекцию("Шапка"+ДопСекция);
	КонецЕсли;
	ВыбратьСтроки();
	Ном=0;        
	
	СтрокНаЛист=0;
	
	Если РежимПечати="Подробно" Тогда
		Пока ПолучитьСтроку() = 1 Цикл 
			// ANNASID >>
			Если ПустоеЗначение(ПрихДокумент)=0 Тогда
				ПечНомерДок=ПрихДокумент.НомерДок;
			КонецЕсли;
			Если ПустоеЗначение(ПоДокументуС)=0 Тогда
				ПечНомерДок=ПоДокументуС.НомерДок;
			КонецЕсли;
			
			Если ПустоеЗначение(Товар)=0 Тогда
				ПечКодПоставщика = Товар.КодПоставщика;
			КонецЕсли;
			// ANNASID <<
			
			Таб.ВывестиСекцию("СтрокаТовар");
		КонецЦикла;	
	Иначе
		Если РежимПечати="КраткоПоСтрокам" Тогда
			Пока ПолучитьСтроку() = 1 Цикл 
				Таб.ВывестиСекцию("СтрокаПодробно"+ДопСекция);
				Если ВидКлиента=Перечисление.ВидыКлиентов.Покупатель Тогда
					Если (ПустоеЗначение(Товар)=0) И (Товар<>Константа.ТоварКредитнаяНота) Тогда
						ПечТовар = Шаблон("[Товар.Код] [НазваниеТовара(Товар)]");
						Если глКодСтраныПользователя="LV" Тогда
							Таб.ВывестиСекцию("СтрокаПодробноТовар"+ДопСекция);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;	
			
		Иначе
			ПолучитьСтроку();
			Таб.ВывестиСекцию("СтрокаКратко"+ДопСекция);
		КонецЕсли;
	КонецЕсли;
	
	
	//Если СтрокНалист>16 Тогда
	//	таб.newPage(); 
	//	Если РежимПечати = "Подробно" Тогда
	//		Таб.ВывестиСекцию("Пропуск");
	//	Иначе
	//		Таб.ВывестиСекцию("Пропуск|Кратко");
	//	КонецЕсли;
	//КонецЕсли;
	             
	СуммаБазВал=?(Валюта<>Константа.БазоваяВалюта,Шаблон("([Итог(""Сумма"")*Курс #N11.2] [Константа.БазоваяВалюта])"),"");
	СуммаПВНБазВал=?(Валюта<>Константа.БазоваяВалюта,Шаблон("([ОКР(итог(""НДС""),2)*Курс #N8.2] [Константа.БазоваяВалюта])"),"");
	СуммаСПВНБазВал=?(Валюта<>Константа.БазоваяВалюта,Шаблон("([(Итог(""Сумма"")+Итог(""НДС""))*Курс #N11.2] [Константа.БазоваяВалюта])"),"");

	ПечСуммаДопВал="";
	Если (Валюта=Рубли) И (ПустоеЗначение(Евро)=0) Тогда
		ИтогоДопВал = Пересчет(Окр(Итог("Сумма")+Итог("НДС"),2,1),Валюта,Курс,Евро,ДатаДок);
		ПечСуммаДопВал=Шаблон("Kopў: [ИтогоДопВал #N11.2] [Евро]");
	КонецЕсли;
	
	Если РежимПечати = "Подробно" Тогда
		Таб.ВывестиСекцию("Кончик");
	Иначе
		Таб.ВывестиСекцию("Кончик"+ДопСекция);
	КонецЕсли;
	Таб.Опции(0,0,0,0,ПарСтрДок);   
	Таб.параметрыСтраницы(1,100,1,5,5,40,5,2,2,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("СчетФактура","");

КонецПроцедуры 
//****************************************************
Процедура ПечатьСправкиКачества()
	сп = СоздатьОбъект( "СписокЗначений" );
	сп.Установить( "Документ", ТекущийДокумент() );
	ОткрытьФорму( "Отчет", сп, КаталогИБ() + "ExtForms\Печать\СправкаКачества.ert" );
КонецПроцедуры
//****************************************************
Процедура ПечатьПретензии()
	сп = СоздатьОбъект( "СписокЗначений" );
	сп.Установить( "Документ", ТекущийДокумент() );
	ОткрытьФорму( "Отчет", сп, КаталогИБ() + "ExtForms\Печать\Претензия.ert" );
КонецПроцедуры
//****************************************************
Процедура ПоКнопкеПечать()
	Если ВидКредитнойНоты=Перечисление.ВидыКредитныхНот.КомпенсацияБрак Тогда
		Меню=СоздатьОбъект("СписокЗначений");
		Меню.ДобавитьЗначение("Счет-фактура");
		Меню.ДобавитьЗначение("Справка качества");
		Меню.ДобавитьЗначение("Претензия");
		Меню.ДобавитьЗначение("Рекламация");
		Зн=0;
		Если Меню.ВыбратьЗначение(,,Зн,,1) <> 0 Тогда
			Если Зн=1 Тогда
				Печать();
			ИначеЕсли Зн=2 Тогда	
				ПечатьСправкиКачества();
			ИначеЕсли Зн=3 Тогда	
				ПечатьПретензии();
			ИначеЕсли Зн=4 Тогда	
				ПечатьРекламации();
			КонецЕсли;	
		КонецЕсли;
	ИначеЕсли Клиент.ВидКлиента = Перечисление.ВидыКлиентов.Поставщик Тогда
		
		Меню=СоздатьОбъект("СписокЗначений");
		Меню.ДобавитьЗначение("Счет-фактура");
		Меню.ДобавитьЗначение("Рекламация");

		Зн=0;
		Если Меню.ВыбратьЗначение(,,Зн,,1) <> 0 Тогда
			Если Зн=1 Тогда
				Печать();
			ИначеЕсли Зн=2 Тогда	
				ПечатьРекламации();
			КонецЕсли;	
		КонецЕсли;
		
	Иначе
		
		
		Печать();
	КонецЕсли;
КонецПроцедуры                    
//****************************************************
Процедура РасчетНДС()
    НДС=Сумма*(ПроцентНДС(СтавкаНДС)/100);          
КонецПроцедуры


//****************************************************
Процедура ПересчитатьНДС()
	ВыбратьСтроки(); 
	Пока ПолучитьСтроку()=1 Цикл
		РасчетНДС();
	КонецЦикла;
КонецПроцедуры       
                  
//------------------------
Процедура ВыборГлубины()
	// сем \\
	//ДатаОплаты=БанковскаяДата(ДатаДок,Глубина);
	ДатаОплаты=БанковскаяДата(ДатаДок,Глубина);
	// сем //
КонецПроцедуры 

//-----------------------------------------------
Процедура Взаиморасчеты()
	Форма.ИнфПодпись.Видимость(0);
	ИнформационнаяСтрока=ДолгПоКредиту(Контекст);
КонецПроцедуры

//-----------------------------------------------
Процедура ВыборКлиента(Режим="Изменение")

	КлГруппа=?(Клиент.КлГруппа.Выбран()=1,Клиент.КлГруппа,Клиент);
	
    Клиент.ИспользоватьДату("");
	Если Клиент.Выбран()=1 Тогда
		Если ВидКлиента=Перечисление.ВидыКлиентов.Покупатель Тогда
			Глубина=КлГруппа.Глубина.Получить(ДатаДок);
			Валюта=Клиент.ВалютаКредита;
			Курс=КурсДляВалюты(Валюта,Дата_Курса);
		ИначеЕсли ВидКлиента=Перечисление.ВидыКлиентов.Поставщик Тогда
			Глубина=КлГруппа.ГлубинаКредитаПоставщика.Получить(ДатаДок);
			Валюта=Клиент.ВалютаКредитаПоставщика;
			Курс=КурсДляВалюты(Валюта,Дата_Курса);
		КонецЕсли;
		
		ВыборГлубины();
		ИнформационнаяСтрока="";
		Форма.ИнфПодпись.Видимость(1);
		СтавкаНДС = семПолучитьСтавкуНДС(Клиент);
		
		//ДатаОплаты = семПолучитьДатуОплаты( Клиент, ВидКлиента, ДатаДок );
	Иначе
		Если Режим="Изменение" Тогда
			Предупреждение ("Выберите клиента!");
			Возврат;
		КонецЕсли;
		КлГруппа="";
	КонецЕсли;
	
	
КонецПроцедуры

                 
//------------------------
Процедура ВыборДаты()
	Курс=КурсДляВалюты(Валюта,Дата_Курса);
	ВыборКлиента();
КонецПроцедуры

//-----------------------------------------------
// При входе в Форму запомним промежуточные переменные
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	Если семМожноЗаписать( Контекст ) = 0 Тогда Возврат; КонецЕсли;
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД

Функция ФорматВывода( парам )
	//Если парам = "ДатаОплаты" Тогда
	//	Возврат Шаблон( "[ДатаОплаты] ([семПолучитьГлубинуКредитаКлиента( Клиент, ВидКлиента, ДатаДок )])" );
	//КонецЕсли;
КонецФункции             


Процедура ПриНачалеВыбораЗначения(Элем, Флаг)
	
	Если (Элем="ВидКредитнойНоты") Тогда
                    
		
		Флаг = 0;
		Если (ВидКлиента=Перечисление.ВидыКлиентов.Покупатель) Тогда

			Спис=СоздатьОбъект("СписокЗначений");
			//Спис.ДобавитьЗначение(Перечисление.ВидыКредитныхНот.ОбъемПродаж);
			Спис.ДобавитьЗначение(Перечисление.ВидыКредитныхНот.ОбъемПродаж);
			Спис.ДобавитьЗначение(Перечисление.ВидыКредитныхНот.БонусОтОборота);
			Спис.ДобавитьЗначение(Перечисление.ВидыКредитныхНот.АкционныйБонус);
			Спис.ДобавитьЗначение(Перечисление.ВидыКредитныхНот.Логистика);
			Спис.ДобавитьЗначение(Перечисление.ВидыКредитныхНот.УценочныйАкт);
			Спис.ДобавитьЗначение(Перечисление.ВидыКредитныхНот.КомпенсацияБрак);
			Спис.ДобавитьЗначение(Перечисление.ВидыКредитныхНот.МаркетинговыеУслуги);
			Спис.ДобавитьЗначение(Перечисление.ВидыКредитныхНот.ШтрафныеСанкции);
			            
			выб=ВидКредитнойНоты;
			Если Спис.ВыбратьЗначение(выб,,,,2)=0 Тогда
				Возврат;
			КонецЕсли;
			      
			ВидКредитнойНоты=Выб;  

			Если ( ВидКредитнойНоты = Перечисление.ВидыКредитныхНот.ОбъемПродаж )
			или ( ВидКредитнойНоты = Перечисление.ВидыКредитныхНот.БонусОтОборота ) 
			или ( ВидКредитнойНоты = Перечисление.ВидыКредитныхНот.АкционныйБонус )
			или ( ВидКредитнойНоты = Перечисление.ВидыКредитныхНот.УценочныйАкт ) 
			или ( ВидКредитнойНоты = Перечисление.ВидыКредитныхНот.КомпенсацияБрак) Тогда 
			
				ВлияетНаРеализацию=1;     
			Иначе
				ВлияетНаРеализацию=0;     
			КонецЕсли;
		
		Иначе
			
			Если ВидКомпенсации=Перечисление.ВидПолученнойКомпенсации.ОтдельныйСчет Тогда
				ВлияетНаРеализацию=1;     
			Иначе
				ВлияетНаРеализацию=0;
			КонецЕсли;
			
			Флаг = 1;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


Процедура ЗаполнитьТоварамиПредПродажПодготовки(ВыбСтатус)
	
	Запрос=СоздатьОбъект("ODBCRecordSet"); 
	
	ТекстЗапроса="SELECT $НачалоПериода.Месяц(Журн.DATE_TIME_IDDOC,Строка) Месяц,
	|					 Рег.ПрихДокумент [ПоДокументу $Документ.ПриходнаяНакладная]
		|		  FROM $РегистрОстатки.УчетТоваровПоПредпродажнойПодготовке(,,Статус = :ВыбСтатус AND Клиент=:ВыбКлиент AND Фирма=:ВыбФирма,,) as Рег
		|		  INNER JOIN _1sjourn Журн (NOLOCK) ON Журн.IDDOC=Рег.ПрихДокумент
		|		  GROUP BY $НачалоПериода.Месяц(Журн.DATE_TIME_IDDOC,Строка), Рег.ПрихДокумент";
	
	Запрос.УстановитьТекстовыйПараметр("ВыбФирма",Фирма);
	Запрос.УстановитьТекстовыйПараметр("ВыбКлиент",Клиент);
	Запрос.УстановитьТекстовыйПараметр("ВалютаДокумента",Валюта);
	Запрос.УстановитьТекстовыйПараметр("ВыбСтатус",ВыбСтатус);

	тПериоды=СоздатьОбъект("ТаблицаЗначений");
	тПериоды=Запрос.ВыполнитьИнструкцию(ТекстЗапроса);
	
	Если тПериоды.КоличествоСтрок()=0 Тогда
		Возврат;
	КонецЕсли;
	
	оВыбор = СоздатьОбъект("Общие.Диалог.Выбор");
	оВыбор.Заголовок("Выберите документы, по которым будет выставлена компенсация");
	Если оВыбор.Выбрать(тПериоды) = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	таблДок = оВыбор.Результат();
	Если таблДок.Итог("выб") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	сзДоки=СоздатьОбъект("СписокЗначений");
	таблДок.ВыбратьСтроки();
	Пока таблДок.ПолучитьСтроку()=1 Цикл
		Если таблДок.Выб=1 Тогда
			сзДоки.ДобавитьЗначение(таблДок.ПоДокументу);
		КонецЕсли;
	КонецЦикла;

	Запрос.УложитьСписокОбъектов(сзДоки,"#ВыбранныеДокументы");
	
	ТекстЗапроса="SELECT Рег.Товар [Товар $Справочник.Номенклатура],
		|				 ''+RTRIM($Номенклатура.НаименованиеАнгл)+' by Invoice Nr. '+Журн.DOCNO  Комментарий,
		|				 Рег.ПрихДокумент [ПоДокументуС $Документ.ПриходнаяНакладная],
		|				 Рег.КоличествоОстаток Количество,
		|				 $Номенклатура.КомпенсацияЗаЭтикетку*$ПоследнееЗначение.Валюты.Курс($Номенклатура.КомпенсацияВалюта,GETDATE())/$ПоследнееЗначение.Валюты.Курс(:ВалютаДокумента,GETDATE()) Цена,
		|				 Рег.КоличествоОстаток*$Номенклатура.КомпенсацияЗаЭтикетку*$ПоследнееЗначение.Валюты.Курс($Номенклатура.КомпенсацияВалюта,GETDATE())/$ПоследнееЗначение.Валюты.Курс(:ВалютаДокумента,GETDATE()) Сумма
		|		  FROM $РегистрОстатки.УчетТоваровПоПредпродажнойПодготовке(,INNER JOIN #ВыбранныеДокументы ON #ВыбранныеДокументы.VAL = ПрихДокумент,Статус = :ВыбСтатус AND Клиент=:ВыбКлиент AND Фирма=:ВыбФирма,,) as Рег
		|	  	  INNER JOIN $Справочник.Номенклатура AS Номенклатура (NOLOCK) ON Рег.Товар = Номенклатура.ID
		|		  INNER JOIN _1sjourn Журн (NOLOCK) ON Журн.IDDOC=Рег.ПрихДокумент";
		
	Запрос.УстановитьТекстовыйПараметр("ВыбФирма",Фирма);
	Запрос.УстановитьТекстовыйПараметр("ВыбКлиент",Клиент);
	Запрос.УстановитьТекстовыйПараметр("ВалютаДокумента",Валюта);
	Запрос.УстановитьТекстовыйПараметр("ВыбСтатус",ВыбСтатус);
	
	тт=Запрос.ВыполнитьИнструкцию(ТекстЗапроса);
	ЗагрузитьТабличнуюЧасть(тт);
	
	ВидКредитнойНоты=Перечисление.ВидыКредитныхНот.КомпенсацияПредпродажнаяПодготовка;
	
КонецПроцедуры

Процедура ЗаполнитьТоварамиПоПретензиям(ВыбСтатус)
	
	Запрос=СоздатьОбъект("ODBCRecordSet"); 
	                                       
	Условие = "";
	Если ПустоеЗначение(ВидКредитнойНоты)=0 Тогда
		
	Иначе
		//выбираем сначала вид кредитной ноты из вариантов выставленных счетов
		ТекстЗапроса="SELECT DISTINCT $СпрП.ВидПретензии [ВидПретензии $Перечисление.ВидыКредитныхНот]
			|		  FROM $РегистрОстатки.УчетКомпенсацийОтПоставщиков(,,Статус = :ВыбСтатус AND Поставщик=:ВыбКлиент,(СутьПретензии,ПоДокументу),) as Рег
			| 		  INNER JOIN  $Справочник.Претензии СпрП (NOLOCK) ON СпрП.ID = Рег.СутьПретензии
			|";
			
		Запрос.УстановитьТекстовыйПараметр("ВыбКлиент",Клиент);
		Запрос.УстановитьТекстовыйПараметр("ВыбСтатус",ВыбСтатус);     
		тВидыПретензий=СоздатьОбъект("ТаблицаЗначений");
		тВидыПретензий=Запрос.ВыполнитьИнструкцию(ТекстЗапроса);
		сВидыПретензий=СоздатьОбъект("СписокЗначений");
		тВидыПретензий.Выгрузить(сВидыПретензий);
		
		Если сВидыПретензий.ВыбратьЗначение(ВидКредитнойНоты,,,,1)=1 Тогда
			Если Лев(НомерДок,9)<>"170102/04" Тогда
				УстановитьНовыйНомер(Шаблон("170102/04-[Прав(ДатаГод(ДатаДок),2)]/"));
				НомерОригинальный = НомерДок;
			КонецЕсли;
		Иначе 
			Возврат;
		КонецЕсли;
		
		
	КонецЕсли;

	Запрос.УстановитьТекстовыйПараметр("ВыбВидПретензии",ВидКредитнойНоты);     
	Условие = "WHERE $СпрП.ВидПретензии = :ВыбВидПретензии";

	ТекстЗапроса="SELECT $НачалоПериода.Месяц(COALESCE(Журн.DATE_TIME_IDDOC,CONVERT(VARCHAR,GETDATE(),112)),Строка) Месяц
	|					, Рег.СутьПретензии [СутьПретензии $Справочник.Претензии]         
	|					, $СпрП.ВидПретензии [ВидПретензии $Перечисление.ВидыКредитныхНот]
	|					, Рег.ПоДокументу [ПоДокументу $Документ.ПретензияПолученная]
		|		  FROM $РегистрОстатки.УчетКомпенсацийОтПоставщиков(,,Статус = :ВыбСтатус AND Поставщик=:ВыбКлиент,(СутьПретензии,ПоДокументу),) as Рег
		| 		  INNER JOIN  $Справочник.Претензии СпрП (NOLOCK) ON СпрП.ID = Рег.СутьПретензии
		|		  LEFT JOIN _1sjourn Журн (NOLOCK) ON Журн.IDDOC=Рег.ПоДокументу
		|		"+Условие+"
		|		  GROUP BY $НачалоПериода.Месяц(COALESCE(Журн.DATE_TIME_IDDOC,CONVERT(VARCHAR,GETDATE(),112)),Строка),Рег.СутьПретензии,  $СпрП.ВидПретензии, Рег.ПоДокументу";
		
	Запрос.УстановитьТекстовыйПараметр("ВыбКлиент",Клиент);
	Запрос.УстановитьТекстовыйПараметр("ВалютаДокумента",Валюта);
	Запрос.УстановитьТекстовыйПараметр("ВыбСтатус",ВыбСтатус);     
	

	тПериоды=СоздатьОбъект("ТаблицаЗначений");
	тПериоды=Запрос.ВыполнитьИнструкцию(ТекстЗапроса);
	
	Если тПериоды.КоличествоСтрок()=0 Тогда
		Возврат;
	КонецЕсли;
	
	оВыбор = СоздатьОбъект("Общие.Диалог.Выбор");
	оВыбор.Заголовок("Выберите документы, по которым будет выставлена компенсация");
	Если оВыбор.Выбрать(тПериоды) = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	таблДок = оВыбор.Результат();
	Если таблДок.Итог("выб") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	сзДоки=СоздатьОбъект("СписокЗначений");
	таблДок.ВыбратьСтроки();
	Пока таблДок.ПолучитьСтроку()=1 Цикл
		Если таблДок.Выб=1 Тогда       
			Если ПустоеЗначение(таблДок.ПоДокументу)=0 Тогда
				сзДоки.ДобавитьЗначение(таблДок.ПоДокументу);  
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Если ПустоеЗначение(сзДоки)=0 Тогда
		УсловиеПоДокументу = " ПоДокументу IN (SELECT #ВыбранныеДокументы.VAL FROM #ВыбранныеДокументы) AND ";
		Запрос.УложитьСписокОбъектов(сзДоки,"#ВыбранныеДокументы");                                     
	Иначе
		Запрос.УстановитьТекстовыйПараметр("ВыбВидПретензии",ВидКредитнойНоты);     
		УсловиеПоДокументу = " $СпрП.ВидПретензии = :ВыбВидПретензии AND ";
	КонецЕсли;
	                    
	
	ТекстЗапроса="SELECT Рег.Товар [Товар $Справочник.Номенклатура],
		|				 ''+RTRIM($Номенклатура.НаименованиеАнгл)+' by Claim Nr. '+COALESCE(Журн.DOCNO,ЖурнПрих.DOCNO)  Комментарий,
		|				 Рег.ПоДокументу [ПоДокументуС $Документ.ПретензияПолученная],
		|				 Рег.ПрихДокумент [ПрихДокумент $Документ],
		|				 Рег.КредДокумент [ДокументОснованиеС $Документ.Счет_фактура],
		|				 Рег.КоличествоОстаток Количество,
		|				 Рег.СуммаОстаток*$ПоследнееЗначение.Валюты.Курс(:ВалютаКредита,GETDATE())/$ПоследнееЗначение.Валюты.Курс(:ВалютаДокумента,GETDATE()) Сумма,
		|				 Рег.СуммаОстаток*$ПоследнееЗначение.Валюты.Курс(:ВалютаКредита,GETDATE())/$ПоследнееЗначение.Валюты.Курс(:ВалютаДокумента,GETDATE())/Рег.КоличествоОстаток Цена
		|		  FROM $РегистрОстатки.УчетКомпенсацийОтПоставщиков(,INNER JOIN  $Справочник.Претензии СпрП (NOLOCK) ON СпрП.ID = СутьПретензии,"+УсловиеПоДокументу+" Статус = :ВыбСтатус AND Поставщик=:ВыбКлиент,
		|															(Поставщик,Товар,СутьПретензии,ПоДокументу,ПрихДокумент,КредДокумент),) as Рег
		|		  INNER JOIN $Справочник.Контрагенты СпрК (NOLOCK) ON СпрК.ID = Рег.Поставщик 
		|	  	  INNER JOIN $Справочник.Номенклатура AS Номенклатура ON Рег.Товар = Номенклатура.ID
//		|		  LEFT JOIN (SELECT DISTINCT $ДокументСтроки.ПриходнаяНакладная ДокПС (NOLOCK) ON ДокПС.IDDOC = RIGHT(Рег.ПрихДокумент,9) AND $ДокПС.Товар = Рег.Товар
		|		  LEFT JOIN _1sjourn Журн (NOLOCK) ON Журн.IDDOC=Рег.ПоДокументу
		|		  LEFT JOIN _1sjourn ЖурнПрих (NOLOCK) ON ЖурнПрих.IDDOC=RIGHT(Рег.ПрихДокумент,9)
		|";
		
	Запрос.УстановитьТекстовыйПараметр("ВыбКлиент",Клиент);
	Запрос.УстановитьТекстовыйПараметр("ВалютаДокумента",Валюта);
	Запрос.УстановитьТекстовыйПараметр("ВалютаКредита",Клиент.ВалютаКредитаПоставщика);
	Запрос.УстановитьТекстовыйПараметр("ВыбСтатус",ВыбСтатус);
	
	тт=Запрос.ВыполнитьИнструкцию(ТекстЗапроса);
	ЗагрузитьТабличнуюЧасть(тт);
	
	//ВидКредитнойНоты=Перечисление.ВидыКредитныхНот.КомпенсацияБрак;
	
КонецПроцедуры


//***********************************************
Процедура ЗаполнитьДокумент()
	
	Если (ВидКлиента=Перечисление.ВидыКлиентов.Покупатель) Тогда
		
		Предупреждение("Для клиента данная процедура не работает!");
		
	Иначе                                                           
		
		ТекСтатус=1;
		Меню=СоздатьОбъект("СписокЗначений");
		Если ВидСчетаФактуры=Перечисление.ВидыСчетовФактур.Неподтвержденная Тогда
			Меню.ДобавитьЗначение(1,"Заполнить товарами, требующими предпродажную подготовку");
			Меню.ДобавитьЗначение(2,"Заполнить товарами, требующими компенсацию по претензиям");
		Иначе
			Меню.ДобавитьЗначение(1,"Заполнить товарами, по которым уже выставлена компенсация за предпродажную подготовку");
			Меню.ДобавитьЗначение(2,"Заполнить товарами, по которым уже выставлена компенсация за претензии");
			ТекСтатус=2;
		КонецЕсли;

		ВыборВручную = 0;
		Если ПустоеЗначение(ВидКредитнойНоты)=1 Тогда
			выб=0;
			ВыборВручную = 1;
			Если Меню.ВыбратьЗначение(выб,,,,1)=1 Тогда
			Иначе
				Возврат;
			КонецЕсли;
			
			Если Выб=1 Тогда
				ВидКредитнойНоты=Перечисление.ВидыКредитныхНот.КомпенсацияПредпродажнаяПодготовка;
			ИначеЕсли Выб=2 Тогда
				//ВидКредитнойНоты=Перечисление.ВидыКредитныхНот.КомпенсацияБрак;
			КонецЕсли;
		КонецЕсли;		
		
		Если (ВидКредитнойНоты=Перечисление.ВидыКредитныхНот.КомпенсацияПредпродажнаяПодготовка) И (ВыборВручную=1) Тогда
			ЗаполнитьТоварамиПредПродажПодготовки(ТекСтатус);
		Иначе
			ЗаполнитьТоварамиПоПретензиям(ТекСтатус);
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

//======================================================================
Процедура ВыборПричиныОтказа()
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Цена = 0;
		Сумма=Цена*Количество;РасчетНДС();
	КонецЦикла;
КонецПроцедуры // ВыборПричиныОтказа

Валюта_Прежн=Валюта;
Курс_Прежн=Курс;
//-----------------------------------------------
Prompt="Информация о взаиморасчетах:";
ИнформационнаяСтрока="";





