Перем Режим;
Перем ТекЗакладка;

Процедура ПриВыбореСклада()
	Если Склад.Выбран() = 0 Тогда Возврат; КонецЕсли;
	Агент = Склад.Агент;    
	МОЛ1 = Склад.Агент;
КонецПроцедуры

Функция ВывестиОснование()
	
	Если ДокументОснование.Выбран()=1 Тогда
		Возврат ДокументОснование;
	ИначеЕсли СлужОснования.Выбран()=1 Тогда
		сзДоки=СоздатьОбъект("СписокЗначений");
		СлужОснования.ВыгрузитьТабличнуюЧасть(сзДоки,"ДокОснование");
		тОснования="";
		тОснования=сзДоки.ВСтрокуСРазделителями();
		Возврат СтрЗаменить(тОснования,"""","");
	КонецЕсли;
КонецФункции

Процедура кнОснование()
	// если документ основание уже есть, откроем его
	Если ПустоеЗначение(ДокументОснование) = 0 Тогда
		ОткрытьФорму(ДокументОснование);
		Возврат;
	КонецЕсли;
	// если документа - основания нет, позволяем выбрать его
	Если КатегорияСписания=Перечисление.КатегорииСписания.Категория6 Тогда
		Если Вопрос("Выбрать один документ (Да) или несколько (марочные,расходные нал) (Нет)?","Да+Нет")="Да" Тогда
			ДокОснование_=СоздатьОбъект("Документ");
			ДокОснование_.ВидыДляВыбора("РасходнаяНакладная,РасходнаяНакладнаяНал,МарочныйОтчет");
			Если ДокОснование_.Выбрать("Выбор документа основания для распределения себестоимости")=1 Тогда
				ДокументОснование = ДокОснование_.ТекущийДокумент();
			КонецЕсли;
		Иначе
			
			СписВидов = СоздатьОбъект("СписокЗначений");
			СписВидов.ДобавитьЗначение("Наловые");
			СписВидов.ДобавитьЗначение("Кредитные");
			выб=0;
			Если СписВидов.ВыбратьЗначение(выб,,,,0)=0 Тогда
				Возврат;
			КонецЕсли;
			
			Запрос=СоздатьОбъект("ODBCRecordSet");

			Если выб="Наловые" Тогда
				
				ТекстЗапроса="  SELECT (SELECT COUNT(IDDOC) FROM $ДокументСтроки.Служ_Основания ДокСО (NOLOCK) 
					|					  WHERE ДокСО.IDDOC = :ВыбДокСлужОсн AND $ДокСО.ДокОснование=$ВидДокумента36.МарочныйОтчет + МарочныйОтчет.IDDOC) выб
					|					, МарочныйОтчет.IDDOC [Док $Документ]
					|					, $ВидДокумента.МарочныйОтчет [Док_вид $ВидДокумента]
					|					, RTRIM(Журнал.DOCNO) + ' ('+CONVERT(VARCHAR, $НачалоПериода.День(Журнал.DATE_TIME_IDDOC,Строка),4) + ')' Документ
					|					, $МарочныйОтчет.Склад [Склад $Справочник.МестаХранения]
					|					, $МарочныйОтчет.ВсегоСуммаШ Сумма
					|			  FROM $Документ.МарочныйОтчет AS МарочныйОтчет (NOLOCK)
					|		  	  INNER JOIN _1SJOURN AS Журнал (NOLOCK) ON МарочныйОтчет.IDDOC = Журнал.IDDOC
					|			  WHERE (Журнал.DATE_TIME_IDDOC BETWEEN :Нач AND :Кон~)
					|					AND (Журнал.IDDOCDEF = $ВидДокумента.МарочныйОтчет)
					|					AND ((Журнал.CLOSED & 1) = 1)
					|					AND ($МарочныйОтчет.Склад = :ВыбСклад)
					|			  UNION ALL
					|	 		  SELECT (SELECT COUNT(IDDOC) FROM $ДокументСтроки.Служ_Основания ДокСО (NOLOCK) 
					|					  WHERE ДокСО.IDDOC = :ВыбДокСлужОсн AND $ДокСО.ДокОснование=$ВидДокумента36.РасходнаяНакладнаяНал + Док.IDDOC) выб
					|					, Док.IDDOC [Док $Документ.РасходнаяНакладнаяНал]
					|					, $ВидДокумента.РасходнаяНакладнаяНал [Док_вид $ВидДокумента]
					|					, RTRIM(Журнал.DOCNO) + ' ('+CONVERT(VARCHAR, $НачалоПериода.День(Журнал.DATE_TIME_IDDOC,Строка),4) + ')' Документ
					|					, $Док.Склад [Склад $Справочник.МестаХранения]
					|					, $Док.ВсегоСуммаШ Сумма
					|			  FROM $Документ.РасходнаяНакладнаяНал AS Док (NOLOCK)
					|		  	  INNER JOIN _1SJOURN AS Журнал (NOLOCK) ON Док.IDDOC = Журнал.IDDOC
					|			  WHERE (Журнал.DATE_TIME_IDDOC BETWEEN :Нач AND :Кон~)
					|					AND (Журнал.IDDOCDEF = $ВидДокумента.РасходнаяНакладнаяНал)
					|					AND ((Журнал.CLOSED & 1) = 1)
					|					AND ($Док.Склад = :ВыбСклад)
					|";
					
			Иначе
					ТекстЗапроса=" SELECT (SELECT COUNT(IDDOC) FROM $ДокументСтроки.Служ_Основания ДокСО (NOLOCK) 
					|					  WHERE ДокСО.IDDOC = :ВыбДокСлужОсн AND $ДокСО.ДокОснование=$ВидДокумента36.РасходнаяНакладная + Док.IDDOC) выб
					|					, Док.IDDOC [Док $Документ.РасходнаяНакладная]
					|					, $ВидДокумента.РасходнаяНакладная [Док_вид $ВидДокумента]
					|					, RTRIM(Журнал.DOCNO) + ' ('+CONVERT(VARCHAR, $НачалоПериода.День(Журнал.DATE_TIME_IDDOC,Строка),4) + ')' Документ
					|					, $Док.Склад [Склад $Справочник.МестаХранения]
					|					, $Док.ВсегоСуммаШ Сумма
					|			  FROM $Документ.РасходнаяНакладная AS Док (NOLOCK)
					|		  	  INNER JOIN _1SJOURN AS Журнал (NOLOCK) ON Док.IDDOC = Журнал.IDDOC
					|			  WHERE (Журнал.DATE_TIME_IDDOC BETWEEN :Нач AND :Кон~)
					|					AND (Журнал.IDDOCDEF = $ВидДокумента.РасходнаяНакладная)
					|					AND ((Журнал.CLOSED & 1) = 1)
					|					AND ($Док.Склад = :ВыбСклад)
					|";
					
			КонецЕсли;
					
			Нач	= НачМесяца(ДатаДок);
			Кон = ДатаДок;
			Если ВвестиПериод(Нач,Кон,"Выберите Период")=1 Тогда
			Иначе
				Возврат;
			КонецЕсли;
				
			Запрос.УстановитьТекстовыйПараметр("ВыбСклад",Склад);
			Запрос.УстановитьТекстовыйПараметр("ВыбДокСлужОсн",СлужОснования);
			Запрос.УстановитьТекстовыйПараметр("Нач",Нач);
			Запрос.УстановитьТекстовыйПараметр("Кон",Кон);
			
			тзДок=Запрос.ВыполнитьИнструкцию(ТекстЗапроса);
			тзДок.ВидимостьКолонки("Док",0);
//			тзДок.ВыбратьСтроку();
			тзДок.Сортировать("*Док");
			оВыбор = СоздатьОбъект("Общие.Диалог.Выбор");
			оВыбор.Заголовок("Выберите документы для распр. списания");
			Если оВыбор.Выбрать(тзДок) = 0 Тогда
				Возврат;
			КонецЕсли; 
			
			табл = оВыбор.Результат();
			Если табл.Итог("выб")=0 Тогда
				Возврат;
			КонецЕсли;
			оОснования = СоздатьОбъект("Документ.Служебный.Основания");
			оОснования.Создать(СлужОснования,ДатаДок);
			табл.ВыбратьСтроки(); 
			Пока табл.ПолучитьСтроку() = 1 Цикл
				Если табл.выб = 0 Тогда Продолжить; КонецЕсли;
				оОснования.Добавить(табл.Док);
			КонецЦикла;
			СлужОснования = оОснования.Записать();
			
		КонецЕсли;
	Иначе
		ДокументОснование = глВыбратьОснование(Контекст);
	КонецЕсли;

КонецПроцедуры
//----------------------
Процедура ПриВводеСтроки()
	ПриВводеСтрокиДокумента(Контекст);
КонецПроцедуры

//-----------------------------------------------
Процедура Доступ()

	Если ТекЗакладка="Документ" Тогда
	
		Если (Склад.ВидСклада=Перечисление.ВидыСкладов.Розничный)  Тогда
			Форма.КодДляРозницы.Видимость(1);
		Иначе
			Форма.КодДляРозницы.Видимость(0);
		КонецЕсли;
		                      
		ПоказатьПрод=0;
		ПоказатьКат=0;
	//	Если (Пользователь.РазрСпецСписание=1)	Тогда
		Если (КатегорияСписания=Перечисление.КатегорииСписания.Категория1) ИЛИ 
		      (КатегорияСписания=Перечисление.КатегорииСписания.Категория2) ИЛИ
			  (КатегорияСписания=Перечисление.КатегорииСписания.Категория3) ИЛИ
			  (КатегорияСписания=Перечисление.КатегорииСписания.Репрезентация) ИЛИ
			  //(КатегорияСписания=Перечисление.КатегорииСписания.Пожертвование) ИЛИ
			  (КатегорияСписания=Перечисление.КатегорииСписания.Категория4) Тогда
		    ПоказатьПрод=1;
			ПоказатьКат=1;
		КонецЕсли;
		ПоказатьПрод=1;
		                                                              
		ПоказатьДепарт=0;
		Если (КатегорияСписания=Перечисление.КатегорииСписания.Репрезентация) ИЛИ
			 (КатегорияСписания=Перечисление.КатегорииСписания.ПодаркиСотрудникам) ИЛИ
			 (КатегорияСписания=Перечисление.КатегорииСписания.ПодаркиКлиентам) ИЛИ
			 (КатегорияСписания=Перечисление.КатегорииСписания.ПраздникФирмы) ИЛИ
			 (КатегорияСписания=Перечисление.КатегорииСписания.ПодаркиКлиентамПрограммыЛояльности) 
			 Тогда
			ПоказатьДепарт=1;
		КонецЕсли;                 
		
		Форма.лДепарт.Видимость(ПоказатьДепарт);
		Форма.СкладДепартамента.Видимость(ПоказатьДепарт);
		
	
		Форма.СкидкаНакл.Видимость(ПоказатьПрод);
		Форма.лСкидкаНакл.Видимость(ПоказатьПрод);
	
		Форма.КатегорияЦены.Видимость(ПоказатьКат);
		
	//	Форма.Цена.Видимость(ПоказатьПрод);
	//	Форма.ЦенаСНДС.Видимость(ПоказатьПрод);
	//	Форма.Сумма.Видимость(ПоказатьПрод);
	//	Форма.НДС.Видимость(ПоказатьПрод);
	//	Форма.Всего.Видимость(ПоказатьПрод);
		Форма.Скидка.Видимость(ПоказатьПрод);
		Форма.ВидСкидки.Видимость(ПоказатьПрод);
		
	КонецЕсли;

	Если ДокументОснование.Вид()="ПретензияПолученная" Тогда
		Если НазваниеНабораПрав()="Администратор" Тогда
			Форма.КатегорияСписания.Доступность(1);
		Иначе
			Форма.КатегорияСписания.Доступность(0);
		КонецЕсли;
	КонецЕсли;

	Форма.Агент.Видимость(1);
	Форма.лАгент.Видимость(1);

	
//	КонецЕсли;
	
КонецПроцедуры
                     
//***************************************************************
Процедура ПриВыбореЗакладки(Ном,Имя)
	Если Ном=1 Тогда
	    Форма.ИспользоватьСлой("Основной,Документ");
	ИначеЕсли Ном=2 Тогда
		Форма.ИспользоватьСлой("Основной,Списание");  
	КонецЕсли;
	ТекЗакладка=Имя;	          
	
	Доступ();
КонецПроцедуры     

//------------------------
Процедура ПриОткрытии()
	ПроверкаРазрешенияРедактирования(Контекст);
	
	Если (ПустоеЗначение(Автор)=1) И (семЕстьПраво("Документ","Списание","Изменение загруженных автоматически")=0) Тогда
		Предупреждение("Разрешен только просмотр данного документа. Для внесения изменений обратитесь к администратору!");
		Форма.ТолькоПросмотр(1);
	КонецЕсли;
	
	УстановкаРеквизитаТип(Контекст);
	Тип.ДобавитьЗначение("Упр.");
	Тип.ДобавитьЗначение("Общ.");
	Тип.ДобавитьЗначение("Фин.");
	Тип.ТекущаяСтрока(ТипУчета+1);
	Если Форма.ТолькоПросмотр()=1 Тогда
	    Форма.КнФирма.Доступность(0);
	    Форма.КнСклад.Доступность(0);
	    Форма.ПодборПоКаталогу.Доступность(0);
		Если семЕстьПраво("Документ","Списание","Проведение загруженных автоматически")=1 Тогда
		    Форма.ОК.Доступность(1);
		Иначе
		    Форма.ОК.Доступность(0);
		КонецЕсли;
	    Форма.КнопкаПоУмолчанию("Закрыть");
	Иначе
	    Форма.КнопкаПоУмолчанию("ОК");
	КонецЕсли;  
	
	Форма.Закладки.ДобавитьЗначение("Документ","Товары");
	Форма.Закладки.ДобавитьЗначение("Списание","Списание"); 
	ПриВыбореЗакладки(1,"Документ");   
	
	Доступ();
КонецПроцедуры
//-----------------------------------------------
Процедура ИзменЕдин() 
    Пром=Единица;
	Пром.ИспользоватьДату(ДатаДок);
	Коэффициент=Единица.Коэффициент;
КонецПроцедуры 
//-----------------------------------------------
Процедура УстанКоличества();
	Если Товар.Выбран() >0 Тогда
		// цену товара при перемещении не определяем,
		// т.к.при проводке накладной будет перемещена стоимость товара 
		Если Количество=0 Тогда
			Количество=1;
		КонецЕсли;
		УстановкаЕдиницыИзмерения(Контекст);   
		//А теперь посчитаем суммы
		Цена 	= ЦенаТовараПоКатегории(Контекст,КатегорияЦены,1);
		ЦенаСНДС= Цена	* (1+ПроцентНДС(СтавкаНДС)/100);
		Сумма	= Окр(Цена	* Количество*Коэффициент,2);
		Цена 	= Сумма/(Количество*Коэффициент);
		НДС		= Сумма	* ПроцентНДС(СтавкаНДС)/100;
		Всего	= Сумма	+ НДС;
	КонецЕсли;
КонецПроцедуры        

//-----------------------------------------------
Процедура НаОсновании(Реж)
	Режим="На основании";
	ОткрытьПодбор("Журнал."+?(Реж="Нал","Кассовые","РасходныеНакладные"));
//	УстановитьЗначениеВПодборе("ВКлиент",Клиент);
КонецПроцедуры

//-----------------------------------------------
Процедура Подбор()
	Режим="Каталог";
	ОткрытьПодбор("Номенклатура","ДляПодбора");
	УстановитьЗначениеВПодборе("Склад",Склад);
КонецПроцедуры

//-----------------------------------------------
Процедура ДобавитьДокумент(Док01)
	Если Док01.Выбран()>0 Тогда 
		КатегорияЦены=Док01.КатегорияЦены;
		Если (Основ01.НайтиЗначение(Док01.ТекущийДокумент())=0) Тогда
				Основ01.ДобавитьЗначение(Док01.ТекущийДокумент(),Док01.НомерДок);
				Форма.Основ01.Видимость(1);
				Док01.ВыбратьСтроки();
				Пока Док01.ПолучитьСтроку()>0 Цикл
					Если (Док01.Товар.ВидТовара<>Перечисление.ВидыТоваров.Товар) ИЛИ (Док01.Товар.ВидТовара<>Перечисление.ВидыТоваров.Блюдо) Тогда
					Иначе
						Продолжить;    
					КонецЕсли;
					
					ФлагВыхода=0;
					Если ФлагВыхода=0 Тогда
						НоваяСтрока();
						ТовКод=Док01.ТовКод;
						Товар=Док01.Товар;
						Количество=Док01.Количество;
						Коэффициент=Док01.Коэффициент;
						Единица=Док01.Единица;
						Сумма=Док01.Сумма;
						НДС=Док01.НДС;
						Всего=Сумма+НДС;
//						СуммаСНДС=Док01.Сумма+Док01.НДС;
	//					Док01.ЦенаСНДС*Количество*Коэффициент;
						Цена=Док01.Цена;
						ЦенаСНДС=Док01.ЦенаСНДС;
					КонецЕсли;
				КонецЦикла;
				// Пометим выбранный документ на удаление
	//			Докум=СоздатьОбъект("Документ."+Док01.Вид());
	//			Докум.НайтиДокумент(Док01);
	//			Если Докум.Выбран()=1 Тогда
	//				//Закомментировано Инсталлятором МОД:Докум.Удалить(0);
	//	//Начало текста, вставленного Инсталлятором МОД                  
	////	Докум.Удалить(0);
	//				ОбъектУдалить(Докум, 0);
	//				ЗаписьЖурналаРегистрации( "Документ "+Док01.ДокументОснование.Вид()+" номер "+Док01.ДокументОснование.НомерДок+" помечен на удаление","Документы", "Документ помечен на удаление", Док01.ТекущийДокумент(), 2 );
	//	//Конец текста, вставленного Инсталлятором МОД
	//
	//				Сообщить("Документ "+Док01.Вид()+" номер "+Док01.НомерДок+" помечен на удаление");
	//			КонецЕсли;
				
	//			Если ПустоеЗначение(Докум.ДокументОснование)=0 Тогда
	//                
	//				Докум1=СоздатьОбъект("Документ."+Докум.ДокументОснование.Вид());
	//				Докум1.НайтиДокумент(Докум.ДокументОснование);
	//				Если Докум1.Выбран()=1 Тогда
	//					//Закомментировано Инсталлятором МОД:Докум.Удалить(0);
	//	//Начало текста, вставленного Инсталлятором МОД
	////					Докум.Удалить(0);
	//					ОбъектУдалить(Докум1, 0);
	//					ЗаписьЖурналаРегистрации( "Документ "+Док01.ДокументОснование.Вид()+" номер "+Док01.ДокументОснование.НомерДок+" помечен на удаление","Документы", "Документ помечен на удаление", Док01.ТекущийДокумент(), 2 );
	//	//Конец текста, вставленного Инсталлятором МОД
	//					Сообщить("Документ "+Док01.ДокументОснование.Вид()+" номер "+Док01.ДокументОснование.НомерДок+" помечен на удаление");
	//				КонецЕсли;
	//				
	//			КонецЕсли;			
				
				ВыбратьСтроки();
			Иначе
				Предупреждение("Документ "+Док01.Вид()+" номер "+Док01.НомерДок+" уже выбран!");
			КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ОбработкаПодбора(Выб)          

	Если (Режим="На основании") Тогда
		Если (Выб.Вид()="РасходнаяНакладная")Или(Выб.Вид()="РасходнаяНакладнаяНал") Тогда
			ДобавитьДокумент(Выб);
			Возврат;
		Иначе
			Предупреждение("Основанием могут быть только РасходнаяНакладная и РасходнаяНакладнаяНал!");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗапросКоличестваВПодборе(Контекст,Режим,Выб);
	УстанКоличества();
	АктивизироватьСтроку();
КонецПроцедуры
//-----------------------------------------------
Процедура ПечатьСтар()
	Фирма.ИспользоватьДату(ДатаДок);      
	Таб=СоздатьОбъект("Таблица");
	Таб.ВывестиСекцию("Шапка");
	ВыбратьСтроки();
	Ном=0;
	Пока ПолучитьСтроку() = 1 Цикл 
		Ном=Ном+1;
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;
	Таб.ВывестиСекцию("Подвал");
	Таб.Опции(0,0,0,0,ПарСтрДок);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Печать акта списания","");
КонецПроцедуры      
//-----------------------------------------------

//======================================================================
Процедура ПечатьНаценка()
	
	Состояние("Печатаем таблицу наценок...");
	Если Проведен()=0 Тогда
		Сообщить("Печать наценки возможно только для проведенного документа!");
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = "SELECT $ОборотыТоваров.Товар [Товар $Справочник.Номенклатура]
	|						, $ОборотыТоваров.Агент [Агент $Справочник.Сотрудники]
	|						, SUM($ОборотыТоваров.СуммаПЦЧ) Сумма
	|						, SUM($ОборотыТоваров.СуммаСкидки) СуммаСкидки
	|						, SUM($ОборотыТоваров.СуммаБазовая) СуммаБазовая
	|					    , ROUND(CASE WHEN SUM($ОборотыТоваров.СуммаБазовая)=0 THEN 1 ELSE (SUM($ОборотыТоваров.СуммаПЦЧ)-SUM($ОборотыТоваров.СуммаБазовая))/SUM($ОборотыТоваров.СуммаБазовая)*100 END,2) Наценка
	|					    , ROUND(CASE WHEN SUM($ОборотыТоваров.СуммаБазовая)=0 THEN 0 ELSE (SUM($ОборотыТоваров.СуммаПЦЧ)+SUM($ОборотыТоваров.СуммаСкидки)-SUM($ОборотыТоваров.СуммаБазовая))/SUM($ОборотыТоваров.СуммаБазовая)*100 END,2) Наценка2
	|				FROM $Регистр.ОборотыТоваров AS ОборотыТоваров With (NOLOCK)
	|				WHERE (ОборотыТоваров.IDDOC IN (SELECT RIGHT($Служ_ОснованияСтроки.ДокОснование,9)
	|												FROM $ДокументСтроки.Служ_Основания AS Служ_ОснованияСтроки With (NOLOCK) 
	|												WHERE Служ_ОснованияСтроки.IDDOC = :ДокОсн
	|												UNION ALL 
	|													SELECT RIGHT(:ДокументОснование,9))
	|					  OR ОборотыТоваров.IDDOC = :Док)
	|					  AND ОборотыТоваров.IDDOCDEF IN ($ВидДокумента.РасходнаяНакладнаяНал,$ВидДокумента.Списание,$ВидДокумента.МарочныйОтчет,$ВидДокумента.РасходнаяНакладная)
	|					  AND ОборотыТоваров.DATE_TIME_IDDOC >=:Нач
	|					  " + ?(флПоАгентуВОсновании=1,"AND $ОборотыТоваров.Агент = :ВыбАгент","") + "
	|				GROUP BY $ОборотыТоваров.Товар 
	|						, $ОборотыТоваров.Агент
	|";
	
	Запрос = СоздатьОбъект("ODBCRecordSet");
	Запрос.УстановитьТекстовыйПараметр("Док",ТекущийДокумент());
	Запрос.УстановитьТекстовыйПараметр("ДокОсн",СлужОснования);
	Запрос.УстановитьТекстовыйПараметр("ВыбАгент",Агент);
	Запрос.УстановитьТекстовыйПараметр("ДокументОснование",ДокументОснование);
	Запрос.УстановитьТекстовыйПараметр("Нач",НачМесяца(ДатаДок));
	
	табл = Запрос.ВыполнитьИнструкцию(ТекстЗапроса);
//	табл.ВыбратьСтроку();
	
	таб=СоздатьОбъект( "Таблица" );
	таб.ИсходнаяТаблица( "Наценка" );
	таб.ВывестиСекцию( "Заголовок" );
	таб.ВывестиСекцию( "Шапка" );
	таб.Опции(0,0,таб.ВысотаТаблицы(),0);

	табл.ВыбратьСтроки();
	Пока табл.ПолучитьСтроку() = 1 Цикл
		пНом  		= табл.НомерСтроки;

		Состояние("Выводится: "+пНом+"/"+табл.КоличествоСтрок());

		Блюдо 		= табл.Товар;

		пЗакупщик 	= Блюдо.Закупщик;
		пКод 		= Блюдо.Код;
		пКодРозница = Блюдо.КодДляРозницы;
		пТовар 		= Блюдо;
		пСебест 	= табл.СуммаБазовая;  
		пСумма 		= табл.Сумма;
		ПромВал		= Рубли;

		пНаценка 	= ?( табл.Наценка = 0, "", Формат(?(пСебест=0,пСумма/0.01,(пСумма - пСебест)/пСебест) * 100, "Ч12.2, " ) + " %" );
		пНаценка2 	= ?( табл.Наценка2 = 0, "", Формат(табл.Наценка2, "Ч12.2, " ) + " %" );

		таб.ВывестиСекцию( "Строка" );
	КонецЦикла;
	
	таб.ПараметрыСтраницы(2,100,,,,,,,,1);
	таб.ТолькоПросмотр(1);
	таб.Показать( "Наценка "+НомерДок );
	
	
КонецПроцедуры // гл

Процедура Печать()

    Если Проведен()=0 Тогда
		
		//Если семЕстьПраво( "Документ", "Списание", "Печать без проведения" ) = 0 Тогда
		//	Предупреждение("Печать непроведенного документа невозможна.","10"); СтатусВозврата( 0 ); Возврат;
		//	Возврат;
		//КонецЕсли;
		
	КонецЕсли;

	Если КатегорияСписания=Перечисление.КатегорииСписания.Категория6 Тогда
		ПечатьНаценка();
	КонецЕсли;
	
	Фирма.ИспользоватьДату(ДатаДок);
	Таб=СоздатьОбъект("Таблица");            
	
	ПечДепартамент = СкладДепартамента;         
	
	СпрКС = СоздатьОбъект("Справочник.КатегорииСписания");
	СпрКС.НайтиПоРеквизиту("КатегорияСписания",КатегорияСписания,1);
	пКатегорияСписания = ?(семТекСтрана()="LV",СпрКС.Наименование,СпрКС.ПолучитьАтрибут(семТекСтрана()));
	пКатегорияСписанияДоп = ?(семТекСтрана()="LV",КатегорияСписанияДоп,КатегорияСписанияДоп.ПолучитьАтрибут(семТекСтрана()));
	
//	Если КатегорияСписания=Перечисление.КатегорииСписания.Репрезентация Тогда
//		Таб.ИсходнаяТаблица("Репрезентация");
//	Иначе
		ПечДепартамент = "PPTD";
		Таб.ИсходнаяТаблица("Таблица1"+семТекСтрана());
//	КонецЕсли;
	
	Если ДокументОснование.Выбран() = 1	 Тогда
		пДокОснование = Шаблон("[ПеревестиНаГосЯзык(ДокументОснование.Вид())] Nr.[ДокументОснование.НомерДок] ([ДокументОснование.ДатаДок])");
	ИначеЕсли (ПустоеЗначение(СлужОснования)=0) Тогда //на основании нескольких документов
		СлужОснования.ВыбратьСтроки();
		пДокОснование="Pavadz®me Nr. ";
		Пока СлужОснования.ПолучитьСтроку() = 1 Цикл
			пДокОснование = пДокОснование+Шаблон("[СлужОснования.ДокОснование.НомерДок] ([СлужОснования.ДокОснование.ДатаДок]),");
		КонецЦикла;
	КонецЕсли;
	пДокОснование=Лев(пДокОснование,СтрДлина(пДокОснование)-1);
	Таб.ВывестиСекцию("Шапка");
	// получим закуп.цены и суммы
	// по Регистру ОстаткиТоваров
	Рег=СоздатьОбъект("Регистр.ПартииТоваров");

	ТЗ=СоздатьОбъект("ТаблицаЗначений");
	ТЗ.НоваяКолонка("Товар","Справочник.Товары");
	ТЗ.НоваяКолонка("БазоваяСтоимость","Число",18,5);
	ТЗ.НоваяКолонка("ОстатокТовара","Число",18,5);

	Рег.ВыбратьДвиженияДокумента(ТекущийДокумент());

	Пока Рег.ПолучитьДвижение() = 1 Цикл
		ТЗ.НоваяСтрока();
		ТЗ.Товар=Рег.Товар;
		ТЗ.ОстатокТовара=Рег.ОстатокТовара;
		ТЗ.БазоваяСтоимость=Рег.Стоимость;
	КонецЦикла;

	ТЗ.Свернуть("Товар","ОстатокТовара,БазоваяСтоимость");

	ВыбратьСтроки();
	Ном=0;
	ОбщСумма=0;

	Пока ПолучитьСтроку() = 1 Цикл
		// Вычислим, сколько всего данного товара
		     
		рез=0;
		Если ТЗ.НайтиЗначение(Товар,рез,"Товар") = 1 Тогда
			ТЗ.ПолучитьСтрокуПоНомеру(рез);
			
			
			Ост=ТЗ.ОстатокТовара;
			Стоим=ТЗ.БазоваяСтоимость;
			Если Ост<>0 Тогда
				Себ=Стоим/Ост;
			Иначе
				Себ=0; 
			КонецЕсли; 
			
			ЗакСумма=Себ*Количество*Коэффициент;
			ОбщСумма=ОбщСумма+ЗакСумма;
		КонецЕсли;
		
		Ном=Ном+1;
		Таб.ВывестиСекцию("Строка");
		
	КонецЦикла; 
	
	Рег=0;
	Таб.ВывестиСекцию("Подвал");
	Таб.Опции(0,0,0,0,ПарСтрДок);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Печать накладной","");
КонецПроцедуры

Процедура ПечатьАкта()
	Если Проведен()=0 Тогда
		Предупреждение("Печать непроведенного документа невозможна!");
		Возврат;
	КонецЕсли;
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Репрезент3");
	пДата = ПолучитьСтрокуДаты( ДатаДок );
	пНомерДок = СокрЛП( НомерДок );
	//найдем зак. сумму
	рег=СоздатьОбъект("Регистр.ПартииТоваров");
	рег.ВыбратьДвиженияДокумента(ТекущийДокумент());

	табл=СоздатьОбъект("ТаблицаЗначений");
	табл.НоваяКолонка("Товар","Справочник.Товары");
	табл.НоваяКолонка("Стоимость","Число",18,5);
	табл.НоваяКолонка("Остаток","Число",18,5);
	Пока рег.ПолучитьДвижение() = 1 Цикл
		табл.НоваяСтрока();
		табл.Товар=Рег.Товар;
		табл.Стоимость=Рег.Стоимость;
		табл.Остаток=Рег.ОстатокТовара;
	КонецЦикла;
	табл.Свернуть("Товар","Стоимость,Остаток");
	
	ВыбратьСтроки(); ОбщСумма = 0;
	Пока ПолучитьСтроку() = 1 Цикл
		 НомСтр = 0;
		табл.НайтиЗначение(Товар,НомСтр,"Товар");
		табл.ПолучитьСтрокуПоНомеру(НомСтр);
		Если табл.Остаток<>0 Тогда
			Сум=табл.Стоимость/табл.Остаток;
		Иначе
			Сум=0; 
		КонецЕсли; 
		ОбщСумма=ОбщСумма+(Сум*Количество*Коэффициент);
	КонецЦикла; 
       	пСумма = СокрЛ( Формат( ОбщСумма, "Ч17.2") ) +  " "+Рубли;

	Таб.Вывести();
	Таб.Опции(0,0,0,0,ПарСтрДок);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Печать репрезентационного акта","");
КонецПроцедуры

//-----------------------------------------------
Процедура ВводНового(ФлКопирования);     
	
	ЗаполнитьШапку(Контекст); //заполняем обязательные реквизиты в любом случае	
	
	Если ФлКопирования=1 Тогда
		Если КатегорияСписания = Перечисление.КатегорииСписания.БракПоставщика Тогда
			КатегорияСписания = "";
		КонецЕсли;
		СлужОснования = "";
		Возврат;	    
	КонецЕсли;
	ДатаДок=РабочаяДата();
	Склад=Константа.ОсновнойСклад;
	ПриВыбореСклада();
	//КатегорияСписания=Перечисление.КатегорииСписания.Категория1;
	//СтавкаНДС=Константа.ОсновнаяСтавкаНДС;
	СтавкаНДС=Перечисление.ЗначенияНДС.НДС0;
	КатегорияЦены=Константа.РозничнаяКатегорияЦены;    
	
	Член1=Пользователь.Сотрудник; 
	МОЛ1 = Склад.Агент;

КонецПроцедуры     

//-----------------------------------------------
Функция ПересчитатьНДС()

	Если ((КатегорияСписания=Перечисление.КатегорииСписания.Категория1) ИЛИ (КатегорияСписания=Перечисление.КатегорииСписания.Категория2)) Тогда
	
		ВыбратьСтроки();
		Пока получитьСтроку()>0 Цикл
		
			Если НомерСтроки=КоличествоСтрок() Тогда
			    
				разн=Итог("Всего")-(Итог("Сумма")+Итог("НДС"));
				Если разн<>0 Тогда
				    Всего=Всего-разн;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецФункции

Процедура семЗаполнитьПоСпискуЗаявок(сп)
	Если сп.РазмерСписка() = 0 Тогда 
		Сообщить( "Нет данных для заполнения." ); Возврат;
	Иначе
		промЗаявка = сп.ПолучитьЗначение( 1 );
	КонецЕсли;
	
	СтавкаНДС=Перечисление.ЗначенияНДС.НДС0;
//	КатегорияСписания = Перечисление.КатегорииСписания.Категория2;
	Автор = Пользователь;
	Фирма = Константа.ОсновнаяФирма;
	//Основание = "?????";
	IDD = ПолучитьУникальныйIDD();
	ТипУчета = промЗаявка.ТипУчета;
	ФинУчет = ?( ТипУчета > Упр, 1, 0 );
	
	ПризнакНакладной = Перечисление.ПризнРасхНакл.Продажа;
	ДатаДок = РабочаяДата();
	
	Склад=промЗаявка.Склад;
	Клиент=промЗаявка.Клиент;
	//Агент = Клиент.Агент;
	Агент = семПолучитьАгента( Клиент );

    КатегорияЦены=промЗаявка.КатегорияЦены;
	
	пОснование=ПеревестиНаГосЯзык("Счет")+" Nr. ";

	регРезервы = СоздатьОбъект( "Регистр.РезервыТоваров" );
	Если ПолучитьДатуТА()>ДатаДок Тогда
		регРезервы.ВременныйРасчет();
		РассчитатьРегистрыНа( ДатаДок+1 );
	КонецЕсли;
	Для н = 1 по сп.РазмерСписка() Цикл
		промЗаявка = сп.ПолучитьЗначение( н );
		пОснование = пОснование + СокрЛП(промЗаявка.НомерДок)+", ";
		промЗаявка.ВыбратьСтроки();
		Пока промЗаявка.ПолучитьСтроку()=1 Цикл
			Если промЗаявка.Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга Тогда // услуги
				НоваяСтрока();
				КомплектовщикСчет = промЗаявка.Комплектовщик;
				Счет = промЗаявка;    
				Если ПустоеЗначение(ДокументОснование) = 1 Тогда
					ДокументОснование = промЗаявка.ТекущийДокумент(); 
				КонецЕсли;
				Товар = промЗаявка.Товар; 
				ТовКод = Товар.Код;
				Количество=промЗаявка.Количество;
				Единица=промЗаявка.Единица;
				РознЦена = ЦенаТовараПоКатегории(Контекст,КатегорияЦены,1);
				Всего = Пересчет(промЗаявка.Всего,промЗаявка.Валюта,промЗаявка.Дата_Курса,Рубли,1);
				Сумма = Всего;
				НДС = 0;
				Цена = Сумма / Количество;
				ЦенаСНДС = Цена;

				//Цена=Пересчет(промЗаявка.Цена,промЗаявка.Валюта,промЗаявка.Дата_Курса,Валюта,Дата_Курса);
				//Коэффициент=промЗаявка.Коэффициент;
				//Выч_суммы_накл_сНП(Контекст,0,1);
				//Сумма=Пересчет(промЗаявка.Сумма,промЗаявка.Валюта,промЗаявка.Дата_Курса,Валюта,Дата_Курса);
				//Скидка=Пересчет(промЗаявка.Скидка,промЗаявка.Валюта,промЗаявка.Дата_Курса,Валюта,Дата_Курса);
				//ВидСкидки=промЗаявка.ВидСкидки;
				//НДС=Пересчет(промЗаявка.НДС,промЗаявка.Валюта,промЗаявка.Дата_Курса,Валюта,Дата_Курса);
				//Всего = Сумма + НДС;
//				УстанКоличества();
				Продолжить;
			КонецЕсли;                                                                 
			
//			Если промЗаявка.Резерв=0 Тогда Продолжить; КонецЕсли;
			
			РезервПоСчету = регРезервы.Остаток( промЗаявка.Товар, промЗаявка, "РезервТовара" );
			Если РезервПоСчету > 0 Тогда
				НоваяСтрока();
				КомплектовщикСчет = промЗаявка.Комплектовщик;
				Счет = промЗаявка;   
				Если ПустоеЗначение(ДокументОснование) = 1 Тогда
					ДокументОснование = промЗаявка.ТекущийДокумент(); 
				КонецЕсли;				
				Товар=промЗаявка.Товар; 
				ТовКод   = Товар.Код;
				
				Единица=промЗаявка.Единица;
				Коэффициент=промЗаявка.Коэффициент;
				Количество=РезервПоСчету/Коэффициент;
				ПояснениеСкидки=промЗаявка.ПояснениеСкидки;
				
				РознЦена = ЦенаТовараПоКатегории(Контекст,КатегорияЦены,1);
				Всего = Пересчет(промЗаявка.Всего,промЗаявка.Валюта,промЗаявка.Дата_Курса,Рубли,1);
				Сумма = Всего;
				НДС = 0;
				Цена = Сумма / Количество;
				ЦенаСНДС = Цена;
//				Цена=Пересчет(промЗаявка.Цена,промЗаявка.Валюта,промЗаявка.Дата_Курса,Рубли,1);
//				ЦенаСНДС=Пересчет(промЗаявка.ЦенаСНДС,промЗаявка.Валюта,промЗаявка.Дата_Курса,Рубли,1);
//				НДС=Пересчет(промЗаявка.НДС,промЗаявка.Валюта,промЗаявка.Дата_Курса,Рубли,1); 
				
				//цены, установленные вручную сохраняются в базе филиала при вводе на основании заявки накладной\
				//в этом случае когда накладная выписывается на клиента как фирму, оформившую заявку цены пересчитываем согласно условиям
				//в случае, когда заявка оформлена на конечного клиента - цены введенные вручную сохраняем
				//Если (промЗаявка.ВидСкидки = Перечисление.ВидСкидки.Документ) И (ПустоеЗначение(промЗаявка.КлиентФилиала)=1) Тогда
				//	Выч_суммы_накл(Контекст)
				//Иначе
				//	Выч_суммы_накл_сНП(Контекст,0,1);
				//	//УстанКоличества();
				//КонецЕсли;
				//Выч_суммы_накл(Контекст);
				//Скидка=Пересчет(промЗаявка.Скидка,промЗаявка.Валюта,промЗаявка.Дата_Курса,Валюта,Дата_Курса);
				//ВидСкидки=промЗаявка.ВидСкидки;
				//Всего = Сумма + НДС;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	пОснование = Лев(пОснование,СтрДлина(пОснование)-2);
	Основание = пОснование;

	регРезервы = 0;      
	
КонецПроцедуры

//-----------------------------------------------
Процедура ВводНаОсновании(ДокОснование)
	                  
	Член1=Пользователь.Сотрудник;         
	МОЛ1 = Склад.Агент;

	Если ДокОснование.Вид() = "Счет" Тогда
		
		Если семМожноВводитьНаОснованииСчета( ДокОснование, "Расходная" ) = 0 Тогда СтатусВозврата( 0 ); Возврат; КонецЕсли;
	//	Если семМожноВводитьНаОснованииСчета( ДокОснование, "Перемещение" ) = 0 Тогда СтатусВозврата( 0 ); Возврат; КонецЕсли;
		//Если семМожноВводитьНаОснованииСчета( ДокОснование, "Списание" ) = 0 Тогда КонецЕсли;
		
		// сем \\
		Если ДокОснование.ПометкаУдаления() = 1 Тогда
			Сообщить("Нельзя вводить документ на основании удаленного документа.","I");
			СтатусВозврата( 0 );
			Возврат;
		КонецЕсли;
		Если ДокОснование.Проведен() = 0 Тогда
			Сообщить("Нельзя вводить документ на основании непроведенного документа.","I");
			СтатусВозврата( 0 );
			Возврат;
		КонецЕсли;
		
		ЗаполнениеПоРезервам=0;
		Если (Константа.НовыйМеханизмПретензий.Получить(ДатаДок)=Да) Тогда
			ЗаполнениеПоРезервам=1;
		КонецЕсли;
		
		Если (ПустоеЗначение(ДокОснование.Склад.МестоКомплектации)=1) И (ДокОснование.Клиент <> ДокОснование.КлиентФилиала) Тогда //только для заявок введенных локально
			ЗаполнениеПоРезервам=0;
		КонецЕсли;
		
		КатегорияСписания 		= ДокОснование.КатегорияСписания;
		КатегорияСписанияДоп 	= ДокОснование.КатегорияСписанияДоп;
		
		Если  ЗаполнениеПоРезервам=1 Тогда
			СостЗаявки=глПолучитьСостояниеЗаявки(ДокОснование);
			Если СостЗаявки="Ожидает отгрузки" Тогда
				сп=СоздатьОбъект("СписокЗначений");
				сп.ДобавитьЗначение(ДокОснование);
				семЗаполнитьПоСпискуЗаявок(сп);
			Иначе
				Предупреждение("Нельзя оформлять документ на основании заявки в состоянии <"+СостЗаявки+">!");
				СтатусВозврата(0);				
			КонецЕсли;
			Возврат;
		КонецЕсли;
		
		// сем //
		Если ПустоеЗначение(ДокОснование.Комплектовщик)=0 Тогда
			Комплектовщик=ДокОснование.Комплектовщик;
		Иначе
			Комплектовщик = семВыбратьКомплектовщика();
			Если Комплектовщик.Выбран() = 0 Тогда
				Предупреждение( "Не выбран комплектовщик." );
				СтатусВозврата( 0 );
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Если (ДокОснование.Вид()="Счет") 
	ИЛИ	(ДокОснование.Вид()="Перемещение") 
	ИЛИ	(ДокОснование.Вид()="ПеремещениеДепартамент") 
	ИЛИ	(ДокОснование.Вид()="ПеремещениеНаСкладГотовойПродукции") 
	ИЛИ	(ДокОснование.Вид()="Списание")
	ИЛИ	(ДокОснование.Вид()="КалькуляционнаяКарта") 
	ИЛИ	(ДокОснование.Вид()="ПретензияПолученная") 
	ИЛИ	(ДокОснование.Вид()="СличительнаяВедомость") 
	ИЛИ	(ДокОснование.Вид()="РасходнаяНакладная") 
	ИЛИ	(ДокОснование.Вид()="РасходнаяНакладнаяНал") 
	ИЛИ	(ДокОснование.Вид()="ПриходнаяНакладная") 
	ИЛИ	(ДокОснование.Вид()="РасходнаяРеализатора") 
	ИЛИ	(ДокОснование.Вид()="ЗаказОтПокупателя") 
	ИЛИ	(ДокОснование.Вид()="ПриходнаяРеализатора") 	Тогда
		ЗаполнитьШапкуНаОсн(Контекст,ДокОснование);   
		Основание = "";
		Фирма = глФирма;
		ДатаДок=РабочаяДата(); 
		СтавкаНДС=Перечисление.ЗначенияНДС.НДС0;
		Если (ДокОснование.Вид()="Счет") Тогда
			Склад=Константа.ОсновнойСклад;
		Иначе
			Склад=ДокОснование.Склад;
		КонецЕсли;
		ПриВыбореСклада();
		Если глЕстьРеквизитШапки("Агент",ДокОснование.Вид())=1 Тогда
			Агент=ДокОснование.Агент;
		КонецЕсли;
		ДокументОснование = ДокОснование;
		
		Если ДокОснование.Вид()="ПретензияПолученная" Тогда
			
			Если семМожноВводитьНаОснованииСчета( ДокОснование, "Списание" ) = 0 Тогда КонецЕсли;
			
			Если ДокОснование.Проведен()=0 Тогда
				Предупреждение("Ввод акта списания на основании не проведенной претензии запрещен!");
				СтатусВозврата(0);
			КонецЕсли;
			
			Меню=СоздатьОбъект("СписокЗначений");
			Меню.ДобавитьЗначение(Перечисление.КатегорииСписания.Категория5);
			Если семЕстьПраво("Документ","Списание","Списание по категории 15")=1 Тогда
				Меню.ДобавитьЗначение(Перечисление.КатегорииСписания.БракПоставщика);
			КонецЕсли;
			выб="";
			Если Меню.ВыбратьЗначение(выб,"Выберите категорию списания",,2)=1 Тогда
				КатегорияСписания=выб;
			Иначе
				СтатусВозврата(0);
			КонецЕсли;

			
		КонецЕсли;
		
		Если ДокОснование.Вид()="КалькуляционнаяКарта" Тогда
			КатегорияСписания = Перечисление.КатегорииСписания.Категория6;
		КонецЕсли;
		
		ДокОснование.ВыбратьСтроки();
		Пока ДокОснование.ПолучитьСтроку()=1 Цикл                  
			//Списываем только позиции для списания
			Если (ДокОснование.Вид()="СличительнаяВедомость") Тогда
				Если ДокОснование.КоличествоРазницы>=0 Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Если ДокОснование.Вид()="ПретензияПолученная" Тогда
				Если ПустоеЗначение(ДокОснование.СутьПретензииПодтв)=1 Тогда
					Сообщить("В претензии в строке "+ДокОснование.НомерСтроки+" не подтверждена суть претензии!");
					Продолжить;
//					СтатусВозврата(0);
//					Возврат;
				КонецЕсли;
			КонецЕсли;
			
			НоваяСтрока();
			
			Если ДокОснование.Вид()="КалькуляционнаяКарта" Тогда
				Товар       = ДокОснование.Ингредиент;
			Иначе
				Товар       = ДокОснование.Товар;
			КонецЕсли;

			ТовКод      = Товар.Код;
			Если глЕстьРеквизитМнЧ("Единица",ДокОснование.Вид())=1 Тогда
				Единица     = ДокОснование.Единица;
				Коэффициент = ДокОснование.Коэффициент;
			Иначе
				Единица 	= глБазоваяЕдиницаИзмерения(Товар);
				Коэффициент = 1;				
			КонецЕсли;
			Если (ДокОснование.Вид()="СличительнаяВедомость") Тогда
				Количество  = -ДокОснование.КоличествоРазницы;
			Иначе
				Количество  = ДокОснование.Количество;
			КонецЕсли;
			
			Если не(ДокОснование.Вид()="ПеремещениеНаСкладГотовойПродукции") И (не(ДокОснование.Вид()="Перемещение")) Тогда
				
				Если глЕстьРеквизитМнЧ("НДС",ДокОснование.Вид())=1 Тогда
					Цена=?(ДокОснование.Количество=0,ДокОснование.Сумма+ДокОснование.НДС,(ДокОснование.Сумма+ДокОснование.НДС)/ДокОснование.Количество);
				Иначе
					Попытка
						Цена=?(ДокОснование.Количество=0,ДокОснование.Сумма,(ДокОснование.Сумма)/ДокОснование.Количество);
					Исключение
					КонецПопытки;
				КонецЕсли;
//				Цена        = ДокОснование.Цена;
				
				Если Не(ДокОснование.Вид()="СличительнаяВедомость") Тогда
					Если глЕстьРеквизитМнЧ("НДС",ДокОснование.Вид())=1 Тогда
						Сумма       = ДокОснование.Сумма+ДокОснование.НДС;
					Иначе
						Сумма       = ДокОснование.Сумма;
					КонецЕсли;
				Иначе
					Выч_суммы_накл(Контекст);
				КонецЕсли;
			КонецЕсли;
			
			Попытка
				Если Найти(ДокОснование.Вид(),"Перемещение")=0 Тогда
					НДС		= Сумма*ПроцентНДС(СтавкаНДС)/100;
					//НДС 	= ДокОснование.НДС;
					//ЦенаСНДС= ДокОснование.ЦенаСНДС;
					ЦенаСНДС= Цена*(1+ПроцентНДС(СтавкаНДС)/100);
				Иначе
					//  
					УстанЦеныРасх(Контекст);
					НДС		= Сумма*ПроцентНДС(СтавкаНДС)/100;
					ЦенаСНДС= Цена*(1+ПроцентНДС(СтавкаНДС)/100);
				КонецЕсли;
			Исключение
			КонецПопытки;
			Всего=Сумма+НДС;
			
			Если ДокОснование.Вид() = "РасходнаяНакладнаяНал" Тогда
				Если ПустоеЗначение(ДокОснование.ДокументОснование)=0 Тогда
					ДокументОснование = ДокОснование.ДокументОснование;
					Основание=ПеревестиНаГосЯзык("Счет")+" Nr. "+ СокрЛП(ДокументОснование.НомерДок);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Предупреждение("Акт списания нельзя вводить на основании выбранного вида документа!!!");
		СтатусВозврата(0);
	КонецЕсли; 
КонецПроцедуры    

Процедура ПриОкончанииРедактированияСтроки()
	глДобавитьТоварДляИзменения(Товар);
КонецПроцедуры

Процедура ПриУдаленииСтроки()
	глДобавитьТоварДляИзменения(Товар);
КонецПроцедуры

//-----------------------------------------------
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//Процедура ОбработкаВыбораЗначения(ВыбЗнач,ИдЭлДиал,ФлСтОбр)
//	Если ИдЭлДиал = "Агент" Тогда
//	    Если ОчищениеТаблЧасти(Контекст) = 0 Тогда
//	        ФлСтОбр = 0;
//	    КонецЕсли;
//	КонецЕсли;
//КонецПроцедуры 
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// При входе в Форму запомним промежуточные переменные
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
//	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	Если семМожноЗаписать( Контекст ) = 0 Тогда Возврат; КонецЕсли;
	              
	Если ((КатегорияСписания=Перечисление.КатегорииСписания.Репрезентация) ИЛИ 
			  (КатегорияСписания=Перечисление.КатегорииСписания.ПодаркиСотрудникам) ИЛИ 
			  (КатегорияСписания=Перечисление.КатегорииСписания.ПодаркиКлиентам) ИЛИ 
			  (КатегорияСписания=Перечисление.КатегорииСписания.ПраздникФирмы)) Тогда
			  	                                          
	  	Если ПустоеЗначение(СкладДепартамента)=1 Тогда
			Сообщить("В данной категории списания в случае, если не указан департамент - затраты пойдут на структуру агента!");
		Иначе
			Если СкладДепартамента.Собственный=1 Тогда
				Сообщить("В данной категории списания списания на собственный департамент оформляются через агента!");
			КонецЕсли;			
	  	КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД

//При проведении проверяем наличие коэффициентов каждой строчки, без этого нельзя провадить.
Процедура кнПровестиПриНажатии(Реж="Закрыть")
	                                          
	Если Константа.ДатаЗапретаРедактирования >= ДатаДок Тогда
		Предупреждение("Дата запрета редактирования, проведение невозможно!");	                                                         
		СтатусВозврата(0);
		Возврат;		
	КонецЕсли;

	ПриЗаписи();
	рез=Провести(); 
	Если (СравнитьТА()=-1) И (рез=1) И (ПустоеЗначение(спИзмененныеТовары)=0) Тогда
		глПровестиДокументыПоТоварам(Контекст);
	КонецЕсли;
	
	Если Реж="Закрыть" Тогда
		Форма.Закрыть();
	КонецЕсли;
КонецПроцедуры

Процедура ПриНачалеВыбораЗначения(ИдЭлем,ФлСт)
	
	Если ИдЭлем="КатегорияСписания" Тогда
		ФлСт = 0;
		СтатусВозврата(0);
		Меню=СоздатьОбъект("СписокЗначений");
		Для н = 1 По Перечисление.КатегорииСписания.КоличествоЗначений() Цикл
			
			Если (Перечисление.КатегорииСписания.ЗначениеПоНомеру(н)=Перечисление.КатегорииСписания.Категория5) И (семЕстьПраво("Документ","Списание","Списание по категории 5")=1) Тогда
			ИначеЕсли (Перечисление.КатегорииСписания.ЗначениеПоНомеру(н)=Перечисление.КатегорииСписания.Категория5) ИЛИ (Перечисление.КатегорииСписания.ЗначениеПоНомеру(н)=Перечисление.КатегорииСписания.БракПоставщика) Тогда
				Продолжить; //можно выбрать только на основании Претензии
			КонецЕсли;
			Меню.ДобавитьЗначение(Перечисление.КатегорииСписания.ЗначениеПоНомеру(н));
		КонецЦикла;
		
		выб=КатегорияСписания;
		Если Меню.ВыбратьЗначение(выб,"Выберите категорию списания",,,2)=1 Тогда
			КатегорияСписания=выб;             
			ТекстЗапроса="SELECT КатегорииСписанияДоп.ID [Ссылка $Справочник.КатегорииСписанияДоп]
//			|					, КатегорииСписанияДоп.DESCR Наименование
			|			  FROM $Справочник.КатегорииСписанияДоп AS КатегорииСписанияДоп With (NOLOCK)
			|			  INNER JOIN $Справочник.КатегорииСписания AS КатегорииСписания With (NOLOCK) ON КатегорииСписанияДоп.PARENTEXT = КатегорииСписания.ID
			|			  WHERE (КатегорииСписанияДоп.ISMARK = 0) AND $КатегорииСписания.КатегорияСписания = :ВыбКатегорияСписания
			|";

			КатегорияСписанияДоп="";
			
			Запрос = СоздатьОбъект("ODBCRecordSet");
			Запрос.УстановитьТекстовыйПараметр("ВыбКатегорияСписания",КатегорияСписания);
			Спис = СоздатьОбъект("СписокЗначений");
			Запрос.ВыполнитьИнструкцию(ТекстЗапроса,Спис);
			Если Спис.РазмерСписка()=0 Тогда
				Возврат;
			КонецЕсли;
			Спис.ВыбратьЗначение(КатегорияСписанияДоп,,,,1);     
			
			Если ПустоеЗначение(КатегорияСписанияДоп)=1 Тогда
				КатегорияСписания="";
			КонецЕсли;
			
		КонецЕсли;
		
		Доступ();
	КонецЕсли;
	
КонецПроцедуры

Форма.ИспользоватьЗакладки(1);  

