//---------------------------------------------
Функция ПроверкаДублей() 
	// Эта процедура проверяет спецификацию документа на дубли 
	СписокДок=СоздатьОбъект("СписокЗначений");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Док=ДокументАО;
		Если Док.Выбран()=0 Тогда
			Продолжить;
		КонецЕсли;
		Если СписокДок.НайтиЗначение(Док)<>0 Тогда
			Возврат 1;
		КонецЕсли;
		СписокДок.ДобавитьЗначение(Док,"");
	КонецЦикла;
	Возврат 0;
КонецФункции 
//---------------------------------------------
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаПроведения() Далее
//Конец текста, вставленного Инсталлятором МОД
Процедура стар_ОбработкаПроведения()
//Закомментировано Инсталлятором МОД:Процедура ОбработкаПроведения()  
	Если семМожноПровести( Контекст ) = 0 Тогда Возврат; КонецЕсли;
	//Если ДатаДок>ТекущаяДата() Тогда
	//	НеПроводить(Контекст,"Нельзя проводить документ будущей датой!");
	//	Возврат;
	//КонецЕсли;  
	Если ПроверкаДублей()=1 Тогда 
		НеПроводить(Контекст,"В табличной части два одинаковых документа!");
		Возврат;
	КонецЕсли;
	Фирма.ИспользоватьДату(ДатаДок);
	СуммаРублевая=Сумма;
	ПромОст = ВыданнаяСумма - Сумма;
	Ост=ПромОст;
	Если Константа.МетодРасчетаСебестоимостиУправленческогоУчета.Выбран()=1 Тогда
		// учет Упр. ведется
		Регистр.Касса.Валюта=Валюта;
		Если Ост>0 Тогда 
			Регистр.Касса.Наличность=Ост;           
			Регистр.Касса.ДвижениеПриходВыполнить();
		ИначеЕсли Ост<0 Тогда
			Регистр.Касса.Наличность=-Ост;           
			Регистр.Касса.ДвижениеРасходВыполнить();
		КонецЕсли;		
	КонецЕсли;
	ПромОст=Ост;  
	ЗакраваемСумму=Итог("ОплаченоФакт"); 
	Если ЗакраваемСумму<>0 Тогда 
		Если ТипУчета<Фин Тогда  // по Упр. учету	
			ПромФирма=Фирма; 
			Регистр.ВзаиморасчетыСотрудников.ДвижениеРасход(ПромФирма,Сотрудник,ЗакраваемСумму); 
		КонецЕсли;
		Если ТипУчета>Упр Тогда  // по Фин. учету
			ПромФирма=Фирма; 
			Регистр.ВзаиморасчетыСотрудников.ДвижениеРасход(ПромФирма,Сотрудник,ЗакраваемСумму); 
		КонецЕсли;
	КонецЕсли;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()>0 Цикл
		Если (ДокументАО.Валюта<>Рубли) Тогда
			ПромСумма=Окр(Пересчет(ОплаченоФакт,Рубли,ДокументАО.Курс,ДокументАО.Валюта,ДокументАО.ДатаДок),2);
		Иначе
			ПромСумма=ОплаченоФакт;
		КонецЕсли; 
		ПромВал=ДокументАО.Клиент.ВалютаКредитаПоставщика;		
		Если ПромВал.Выбран()=0 Тогда
			ПромВал=ДокументАО.Клиент.ВалютаВзаиморасчетов;
		КонецЕсли;
		Если ПромВал.Выбран()=0 Тогда
			ПромВал=Константа.ВалютаВзаиморасчетов;
		КонецЕсли;
		Если ПромВал.Выбран()=0 Тогда
			НеПроводить(Контекст,"Не найдена валюта кредита клиента!");
			Возврат;
		КонецЕсли; 
		Если ДокументАО.ТипУчета<Фин Тогда  // по Упр. учету 
			Если ОплаченоФакт<>0 Тогда
				ПромФирма=Фирма;
				Если ПромВал<>Рубли Тогда
					Долг=Окр(Пересчет(ПромСумма,Рубли,ДокументАО.Курс,ПромВал,ДокументАО.ДатаДок),3);   
				Иначе
					Долг=ПромСумма;
				КонецЕсли; 
				Регистр.ВзаиморасчетыПоставщиков.Фирма=ПромФирма.ТекущийЭлемент();
				Регистр.ВзаиморасчетыПоставщиков.Клиент=ДокументАО.Клиент;
				Регистр.ВзаиморасчетыПоставщиков.ВидОтгрузки=ОтгрузкаТоваровИУслуг;
				Регистр.ВзаиморасчетыПоставщиков.КредДокумент=ДокументАО;
				Регистр.ВзаиморасчетыПоставщиков.Долг=Долг;
				Регистр.ВзаиморасчетыПоставщиков.КодОперации=НеоплаченнаяОтгрузкаТовараКупленного;
				Регистр.ВзаиморасчетыПоставщиков.ДвижениеПриходВыполнить();
			КонецЕсли;   
		КонецЕсли;
		//--------------------
		Если ДокументАО.ТипУчета>Упр Тогда  // по Фин. учету  
			Если ОплаченоФакт<>0 Тогда 
				ПромФирма=Фирма;
				Регистр.ВзаиморасчетыПоставщиков.Фирма=ПромФирма;
				Регистр.ВзаиморасчетыПоставщиков.Клиент=ДокументАО.Клиент;
				Регистр.ВзаиморасчетыПоставщиков.ВидОтгрузки=ОтгрузкаТоваровИУслуг;
				Регистр.ВзаиморасчетыПоставщиков.КредДокумент=ДокументАО;
				Регистр.ВзаиморасчетыПоставщиков.Долг=ПромСумма;
				Регистр.ВзаиморасчетыПоставщиков.КодОперации=НеоплаченнаяОтгрузкаТовараКупленного;
				Регистр.ВзаиморасчетыПоставщиков.ДвижениеПриходВыполнить();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаПроведения()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	Если ПроведениеМОД(Контекст)=1 Тогда
	    Возврат;
	КонецЕсли;
	стар_ОбработкаПроведения();
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаУдаленияПроведения()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	Если ПроведениеПоАлгоритмуМОД=1 Тогда
	    Возврат;
	КонецЕсли;
	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД

//---------------------------------------------
