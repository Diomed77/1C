// ********************
//
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаПроведения() Далее

//Функция СоздатьКомплектациюЗаявкиФакт(пДок)
////Создаем комплектацию заявки
//	ДокКомпФакт=СоздатьОбъект("Документ.КомплектацияЗаявкиФакт");
////	ДокКомплектацияМобил=СоздатьОбъект("Документ.КомплектацияМобил");
//	
//	НайденДокКомплФакт=0;
////	НайденКомплектацияМобил=0;
//	
//	ДокПодч=СоздатьОбъект("Документ");
//	ДокПодч.ВыбратьПодчиненныеДокументы(пДок.ДатаДок,,пДок);
//	Пока ДокПодч.ПолучитьДокумент() = 1 Цикл
//		Если (ДокПодч.Вид()="КомплектацияЗаявкиФакт") И (ДокПодч.Проведен()=1) Тогда
//			ДокКомпФакт.НайтиДокумент(ДокПодч.ТекущийДокумент());
//			НайденДокКомплФакт=1;
//		КонецЕсли;	
//	КонецЦикла;
//		
//	Если НайденДокКомплФакт=0 Тогда
//		ДокКомпФакт.Новый();
//		ЗаполнитьШапку(ДокКомпФакт); 
//		
////		ДокКомпФакт.Новый();
////		ДокКомпФакт.НомерДок = ;
////		ДокКомпФакт.ДатаДок = ;
//		ДокКомпФакт.ПоСчету = ДокКомплектацияМобил.ПоСчету;
//		ДокКомпФакт.Комплектовщик = ТекКомплектовщик;
//		ДокКомпФакт.СкладЗагрузки = ДокКомплектацияМобил.СкладЗагрузки;
//		ДокКомпФакт.Аннулировать = ДокКомплектацияМобил.Аннулировать;
//		ДокКомпФакт.НомерОриг = ДокКомплектацияМобил.НомерОриг;
//		ДокКомпФакт.Фирма = ДокКомплектацияМобил.Фирма;
//		ДокКомпФакт.Автор = ДокКомплектацияМобил.Автор;
//		ДокКомпФакт.Основание = ДокКомплектацияМобил.Основание;
////		ДокКомпФакт.ТипУчета = ДокКомплектацияМобил.ТипУчета;
////		ДокКомпФакт.ФинУчет = ДокКомплектацияМобил.ФинУчет;
//		ДокКомпФакт.ТоварШапки = ДокКомплектацияМобил.ТоварШапки;
////		ДокКомпФакт.IDD = ;
//		ДокКомпФакт.НеВыгружать = ДокКомплектацияМобил.НеВыгружать;
//		
//		ДокКомплектацияМобил.ВыбратьСтроки();
//		Пока ДокКомплектацияМобил.ПолучитьСтроку() = 1 Цикл
//			ДокКомпФакт.НоваяСтрока();
//			ДокКомпФакт.Количество = ДокКомплектацияМобил.Количество;
//			ДокКомпФакт.Товар = ДокКомплектацияМобил.Товар;
//			ДокКомпФакт.ТовКод = ДокКомплектацияМобил.ТовКод;
//			ДокКомпФакт.Коэффициент = ДокКомплектацияМобил.Коэффициент;
//			ДокКомпФакт.Единица = ДокКомплектацияМобил.Единица;
//			ДокКомпФакт.КоличествоФакт = ДокКомплектацияМобил.КоличествоФакт;
//			ДокКомпФакт.СутьПретензии = ДокКомплектацияМобил.СутьПретензии;
//			ДокКомпФакт.ТоварЗамена = ДокКомплектацияМобил.ТоварЗамена;
//			ДокКомпФакт.НомерСтрокиЗамены = ДокКомплектацияМобил.НомерСтрокиЗамены;
//			ДокКомпФакт.СрокРеализ = ДокКомплектацияМобил.СрокРеализ;
//			ДокКомпФакт.ВидУведомления = ДокКомплектацияМобил.ВидУведомления;
//			ДокКомпФакт.СрокРеализДоп = ДокКомплектацияМобил.СрокРеализДоп;
//		КонецЦикла;
//
//		ДокКомпФакт.АвтоВремяТекущее();
//		ОбъектЗаписать(ДокКомпФакт,);
//		ДокКомпФакт.АвтоВремяТекущее();
//	//	ДокКомп.УстановитьВремя(Часы_,Мин_,Сек_+1);
//		ДокКомпФакт.Провести(1);
//		ЗаписьЖурналаРегистрации( "Комплектация "+ДокКомпФакт.НомерДок+" по заявке "+пДок.НомерДок,, "Комплектация заявок", пДок.ТекущийДокумент(), 2 );
//		Возврат 1;
//	Иначе
//		Возврат 0;
//	КонецЕсли;
//КонецФункции // СоздатьКомплектациюЗаявки


Процедура стар_ОбработкаПроведения()
//	СоздатьКомплектациюЗаявкиФакт(ПоСчету);
КонецПроцедуры	

Процедура ОбработкаПроведения()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	Если ПроведениеМОД(Контекст)=1 Тогда
	    Возврат;
	КонецЕсли;
	стар_ОбработкаПроведения();
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД
//Начало текста, вставленного Инсталлятором МОД

Процедура ОбработкаУдаленияПроведения()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	Если ПроведениеПоАлгоритмуМОД=1 Тогда
	    Возврат;
	КонецЕсли;
	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	
	Если (НазваниеНабораПрав()="Администратор") ИЛИ (семЕстьПраво("Документ","КомплектацияЗаявкиФакт","Проведение задним числом")=1) Тогда
	ИначеЕсли ДатаДок <> ПолучитьДатуТА() Тогда // для случаев когда у пользователя есть права на изменение проведенных документов		
		Предупреждение("У Вас нет прав на отмену проведения документа задним числом");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	ПриОтменеПроведенияДокумента(ТекущийДокумент());

КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД


