Процедура ВводНового( Скопирован, Объект )
	Если семЕстьПраво( "Документ","КоррекцииРасчетаБонусов", "Ввод нового" ) = 0 Тогда 
		Предупреждение("У Вас нет прав вводить новый документ.");
		СтатусВозврата(0); Возврат; 
	КонецЕсли;
	Если Скопирован = 1 Тогда
		Если ( Объект.Автор <> Пользователь ) и ( НазваниеНабораПрав() <> "Администратор" ) Тогда
			Предупреждение( "Возможен просмотр только своих документов!" );
			СтатусВозврата( 0 );
			Возврат;
		КонецЕсли;
	Иначе
		ЗаполнитьШапку( Контекст);
	КонецЕсли;
КонецПроцедуры


Процедура УправлениеДиалогом()
	Форма.ТолькоПросмотр(Проведен());
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.кнЗаполнить.Доступность(0);
		Форма.кнПровести.Доступность(0);
		Форма.кнЗаписать.Доступность(0);
	Иначе
		Если семЕстьПраво( "Документ","КоррекцииРасчетаБонусов", "Проведение" ) = 0 Тогда
			Форма.кнПровести.Видимость( 0 );
			Форма.кнЗаписать.Видимость( 1 );
		Иначе
			Форма.кнПровести.Видимость( 1 );
			Форма.кнЗаписать.Видимость( 0 );
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	Если ( Автор <> Пользователь ) и ( НазваниеНабораПрав() <> "Администратор" ) Тогда
		Предупреждение( "Возможен просмотр только своих документов!" );
		СтатусВозврата( 0 );
		Возврат;
	КонецЕсли;
	УправлениеДиалогом();
КонецПроцедуры 

Процедура  ПриЗаписи()
	ДатаВвода = ДатаДок;
КонецПроцедуры

Процедура кнЗаполнить()
	Если ГруппаАгентов.Выбран() = 0 Тогда
		Предупреждение( "Не выбрана группа агентов!" );
		Возврат;
	КонецЕсли;
	Если ГруппаАгентов.ЭтоГруппа() = 0 Тогда
		Предупреждение( "Не выбрана группа агентов!" );
		Возврат;
	КонецЕсли;
	Если КоличествоСтрок() > 0 Тогда
		Ответ = Вопрос( "Табл. часть будет заполнена заново." + РазделительСтрок +"Сохранить данные?", "Да+Нет+Отмена"  );
		Если Ответ = "Да" Тогда 
			ТаблЧасть = СоздатьОбъект( "ТаблицаЗначений" );
			ВыгрузитьТабличнуюЧасть( ТаблЧасть ); 
			УдалитьСтроки();
		ИначеЕсли Ответ = "Нет" Тогда УдалитьСтроки();
		ИначеЕсли Ответ = "Отмена" Тогда Возврат;
		КонецЕсли;
	КонецЕсли;
	Запрос = СоздатьОбъект( "Запрос" );
	ТекстЗапроса = "
	|//{{ЗАПРОС(ЗапасыТоваров)
	|Обрабатывать НеПомеченныеНаУдаление;
	|Сотрудник = Справочник.Сотрудники.ТекущийЭлемент;
	|Группировка Сотрудник без упорядочивания без групп;
	|Условие (Сотрудник в ГруппаАгентов);
	|";
	Если Запрос.Выполнить( ТекстЗапроса ) = 0 Тогда Возврат; КонецЕсли;
	н = 0;
	Пока Запрос.Группировка( "Сотрудник" ) = 1 Цикл
		//пТовар = Запрос.Товар;
		//Если пТовар.Выбран() = 0 Тогда Продолжить; КонецЕсли;
		//Если пТовар.Уровень() > 3 Тогда Продолжить; КонецЕсли;
		НоваяСтрока();
		Сотрудник =  Запрос.Сотрудник;
		Если Ответ = "Да" Тогда НомСтр = 0; 
			Если ТаблЧасть.НайтиЗначение( Сотрудник, НомСтр, "Сотрудник" ) = 1 Тогда
				Оборот = ТаблЧасть.ПолучитьЗначение( НомСтр, "Оборот" );
				Прибыль = ТаблЧасть.ПолучитьЗначение( НомСтр, "Прибыль" );
				Возвраты = ТаблЧасть.ПолучитьЗначение( НомСтр, "Возвраты" );
				КоррекцияРуководителя = ТаблЧасть.ПолучитьЗначение( НомСтр, "КоррекцияРуководителя" );
			КонецЕсли;
		КонецЕсли;
		 н = н + 1; Состояние( "Добавлено "+н+" элементов." );
	КонецЦикла; 
КонецПроцедуры                     

Процедура кнКоррекцииПолучить()
	
	ИБ=СоздатьОбъект("ODBCDataBase");  
	Запрос=СоздатьОбъект("ODBCRecordSet");
	ПутьК_ИБ = "\\fstore\1C_AK_REATON\";
	Попытка
		ИБ.ПрисоединитьИБ(СокрЛП(ПутьК_ИБ),"transfer","transfer");
		Запрос.УстБД(ИБ);       	
		Сообщить("Подсоединились к базе "+ПутьК_ИБ);
	Исключение   
		Сообщить("Не удалось подключить базу данных "+ПутьК_ИБ);
		Возврат;
	КонецПопытки; 

	кБрутто = 0.689;
	Если ДатаДок>='01.01.18' Тогда
		кБрутто = 0.712;
	КонецЕсли;

	ТекстЗапроса = "SELECT --Зарплата.IDS [Объект $Справочник.Сотрудники]
	|					 RTRIM($Сотрудники.ИНН) ИНН
	|					, Сотрудники.DESCR Сотрудник
	|					, SUM($Зарплата.Дни) Дни
	|					, SUM($ПриказПоОтпуску.Заработок) Заработок
	|					, SUM($ПриказПоОтпуску.Единовременная) Премия
	|					, SUM($ПриказПоОтпуску.Единовременная)/SUM($ПриказПоОтпуску.Заработок+$ПриказПоОтпуску.Единовременная) * SUM(Зарплата.RESULT) ОтпускПремия
//	|					, NullIf(Зарплата.DATEB, '17530101') ДатаНач
//	|					, NullIf(Зарплата.DATEE, '17530101') ДатаКон
	|				FROM $ЖурналРасчетов.Зарплата AS Зарплата With (NOLOCK)
	|				INNER JOIN _1SJOURN AS Журнал With (NOLOCK) ON Зарплата.IDPARDOC = Журнал.IDDOC
	|				INNER JOIN $Документ.ПриказПоОтпуску AS ПриказПоОтпуску With (NOLOCK) ON Зарплата.IDPARDOC = ПриказПоОтпуску.IDDOC
	|				INNER JOIN $Справочник.Сотрудники AS Сотрудники With (NOLOCK) ON Зарплата.IDS = Сотрудники.ID
	|				WHERE (Зарплата.IDALG = $ВидРасчета.ОтпускОчередной) 
	|						AND (Зарплата.DATEB >= :Нач) AND (Зарплата.DATEE <= :Кон) AND ($Зарплата.Дни > 0)
	|						AND $ПриказПоОтпуску.Единовременная > 0
	|				GROUP BY RTRIM($Сотрудники.ИНН), Сотрудники.DESCR
	|";
	
	тОтпускные = СоздатьОбъект("ИндексированнаяТаблица");
	Запрос.УстановитьТекстовыйПараметр("Нач",НачМесяца(ДатаДок));
	Запрос.УстановитьТекстовыйПараметр("Кон",КонМесяца(ДатаДок));
	Запрос.ВыполнитьИнструкцию(ТекстЗапроса,тОтпускные);
	тОтпускные.ДобавитьИндекс("иИНН","ИНН");
	
	//тОтпускные.Показать();
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(Сотрудник.ПерсональныйКод)=0 Тогда
			Если тОтпускные.НайтиСтроку("иИНН",СокрЛП(Сотрудник.ПерсональныйКод),,1)>0 Тогда
				КоррекцияРуководителя = КоррекцияРуководителя-тОтпускные.ОтпускПремия*кБрутто;
				ПояснениеКоррекции = Шаблон("Отпуск на [тОтпускные.Дни] дней");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


Форма.ГруппаАгентов.ВыборГруппы(1);