Перем Режим;
Перем Валюта_Прежн;
Перем Курс_Прежн;
Перем РегОстатки;
Перем ТекЗакладка;
Перем РежимЗаполнения;

//сергей
Перем Инв;
Перем ИнвТовар;
Перем ИнвТовар1;
Перем Новый;
Перем ВыбСклад;
Перем ПоТовару,БезМестХранения;
Перем ДДок;
Перем ПоСрокам;

Перем МестХрнОт,МестХрнДо; 


Процедура УдалитьОбработанныйФайл( Каталог, пФайл, Ошибка = 0 )
	КаталогНазначения=?(Ошибка=1,"\NotProcessed","\Processed");
	
	Если ФС.СуществуетФайл(СокрЛП(Каталог)+КаталогНазначения) = 0 Тогда
		ФС.СоздатьКаталог(СокрЛП(Каталог)+КаталогНазначения);
	КонецЕсли;
	
	ВремяФайла = СтрЗаменить(ТекущееВремя(),":","");
	пФайлНов = Лев(пФайл,Найти(пФайл,".txt")-1);
	ФС.КопироватьФайл(СокрЛП(Каталог)+"\"+пФайл,СокрЛП(Каталог)+КаталогНазначения+"\"+пФайлНов+"_"+ВремяФайла+".txt",0);
	ФС.УдалитьФайл(СокрЛП(Каталог)+"\"+пФайл);
КонецПроцедуры


Процедура Доступ()
                 
	//Форма.ПриходоватьБезНДС.Видимость(0);
	
	Если ТекЗакладка="Документ" Тогда
		Форма.СтрокаС.Видимость(Пересортица+ЕстественнаяУбыль);
		Форма.Остаток.Видимость(Пересортица+ЕстественнаяУбыль);
	
		Форма.КоличествоКнижное.Видимость(1-(Пересортица+ЕстественнаяУбыль));
	                  
		Форма.ПриходоватьБезСебестоимости.Видимость(1-(Пересортица+ЕстественнаяУбыль));
		Форма.НеУчитыватьСрокиРеализации.Видимость(1-(Пересортица+ЕстественнаяУбыль));
		Если (Пересортица+ЕстественнаяУбыль) = 1 Тогда
			НеУчитыватьСрокиРеализации = 1;
		КонецЕсли;
	
		Форма.кнЗаполнить.Видимость(1-(Пересортица+ЕстественнаяУбыль));
		Форма.кнЗаполнитьОбновить.Видимость(1-(Пересортица+ЕстественнаяУбыль));
	//	Форма.кнОбновитьТекущие.Видимость(1-Пересортица);

		//Форма.кнПечать.Видимость(1-Пересортица);
		//Форма.кнПечатьИнв.Видимость(1-Пересортица);
		//Форма.кнПечатьИнвРас.Видимость(1-Пересортица);
		//Форма.кнПечатьАкт.Видимость(1-Пересортица);	
		//Форма.кнПечатьПересортица.Видимость(Пересортица);
	
		Форма.кнОбнулитьФакт.Видимость(1-(Пересортица+ЕстественнаяУбыль));	
		Форма.кнУдНулевые.Видимость(1-(Пересортица+ЕстественнаяУбыль));	
		Форма.кнУдНеизменные.Видимость(1-(Пересортица+ЕстественнаяУбыль));	
	
		Форма.КоличествоКнижное.Видимость(1-(Пересортица+ЕстественнаяУбыль));
		Форма.тСуммаКнижная.Видимость(1-(Пересортица+ЕстественнаяУбыль));    
		
		Форма.КоличествоФактическое.Видимость(1-(Пересортица+ЕстественнаяУбыль));
		Форма.СуммаФактическая.Видимость(1-(Пересортица+ЕстественнаяУбыль));
	
		Форма.Цена.Видимость(1-(Пересортица+ЕстественнаяУбыль));
		
		Форма.кнДопФункции.Видимость(1-(Пересортица+ЕстественнаяУбыль));
		
		Если ВидИнвентаризации=Перечисление.ВидыИнвентаризации.Переоценка Тогда
			//разрешаем редактировать только сумму фактическую
			Форма.ТекстПартия.Видимость(1);
			Форма.КоличествоКнижное.Доступность(0);
			Форма.НеУчитыватьСрокиРеализации.Доступность(0);
			Форма.КоличествоФактическое.Доступность(0);
			Форма.тСуммаКнижная.Доступность(0);    
			Форма.СуммаФактическая.Доступность(1);
			Форма.ДокументОснование.Видимость(1);
			Форма.ДокументКредНота.Видимость(1);
			Форма.лКредНота.Видимость(1);
		Иначе
			Форма.ТекстПартия.Видимость(0);
			Форма.СуммаФактическая.Доступность(0);
			Форма.ДокументОснование.Видимость(0);
			Форма.ДокументКредНота.Видимость(0);
			Форма.лКредНота.Видимость(0);
		КонецЕсли;
		
		Форма.кнЗагрузитьТерминал.Видимость(?(Склад.ВидСклада=Перечисление.ВидыСкладов.Розничный,0,1));
		Форма.кнЗагрузитьИзТелефона.Видимость(?(Склад.ВидСклада=Перечисление.ВидыСкладов.Розничный,1,0));
		
	КонецЕсли; 
	
	Если Проведен() = 1 Тогда
		Форма.ПриходоватьБезСебестоимости.Доступность(0);
	КонецЕсли;
	
	Форма.СрокРеализ.Видимость(1);
	
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВводеСтроки()
	ПриВводеСтрокиДокумента(Контекст);
КонецПроцедуры

//-----------------------------------------------
Процедура ВычОст(Тов)
	Коэфф=0;
	Спр=СоздатьОбъект("Справочник.Единицы");
	Спр.ИспользоватьДату(ДатаДок);
	Спр.ИспользоватьВладельца(Тов);
	Спр.ВыбратьЭлементы();
	Пока Спр.ПолучитьЭлемент()>0 Цикл
		Если Спр.Единица=Тов.БазоваяЕдиницаИзмерения Тогда
			Ед=Спр.ТекущийЭлемент();
			Коэфф=Спр.Коэффициент;
			
			//***********************************************************
			//<<Алгоритм Успеха>> (begin)
			//
			//Ост=((РегОстатки.Остаток(Тов,Склад,"ОстатокТовара")/Коэфф));
			//Для начала уберем старые фильтры  
			
			РегОстатки.УстановитьЗначениеФильтра("Фирма",,0); 
			РегОстатки.УстановитьЗначениеФильтра("Товар",,0);
			РегОстатки.УстановитьЗначениеФильтра("Склад",,0);
			//теперь проставим новые			
			спСтатусы=СоздатьОбъект("СписокЗначений");
			спСтатусы.ДобавитьЗначение("");
			спСтатусы.ДобавитьЗначение(Принятый);
			спСтатусы.ДобавитьЗначение(Купленный);
			спСтатусы.ДобавитьЗначение(Произведенный);
			
			РегОстатки.УстановитьЗначениеФильтра("Фирма",Фирма,1); 
			РегОстатки.УстановитьЗначениеФильтра("Товар",тов,1); 
			РегОстатки.УстановитьЗначениеФильтра("Статус",спСтатусы,2); 
			Если ПустоеЗначение(Склад)=0 Тогда
				РегОстатки.УстановитьЗначениеФильтра("Склад",Склад,1);     
			КонецЕсли;
		
			// все ... можно выводить
			ТаблИтогов=СоздатьОбъект("ТаблицаЗначений"); 
			Если ((Пересортица+ЕстественнаяУбыль)=1) Тогда
			Иначе     
				РегОстатки.ВыгрузитьИтоги(ТаблИтогов,1,1);
				Если ВидИнвентаризации = Перечисление.ВидыИнвентаризации.Переоценка Тогда
					ТаблИтогов.Свернуть("Партия","ОстатокТовара,Стоимость,ПродСтоимость");
				ИначеЕсли НеУчитыватьСрокиРеализации=1 Тогда
					ТаблИтогов.Свернуть("Товар","ОстатокТовара,Стоимость,ПродСтоимость")
				Иначе
					//ТаблИтогов.Свернуть("СрокРеализации","ОстатокТовара,Стоимость,ПродСтоимость,НДС");
					ТаблИтогов.Свернуть("СрокРеализации","ОстатокТовара,Стоимость,ПродСтоимость");
				КонецЕсли;
			КонецЕсли;
			ТаблИтогов.ВыбратьСтроки();
			
			Если ТаблИтогов.КоличествоСтрок()>0 Тогда
				Пока ТаблИтогов.ПолучитьСтроку()=1 Цикл
				//<<Алгоритм Успеха>> (end) 
				//************************************************************	
					НоваяСтрока();
					Товар=Тов;
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					ТовКод   = Товар.Код;
					КодДляРозницы   = ?(Товар.ДляРозницы=1,Товар.КодДляРозницы,"");
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					Единица=Ед;
					Коэффициент=Коэфф;   
					//***********************************************************
					//<<Алгоритм Успеха>> (begin)
					//
					Попытка                      
						//Где проверка деления на ноль
						Если ТаблИтогов.ОстатокТовара = 0 Тогда  
							Цена	 = ТаблИтогов.Стоимость;
							ПродЦена = ТаблИтогов.ПродСтоимость;
						Иначе
							Цена	 = ТаблИтогов.Стоимость/ТаблИтогов.ОстатокТовара;
							ПродЦена = ТаблИтогов.ПродСтоимость/ТаблИтогов.ОстатокТовара;
						КонецЕсли;
					Исключение
						Цена	 = 0;
						ПродЦена = 0;
					КонецПопытки;
					//сем\\
					//ВалютаТовара=тов.ВалютаУчета;
					ВалютаТовара			= Рубли;
					//сем//
					ПромВал					= Валюта;
					Цена					= Пересчет(Цена,ВалютаТовара,Дата_курса,ПромВал,Курс);
					КоличествоКнижное		= ТаблИтогов.ОстатокТовара;//Ост;
					СуммаКнижная			= ТаблИтогов.Стоимость;
					СуммаПродКнижная		= ТаблИтогов.ПродСтоимость;
					КоличествоФактическое	= ТаблИтогов.ОстатокТовара;//Ост;
					СуммаФактическая		= ТаблИтогов.Стоимость;//КоличествоФактическое*Коэффициент*Цена;
					СуммаПродФактическая	= СуммаПродКнижная;
					Если ВидИнвентаризации = Перечисление.ВидыИнвентаризации.Переоценка Тогда
						Партия = ТаблИтогов.Партия;
					ИначеЕсли ((Пересортица+ЕстественнаяУбыль)=0) и (НеУчитыватьСрокиРеализации=0) Тогда
						СрокРеализ=ТаблИтогов.СрокРеализации;
					КонецЕсли;
					//<<Алгоритм Успеха>> (end) 
					//************************************************************
					КоличествоРазницы=КоличествоФактическое-КоличествоКнижное;
					СуммаРазницы=КоличествоРазницы*Коэффициент*Цена;
				КонецЦикла;  
			Иначе
				
				Если РежимЗаполнения=1 Тогда
					Продолжить;
				КонецЕсли;
				
				Если ((Пересортица+ЕстественнаяУбыль)=0) И (РежимЗаполнения=0) Тогда
					ТоварКоторыйОтсутствует = 1;
					Сообщить(Шаблон("Товар [тов.Код] [Тов] отсутствует на складе. Себестоимость будет определена по последнему поступлению товара!"));
				КонецЕсли;
				
				НоваяСтрока();
				Товар=Тов;
				//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
				ТовКод   = Товар.Код;
				КодДляРозницы   = ?(Товар.ДляРозницы=1,Товар.КодДляРозницы,"");
				//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
				Единица=Ед;
				Коэффициент=Коэфф;   
			КонецЕсли;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	глСоздатьНовыйОбъект(Спр);
	Спр.Единица=Тов.БазоваяЕдиницаИзмерения;
	Спр.Коэффициент=1;
	Спр.Наименование=Строка(Тов.БазоваяЕдиницаИзмерения);
	//Закомментировано Инсталлятором МОД:Спр.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Спр, );
	//Конец текста, вставленного Инсталлятором МОД

	Ед=Спр.ТекущийЭлемент();
	Коэфф=1;
КонецПроцедуры
//-----------------------------------------------
Процедура ВычОстДляПодбора(Тов)

	РегОстатки.УстановитьЗначениеФильтра("Товар",Тов,1);
	РегОстатки.УстановитьЗначениеФильтра("Склад",Склад,1);
	Если СравнитьТА()<0 Тогда
		РегОстатки.ВременныйРасчет(1); 
		Если ТекущийДокумент().Выбран()=1 Тогда
			РассчитатьРегистрыНа(ТекущийДокумент()); 
		//	Сообщить("Остатки заполнены на текущий документ.");
		Иначе
			РассчитатьРегистрыНа(?(ДатаДок < ПолучитьДатуТА(),ДатаДок,ПолучитьДатуТА()));        
	//		Сообщить("Остатки заполнены на "+СокрЛП(ДатаДок)+".");	
		КонецЕсли;
	Иначе
//		РегОстатки.ВременныйРасчет(1);
//		РассчитатьРегистрыНа(ПолучитьДатуТА());        
//		Сообщить("Остатки заполнены на "+СокрЛП(ПолучитьДатуТА())+".");
	КонецЕсли;

	вычОст(Тов);
	
КонецПроцедуры


//***************************************************************
Процедура ПриВыбореЗакладки(Ном,Имя)
	Если Ном=1 Тогда
	    Форма.ИспользоватьСлой("Основной,Документ");
	ИначеЕсли Ном=2 Тогда
		Форма.ИспользоватьСлой("Основной,Инвентаризация");  
	КонецЕсли;
	ТекЗакладка=Имя;	          
	
	Доступ();
КонецПроцедуры     

//-----------------------------------------------
Процедура ПриОткрытии()

	ПроверкаРазрешенияРедактирования(Контекст);
	
	УстановкаРеквизитаТип(Контекст);
	Тип.ДобавитьЗначение("Упр.");
	Тип.ДобавитьЗначение("Общ.");
	Тип.ДобавитьЗначение("Фин.");
	Тип.ТекущаяСтрока(ТипУчета+1);    
	
	ДокументОснование.ВидыДляВыбора("ПриходнаяНакладная");
	
	ДокументКредНота.ВидыДляВыбора("Счет_фактура,ДвиженияДенежныхСредств");
	Форма.Закладки.ДобавитьЗначение("Документ","Товары");
	Форма.Закладки.ДобавитьЗначение("Инвентаризация","Инвентаризация"); 
	ПриВыбореЗакладки(1,"Документ");   

	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.ОК.Доступность(0);
		Форма.КнопкаПоУмолчанию("Закрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("ОК");
	КонецЕсли;          
	
	//
	
	Если Пользователь.ТолькоПересортица=1 Тогда   
		Если (Пересортица+ЕстественнаяУбыль)=0 Тогда
			Форма.ТолькоПросмотр(1);
		КонецЕсли;
		Форма.Пересортица.Доступность(0);
	КонецЕсли;
	
	Форма.ЕстественнаяУбыль.Доступность(семЕстьПраво("Документ","СличительнаяВедомость","Естественная убыль"));
	Форма.ПриходоватьБезСебестоимости.Доступность(семЕстьПраво("Документ","СличительнаяВедомость","Приходовать без себестоимости"));
	Форма.ВидИнвентаризации.Доступность(семЕстьПраво("Документ","СличительнаяВедомость","Переоценка себестоимости"));
	
	Доступ();  
	Форма.кнОбновитьТекущие.Доступность(0);     
	Форма.кнОбновитьТекущие.Видимость(0);
	
	семЗаголовокОкна(контекст);
КонецПроцедуры
//-----------------------------------------------
Процедура Разница()      
	
	Если (Пересортица+ЕстественнаяУбыль)=0 Тогда
		Если Форма.ТекущаяКолонка()="КоличествоРазницы" Тогда
			КоличествоФактическое=КоличествоКнижное+КоличествоРазницы;	
		КонецЕсли;
		
		Если (Форма.ТекущаяКолонка()="СуммаФактическая") И (ВидИнвентаризации=Перечисление.ВидыИнвентаризации.Переоценка) Тогда
			СуммаРазницы=СуммаФактическая - СуммаКнижная;
			ПроцИзм = 1-Абс_(СуммаРазницы)/СуммаКнижная;
			СуммаПродФактическая = СуммаПродКнижная*ПроцИзм;
			СуммаРазницыПрод=СуммаПродФактическая - СуммаПродКнижная;
		Иначе
			КоличествоРазницы=КоличествоФактическое-КоличествоКнижное;
			СуммаКнижная=КоличествоКнижное*Коэффициент*Цена;
			СуммаФактическая=КоличествоФактическое*Коэффициент * Цена;
			СуммаРазницы=КоличествоРазницы*Коэффициент * Цена;
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры
//-----------------------------------------------
Процедура ИзмЕдинЛок()
	Пром=Единица;
	Пром.ИспользоватьДату(ДатаДок);
	Коэффициент=Единица.Коэффициент;
	Спр=СоздатьОбъект("Справочник.Единицы");
	Спр.ИспользоватьДату(ДатаДок);
	Спр.ИспользоватьВладельца(Товар);
	Спр.ВыбратьЭлементы();
	Пока Спр.ПолучитьЭлемент()>0 Цикл
		Если Спр.Единица=Товар.БазоваяЕдиницаИзмерения Тогда
			Единица=Спр.ТекущийЭлемент();
			Коэффициент=Спр.Коэффициент;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	глСоздатьНовыйОбъект(Спр);
	Спр.Единица=Товар.БазоваяЕдиницаИзмерения;
	Спр.Коэффициент=1;
	Спр.Наименование=Строка(Товар.БазоваяЕдиницаИзмерения);
	//Закомментировано Инсталлятором МОД:Спр.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Спр, );
	//Конец текста, вставленного Инсталлятором МОД

	Единица=Спр.ТекущийЭлемент();
	Коэффициент=1;
КонецПроцедуры
//-----------------------------------------------
Процедура Подбор()
	Режим="Каталог";
	ОткрытьПодбор("Спровочник.Номенклатура","ДляПодбора",Контекст);
	УстановитьЗначениеВПодборе("Склад",Склад);
КонецПроцедуры
//-----------------------------------------------
Процедура ОбработкаПодбора(Выб)
	//НоваяСтрока(); 
	Если Режим="Каталог" Тогда
		Тов=Выб;  
	Иначе
		Тов=Выб.Товар;    
	КонецЕсли;
	////~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	//ТовКод = Товар.Код;
	////~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	//ИзмЕдинЛок();
	ВычОстДляПодбора(Тов);  
	АктивизироватьСтроку();
КонецПроцедуры 
          
//*******************************************
//Процедура ОбновитьТекущие()
//            
//	РегОстатки.УстановитьЗначениеФильтра("Склад",Склад,1);
//	Если Выбран()=1 Тогда
//		РегОстатки.ВременныйРасчет();
//		РассчитатьРегистрыНа(ТекущийДокумент()); 
//	КонецЕсли;
//	
//	Т=СоздатьОбъект("ТаблицаЗначений");
//	ВыгрузитьТабличнуюЧасть(Т);
//   	Т.Свернуть("Товар","КоличествоФактическое");
//        
//	Если Вопрос("Текущая информация будет удалена, Вы уверены?",4)=6 Тогда
//		УдалитьСтроки();
//	Иначе
//		Возврат;
//	КонецЕсли;
//	
//   	Т.ВыбратьСтроки();
//   	Пока Т.ПолучитьСтроку()=1 Цикл
//   		
//   		Если Т.КоличествоФактическое=0 Тогда
//   			Продолжить;
//   		КонецЕсли;
//   		
//		НоваяСтрока();
//		Товар=Т.Товар;
//		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//		ТовКод   = Товар.Код;
//		КодДляРозницы   = ?(Товар.ДляРозницы=1,Товар.КодДляРозницы,"");
//		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//		Единица=глБазоваяЕдиницаИзмерения(Товар);
//		Коэффициент=Единица.Коэффициент;
//		
//		ОстТов = РегОстатки.СводныйОстаток(?(ТипУчета=Упр,ПолучитьПустоеЗначение("Справочник.Фирмы"),Фирма), Товар, , , , Склад, , , "ОстатокТовара");
//		БазСто = РегОстатки.СводныйОстаток(?(ТипУчета=Упр,ПолучитьПустоеЗначение("Справочник.Фирмы"),Фирма), Товар, , , , Склад, , , "Стоимость");
//
//		Попытка
//			Цена=БазСто/ОстТов;
//		Исключение
//			Цена=0;
//		КонецПопытки;
//
//		КоличествоКнижное=ОстТов;//Ост;
//		СуммаКнижная=БазСто;                   
//		КоличествоФактическое=Т.КоличествоФактическое;
//		СуммаФактическая=КоличествоФактическое*Коэффициент*Цена;
//        
//		КоличествоРазницы=КоличествоФактическое-КоличествоКнижное;
//		СуммаРазницы=СуммаФактическая-СуммаКнижная;
//		
//   	КонецЦикла;
//	
//КонецПроцедуры

//*******************************************
Функция ПолучитьОстатки()
	ODBCRecordSet = СоздатьОбъект( "ODBCRecordSet" );
	ODBCRecordSet.УстБД1С();;
	ТекстЗапроса="
	|SELECT    
	|	C.Товар [Товар $Справочник.Номенклатура],";
	Если НеУчитыватьСрокиРеализации=0 Тогда ТекстЗапроса=ТекстЗапроса+"
	//|	C.СрокРеализ as СрокРеализации,";
	|	CASE WHEN C.СрокРеализ < '1954-01-01' THEN NULL ELSE C.СрокРеализ END as СрокРеализации,";
	КонецЕсли;  ТекстЗапроса=ТекстЗапроса+"
	|	C.Кол as ОстатокТовара,
	|	C.Сум as Стоимость,
	|	C.СумПрод as ПродСтоимость
	|FROM
	|	( SELECT
	|		Рег.Товар as Товар,";
	Если НеУчитыватьСрокиРеализации=0 Тогда ТекстЗапроса=ТекстЗапроса+"
	|		Рег.СрокРеализации as СрокРеализ,";
	КонецЕсли;  ТекстЗапроса=ТекстЗапроса+"
	|		Рег.ОстатокТовараОстаток as Кол,
	|		Рег.СтоимостьОстаток as Сум,
	|		Рег.ПродСтоимостьОстаток as СумПрод
	|	FROM
	|		$РегистрОстатки.ПартииТоваров(";
	Если Выбран() = 0 Тогда ТекстЗапроса=ТекстЗапроса+"
	|		,";
	Иначе ТекстЗапроса=ТекстЗапроса+"
	|		:выбДата~,";
	ODBCRecordSet.УстановитьТекстовыйПараметр("выбДата", СформироватьПозициюДокумента(ТекущийДокумент(), -1));
	КонецЕсли; 
	Если ГруппаТоваров.Выбран() = 0 Тогда ТекстЗапроса=ТекстЗапроса+"
	|		,Склад = :Склад";
	ИначеЕсли ГруппаТоваров.ЭтоГруппа() = 0 Тогда ТекстЗапроса=ТекстЗапроса+"
	|		,Склад = :Склад AND Товар = :Товар";
	ODBCRecordSet.УстановитьТекстовыйПараметр("Товар", ГруппаТоваров);
	ИначеЕсли ГруппаТоваров.ЭтоГруппа() = 1 Тогда ТекстЗапроса=ТекстЗапроса+"
	|		,Склад = :Склад";
	КонецЕсли;
	Если НеУчитыватьСрокиРеализации=0 Тогда ТекстЗапроса=ТекстЗапроса+"
	|		,(Товар,СрокРеализации),"; 
	Иначе  ТекстЗапроса=ТекстЗапроса+"
	|		,(Товар),"; 
	КонецЕсли;  ТекстЗапроса=ТекстЗапроса+"
	|		(ОстатокТовара, Стоимость, ПродСтоимость)) as Рег
	|	) as C
	|INNER JOIN $Справочник.Номенклатура СпрН (NOLOCK) ON СпрН.ID = C.Товар
	|WHERE 1=1 ";
	Если ГруппаТоваров.Выбран() = 1 Тогда
		Если ГруппаТоваров.ЭтоГруппа() = 1 Тогда ТекстЗапроса=ТекстЗапроса+"
	|AND C.Товар IN (SELECT Val FROM #Товар)";
        	ODBCRecordSet.УложитьСписокОбъектов(ГруппаТоваров, "#Товар", "Номенклатура");
		КонецЕсли;
	КонецЕсли; 
	
	Если Поставщик.Выбран()=1 Тогда
		ТекстЗапроса=ТекстЗапроса+"AND $СпрН.Поставщик = :ВыбПоставщик";
		ODBCRecordSet.УстановитьТекстовыйПараметр("ВыбПоставщик",Поставщик);
	КонецЕсли;
	
	ТекстЗапроса=ТекстЗапроса+"
	|ORDER BY C.Товар";
	ODBCRecordSet.УстановитьТекстовыйПараметр("Склад", Склад);
	//ODBCRecordSet.Отладка(1);
	//нач = ТекущееВремя();
	табл = ODBCRecordSet.ВыполнитьИнструкцию(ТекстЗапроса);
	//Сообщить( "Получено строк: "+табл.КоличествоСтрок() );
	//Сообщить( "Время выполнения запроса: "+ семПрошлоВремени(нач,ТекущееВремя()) );
	Возврат табл;
КонецФункции

Процедура Заполнить(реж="Заполнить") 
	Запрос=СоздатьОбъект("Запрос");
	Т=СоздатьОбъект("ТаблицаЗначений");
	Т2=СоздатьОбъект("ТаблицаЗначений");
	Т3=СоздатьОбъект("ТаблицаЗначений");
	Если реж="Обновить" Тогда
		Т=СоздатьОбъект("ТаблицаЗначений");
		Т3=СоздатьОбъект("ТаблицаЗначений");
		Т2=СоздатьОбъект("ИндексированнаяТаблица");
		ВыгрузитьТабличнуюЧасть(Т);
		ВыгрузитьТабличнуюЧасть(Т3);
		Т2.Загрузить(Т3);
		Т2.ДобавитьИндекс("Товар","*Товар");
		Если НеУчитыватьСрокиРеализации=0 Тогда
			Т.Свернуть("Товар,СрокРеализ","КоличествоФактическое");
		Иначе
	    	Т.Свернуть("Товар","КоличествоФактическое");
		КонецЕсли;     
		
		Т.НоваяКолонка("Уд","Число",1,0);
		Т.НоваяКолонка("Цена","Число",17,5);
		Т.НоваяКолонка("ПродЦена","Число",17,5);
	КонецЕсли;
	Если КоличествоСтрок()<>0 Тогда
		Если Вопрос("Текущая информация будет удалена, Вы уверены?",4)=6 Тогда 
			УдалитьСтроки();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли; 
	Если Склад.Выбран() = 0 Тогда
		Предупреждение("Не выбран склад!");
		Возврат; 
	КонецЕсли;
	
	РежимЗаполнения=1;
	ТаблИтогов = ПолучитьОстатки();
	Всего=ТаблИтогов.КоличествоСтрок();
	ТаблИтогов.ВыбратьСтроки();
	с=0;
	Пока ТаблИтогов.ПолучитьСтроку()=1 Цикл
		с=с+1;        
		Тов=ТаблИтогов.Товар;
		Если ПустоеЗначение(Тов)=1 Тогда
			Продолжить;
		КонецЕсли;
		Если (Тов.ЭтоГруппа()=1) Тогда
			Продолжить;
		КонецЕсли;
		Если (ТаблИтогов.ОстатокТовара=0) Тогда
			Сообщить("Не добавлен товар "+Тов.Код+" "+Тов+" с нулевым остатком и стоимостью "+ТаблИтогов.Стоимость);
			Продолжить;
		КонецЕсли;
		Состояние("Заполнено: "+ТаблИтогов.НомерСтроки+"/"+Всего);
		Если (ПоБлюдам = 0) И (ПоПродуктам=0) Тогда
			Заг="По всем товарам";
		ИначеЕсли (ПоБлюдам = 1) И (ПоПродуктам=0) Тогда
			Заг="По Блюдам";
			Если Тов.ВидТовара<>Перечисление.ВидыТоваров.Блюдо Тогда
				Продолжить
			КонецЕсли;
		ИначеЕсли (ПоБлюдам = 0) И (ПоПродуктам=1) Тогда
			Заг="По Продуктам";	
			Если НЕ((Тов.ВидТовара=Перечисление.ВидыТоваров.Ингредиент) или (Тов.ВидТовара=Перечисление.ВидыТоваров.Товар)) Тогда
				Продолжить
			КонецЕсли;
		ИначеЕсли (ПоБлюдам = 1) И (ПоПродуктам=1) Тогда
			Заг="По Блюдам и Продуктам";
			Если НЕ((Тов.ВидТовара=Перечисление.ВидыТоваров.Блюдо) ИЛИ
				    (Тов.ВидТовара=Перечисление.ВидыТоваров.Товар) ИЛИ 
					(Тов.ВидТовара=Перечисление.ВидыТоваров.Ингредиент)) Тогда
				Продолжить
			КонецЕсли;
		КонецЕсли;
		НоваяСтрока();
		Товар=Тов;
		ТовКод   = Товар.Код;
		КодДляРозницы   = ?(Товар.ДляРозницы=1,Товар.КодДляРозницы,"");
		Единица=глБазоваяЕдиницаИзмерения(Товар);
		Коэффициент=Единица.Коэффициент;
		Попытка
			Цена=ТаблИтогов.Стоимость/ТаблИтогов.ОстатокТовара;
			ПродЦена=ТаблИтогов.ПродСтоимость/ТаблИтогов.ОстатокТовара;
		Исключение
			Цена=0;
			ПродЦена=0;
		КонецПопытки;
		//сем\\
		//ВалютаТовара=тов.ВалютаУчета;
		ВалютаТовара		= Рубли;
		//сем//
		ПромВал				= Валюта;
		Цена				= Пересчет(Цена,ВалютаТовара,Дата_курса,ПромВал,Курс);
		ПродЦена			= Пересчет(ПродЦена,ВалютаТовара,Дата_курса,ПромВал,Курс);
		КоличествоКнижное	= ТаблИтогов.ОстатокТовара;//Ост;
		СуммаКнижная		= ТаблИтогов.Стоимость;          
		СуммаПродКнижная	= ТаблИтогов.ПродСтоимость;
		
		Если реж="Обновить" Тогда
			рез=0;                         
			Если НеУчитыватьСрокиРеализации=0 Тогда 
				Для н = 1 По Т.КоличествоСтрок() Цикл
					Т.ПолучитьСтрокуПоНомеру(н); 
					Если (Товар = Т.Товар)и(Т.СрокРеализ = ТаблИтогов.СрокРеализации) Тогда
						рез = н;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			Иначе
				Т.НайтиЗначение(Товар,рез,"Товар");
			КонецЕсли;                              
			Если рез>0 Тогда
				Т.ПолучитьСтрокуПоНомеру(рез);
				Т.Уд=1;
				КоличествоФактическое=Т.КоличествоФактическое;
				Т.УдалитьСтроку();
				СуммаФактическая=КоличествоФактическое*Коэффициент*Цена;
				СуммаПродФактическая=КоличествоФактическое*Коэффициент*ПродЦена
			КонецЕсли;
		Иначе
			КоличествоФактическое	= ТаблИтогов.ОстатокТовара;//Ост;
			СуммаФактическая		= ТаблИтогов.Стоимость;
			СуммаПродФактическая	= ТаблИтогов.ПродСтоимость;
		КонецЕсли;
		Если ((Пересортица+ЕстественнаяУбыль)=0) И (НеУчитыватьСрокиРеализации=0) Тогда
			СрокРеализ=ТаблИтогов.СрокРеализации;
		КонецЕсли;
		КоличествоРазницы	= КоличествоФактическое-КоличествоКнижное;
		СуммаРазницы		= КоличествоРазницы*Коэффициент*Цена;
		СуммаРазницыПрод	= КоличествоРазницы*Коэффициент*ПродЦена;
	КонецЦикла; 
	
	Т.ВыбратьСтроки();
	Пока Т.ПолучитьСтроку() = 1 Цикл
		НоваяСтрока();
		Товар=Т.Товар;		
		Единица= глБазоваяЕдиницаИзмерения(Товар);
		Коэффициент = Единица.Коэффициент;  
		КоличествоФактическое = Т.КоличествоФактическое;
		рез = 0;
		Если НеУчитыватьСрокиРеализации=0 Тогда
			Т2.УстановитьФильтр(Товар,Товар,"Товар");
			Т2.ВыбратьСтроки("Товар");
			Пока Т2.ПолучитьСтроку()=1 Цикл
//			Для н = 1 По Т2.КоличествоСтрок() Цикл 
//				Т2.ПолучитьСтрокуПоНомеру(н);
				Если (Товар = Т2.Товар)
				и(Т.СрокРеализ = Т2.СрокРеализ) Тогда 
					Цена 					= Т2.Цена;
					ПродЦена 				= Т2.ПродЦена;
					СуммаФактическая 		= Цена*Коэффициент*КоличествоФактическое;
					СуммаПродФактическая 	= ПродЦена*Коэффициент*КоличествоФактическое;
					Прервать;					
				КонецЕсли;	
			КонецЦикла;                            
		Иначе
			Если Т2.НайтиСтроку("Товар",Товар,,1)=1 Тогда
				//Т2.ПолучитьСтрокуПоНомеру(рез);
				Цена 				= Т2.Цена;
				ПродЦена			= Т2.ПродЦена;
				СуммаФактическая 	= Цена*Коэффициент*КоличествоФактическое;
				СуммаПродФактическая= ПродЦена*Коэффициент*КоличествоФактическое;
			КонецЕсли;		
		КонецЕсли;
		ТовКод = Товар.Код;        
		Если НеУчитыватьСрокиРеализации = 0 Тогда
			СрокРеализ = Т.СрокРеализ;
		КонецЕсли;
	КонецЦикла;
	                        
	Если реж="Обновить" Тогда
		НоваяТаблица=СоздатьОбъект("ИндексированнаяТаблица");
		Т_=СоздатьОбъект("ТаблицаЗначений");
		ВыгрузитьТабличнуюЧасть(Т_);
		Т_.НоваяКолонка("Сорт","Число",1,0);
		НоваяТаблица.Загрузить(Т_);
		НоваяТаблица.ДобавитьИндекс("Товар","*Товар");
		НоваяТаблица.Разность(Т2,"Товар","Товар",0);
//		НоваяТаблица.ВыбратьСтроку("");

		Т_.ВыбратьСтроки();
		Пока Т_.ПолучитьСтроку()=1 Цикл
			Если НоваяТаблица.НайтиСтроку("Товар",Т_.Товар)>0 Тогда
				Т_.Сорт=99; //для сортировки позиций, которые добавились после обновления
			ИначеЕсли Т_.НайтиЗначение(Т_.Товар,рез,"Товар")>0 Тогда
				Т_.Сорт=98; //для сортировки позиций, которые были добавлены вручную в первом варианте инвентуры
			КонецЕсли;
		КонецЦикла;                                                                      
		
		Т_.Сортировать("Сорт,*Товар");
		ЗагрузитьТабличнуюЧасть(Т_);
	КонецЕсли;
	РежимЗаполнения=0;
КонецПроцедуры    

Процедура ПечатьИО()
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("ИнвентаризационнаяОпись");
	Таб.ВывестиСекцию("Шапка");
	ВыбратьСтроки();
	Ном=0;
	Пока ПолучитьСтроку() = 1 Цикл
		Ном=Ном+1;
		Таб.ВывестиСекцию("Товар");
	КонецЦикла;
	Таб.ВывестиСекцию("Подвал");
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,0,0,ПарСтрДок);     
	Таб.ПараметрыСтраницы(1,,,,,,,,,1,,);
	Таб.ПовторятьПриПечатиСтроки(11,13);
	Таб.Показать("Печать инвентаризационной описи","");  
КонецПроцедуры
//-----------------------------------------------
Процедура ПечатьСВ()
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("СличительнаяВедомость");
	Таб.ВывестиСекцию("Шапка");
	ВыбратьСтроки();
	Ном=0;     
	ИтогКолИзлишек=0;
	ИтогСумИзлишек=0;
	ИтогКолНедостача=0;
	ИтогСумНедостача=0;
	Пока ПолучитьСтроку() = 1 Цикл
		
		Если КоличествоРазницы=0 Тогда
			Продолжить;
		КонецЕсли;    
		Ном=Ном+1; 
		Если КоличествоРазницы>0 Тогда
			КолИзлишек=КоличествоРазницы;
			СумИзлишек=СуммаРазницы;
			КолНедостача=0;
			СумНедостача=0;
		ИначеЕсли КоличествоРазницы<0 Тогда
			КолИзлишек=0;
			СумИзлишек=0;
			КолНедостача=КоличествоРазницы*(-1);
			СумНедостача=СуммаРазницы*(-1);
		КонецЕсли;
		ИтогКолИзлишек=ИтогКолИзлишек+КолИзлишек;
		ИтогСумИзлишек=ИтогСумИзлишек+СумИзлишек;
		ИтогКолНедостача=ИтогКолНедостача+КолНедостача;
		ИтогСумНедостача=ИтогСумНедостача+СумНедостача;
		Таб.ВывестиСекцию("Товар");
	КонецЦикла;
	Таб.ВывестиСекцию("Подвал");
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,0,0,ПарСтрДок);     
	Таб.ПараметрыСтраницы(1,,,,,,,,,1,,);
	Таб.ПовторятьПриПечатиСтроки(11,14);
	Таб.Показать("Печать сличительной ведомости","");  
КонецПроцедуры	
//-----------------------------------------------
Процедура ПечатьOld()
	Перем Стр, Код, Поз;	 
	Выбор=СоздатьОбъект("СписокЗначений");
	Выбор.ДобавитьЗначение(1,"Инвентаризационная опись");
	Выбор.ДобавитьЗначение(2,"Сличительная ведомость");  
	Рез=Выбор.ВыбратьЗначение(Код, "", Поз,,1); 
	Если Рез<>1 Тогда
		Возврат; 
	КонецЕсли;  
	Если Код=1 Тогда 
		ПечатьИО();
	ИначеЕсли Код=2 Тогда
		ПечатьСВ();
	Иначе                            	
		Возврат;
	КонецЕсли;		
КонецПроцедуры	

//-----------------------------------------------
Процедура ВводНового(ФлКопирования)
	ЗаполнитьШапку(Контекст);
	// сем \\
	НеУчитыватьСрокиРеализации=1;
	// сем //
	
	ВидИнвентаризации = Перечисление.ВидыИнвентаризации.Классический;
	Если ФлКопирования=1 Тогда
		Склад=Константа.ОсновнойСклад;
		ПриходоватьБезНДС=1;          
		Возврат;	    
	КонецЕсли;
	Валюта=Константа.БазоваяВалюта;
	Дата_Курса=ДатаДок;
	Курс=КурсДляВалюты(Валюта,Дата_Курса);
	Валюта_Прежн=Валюта;
	Курс_Прежн=Курс;
	ДатаФиксации=РабочаяДата();     
	Если Пользователь.ТолькоПересортица=1 Тогда    
		Пересортица=1;		
		Форма.Пересортица.Доступность(0);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПриВыбореПересортицы()
	Если Пересортица=1 Тогда
		ВидИнвентаризации = Перечисление.ВидыИнвентаризации.Пересортица;
	Иначе
		ВидИнвентаризации = Перечисление.ВидыИнвентаризации.Классический;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриВыбореВида()
	Если  ВидИнвентаризации = Перечисление.ВидыИнвентаризации.Пересортица Тогда
		Пересортица = 1;
		НеУчитыватьСрокиРеализации=0;
	Иначе
		Пересортица = 0;
	КонецЕсли;	
КонецПроцедуры


Процедура ОбнулитьФакт()
	Если Вопрос("Вы уверены, что хотите обнулить фактическое количество?","Да+Нет")="Да" Тогда
	Иначе
		Возврат;
	КонецЕсли;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		КоличествоФактическое=0;
		Разница();
	КонецЦикла;
КонецПроцедуры


Процедура УдалитьНулевые()
	~1:	 ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если (КоличествоФактическое=0) и (КоличествоКнижное=0) Тогда
			УдалитьСтроку();
			Перейти ~1;
		КонецЕсли;
	КонецЦикла;
	Сч=1;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл 
		НомерСтроки=Сч; 
		Сч=Сч+1;
	КонецЦикла;
КонецПроцедуры

Процедура УдалитьНеизменные()
	~1:	 ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если КоличествоРазницы=0 Тогда
			УдалитьСтроку();
			Перейти ~1;
		КонецЕсли;
	КонецЦикла; 
	Сч=1;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл 
		НомерСтроки=Сч; 
		Сч=Сч+1;
	КонецЦикла;
КонецПроцедуры 

Функция ПроверитьСтроку()
	Если (Пересортица+ЕстественнаяУбыль) = 0 Тогда
	    Возврат 1;
	КонецЕсли;	
	Табл=СоздатьОбъект("ТаблицаЗначений"); 
	ВыгрузитьТабличнуюЧасть(Табл);
	Табл.ВыбратьСтроки();
	Пока Табл.ПолучитьСтроку() = 1 Цикл
		Если СтрокаС = НомерСтроки Тогда
		    Сообщить("Нельзя трогать эту строку. Ссылка на нее имеется в строке №"+НомерСтроки);
			Возврат 0;
		КонецЕсли;
	КонецЦикла;       
	Возврат 1;
КонецФункции //ПроверитьСтроку

Процедура ПриУдаленииСтроки()
	СтатусВозврата(ПроверитьСтроку());
	глДобавитьТоварДляИзменения(Товар);
КонецПроцедуры //ПриУдаленииСтроки 
                                           

Процедура ПриОкончанииРедактированияСтроки()
	глДобавитьТоварДляИзменения(Товар);
КонецПроцедуры

Процедура ПриИзмененииПорядкаСтрок()
	СтатусВозврата(ПроверитьСтроку());
КонецПроцедуры               

Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога, ФлагСтандОбр) //предопределенная
	Если ИдентЭлемДиалога="СтрокаС" Тогда
	    ФлагСтандОбр = 0;
		Табл = СоздатьОбъект("ТаблицаЗначений"); 
		ВыгрузитьТабличнуюЧасть(Табл);
		НомСтр=0;
		Если Табл.ВыбратьСтроку(НомСтр, "Выберите товар, пересортица которого производится") = 1 Тогда
		    СтрокаС = НомСтр;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //ПриНачалеВыбораЗначения

Процедура ПриНачалеРедактированияСтроки() 
	
	
	Если (Форма.ТекущаяКолонка() = "ТекстПартия") и (Товар.Выбран()=1) Тогда
		                   
		Если Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга Тогда
			Возврат;
		КонецЕсли;
		// формируем список параметров для передачи в форму
		Параметр	= СоздатьОбъект("СписокЗначений");
		Параметр.ДобавитьЗначение(Фирма			, "Фирма");	
		Параметр.ДобавитьЗначение(Склад			, "Склад");	
		Параметр.ДобавитьЗначение(Товар			,"Товар");	
		Параметр.ДобавитьЗначение(Партия		, "Партия");	
		Параметр.ДобавитьЗначение(Контекст	, "Контекст");	
	
		// открываем форму 
		ОткрытьФормуМодально("Обработка.ДляВыбораПартии", Параметр);
	
		// получаем параметр возврата.
		Если Параметр.Получить("СтатусВозврата") = 0 Тогда
			Возврат;
		КонецЕсли;
	
		Партия	= Параметр.Получить("Партия");
		
	ИначеЕсли Форма.ТекущаяКолонка()="Цена" Тогда
		Если КоличествоФактическое<КоличествоКнижное Тогда 
			Предупреждение("Нельзя менять цену в случае недостачи !",3);
			СтатусВозврата(0);
		КонецЕсли;	
	КонецЕсли;
		
	
КонецПроцедуры 

//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи() Далее
//Конец текста, вставленного Инсталлятором МОД
Процедура стар_ПриЗаписи()
//Закомментировано Инсталлятором МОД:Процедура ПриЗаписи() 
	Если семМожноЗаписать( Контекст ) = 0 Тогда Возврат; КонецЕсли;
	// надо записать партии
	ОтменитьЗапись = 0;
	СпрПартии 	   = СоздатьОбъект("Справочник.Партии");
	
	// а в эту ТЗ запомним партии, чтобы в транзакции не затрагивать наш док
	// после записи всех партий - пропишем их в документ всех сразу
	ТЗПартии = СоздатьОбъект("ТаблицаЗначений");
	ТЗПартии.НоваяКолонка("НомерСтрокиДок");
	ТЗПартии.НоваяКолонка("Партия");
	
	НачатьТранзакцию();
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если (Партия.Выбран() = 0) и (Товар.Выбран() = 1) и (КоличествоКнижное - КоличествоФактическое < 0) Тогда
			СпрПартии.ИспользоватьВладельца(Товар);
			глСоздатьНовыйОбъект(СпрПартии); 
			Попытка
				//Закомментировано Инсталлятором МОД:СпрПартии.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(СпрПартии, );
	//Конец текста, вставленного Инсталлятором МОД

			Исключение  
				Сообщить("Строка документа: " + НомерСтроки + " Ошибка: " + ОписаниеОшибки());
				ОтменитьЗапись = 1;
				Прервать;
			КонецПопытки;
			ТЗПартии.НоваяСтрока();
			ТЗПартии.НомерСтрокиДок = НомерСтроки;
			ТЗПартии.Партия = СпрПартии.ТекущийЭлемент();
		КонецЕсли;
	КонецЦикла; 
	
	Если ОтменитьЗапись=0 Тогда  
		// запишем созданные партии
		ЗафиксироватьТранзакцию();
		
		// теперь занесем партии в спецификацию нашего документа
		ТЗПартии.ВыбратьСтроки();
		Пока ТЗПартии.ПолучитьСтроку()=1 Цикл
			ПолучитьСтрокуПоНомеру(ТЗПартии.НомерСтрокиДок);
			Партия = ТЗПартии.Партия;
		КонецЦикла;
	Иначе
		ОтменитьТранзакцию();
	КонецЕсли;
	               
КонецПроцедуры
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	стар_ПриЗаписи();
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД

Процедура ПечатьАкт()
    
	ВидИнв="";
	
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Акт");
    
	
	
	ПДок="";
	ВДок="";
	НомСтр=1;
	

//Находим последний Приходный и последний расходный документы

    Рег=СоздатьОбъект("Регистр.ОстаткиТоваров");
    Рег.УстановитьФильтр(,Склад);
   	Рег.ОбратныйПорядок(1);
   	Рег.ВыбратьДвижения(ДатаДок-10,ДатаДок-1);

   	Пока Рег.ПолучитьДвижение()=1 Цикл

   		если Рег.ТекущийДокумент().НомерДок=НомерДок Тогда
   			Продолжить;
   		конецЕсли;

   		Если Рег.Склад=Склад Тогда
   			Если (ПустаяСтрока(ВДок)=1) И (Рег.Расход=1) Тогда
 			 	ВДок=Рег.ТекущийДокумент();
 			 ИначеЕсли (ПустаяСтрока(ПДок)=1) И (Рег.Приход=1) Тогда
 			 	ПДок=Рег.ТекущийДокумент();
   		     КонецЕсли;
   		КонецЕсли;

   		Если (ПустаяСтрока(ВДок)=0)  И (ПустаяСтрока(ПДок)=0)  Тогда
   		    Прервать;
   		КонецЕсли;

   	КонецЦикла;

	МОЛНаим="";

    Для х=1 По 8 Цикл
    	МОЛ=ПолучитьАтрибут("МОЛ"+х);
    	Если МОЛ.Выбран()=1 Тогда
			Если ПустаяСтрока(МОЛНаим)=0 Тогда
			   МОЛНаим=МОЛНаим+", ";
			КонецЕсли;
    		МОЛНаим=МОЛНаим+МОЛ.Наименование;
    	КонецЕсли;

    КонецЦикла;


    МОЛНаим=МОЛНаим+". ";

    Таб.ВывестиСекцию("Шапка");

    Для х=1 По 8 Цикл
    	МОЛ=ПолучитьАтрибут("МОЛ"+х);
    	Если МОЛ.Выбран()=1 Тогда
			Таб.ВывестиСекцию("МОЛЫ");
    	КонецЕсли;

    КонецЦикла;


    Таб.ВывестиСекцию("Шапка2");


    Таб.НоваяСтраница();

    Таб.ВывестиСекцию("Подвал");


    Для х=1 По 8 Цикл
    	МОЛ=ПолучитьАтрибут("МОЛ"+х);
    	Если МОЛ.Выбран()=1 Тогда
			Таб.ВывестиСекцию("МОЛЫ2");
    	КонецЕсли;

    КонецЦикла;

    Таб.ВывестиСекцию("Подвал2");

    Таб.Опции(0,0,0,0,ПарСтрДок);
	//Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ПараметрыСтраницы(1,100,1,20,15,15,15);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Печать Акт инвентаризационной ведомости","");

КонецПроцедуры

//***************************************************************
Процедура Печать()

	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Таблица");

	НомСтр=1;
	Таб.ВывестиСекцию("Шапка");

	ИзмКол=0;
	КолСтрок=1;
	Ном=0;
	СтрокНаЛист=5;
	Ном=Ном+6;
    
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл

		Тов=Товар;
          
		КодТовара=Тов.Код;
		КодПостТовара=Тов.КодПоставщика;
		НаимТовара=Тов.Наименование;
		Если (Склад.ВидСклада=Перечисление.ВидыСкладов.Розничный) И (Тов.КодДляРозницы>0) Тогда
		  КодТовара=Тов.КодДляРозницы;
		  НаимТовара=Тов.НаименованиеДляЦенника;
		КонецЕсли;
		
		МестоХранения="";
		Ном=Ном+1;
		СтрокНаЛист=СтрокНаЛист+1;

        Таб.ВывестиСекцию("Строка");
        КолСтрок=КолСтрок+1;
	КонецЦикла;

	Если СтрокНалист>40 Тогда
		таб.newPage();
		Таб.ВывестиСекцию("Пропуск");
	КонецЕсли;

	Таб.ВывестиСекцию("Подвал");
	Таб.Опции(0,0,0,0,ПарСтрДок);
	//Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ПараметрыСтраницы(1,100,1,5,5,5,5,,,1);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Inventarizўcijas lapa","");

КонецПроцедуры

//-----------------------------------------------
Процедура ПечатьРаз()

    Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("ТаблицаРазличий");

	НомСтр=1;
	Таб.ВывестиСекцию("Шапка");


	КолСтрок=1;
	Ном=0;
	СтрокНаЛист=4;
	Ном=Ном+4;

    КолСтрок=1;

//	СписокТоваров.Сортировать("Товар+");
	Всего=КоличествоСтрок();

	ВыбратьСтроки();
	с=0;
    Пока ПолучитьСтроку()=1 Цикл

		с=с+1;
		состояние(""+окр(с/Всего*100)+"%");

		Тов=Товар;
		              
		КодТовара=Тов.Код;
		НаимТовара=Тов.Наименование;
		Если (Склад.ВидСклада=Перечисление.ВидыСкладов.Розничный) И (Тов.КодДляРозницы>0) Тогда
		  КодТовара=Тов.КодДляРозницы;
		  НаимТовара=Тов.НаименованиеДляЦенника;
		КонецЕсли;
		
		Кол=КоличествоФактическое;
    	КолДо=КоличествоКнижное;

    	Кол=Число(Кол);
		ИзмКол=Кол-КолДо;
		Если ИзмКол<>0 Тогда

		   	  Ном=Ном+2;
			  СтрокНаЛист=СтрокНаЛист+2;
//			  Если (цел(ном/55)-(ном/55))=0 Тогда
//				таб.newPage();
//				НомСтр=НомСтр+1;
//				Если НомСтр>1 Тогда
//					прд="(turpinўjums)";
//				КонецЕсли;
//		        	СтрокНаЛист=0;
//		            Таб.ВывестиСекцию("Пропуск");
//	        	    Таб.ВывестиСекцию("Шапка2");
///	            КонецЕсли;

	          	Таб.ВывестиСекцию("Строка");

	          КолСтрок=КолСтрок+1;
		Иначе
//			сообщить(Тов.Код);
        КонецЕсли;

   	КонецЦикла;

	Таб.ВывестиСекцию("Подвал");
	Таб.Опции(0,0,0,0,ПарСтрДок);
	//Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ПараметрыСтраницы(1,100,1,5,5,5,5,,,1);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Nesakr®toєana lapa","");

КонецПроцедуры         

Процедура кн5ПриНажатии()   

КонецПроцедуры

//-----------------------------------------------
Процедура ПечатьРазИнв()
	
	Если Проведен()=0 Тогда
		Предупреждение("Документ ещё не проведен!");
		Возврат;
	КонецЕсли;
	
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("РазличияИнвентуры"); 
	Таб.ВывестиСекцию("Шапка");
	
	Сум1а=0; 
	Sum=0; 
	Сум2а=0; 
	Sum1=0;  
	КолНаЛист=0;
	КолСтрок=1;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если (ПустоеЗначение(КоличествоФактическое) = 1)
		и (ПустоеЗначение(КоличествоКнижное) = 1) Тогда 
			Продолжить;
		КонецЕсли;  
		Если (КоличествоФактическое = 0)
		и (КоличествоКнижное = 0) Тогда 
			Продолжить;
		КонецЕсли;		
		//		Если ПриходоватьБезСебестоимости=0 Тогда
		Если КоличествоФактическое>КоличествоКнижное Тогда
			Сум1а=Сум1а+(КоличествоФактическое-КоличествоКнижное);
		КонецЕсли;   
		Если КоличествоКнижное>КоличествоФактическое Тогда
			Sum=Sum+(КоличествоКнижное-КоличествоФактическое);
		КонецЕсли;		
		Если КоличествоФактическое>КоличествоКнижное Тогда
			Сум2а=Сум2а+(КоличествоФактическое-КоличествоКнижное)*Цена;
		КонецЕсли;   
		Если КоличествоКнижное>КоличествоФактическое Тогда
			Sum1=Sum1+(КоличествоКнижное-КоличествоФактическое)*Цена;
		КонецЕсли;
		Таб.ВывестиСекцию("Строка");
		КолСтрок=КолСтрок+1;			
		//		КонецЕсли;
	КонецЦикла;      
	Раз1=0;
	Раз2=0;
//	Сообщить("СуммаКнижная "+Итог("СуммаКнижная"));
//	Сообщить("СуммаФактическая "+Итог("СуммаФактическая"));
	Если Итог("СуммаКнижная") > Итог("СуммаФактическая") Тогда                
		Раз1=Итог("СуммаКнижная") - Итог("СуммаФактическая");
//		Сообщить("Разница "+(Итог("СуммаКнижная") - Итог("СуммаФактическая"))); 
	ИначеЕсли Итог("СуммаКнижная") < Итог("СуммаФактическая") Тогда	         
		Раз1=Итог("СуммаФактическая") - Итог("СуммаКнижная");
//		Сообщить("Разница "+(Итог("СуммаФактическая") - Итог("СуммаКнижная"))); 
	ИначеЕсли Итог("СуммаКнижная") = Итог("СуммаФактическая") Тогда	
		Раз1=0;
//		Сообщить("Разница 0");		
	КонецЕсли;
//	Сообщить("   Больше сумма"+Сум2а+" Меньше сумма"+Sum1); 
	Если Сум2а > Sum1 Тогда       
		Раз2=(Сум2а - Sum1);
//		Сообщить("Разница "+(Сум2а - Sum1));
	ИначеЕсли Сум2а < Sum1 Тогда		 
		Раз2=(Sum1-Сум2а);
//		Сообщить("Разница "+(Sum1-Сум2а));    
	ИначеЕсли Сум2а = Sum1 Тогда
		Раз2=0;
//		Сообщить("Разница 0");		
	КонецЕсли;      
//	Сообщить("   Больше количество"+Сум1а+" Меньше количество"+Sum);	
	Если Сум1а > Sum Тогда       
//		Сообщить("Разница "+(Сум1а - Sum));
	ИначеЕсли Сум1а < Sum Тогда		 
//		Сообщить("Разница "+(Sum-Сум1а));    
	ИначеЕсли Сум1а = Sum Тогда
//		Сообщить("Разница 0");		
	КонецЕсли;	
//	Сообщить("--------------------------------------");
	Если Окр(Раз1,2) > Окр(Раз2,2) Тогда
		Сообщить("Расхождение в инвентаризации = "+(Окр(Раз1,2) - Окр(Раз2,2)));
	ИначеЕсли Раз1 < Раз2 Тогда  
		Сообщить("Расхождение в инвентаризации = "+(Окр(Раз2,2) - Окр(Раз1,2)));    
	ИначеЕсли Раз1 = Раз2 Тогда	  
		Сообщить("Расхождение в инвентаризации = 0");
	КонецЕсли;                       
	КолНаЛист=КолСтрок;
	Таб.ВывестиСекцию("СуммаЛиста");
	Таб.newPage();
	НомСтр=НомСтр+1; 
	Таб.ВывестиСекцию("Пропуск");
    Таб.ВывестиСекцию("Шапка2");	
   	Таб.ВывестиСекцию("Подвал");
	Таб.Опции(0,0,0,0,ПарСтрДок);
	Таб.ПараметрыСтраницы(2,85,1,5,2,5,5);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("PreҐu inventarizўcijas nesakr®toєana lapa","");	
КонецПроцедуры

//***********************************************
Процедура ПечатьИнв()

//    Если Проведен()=0 Тогда
//        Предупреждение("Документ ещё не проведен!");
//        Возврат;
//    КонецЕсли;
//
//	Таб=СоздатьОбъект("Таблица");
//	Таб.ИсходнаяТаблица("Инвентаризация");
//
//	НомСтр=1;
//	Таб.ВывестиСекцию("Шапка");
//
//
//    КолНаЛист=0;
//	Кол=0;
//	КолДо=0;
//	КолСтрок=1;
//	Ном=0;
//	Сум=0;
//
//
//	СтрокНаЛист=4;
//	Ном=Ном+4;
//
//	Рег=СоздатьОбъект("Регистр.ОстаткиТоваров");
////	Если (СравнитьТА()<=0)  Тогда
//	 	// если итоги не актуальны, то Взаиморасчеты берем из временногно расчета Регистра
////			Рег.ВременныйРасчет();
////			РассчитатьРегистрыНа(ТекущийДокумент());
////	КонецЕсли;
//
//    КолСтрок=1;
//
//	КолСтрок=1;
//	СумКолДо=	0;
//	СумДо	=	0;
//	СумКол	=	0;
//	Сум		=	0;
//	ОбщКолДо=	0;
//	ОбщСумДо=	0;
//	ОбщКол=	0;
//	ОбщСум=	0;
//	ВыбратьСтроки();
//	Пока ПолучитьСтроку()=1 Цикл
//		Тов=Товар;    
//		
//		КодТовара=Тов.Код;
//		НаимТовара=Тов.Наименование;
//		Если (Склад.ВидСклада=Перечисление.ВидыСкладов.Розничный) И (Тов.КодДляРозницы>0) Тогда
//		  КодТовара=Тов.КодДляРозницы;
//		  НаимТовара=Тов.НаименованиеДляЦенника;
//		КонецЕсли;
//		
//		СТОИМ=0;
//		Если КоличествоКнижное<>0 Тогда
//			СТОИМ=Цена;
//		КонецЕсли;
//		КолДо=КоличествоКнижное;
//		SumДо=СуммаКнижная;
//		Кол=КоличествоФактическое;
//		Sum=СуммаФактическая;
//		
//		СумКолДо=	СумКолДо+КолДо;
//		СумДо	=	СумДо	+SumДо;
//		СумКол	=	СумКол	+Кол;
//		Сум		=	Сум		+Sum;
//		
//		ОбщКолДо=	ОбщКолДо+КолДо;
//		ОбщСумДо=	ОбщСумДо+SumДо;
//		ОбщКол=	ОбщКол+Кол;
//		ОбщСум=	ОбщСум+Sum;
//		Если Кол-КолДо>0 Тогда
//			РазКолБол=РазКолБол+Кол-КолДо;
//		иначеесли Кол-КолДо<0 тогда
//			РазКолМен=РазКолМен+КолДо-Кол;
//		КонецЕсли;
//		
//		РазСумБол=РазСумБол+?(Кол-КолДо>0, окр(Sum-SumДо,5), 0);
//		РазСумМен=РазСумМен+?(Кол-КолДо<0, окр(SumДо-Sum,5), 0);
//		Таб.ВывестиСекцию("Строка");
//		КолСтрок=КолСтрок+1;
//	конецЦикла;
//	КолНаЛист=КолСтрок;
//    Таб.ВывестиСекцию("СуммаЛиста");   
//
//   	Таб.ВывестиСекцию("СуммаЛиста");
//
//	таб.newPage();
//	НомСтр=НомСтр+1;
//	Таб.ВывестиСекцию("Пропуск");
//    Таб.ВывестиСекцию("Шапка2");
//
//   	Таб.ВывестиСекцию("Подвал");
//
//	Таб.Опции(0,0,0,0,ПарСтрДок);
//	//Таб.Защита(Константа.ФлагЗащитыТаблиц);
//	Таб.ПараметрыСтраницы(2,100,1,5,2,5,5,,,1);
//	Таб.ТолькоПросмотр(1);
//	Таб.Показать("PreҐu Inventarizўcijas akts","");
//
//
	Если Проведен()=0 Тогда
		Предупреждение("Документ ещё не проведен!");
		Возврат;
	КонецЕсли;
	
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Инвентаризация"); 
	Таб.ВывестиСекцию("Шапка");
	
	Сум1а=0; 
	Sum=0; 
	Сум2а=0; 
	Sum1=0;  
	КолНаЛист=0;
	КолСтрок=1;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл      
		Если (ПустоеЗначение(КоличествоФактическое) = 1)
		и (ПустоеЗначение(КоличествоКнижное) = 1) Тогда 
			Продолжить;
		КонецЕсли;  
		Если (КоличествоФактическое = 0)
		и (КоличествоКнижное = 0) Тогда 
			Продолжить;
		КонецЕсли;		
		//		Если ПриходоватьБезСебестоимости=0 Тогда
		Если КоличествоФактическое>КоличествоКнижное Тогда
			Сум1а=Сум1а+(КоличествоФактическое-КоличествоКнижное);
		КонецЕсли;   
		Если КоличествоКнижное>КоличествоФактическое Тогда
			Sum=Sum+(КоличествоКнижное-КоличествоФактическое);
		КонецЕсли;		
		Если КоличествоФактическое>КоличествоКнижное Тогда
			Сум2а=Сум2а+(КоличествоФактическое-КоличествоКнижное)*Цена;
		КонецЕсли;   
		Если КоличествоКнижное>КоличествоФактическое Тогда
			Sum1=Sum1+(КоличествоКнижное-КоличествоФактическое)*Цена;
		КонецЕсли;
		Таб.ВывестиСекцию("Строка");
		КолСтрок=КолСтрок+1;			
		//		КонецЕсли;
	КонецЦикла;      
	Раз1=0;
	Раз2=0;
//	Сообщить("СуммаКнижная "+Итог("СуммаКнижная"));
//	Сообщить("СуммаФактическая "+Итог("СуммаФактическая"));
	Если Итог("СуммаКнижная") > Итог("СуммаФактическая") Тогда                
		Раз1=Итог("СуммаКнижная") - Итог("СуммаФактическая");
//		Сообщить("Разница "+(Итог("СуммаКнижная") - Итог("СуммаФактическая"))); 
	ИначеЕсли Итог("СуммаКнижная") < Итог("СуммаФактическая") Тогда	         
		Раз1=Итог("СуммаФактическая") - Итог("СуммаКнижная");
//		Сообщить("Разница "+(Итог("СуммаФактическая") - Итог("СуммаКнижная"))); 
	ИначеЕсли Итог("СуммаКнижная") = Итог("СуммаФактическая") Тогда	
		Раз1=0;
//		Сообщить("Разница 0");		
	КонецЕсли;
//	Сообщить("   Больше сумма"+Сум2а+" Меньше сумма"+Sum1); 
	Если Сум2а > Sum1 Тогда       
		Раз2=(Сум2а - Sum1);
//		Сообщить("Разница "+(Сум2а - Sum1));
	ИначеЕсли Сум2а < Sum1 Тогда		 
		Раз2=(Sum1-Сум2а);
//		Сообщить("Разница "+(Sum1-Сум2а));    
	ИначеЕсли Сум2а = Sum1 Тогда
		Раз2=0;
//		Сообщить("Разница 0");		
	КонецЕсли;      
//	Сообщить("   Больше количество"+Сум1а+" Меньше количество"+Sum);	
	Если Сум1а > Sum Тогда       
//		Сообщить("Разница "+(Сум1а - Sum));
	ИначеЕсли Сум1а < Sum Тогда		 
//		Сообщить("Разница "+(Sum-Сум1а));    
	ИначеЕсли Сум1а = Sum Тогда
//		Сообщить("Разница 0");		
	КонецЕсли;	
//	Сообщить("--------------------------------------");
	Если Окр(Раз1,2) > Окр(Раз2,2) Тогда
		Сообщить("Расхождение в инвентаризации = "+(Окр(Раз1,2) - Окр(Раз2,2)));
	ИначеЕсли Раз1 < Раз2 Тогда  
		Сообщить("Расхождение в инвентаризации = "+(Окр(Раз2,2) - Окр(Раз1,2)));    
	ИначеЕсли Раз1 = Раз2 Тогда	  
		Сообщить("Расхождение в инвентаризации = 0");
	КонецЕсли;                       
	КолНаЛист=КолСтрок;
	Таб.ВывестиСекцию("СуммаЛиста");
	//Таб.newPage();
	НомСтр=НомСтр+1; 
	Таб.ВывестиСекцию("Пропуск");
    Таб.ВывестиСекцию("Шапка2");	
   	Таб.ВывестиСекцию("Подвал");
	Таб.Опции(0,0,0,0,ПарСтрДок);
	Таб.ПараметрыСтраницы(2,85,1,5,2,5,5);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("PreҐu inventarizўcijas nesakr®toєana lapa","");	
КонецПроцедуры

//**********************************************
//ПересортицаПечать
Процедура ПечатьПересортица()
	Фирма.ИспользоватьДату(ДатаДок);
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Пересортица");
	Таб.ВывестиСекцию("Шапка");
	// получим закуп.цены и суммы
	// по Регистру ОстаткиТоваров
	
	Если Проведен()=0 Тогда
		Сообщить("Невозможна печать непроведенного документа!");
	    Возврат;
	КонецЕсли;
	
	Рег=СоздатьОбъект("Регистр.ПартииТоваров");

	СписокТоваров=СоздатьОбъект("ТаблицаЗначений");
	СписокТоваров.НоваяКолонка("Товар","Справочник.Товары");
	СписокТоваров.НоваяКолонка("Единица","Справочник.Единицы");
	СписокТоваров.НоваяКолонка("Остаток","Число",17,3);
	СписокТоваров.НоваяКолонка("БазСто","Число",19,5);
	СписокТоваров.НоваяКолонка("ПродСто","Число",19,5);
	СписокТоваров.НоваяКолонка("НДС","Число",19,5);
	
	//	СписокТоваров.НоваяКолонка("СрокРеализ","Дата");
	СписокТоваров.НоваяКолонка("Знак","Число",1);
	
	Ном=0;
	ОбщСумма=0;   
	
	Розница_=?(Склад.ВидСклада=Перечисление.ВидыСкладов.Розничный,1,0);

	НДС_=Окр(1+(ПроцентНДС(Константа.ОсновнаяСтавкаНДС)/100),2);
	
	Рег.ВыбратьДвиженияДокумента(ТекущийДокумент());
        
	Пока Рег.ПолучитьДвижение()=1 Цикл
                                     
		ПолучитьСтрокуПоНомеру(Рег.НомерСтроки());

		Если Рег.Приход=1 Тогда
			Знак=1;
		Иначе
			Знак=-1;
		КонецЕсли;
		            
		ЦенаПрод=ЦенаТовараПоКатегорииДляТовара(Рег.Товар,?(Розница_=1,Константа.РозничнаяКатегорияЦены,Константа.ОсновнаяКатегорияЦены));
		
		СписокТоваров.НоваяСтрока();
		СписокТоваров.Товар=Рег.Товар;
		СписокТоваров.Остаток=Рег.ОстатокТовара*Знак;
		СписокТоваров.НДС=(ЦенаПрод*СписокТоваров.Остаток*(НДС_-1));
		СписокТоваров.БазСто=Рег.Стоимость*Знак;
		СписокТоваров.ПродСто=ЦенаПрод*СписокТоваров.Остаток;
		СписокТоваров.Единица=Единица;
		СписокТоваров.Знак=Знак;
	
//		СписокТоваров.СрокРеализ=Рег.ДатаПрихода;
	КонецЦикла;
            
	СписокТоваров.Свернуть("Знак,Товар,Единица","Остаток,БазСто,ПродСто,НДС");
	
	СписокТоваров.ВыбратьСтроки();
	
	Пока СписокТоваров.ПолучитьСтроку() = 1 Цикл
	// Вычислим, сколько всего данного товара
		            
		Попытка
			ЗакЦена=СписокТоваров.БазСто/СписокТоваров.Остаток;
		Исключение
			ЗакЦена=0;
		КонецПопытки;
		
	   	ЗакСумма=СписокТоваров.БазСто;
	   	

        ОбщСумма=ОбщСумма+ЗакСумма;
		Ном=Ном+1;
		Таб.ВывестиСекцию("Строка");
	enddo;
	Рег=0;
	Таб.ВывестиСекцию("Подвал");
	Таб.Опции(0,0,0,0,ПарСтрДок);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Печать накладной","");
КонецПроцедуры

Процедура семПечать()
	
	
	Если Проведен() = 0 Тогда
		//Сообщить("Печать непроведенного документа запрещена!");
		//Возврат;
//		Ответ = Вопрос("Печать непроведенного документа запрещена!","Да+Нет",60);
//		Если Ответ <> "Да" Тогда Возврат; КонецЕсли;
//		Записать(); 
	КонецЕсли;
	Путь = КаталогИБ() + "ExtForms\Печать\УправлениеПечатью.ert";
	Если ФС.СуществуетФайл( Путь ) = 0 Тогда Возврат; КонецЕсли;
	ОткрытьФорму( "Отчет", Контекст, Путь );
	//ОткрытьФорму( "Отчет", ТекущийДокумент(), Путь );
КонецПроцедуры

Процедура кнПечатьНов()
	семПечать();
КонецПроцедуры


//======================================================================
Функция ЗагрузкаИТ(п_Документ)
	л_ИТ=СоздатьОбъект("ИндексированнаяТаблица");
	Запрос=СоздатьОбъект("ODBCRecordSet");
	
	ТекстЗапроса="SELECT ИнвентаризТовараОстатки.Товар [Товар $Справочник.Номенклатура]
		|	, NullIf(ИнвентаризТовараОстатки.СрокРеализ, '17530101') СрокРеализ
		|	, Sum(ИнвентаризТовараОстатки.КоличествоОстаток) СуммаКоличествоОстаток
		|FROM $РегистрОстатки.ИнвентаризТовара(,,
		|		(ДокОснование = $ВидДокумента36.СличительнаяВедомость + :п_ДокОснование),
		|		(Товар, СрокРеализ),) AS ИнвентаризТовараОстатки
		|GROUP BY ИнвентаризТовараОстатки.СрокРеализ
		|	, ИнвентаризТовараОстатки.Товар
		|";	
	
	Запрос.УстановитьТекстовыйПараметр("п_ДокОснование",п_Документ);
	Запрос.ВыполнитьИнструкцию(ТекстЗапроса,л_ИТ);
	л_ИТ.ДобавитьИндекс("иТоварСрокРеализ","*Товар,*СрокРеализ");
	Возврат л_ИТ;
КонецФункции

//======================================================================
Функция ПолучитьКоличество(п_ИТ,п_Товар,п_СрокРеализ)

	Сз=СоздатьОбъект("СписокЗначений");
	Сз.ДобавитьЗначение(п_Товар,"Товар");
	Сз.ДобавитьЗначение(п_СрокРеализ,"СрокРеализ");

	Если п_ИТ.НайтиСтроку("иТоварСрокРеализ",Сз,,1)<>0 Тогда
		Возврат п_ИТ.СуммаКоличествоОстаток;
	Иначе
		Возврат (-1);
	КонецЕсли;

	
КонецФункции // ПолучитьКоличество
Функция НайтиСтрокувИТ(п_ИТ,п_Товар,п_СрокРеализ)

	Если ПустоеЗначение(п_СрокРеализ)=1 Тогда
		л_НомерСтроки=п_ИТ.НайтиСтроку("иТовар",п_Товар,,1);
	Иначе
		Сз=СоздатьОбъект("СписокЗначений");
		Сз.ДобавитьЗначение(п_Товар,"Товар");
		Сз.ДобавитьЗначение(п_СрокРеализ,"СрокРеализ");
		л_НомерСтроки=п_ИТ.НайтиСтроку("иТоварСрокРеализ",Сз,,1);		
	КонецЕсли;
	Возврат л_НомерСтроки;
	
КонецФункции // ПолучитьКоличество

Процедура ЗагрузитьДанные()
	л_ИТДок=СоздатьОбъект("ИндексированнаяТаблица");	
	л_ТЗ=СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(л_ТЗ,);
	л_ИТДок.Загрузить(л_ТЗ);
	л_ИТДок.ДобавитьИндекс("иТоварСрокРеализ","*Товар,*СрокРеализ");
	л_ИТДок.ДобавитьИндекс("иТовар","*Товар");
	
	
	л_ИТ=ЗагрузкаИТ(ТекущийДокумент());
//	л_ИТ.Показать();
	л_ИТ.ВыбратьСтроки();
	Пока л_ИТ.ПолучитьСтроку() = 1 Цикл
		
		л_Строка=НайтиСтрокувИТ(л_ИТДок,л_ИТ.Товар,л_ИТ.СрокРеализ);
		Если л_Строка<>0 Тогда
			ПолучитьСтрокуПоНомеру(л_Строка);
			КоличествоФактическое=л_ИТ.СуммаКоличествоОстаток;
			Разница();
		Иначе
			//делаем новую строку на основе существующей
//			л_Строка=НайтиСтрокувИТ(л_ИТДок,л_ИТ.Товар,ПолучитьПустоеЗначение());
//			Если л_Строка<>0 Тогда
				ПолучитьСтрокуПоНомеру(л_Строка);
				НоваяСтрока();
				Товар = л_ИТДок.Товар;
				Единица = л_ИТДок.Единица;
				Коэффициент = л_ИТДок.Коэффициент;
//				Цена = л_ИТДок.Цена;
//				КоличествоКнижное = л_ИТДок.КоличествоКнижное;
//				СуммаКнижная = л_ИТДок.СуммаКнижная;
				КоличествоФактическое = л_ИТ.СуммаКоличествоОстаток;
//				СуммаФактическая = л_ИТДок.СуммаФактическая;
//				КоличествоРазницы = л_ИТДок.КоличествоРазницы;
//				СуммаРазницы =л_ИТДок.СуммаРазницы;
				ТовКод = л_ИТДок.ТовКод;
				СрокРеализ = л_ИТ.СрокРеализ;
				ШтрихКод = л_ИТДок.ШтрихКод;
//				ДатаПроизв = л_ИТДок.ДатаПроизв;
//				Партия = л_ИТДок.Партия;
//				СтрокаС = л_ИТДок.СтрокаС ;
				КодДляРозницы = л_ИТДок.КодДляРозницы;
//				ПродЦена = л_ИТДок.ПродЦена = ;
//				СуммаПродКнижная = л_ИТДок.СуммаПродКнижная;
//				СуммаПродФактическая = л_ИТДок.СуммаПродФактическая;
//				СуммаРазницыПрод = л_ИТДок.СуммаРазницыПрод;
				Разница();
//			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // ЗагрузитьДанные
Процедура ЗагрузитьДанные1()
	л_ИТ=ЗагрузкаИТ(ТекущийДокумент());
	л_ИТ.Показать();
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		л_КоличествоФактическое=ПолучитьКоличество(л_ИТ,Товар,СрокРеализ);
		Если л_КоличествоФактическое<>-1 Тогда
			КоличествоФактическое=л_КоличествоФактическое;
			Разница();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // ЗагрузитьДанные
//======================================================================
Процедура ОбнулитьФактическое()
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		КоличествоФактическое=0;
		Разница();
	КонецЦикла;
КонецПроцедуры // ОбнулитьФактическое

//======================================================================
Процедура кнЗапускИнвентаризацииТерминалом()
	Если флСтадия3=1 Тогда
		ОбнулитьФактическое();
		ЗагрузитьДанные();
	Иначе
		Если флСтадия2=1 Тогда
			Провести();
		Иначе
			Если флСтадия1=1 Тогда
				Провести();
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры // кнЗапускИнвентаризацииТерминалом

Процедура кнЗагрузитьИзТелефона()

	УдалитьСтроки();
	
	ИмяФайла = "";
	ИмяКаталога = КаталогИБ()+"\ExtForms\Import\Inventory\";
	
	тт = СоздатьОбъект("ТаблицаЗначений");
	тт.НоваяКолонка("Склад","Справочник.МестаХранения");
	тт.НоваяКолонка("Группа","Справочник.Номенклатура");
	тт.НоваяКолонка("Товар","Справочник.Номенклатура");
	тт.НоваяКолонка("Поставщик","Справочник.Контрагенты");
	тт.НоваяКолонка("Кол");

	Текст = СоздатьОбъект( "Текст" );

	~ВыборФайла:	
	Если ФС.ВыбратьФайл (0, ИмяФайла, ИмяКаталога,"Выберите файл","*.txt") = 0 Тогда
		Возврат;
	КонецЕсли;
	ФайлЗагрузки = ИмяКаталога+ИмяФайла;

	Текст.Открыть(ФайлЗагрузки);
	СЗ = СоздатьОбъект( "СписокЗначений" );
	Для н = 1 По Текст.КоличествоСтрок() Цикл
		Состояние("Подготовка: "+н+"/"+Текст.КоличествоСтрок());
		Стр = Текст.ПолучитьСтроку(н);
		Если ПустоеЗначение(Стр)=1 Тогда
			Продолжить;
		КонецЕсли;
		Стр=""""+Стр + """";
		Стр=СтрЗаменить(Стр,Симв(9),""",""");
		Сз.ИзСтрокиСРазделителями(Стр);
		ПромСклад = MDW.ЗначениеИзСтрокиБД("Справочник.МестаХранения",Прав(сз.ПолучитьЗначение(1),9));
		Если ПромСклад<>Склад Тогда
			Продолжить;
		КонецЕсли;
		промТовар = MDW.ЗначениеИзСтрокиБД("Справочник.Номенклатура",Прав(сз.ПолучитьЗначение(2),9));
		            
		Если ПустоеЗначение(промТовар)=0 Тогда
				
			тт.НоваяСтрока();
			тт.Склад = ПромСклад;
			тт.Товар = MDW.ЗначениеИзСтрокиБД("Справочник.Номенклатура",Прав(сз.ПолучитьЗначение(2),9));
			тт.Кол = Число(сз.ПолучитьЗначение(3));
			тт.Поставщик = тт.Товар.Поставщик;
			тт.Группа 	= тт.Товар.Родитель.Родитель;                                                   
		          
		Иначе
			Сообщить("Не найден товар в строке "+н);
		КонецЕсли;		
	КонецЦикла;
	
	//УдалитьОбработанныйФайл(ИмяКаталога,ИмяФайла,0);
	Если Вопрос("Вы хотите выбрать еще один файл?","Да+Нет")="Да" Тогда
		Перейти ~ВыборФайла;
	КонецЕсли;

	тт.Свернуть("Склад,Товар,Поставщик,Группа","Кол");
	сзСклады = СоздатьОбъект("СписокЗначений");
	ттСклады=СоздатьОбъект("ТаблицаЗначений");
	тт.Выгрузить(ттСклады,,,"Склад");
	ттСклады.Свернуть("Склад","");
	ттСклады.Выгрузить(сзСклады);
	
	//тт.ВыбратьСтроку();
//	ВыбСклад = Склад;
	тт.ВыбратьСтроки();
	Пока тт.ПолучитьСтроку() = 1 Цикл
		Состояние(Шаблон("Заполнение: [тт.НомерСтроки]/[тт.КоличествоСтрок()]"));
		Если тт.Склад = Склад Тогда
			Тов = тт.Товар;
			Если (ПустоеЗначение(ГруппаТоваров)=0) И (Тов.ПринадлежитГруппе(ГруппаТоваров)=0) Тогда
				Продолжить;
			КонецЕсли;
			
			Если (ПустоеЗначение(Поставщик)=0) И (Тов.Поставщик<>Поставщик) Тогда
				Продолжить;
			КонецЕсли;
			
			ВычОстДляПодбора(Тов); 
			КоличествоФактическое = тт.Кол;
			Разница();
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

Процедура кнДопФункции()
	сп = СоздатьОбъект( "СписокЗначений" ); 
	сп.ДобавитьЗначение( "Обновить", "Обновить нач. данные" );
	сп.ДобавитьЗначение( "УдалитьНулевые", "Уданить нулевые позиции" );
	сп.ДобавитьЗначение( "ЗагрузитьДанные", "Загрузить данные с терминалов" );
	выб = ""; Если сп.ВыбратьЗначение(выб,,,,1) <> 1 Тогда Возврат; КонецЕсли;
	Если выб = "Обновить" Тогда
		Заполнить("Обновить");
	ИначеЕсли выб = "УдалитьНулевые" Тогда
		УдалитьНулевые();
	ИначеЕсли выб = "ЗагрузитьДанные" Тогда
		ЗагрузитьДанные();	
	КонецЕсли;
КонецПроцедуры

//При проведении проверяем наличие коэффициентов каждой строчки, без этого нельзя провадить.
Процедура кнПровестиПриНажатии(Реж="Закрыть")
	                                          
	Если Константа.ДатаЗапретаРедактирования >= ДатаДок Тогда
		Предупреждение("Дата запрета редактирования, проведение невозможно!");	                                                         
		СтатусВозврата(0);
		Возврат;		
	КонецЕсли;
	
	рез=Провести(); 
	Если (СравнитьТА()=-1) И (рез=1) И (ПустоеЗначение(спИзмененныеТовары)=0) Тогда
		глПровестиДокументыПоТоварам(Контекст);
	КонецЕсли;
	
	Если Реж="Закрыть" Тогда
		Форма.Закрыть();
	КонецЕсли;
КонецПроцедуры


Процедура ВыборСклада()
	
	Агент = Склад.Агент;
	
КонецПроцедуры
ПоБлюдам=0;
ПоПродуктам=0;
Валюта_Прежн=Валюта;
Курс_Прежн=Курс;
РегОстатки=СоздатьОбъект("Регистр.ПартииТоваров");
Форма.ГруппаТоваров.ВыборГруппы(1);
ПоСрокам=1;

//************************************************************
Форма.ИспользоватьЗакладки(1);  
РежимЗаполнения=0;

//ИнвТовар=СоздатьОбъект("Справочник.ИнвентураТовар");
//ИнвТовар1=СоздатьОбъект("Справочник.ИнвентураТовар");
