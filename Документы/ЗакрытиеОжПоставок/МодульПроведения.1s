Перем ДокументОснованиеТабл;

Процедура ОчисткаСтатуса(пПоСчету,пСтатус)
	
	Реги=СоздатьОбъект("Регистры");
	Реги.Актуальность(1);
	Рег=Реги.КомплектацияЗаявок;
	
	рег.УстановитьЗначениеФильтра("ПоСчету",пПоСчету);
	рег.УстановитьЗначениеФильтра("Статус",пСтатус);
		
	Если ИтогиАктуальны()=0 Тогда
		рег.ВременныйРасчет(1);
		Реги.РассчитатьРегистрыНа(ТекущийДокумент());
	КонецЕсли;
	
	таблКомпл=СоздатьОбъект("ТаблицаЗначений");
	Рег.ВыгрузитьИтоги(таблКомпл,1,1);
	Если (таблКомпл.КоличествоСтрок()=0) Тогда
		Возврат;
	КонецЕсли;
	
	таблКомпл.ВыбратьСтроки();
	Пока таблКомпл.ПолучитьСтроку()=1 Цикл
		Регистр.КомплектацияЗаявок.ДатаПоставки=таблКомпл.ДатаПоставки;
		Регистр.КомплектацияЗаявок.ПоСчету=таблКомпл.ПоСчету;
		Регистр.КомплектацияЗаявок.ВидЗаявки=таблКомпл.ВидЗаявки;
		Регистр.КомплектацияЗаявок.МестоКомплектации=таблКомпл.МестоКомплектации;
		Регистр.КомплектацияЗаявок.Склад=таблКомпл.Склад;
		Регистр.КомплектацияЗаявок.ВидДоставки=таблКомпл.ВидДоставки;
		Регистр.КомплектацияЗаявок.Товар="";
		Регистр.КомплектацияЗаявок.Статус=таблКомпл.Статус;
		Регистр.КомплектацияЗаявок.Количество=таблКомпл.Количество;
		Регистр.КомплектацияЗаявок.ДвижениеРасходВыполнить();
	КонецЦикла;
	
КонецПроцедуры


//{***Ожидаемая Поставка***\\
Функция ИзменениеСтатусаБрони(п_ПоСчету,п_Статус)
	
	Регистр.КомплектацияЗаявок.ДатаПоставки=п_ПоСчету.ДатаПоставки;
	Регистр.КомплектацияЗаявок.ПоСчету=п_ПоСчету;
	Регистр.КомплектацияЗаявок.ВидЗаявки=Перечисление.ВидыЗаявок.ЗаявкаБронь;
	Регистр.КомплектацияЗаявок.МестоКомплектации=п_ПоСчету.МестоКомплектации;
	Регистр.КомплектацияЗаявок.Склад=п_ПоСчету.Склад;
	Регистр.КомплектацияЗаявок.ВидДоставки=п_ПоСчету.ВидДоставки;
	ОчисткаСтатуса(п_ПоСчету,31);
	Регистр.КомплектацияЗаявок.Статус=п_Статус;//32
	Регистр.КомплектацияЗаявок.Количество=1;
	Регистр.КомплектацияЗаявок.ДвижениеПриходВыполнить();
	
КонецФункции 

Функция ГаситьРегистрТоварыВПути999(итТаблОстатков)
//	итТаблОстатков.Показать();
	итТаблОстатков.ВыбратьСтроки();
	Пока итТаблОстатков.ПолучитьСтроку() = 1 Цикл
		Если итТаблОстатков.Количество=0 Тогда
			Продолжить;
		КонецЕсли;	
		Регистр.ТоварыВПути.ПривязыватьСтроку(999);
		Регистр.ТоварыВПути.Товар = итТаблОстатков.Товар ;
		Регистр.ТоварыВПути.СрокПоставки = итТаблОстатков.СрокПоставки ;
		Регистр.ТоварыВПути.ПоЗаказу = итТаблОстатков.ПоЗаказу ;
		Регистр.ТоварыВПути.Количество = итТаблОстатков.Количество;
		Регистр.ТоварыВПути.Док = итТаблОстатков.Док;
		Регистр.ТоварыВПути.ДвижениеРасходВыполнить();			
	КонецЦикла;
КонецФункции
Функция ГаситьРегистрЗаказыПоставщикам999(итТаблОстатковЗаказов)
	итТаблОстатковЗаказов.ВыбратьСтроки();
	Пока итТаблОстатковЗаказов.ПолучитьСтроку() = 1 Цикл
		Если итТаблОстатковЗаказов.Количество=0 Тогда
			Продолжить;
		КонецЕсли;	

		Регистр.ЗаказыПоставщикам.ПривязыватьСтроку(999);
		Регистр.ЗаказыПоставщикам.Товар=итТаблОстатковЗаказов.Товар;
		Регистр.ЗаказыПоставщикам.Склад=итТаблОстатковЗаказов.Склад;
		Регистр.ЗаказыПоставщикам.Клиент=Клиент;						
		Регистр.ЗаказыПоставщикам.СрокПоставки=итТаблОстатковЗаказов.СрокПоставки;
		Регистр.ЗаказыПоставщикам.ПоЗаказу=итТаблОстатковЗаказов.ПоЗаказу;
		Регистр.ЗаказыПоставщикам.Количество=итТаблОстатковЗаказов.Количество;
		Регистр.ЗаказыПоставщикам.КодОперации=ЗакрытиеНевыполненногоЗаказаПоставщику;
		Регистр.ЗаказыПоставщикам.ДвижениеРасходВыполнить();
	КонецЦикла;
КонецФункции
Функция ГаситьРегистрЗаказыПоставщикамЗаявки999(итТаблОстатковЗаказов)
	итТаблОстатковЗаказов.ВыбратьСтроки();
	Пока итТаблОстатковЗаказов.ПолучитьСтроку() = 1 Цикл
		Если итТаблОстатковЗаказов.Количество=0 Тогда
			Продолжить;
		КонецЕсли;	
		Регистр.ЗаказыПоставщикамЗаявки.ПривязыватьСтроку(999);
		Регистр.ЗаказыПоставщикамЗаявки.Товар = итТаблОстатковЗаказов.Товар ;
		Регистр.ЗаказыПоставщикамЗаявки.ПоСчету = итТаблОстатковЗаказов.ПоСчету;
		Регистр.ЗаказыПоставщикамЗаявки.ПоЗаказу = итТаблОстатковЗаказов.ПоЗаказу;
		Регистр.ЗаказыПоставщикамЗаявки.Количество = итТаблОстатковЗаказов.Количество;
		Регистр.ЗаказыПоставщикамЗаявки.ДвижениеРасходВыполнить();
	
		Если итТаблОстатковЗаказов.ПоСчету.ВидЗаявки=Перечисление.ВидыЗаявок.ЗаявкаБронь Тогда
			ИзменениеСтатусаБрони(итТаблОстатковЗаказов.ПоСчету,0);
		КонецЕсли;
		
		Заголовок = Шаблон("Dokument speczakaz/bronirovanie anulirovan [итТаблОстатковЗаказов.ПоСчету.НомерДок]");
		ТекстСообщения = Шаблон("Zajavaka [итТаблОстатковЗаказов.ПоСчету.НомерДок] anulirovana dokumentom [ТекущийДокумент().НомерДок]");
		Рез=глОтправитьСообщение(Заголовок,ТекстСообщения,итТаблОстатковЗаказов.ПоСчету.Агент,"Email");
//		Рез=глОтправитьСообщение(Заголовок,Заголовок,итТаблОстатковЗаказов.ПоСчету.Агент,"SMS");
	КонецЦикла;
КонецФункции
Функция ГаситьРегистрПриемТовара999(табл)
	табл.ВыбратьСтроки();
	Пока табл.ПолучитьСтроку() = 1 Цикл
		Если табл.Количество=0 Тогда
			Продолжить;
		КонецЕсли;	
		Регистр.ПриемТовара.ПривязыватьСтроку(999);
		Регистр.ПриемТовара.Товар = табл.Товар ;
		Регистр.ПриемТовара.Количество = табл.Количество;
		Регистр.ПриемТовара.Док = табл.Док;
		Регистр.ПриемТовара.СрокРеализ = табл.СрокРеализ;
		Регистр.ПриемТовара.ДокОснование = табл.ДокОснование;
		Регистр.ПриемТовара.ДвижениеРасходВыполнить();
	КонецЦикла;	
КонецФункции


Функция ГаситьРегистрСостояния(докОсн)
	Рег=СоздатьОбъект("Регистр.СостояниеДокумента");
	Рег.УстановитьЗначениеФильтра("Док",докОсн,1);
	табл=СоздатьОбъект("ТаблицаЗначений");
	Рег.ВыгрузитьИтоги(табл,1,1);
	табл.ВыбратьСтроки();
	Пока табл.ПолучитьСтроку() = 1 Цикл
		Регистр.СостояниеДокумента.Пользователь = табл.Пользователь ;
		Регистр.СостояниеДокумента.Количество = табл.Количество;
		Регистр.СостояниеДокумента.Док = табл.Док;
		Регистр.СостояниеДокумента.СостояниеДок = табл.СостояниеДок;
		Регистр.СостояниеДокумента.ДвижениеРасходВыполнить();
	КонецЦикла;	
КонецФункции


Функция ОбработкаОжидаемойПоставки(п_Док)

//соберем все счета в список
	сзСчета=СоздатьОбъект("СписокЗначений");
	тСчета=СоздатьОбъект("ТаблицаЗначений");
	п_Док.ВыгрузитьТабличнуюЧасть(тСчета,"ПоСчету");
	тСчета.Свернуть("ПоСчету","");
	тСчета.ВыбратьСтроки();
	Пока тСчета.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(тСчета.ПоСчету)=0 Тогда
			сзСчета.ДобавитьЗначение(тСчета.ПоСчету);
		КонецЕсли;
	КонецЦикла;
//соберем все заказы в список.
	сзЗаказыПоставщикам=СоздатьОбъект("СписокЗначений");
	тЗаказыПоставщикам=СоздатьОбъект("ТаблицаЗначений");
	п_Док.ВыгрузитьТабличнуюЧасть(тЗаказыПоставщикам,"ДокументОснованиеТабл");

	тЗаказыПоставщикам.Свернуть("ДокументОснованиеТабл","");
	тЗаказыПоставщикам.ВыбратьСтроки();
	Пока тЗаказыПоставщикам.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(тЗаказыПоставщикам.ДокументОснованиеТабл)=0 Тогда
			сзЗаказыПоставщикам.ДобавитьЗначение(тЗаказыПоставщикам.ДокументОснованиеТабл);
		КонецЕсли;
	КонецЦикла;	
	
//соберем все ОжПоставки в список - необходимо для брони в пути на осн ож. паставки
//список значений понадобится, когда на осн. нескольких ож. поставок будут приходные накладные.
	сзОжидаемыеПоставкиБронь=СоздатьОбъект("СписокЗначений");
	сзЗаказыПоставщикам.ДобавитьЗначение(п_Док);
	
//соберем все товары в список
	СЗТовары=СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(СЗТовары,"Товар");	

	
	Реги=СоздатьОбъект("Регистры");
	РегТвП=Реги.ТоварыВПути;
	РегПрТ=Реги.ПриемТовара;

	Рег=Реги.ЗаказыПоставщикам;
	РегЗЗ=Реги.ЗаказыПоставщикамЗаявки;
	РегСЗ=Реги.СпецЗаказы;

//	РегТвП.УстановитьЗначениеФильтра("Товар",СЗТовары,2);
	РегТвП.УстановитьЗначениеФильтра("Док",п_Док,1);
	
//	РегПрТ.УстановитьЗначениеФильтра("Товар",СЗТовары,2);
	РегПрТ.УстановитьЗначениеФильтра("ДокОснование",п_Док,1);

//	РегЗЗ.УстановитьЗначениеФильтра("Товар",СЗТовары,2);
	РегСЗ.УстановитьЗначениеФильтра("Товар",СЗТовары,2);
	РегЗЗ.УстановитьЗначениеФильтра("ПоЗаказу",сзЗаказыПоставщикам,2); 
//	РегЗЗ.УстановитьЗначениеФильтра("ПоЗаказу",сзОжидаемыеПоставкиБронь,2);//для брони на осн ож поставки
	Рег.УстановитьЗначениеФильтра("Клиент",Клиент,1);
	Рег.УстановитьЗначениеФильтра("ПоЗаказу",сзЗаказыПоставщикам,2);
	
	Если ПустоеЗначение(сзСчета)=0 Тогда
		РегСЗ.УстановитьЗначениеФильтра("ПоСчету",сзСчета,2);
	КонецЕсли;
	
	Если ИтогиАктуальны()=0 Тогда                   
		РегТвП.ВременныйРасчет(1);
		РегПрТ.ВременныйРасчет(1);
		
		Рег.ВременныйРасчет(1);
		РегЗЗ.ВременныйРасчет(1);
		РегСЗ.ВременныйРасчет(1);
		
	    Реги.РассчитатьРегистрыНа(ТекущийДокумент());
	КонецЕсли;

	ТаблОстатков=СоздатьОбъект("ТаблицаЗначений");
	итТаблОстатков=СоздатьОбъект("ИндексированнаяТаблица");
	итТаблОстатковЗаказов=СоздатьОбъект("ИндексированнаяТаблица");
	РегТвП.УстановитьЗначениеФильтра("Док",п_Док,1);
	РегТвП.ВыгрузитьИтоги(ТаблОстатков,1);
	итТаблОстатков.Загрузить(ТаблОстатков);
//	итТаблОстатковЗаказов.Загрузить(итТаблОстатков);

	ТаблОстатковЗП=СоздатьОбъект("ТаблицаЗначений");
	Рег.ВыгрузитьИтоги(ТаблОстатковЗП,1);
	итТаблОстатковЗаказов.Загрузить(ТаблОстатковЗП);
	итТаблОстатковЗаказов.ДобавитьИндекс("иТоварПоЗаказу","*Товар,*ПоЗаказу");

	ТаблОстатковЗПЗ=СоздатьОбъект("ТаблицаЗначений");
	РегЗЗ.ВыгрузитьИтоги(ТаблОстатковЗПЗ,1);
	итРегЗЗ=СоздатьОбъект("ИндексированнаяТаблица");
	итРегЗЗ.Загрузить(ТаблОстатковЗПЗ);
	итРегЗЗ.ДобавитьИндекс("иТоварПоЗаказу","*Товар,*ПоЗаказу,*ПоСчету");
	итРегЗЗ.ДобавитьИндекс("иТоварЗаявка","*Товар,*ПоСчету");
	
	//итРегЗЗ.Показать();
	
	ТаблОстатков_РегПрТ=СоздатьОбъект("ТаблицаЗначений");
	РегПрТ.ВыгрузитьИтоги(ТаблОстатков_РегПрТ,1);
	итРегПрТ=СоздатьОбъект("ИндексированнаяТаблица");
	итРегПрТ.Загрузить(ТаблОстатков_РегПрТ);
//	итРегПрТ.ДобавитьИндекс("иТоварПоЗаказу","*Товар,*ПоЗаказу,*ПоСчету");
	итРегПрТ.ДобавитьИндекс("иТоварЗаявка","*Товар,*Док");
	
	итТаблАнулир=СоздатьОбъект("ИндексированнаяТаблица");

	ТаблСпецЗаявки=СоздатьОбъект("ТаблицаЗначений");
	итТаблСпецЗаявки=СоздатьОбъект("ИндексированнаяТаблица");
	РегСЗ.ВыгрузитьИтоги(ТаблСпецЗаявки,1);
	итТаблСпецЗаявки.Загрузить(ТаблСпецЗаявки);
	итТаблСпецЗаявки.ДобавитьИндекс("иТоварЗаявка","*Товар,*ПоСчету");
	//итТаблСпецЗаявки.Показать();

	итЗаявкиРезерв=СоздатьОбъект("ИндексированнаяТаблица");
	итЗаявкиРезерв.Загрузить(итРегЗЗ,,"ПоСчету");

	итЗаявкиРезерв.Свернуть("ПоСчету","");
	
		ГаситьРегистрТоварыВПути999(итТаблОстатков);
		ГаситьРегистрЗаказыПоставщикам999(итТаблОстатковЗаказов);
		ГаситьРегистрЗаказыПоставщикамЗаявки999(итРегЗЗ);		
		ГаситьРегистрПриемТовара999(итРегПрТ);

	ГаситьРегистрСостояния(п_Док);
	
	//Если ГрупповаяОбработка()=0 Тогда
	//	спПроведениеДок = СоздатьОбъект("СписокЗначений");
	//	спПроведениеДок.ДобавитьЗначение(п_Док,"ОжидаемаяПоставка");
	//	спПроведениеДок.ДобавитьЗначение(ТекущийДокумент(),"ЗакрытиеОжПоставок");
	//	ОбработкаОжидания("глПроведениеПоВремени",5);
	//КонецЕсли;
	
КонецФункции
//}***Ожидаемая Поставка***\\

//{***ЗаказыПоставщику***

Функция ГаситьРегистрЗаказыПоставщикам999_ДляЗаказа(п_Док)

	Рег=СоздатьОбъект("Регистр.ЗаказыПоставщикам");
	Рег.УстановитьЗначениеФильтра("ПоЗаказу",п_Док,1);
	табл=СоздатьОбъект("ТаблицаЗначений");
	Рег.ВыгрузитьИтоги(табл,1,1);
//	табл.ВыбратьСтроку();
	табл.ВыбратьСтроки();
	Пока табл.ПолучитьСтроку() = 1 Цикл
		Регистр.ЗаказыПоставщикам.ПривязыватьСтроку(999);
		Регистр.ЗаказыПоставщикам.Товар=табл.Товар;
		Регистр.ЗаказыПоставщикам.Склад=табл.Склад;
		Регистр.ЗаказыПоставщикам.Клиент=табл.Клиент;						
		Регистр.ЗаказыПоставщикам.СрокПоставки=табл.СрокПоставки;
		Регистр.ЗаказыПоставщикам.ПоЗаказу=табл.ПоЗаказу;
		Регистр.ЗаказыПоставщикам.Количество=табл.Количество;
		Регистр.ЗаказыПоставщикам.КодОперации=ЗакрытиеНевыполненногоЗаказаПоставщику;
		Регистр.ЗаказыПоставщикам.ДвижениеРасходВыполнить();
	КонецЦикла;
КонецФункции
Функция ГаситьРегистрЗаказыПоставщикамЗаявки999_ДляЗаказа(п_Док)
	
	Рег=СоздатьОбъект("Регистр.ЗаказыПоставщикамЗаявки");
	Рег.УстановитьЗначениеФильтра("ПоЗаказу",п_Док,1);
	табл=СоздатьОбъект("ТаблицаЗначений");
	Рег.ВыгрузитьИтоги(табл,1,1);
//	табл.ВыбратьСтроку();
	табл.ВыбратьСтроки();
	Пока табл.ПолучитьСтроку() = 1 Цикл	
		Регистр.ЗаказыПоставщикамЗаявки.ПривязыватьСтроку(999);
		Регистр.ЗаказыПоставщикамЗаявки.Товар = табл.Товар ;
		Регистр.ЗаказыПоставщикамЗаявки.ПоСчету = табл.ПоСчету;
		Регистр.ЗаказыПоставщикамЗаявки.ПоЗаказу = табл.ПоЗаказу;
		Регистр.ЗаказыПоставщикамЗаявки.Количество = табл.Количество;
		Регистр.ЗаказыПоставщикамЗаявки.ДвижениеРасходВыполнить();
	КонецЦикла;
КонецФункции
Функция ГаситьРегистрОжидаемаяПоставка999_ДляЗаказа(п_Док)

	Рег=СоздатьОбъект("Регистр.ОжидаемаяПоставка");
	Рег.УстановитьЗначениеФильтра("ПоЗаказу",п_Док,1);
	табл=СоздатьОбъект("ТаблицаЗначений");
	Рег.ВыгрузитьИтоги(табл,1,1);
//	табл.ВыбратьСтроку();
	табл.ВыбратьСтроки();
	Пока табл.ПолучитьСтроку() = 1 Цикл	
		Регистр.ОжидаемаяПоставка.ПривязыватьСтроку(999);
		Регистр.ОжидаемаяПоставка.Товар=табл.Товар;
		Регистр.ОжидаемаяПоставка.Количество=табл.Количество;
		Регистр.ОжидаемаяПоставка.Цена=табл.Цена;
		Регистр.ОжидаемаяПоставка.Клиент=табл.Клиент; 
		Регистр.ОжидаемаяПоставка.Склад=табл.Склад;
		Регистр.ОжидаемаяПоставка.ДатаОтгрузки=табл.ДатаОтгрузки;
		Регистр.ОжидаемаяПоставка.ПоЗаказу=табл.ПоЗаказу;
		Регистр.ОжидаемаяПоставка.ДвижениеРасходВыполнить();		
	КонецЦикла;
КонецФункции


//}***ЗаказыПоставщику***

Процедура стар_ОбработкаПроведения()
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Док.Вид()="ОжидаемаяПоставка" Тогда
			ДокументОснованиеТабл=Док;
			ОбработкаОжидаемойПоставки(Док);
			Если ГрупповаяОбработка()=0 Тогда
				Заголовок = Шаблон("Dokument ozidajemaja postavka anulirovan [Док.НомерДок]");
				ТекстСообщения = Шаблон("Ozidajemaja postavka [Док.НомерДок] anulirovana dokumentom [ТекущийДокумент().НомерДок]");
				Рез=глОтправитьСообщение(Заголовок,ТекстСообщения,Док.Агент,"Email");
	//			Рез=глОтправитьСообщение(Заголовок,Заголовок,Док.Агент,"SMS");
			КонецЕсли;
		ИначеЕсли Док.Вид()="ЗаказПоставщику" Тогда
			ГаситьРегистрЗаказыПоставщикам999_ДляЗаказа(Док);
			ГаситьРегистрЗаказыПоставщикамЗаявки999_ДляЗаказа(Док);
			ГаситьРегистрОжидаемаяПоставка999_ДляЗаказа(Док);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры  

Процедура ОбработкаПроведения()
	стар_ОбработкаПроведения();
КонецПроцедуры
