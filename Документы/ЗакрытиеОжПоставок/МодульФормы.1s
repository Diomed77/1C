
Перем Сводная, КонструкторЗапросов, ВремПапка;
Перем гРФорма, гРасшФорма;
Перем Окна, ФормаРасш;
Перем ТекШирина, ТекВысота;
Перем КоммВерсия;
Перем ФайлКуба;

Перем ДатаОтчета1;
Перем ДатаСрока;

Функция ПолучитьСправочник(Сост)
	спрСост=СоздатьОбъект("Справочник.Страны");
	спрСост.НайтиПоКоду(Сост,0);
	Возврат спрСост.ТекущийЭлемент();
КонецФункции

Функция ЗагрузкаИТ(п_ДатаПоставки)
	л_ИТ=СоздатьОбъект("ИндексированнаяТаблица");
	Запрос=СоздатьОбъект("ODBCRecordSet");
	
	ТекстЗапроса="SELECT ТоварыВПутиОстатки.Док [Док $Документ]
		|	, $ОжидаемаяПоставка.Склад [Склад $Справочник.МестаХранения]
		|	, $ОжидаемаяПоставка.Клиент [Клиент $Справочник.Контрагенты]
		|	, NullIf($ОжидаемаяПоставка.ДатаПрихода, '17530101') ДатаПрихода
		|	, $ОжидаемаяПоставка.СуммаПодтв СуммаПодтв
		|	, $ОжидаемаяПоставка.Агент [Агент $Справочник.Сотрудники]
		|FROM $РегистрОстатки.ТоварыВПути(,,
		|		(СрокПоставки < :ДатаПоставки),
		|		Док,) AS ТоварыВПутиОстатки
		|	LEFT OUTER JOIN $Документ.ОжидаемаяПоставка AS ОжидаемаяПоставка ON ТоварыВПутиОстатки.Док = $ВидДокумента36.ОжидаемаяПоставка + ОжидаемаяПоставка.IDDOC
		|";	
	
	Запрос.УстановитьТекстовыйПараметр("ДатаПоставки",п_ДатаПоставки);
	Запрос.ВыполнитьИнструкцию(ТекстЗапроса,л_ИТ);
	Возврат л_ИТ;
КонецФункции

Функция ЗагрузкаЗаказыПоставщика(п_ДатаПоставки)
	л_ИТ=СоздатьОбъект("ИндексированнаяТаблица");
	Запрос=СоздатьОбъект("ODBCRecordSet");
	
	ТекстЗапроса="SELECT ЗаказыПоставщикамОстатки.Товар [Товар $Справочник.Номенклатура]
		|	, ЗаказыПоставщикамОстатки.Склад [Склад $Справочник.МестаХранения]
		|	, ЗаказыПоставщикамОстатки.Клиент [Клиент $Справочник.Контрагенты]
		|	, NullIf(ЗаказыПоставщикамОстатки.СрокПоставки, '17530101') СрокПоставки
		|	, ЗаказыПоставщикамОстатки.ПоЗаказу [ПоЗаказу $Документ]
		|	, ТоварыВПутиОстатки.Док [Док $Документ]
		|	, ЗаказыПоставщикамОстатки.КоличествоОстаток
		|FROM $РегистрОстатки.ЗаказыПоставщикам(,,
		|		(СрокПоставки < :ДатаПоставки),,) AS ЗаказыПоставщикамОстатки
		|	LEFT OUTER JOIN $РегистрОстатки.ТоварыВПути(,,,
		|		(Док, ПоЗаказу),) AS ТоварыВПутиОстатки ON ЗаказыПоставщикамОстатки.ПоЗаказу = ТоварыВПутиОстатки.ПоЗаказу
		|";	
	
	Запрос.УстановитьТекстовыйПараметр("ДатаПоставки",п_ДатаПоставки);
	Запрос.ВыполнитьИнструкцию(ТекстЗапроса,л_ИТ);
	Возврат л_ИТ;
КонецФункции


//Функция ЗагрузкаИТ1(Подтверждено,НачПериода,КонПериода)
//	ИТ=СоздатьОбъект("ИндексированнаяТаблица");
//	Запрос=СоздатьОбъект("ODBCRecordSet");
////	спр=СоздатьОбъект("Справочник.Пользователи");
//	текст="";
//	Если Подтверждено=1 Тогда
//		текст="AND ((Журнал.CLOSED & 1) = 1)";
//		текст=текст+"AND ($ОжидаемаяПоставка.ПодписьЛогиста <> $ПустойИД)";
//	Иначе
//		текст="";
//	КонецЕсли;
//	
////	Если фСтранаВкл=1 Тогда
//	спрЛатвия=ПолучитьСправочник("LV");
//
//		Если чВидСтраны=1 Тогда
//			текст=текст+"AND ($Контрагенты.Страна = :пСтрана)";
//			Запрос.УстановитьТекстовыйПараметр("пСтрана",спрЛатвия);
//		ИначеЕсли чВидСтраны=2 Тогда
//			текст=текст+"AND ($Контрагенты.Страна <> :пСтрана)";
//			Запрос.УстановитьТекстовыйПараметр("пСтрана",спрЛатвия);
//		КонецЕсли;
////	КонецЕсли;		
//	
//	ТекстЗапроса="SELECT $ОжидаемаяПоставка.Клиент [Клиент $Справочник.Контрагенты]
//		|	, $Контрагенты.Страна [Страна $Справочник.Страны]
//		|	, $ОжидаемаяПоставка.ВидГруза ВидГруза
//		|	, $ОжидаемаяПоставка.СуммаПодтв СуммаПодтв
//		|	, $ОжидаемаяПоставка.трПалет18 трПалет18
//		|	, $ОжидаемаяПоставка.трПалет2 трПалет2
//		|	, $ОжидаемаяПоставка.трПалет25 трПалет25		
//		|	, $ОжидаемаяПоставка.НеделяПрихода НеделяПрихода
//		|	, $Контрагенты.Агент [КонтрагентыАгент $Справочник.Сотрудники]
//		|	, NullIf($ОжидаемаяПоставка.ДатаПрихода, '17530101') ДатаПрихода
//		|	, ОжидаемаяПоставка.IDDOC [Док $Документ.ОжидаемаяПоставка]
//		|FROM $Документ.ОжидаемаяПоставка AS ОжидаемаяПоставка With (NOLOCK)
//		|	LEFT OUTER JOIN $Справочник.Контрагенты AS Контрагенты With (NOLOCK) ON $ОжидаемаяПоставка.Клиент = Контрагенты.ID
//		|	LEFT OUTER JOIN _1SJOURN AS Журнал With (NOLOCK) ON ОжидаемаяПоставка.IDDOC = Журнал.IDDOC
//		|WHERE ($ОжидаемаяПоставка.ДатаПрихода >= :НачПериода)
//		|	AND ($ОжидаемаяПоставка.ДатаПрихода <= :КонПериода)
//		|	AND ($ОжидаемаяПоставка.СуммаПодтв > 0)
//		|	"+текст+"
//		|";	
//	
//	
//	Запрос.УстановитьТекстовыйПараметр("НачПериода",НачПериода);
//	Запрос.УстановитьТекстовыйПараметр("КонПериода",КонПериода);
//	Запрос.ВыполнитьИнструкцию(ТекстЗапроса,ИТ);
//	//пДок.ДобавитьИндекс("иПоЗаказу","ПоЗаказу");
//	Возврат ИТ;
//КонецФункции


Процедура Сформировать()
	Перем Запрос, ТекстЗапроса, Таб;
	
//	Если фЗакупка=1 Тогда
//		п_НачПер=ВыбНачПериода;
//		ВыбКонПериода=п_НачПер+6;
//	КонецЕсли;	
	
	ИТ=ЗагрузкаИТ(р_ДатаПоставки);

//	ИТ.Сортировать("Клиент");


	ИТ.ВыбратьСтроки();
	Пока ИТ.ПолучитьСтроку() = 1 Цикл
		пНомер=пНомер+1;
		НоваяСтрока();
		Док=ИТ.Док;
		Клиент=ИТ.Клиент;
		ДатаПрихода=ИТ.ДатаПрихода;
		Закупщик=Док.ПодписьМенеджера;
		Логист=Док.ПодписьЛогиста;
		
		
		СостояниеДок=глПолучитьСостояниеДокумента(Ит.Док);
		
		п_СостЛог="";
		п_СостЗак="";
		Если СокрЛП(СостояниеДок)="ОтЛогиста" Тогда
			п_СостЛог="Х";
			п_СостЗак="Х";
		КонецЕсли;
		
		Если СокрЛП(СостояниеДок)="ОтЗакупщика" Тогда
			п_СостЗак="Х";
		КонецЕсли;

		
//		Таб.ВывестиСекцию("Счет");
	КонецЦикла;

//	Таб.ВывестиСекцию("Итого");
	
	
	// Вывод заполненной формы
//	Таб.ТолькоПросмотр(1);
//	Таб.Показать("Сформировать", "");
КонецПроцедуры  


//======================================================================
Процедура кнЗаполнить()
	УдалитьСтроки();
	Сформировать();
КонецПроцедуры // кнЗаполнить

Процедура СформироватьЗаказами()
	
	ИТ=ЗагрузкаЗаказыПоставщика(р_ДатаПоставки);
	ИТ.Свернуть("ПоЗаказу",);
//	ИТ.Показать();

	ИТ.ВыбратьСтроки();
	Пока ИТ.ПолучитьСтроку() = 1 Цикл
		
		Если ПустоеЗначение(ИТ.Док)=0 Тогда
			Продолжить; //есть ож. поставка, закрваемчерез ож. поставку.
		КонецЕсли;
	
		пНомер=пНомер+1;
		НоваяСтрока();
		Док=ИТ.ПоЗаказу;
		Клиент=ИТ.Клиент;
		ДатаПрихода=ИТ.СрокПоставки;
		Закупщик=Док.Автор;
	КонецЦикла;
КонецПроцедуры  

//======================================================================
Процедура кнЗаполнитьЗаказами()
	УдалитьСтроки();
	СформироватьЗаказами();	
КонецПроцедуры // кнЗаполнитьЗаказами

Процедура ПриОткрытии()
	ПриЗаписиПерепроводить(1);
КонецПроцедуры

//======================================================================
Процедура ПриНачалеРедактированияСтроки()
	ОткрытьФорму(Док,,1);
КонецПроцедуры // ПриВыбореСтроки

//======================================================================
Процедура ВводНового(п_ПризнКопирования,п_ОбъектКопирования)
	ЗаполнитьШапку(Контекст);	
	р_ДатаПоставки=ТекущаяДата()-14;
КонецПроцедуры // вводНового




