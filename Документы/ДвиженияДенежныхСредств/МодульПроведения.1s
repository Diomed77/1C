//_____________________________________________________________________________
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаПроведения() Далее
//Конец текста, вставленного Инсталлятором МОД
Процедура стар_ОбработкаПроведения()
//Закомментировано Инсталлятором МОД:Процедура ОбработкаПроведения()
	Если семМожноПровести( Контекст ) = 0 Тогда Возврат; КонецЕсли;
	//Если ДатаДок>ТекущаяДата() Тогда
	//	НеПроводить(Контекст,"Нельзя проводить документ будущей датой!");
	//	Возврат;
	//КонецЕсли;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		 Клиент=?(Клиент.КлГруппа.Выбран()=1,Клиент.КлГруппа,Клиент);
		Если НомерСтроки=1 Тогда
			КлиентШ = Клиент;			
		КонецЕсли;
	КонецЦикла;
	             
	//	Если РасчетныйСчет.Выбран() = 0 Тогда
	//		НеПроводить(Контекст,"Не выбран расчетный счет.");
	//		Возврат;
	//	КонецЕсли;                                          
	//***********************************************************
	//<<Алгоритм Успеха>> (begin)
	Рег = СоздатьОбъект("Регистры");
	РегВзаимПок = Рег.ВзаиморасчетыПокупателей; 
	РегВзаимПост = Рег.ВзаиморасчетыПоставщиков;
	Если ИтогиАктуальны() = 0 Тогда          
		
		Кл=СоздатьОбъект("ТаблицаЗначений");
		Кл_=СоздатьОбъект("СписокЗначений");
		ВыгрузитьТабличнуюЧасть(Кл,"Клиент");
		Кл.Свернуть("Клиент","");          
		Если Кл.КоличествоСтрок()=1 Тогда
			Кл.ПолучитьСтрокуПоНомеру(1);
			РегВзаимПок.УстановитьЗначениеФильтра("Клиент",Кл.Клиент,1);
			РегВзаимПост.УстановитьЗначениеФильтра("Клиент",Кл.Клиент,1);
		Иначе
			Кл.Выгрузить(Кл_,,"Клиент");
			РегВзаимПок.УстановитьЗначениеФильтра("Клиент",Кл_,2);
			РегВзаимПост.УстановитьЗначениеФильтра("Клиент",Кл_,2);
		КонецЕсли;                       
		
	    РегВзаимПок.ВременныйРасчет(1);
		РегВзаимПост.ВременныйРасчет(1);
		Рег.Актуальность(1);
		Рег.РассчитатьРегистрыНа(ТекущийДокумент());
	КонецЕсли;                   
	//<<Алгоритм Успеха>> (end) 
	//************************************************************
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Клиент.Выбран()=0 Тогда
			НеПроводить(Контекст,"В документе "+Вид()+" № "+НомерДок
			+" от "+ДатаДок+"Не указан клиент!");
			Продолжить;
		КонецЕсли;
		ПривязыватьСтроку(НомерСтроки);
		
		Если ВидДвижения=Перечисление.ВидыДвиженийПоРасчетномуСчету.Зачисление Тогда
//			СумПогаш=Пересчет(Приход,Валюта,КурсДляВалюты(Валюта,ДатаДок),Клиент.ВалютаВзаиморасчетов,КурсДляВалюты(Клиент.ВалютаВзаиморасчетов,ДатаДок));
			СумПогаш=Пересчет(Приход,Валюта,КурсДляВалюты(Валюта,ДатаДок),ВалютаПогашения,КурсПогашения);
		Иначе
			СумПогаш=Пересчет(Расход,Валюта,КурсДляВалюты(Валюта,ДатаДок),ВалютаПогашения,КурсПогашения);
//			СумПогаш=Пересчет(Расход,Валюта,КурсДляВалюты(Валюта,ДатаДок),Клиент.ВалютаВзаиморасчетов,КурсДляВалюты(Клиент.ВалютаВзаиморасчетов,ДатаДок));;
		КонецЕсли;
		//----------------------
		// учет по Кредитам
		Если ТипУчета<Фин Тогда
			Если ПогашениеДолгаПоКредиту(Контекст,ТекущийДокумент(),СумПогаш,СтавкаНДС,"Упр", , , , РегВзаимПост, РегВзаимПок)=1 Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		//--------------------
		Если ТипУчета>Упр Тогда
			Если ПогашениеДолгаПоКредиту(Контекст,ТекущийДокумент(),СумПогаш,СтавкаНДС,"Фин", , , , РегВзаимПост, РегВзаимПок)=1 Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	глСписаниеПросроченногоДолга(Контекст);
	
	Если МожноПроводить(Контекст)=1 Тогда
		УстановитьГП(ТекущийДокумент());
	КонецЕсли;
КонецПроцедуры
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаПроведения()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	Если ПроведениеМОД(Контекст)=1 Тогда
	    Возврат;
	КонецЕсли;
	стар_ОбработкаПроведения();
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД

//_____________________________________________________________________________
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаУдаленияПроведения() Далее
//Конец текста, вставленного Инсталлятором МОД
Процедура стар_ОбработкаУдаленияПроведения()
//Закомментировано Инсталлятором МОД:Процедура ОбработкаУдаленияПроведения()
	Если СравнитьГП(ТекущийДокумент())<0 Тогда
		УстановитьГП(ТекущийДокумент());
	КонецЕсли;
КонецПроцедуры
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаУдаленияПроведения()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	Если ПроведениеПоАлгоритмуМОД=1 Тогда
	    Возврат;
	КонецЕсли;
	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	стар_ОбработкаУдаленияПроведения();
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД

