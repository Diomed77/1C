//***********************************************************
//<<Алгоритм Успеха>> (begin)
Перем ТекЗакладка;
Перем Режим; 
//---------------
Процедура ВводНового(ФлКопирования,ОбъектКопирования);
	
	ЗаполнитьШапку(Контекст);
	
	Если ФлКопирования=1 Тогда
		Если ПустоеЗначение(ДокументПриобретение)=0 Тогда
			ДокументПриобретение.ВыгрузитьТабличнуюЧасть(ТабЗакупка,"ОписаниеТовара,ТребуемоеКоличество,ТовКод,Товар,Количество,Единица,Коэффициент,ДатаВыполнения");
			ДокументПриобретение=ПолучитьПустоеЗначение("Документ.ЗаявкаНаПриобретение");
		КонецЕсли;
		Если ПустоеЗначение(ДокументИзготовление)=0 Тогда
			ДокументИзготовление.ВыгрузитьТабличнуюЧасть(ТабИзготовление,"ОписаниеТовара,ТребуемоеКоличество,ТовКод,Товар,Количество,Единица,Коэффициент,ДатаВыполнения");
			ДокументИзготовление=ПолучитьПустоеЗначение("Документ.ЗаявкаНаИзготовление");
		КонецЕсли;
		Возврат;
	КонецЕсли;   	
	ДатаДок=РабочаяДата();   
	
	Склад	= ?(ПустоеЗначение(РозничныйТорговыйСклад) = 0,
	            РозничныйТорговыйСклад,
				Константа.ОсновнойСклад);
	
	// проверка установки рзничного склада
	Если ПустоеЗначение(РозничныйТорговыйСклад) = 1 Тогда
		Сообщить("Для рабочего места """ + Пользователь + """ не определен розничный торговый склад!");
		Сообщить("Использован Склад по умолчанию!");
	КонецЕсли;
	
	Клиент=Константа.ЧастноеЛицо;
	Рецепт="Рецепт: "
КонецПроцедуры
//***************************************************************
Процедура ПриВыбореЗакладки(Ном,Имя)
	Если Ном=1 Тогда
	    Форма.ИспользоватьСлой("Основной,СкладУслуги");
	ИначеЕсли Ном=2 Тогда
		Форма.ИспользоватьСлой("Основной,Закупка,Кнопки");  
	ИначеЕсли Ном=3 Тогда
		Форма.ИспользоватьСлой("Основной,Изготовление,Кнопки");
	КонецЕсли;
	ТекЗакладка=Имя;	
КонецПроцедуры     
//------------------------------------------
Процедура УстановкаПараметровКолонок()
	ТабЗакупка.УстановитьПараметрыКолонки("ОписаниеТовара",,,,"Описание",40);
	ТабЗакупка.УстановитьПараметрыКолонки("ТребуемоеКоличество",,,,"Треб. кол.",12,"Ч10.3",2);
	ТабЗакупка.УстановитьПараметрыКолонки("ТовКод",,,,"Тов. код",10);	
	ТабЗакупка.УстановитьПараметрыКолонки("Товар",,,,"Товар",25);
	ТабЗакупка.УстановитьПараметрыКолонки("Количество",,,,"Кол-во",12,"Ч10.3",2);
	ТабЗакупка.УстановитьПараметрыКолонки("Единица",,,,"Ед.",8);
	ТабЗакупка.УстановитьПараметрыКолонки("Коэффициент",,,,"Коэф.",8,"Ч10.3",2);
	ТабЗакупка.УстановитьПараметрыКолонки("ДатаВыполнения",,,,"Дата вып.",12);
	
    ТабИзготовление.УстановитьПараметрыКолонки("ОписаниеТовара",,,,"Описание",40);
	ТабИзготовление.УстановитьПараметрыКолонки("ТребуемоеКоличество",,,,"Треб. кол.",12,"Ч10.3",2);
	ТабИзготовление.УстановитьПараметрыКолонки("ТовКод",,,,"Тов. код",10);	
	ТабИзготовление.УстановитьПараметрыКолонки("Товар",,,,"Товар",25);
	ТабИзготовление.УстановитьПараметрыКолонки("Количество",,,,"Кол-во",12,"Ч10.3",2);
	ТабИзготовление.УстановитьПараметрыКолонки("Единица",,,,"Ед.",8);
	ТабИзготовление.УстановитьПараметрыКолонки("Коэффициент",,,,"Коэф.",8,"Ч10.3",2);
	ТабИзготовление.УстановитьПараметрыКолонки("ДатаВыполнения",,,,"Дата вып.",12);
КонецПроцедуры	

//------------------------------------------ 
Процедура ПриОткрытии() //предопределенная
	ПриЗаписиПерепроводить(1);
	Форма.Закладки.ДобавитьЗначение("СкладУслуги","Товары на складе");
	Форма.Закладки.ДобавитьЗначение("Закупка","Закупки"); 
	Форма.Закладки.ДобавитьЗначение("Изготовление","Производство");
	ПриВыбореЗакладки(1,"СкладУслуги");   
	Если ПустоеЗначение(ДокументПриобретение)=0 Тогда
		ДокументПриобретение.ВыгрузитьТабличнуюЧасть(ТабЗакупка,"ОписаниеТовара,ТребуемоеКоличество,ТовКод,Товар,Количество,Единица,Коэффициент,ДатаВыполнения");
	КонецЕсли;
	Если ПустоеЗначение(ДокументИзготовление)=0 Тогда
		ДокументИзготовление.ВыгрузитьТабличнуюЧасть(ТабИзготовление,"ОписаниеТовара,ТребуемоеКоличество,ТовКод,Товар,Количество,Единица,Коэффициент,ДатаВыполнения");
	КонецЕсли;
   	УстановкаПараметровКолонок();  	
КонецПроцедуры //ПриОткрытии
//--------------------------------------------
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи() Далее
//Конец текста, вставленного Инсталлятором МОД
Процедура стар_ПриЗаписи()
//Закомментировано Инсталлятором МОД:Процедура ПриЗаписи()
    Перем Док; 	
	Если семМожноЗаписать( Контекст ) = 0 Тогда Возврат; КонецЕсли;
	Док=СоздатьОбъект("Документ.ЗаявкаНаПриобретение");
	Если ТабЗакупка.КоличествоСтрок()=0 Тогда
		Если ПустоеЗначение(ДокументПриобретение)=0 Тогда
			Док.НайтиДокумент(ДокументПриобретение);
			//Закомментировано Инсталлятором МОД:Док.Удалить(0);
	//Начало текста, вставленного Инсталлятором МОД
			ОбъектУдалить(Док, 0);
	//Конец текста, вставленного Инсталлятором МОД

			ДокументПриобретение=ПолучитьПустоеЗначение("Документ.ЗаявкаНаПриобретерне");
		КонецЕсли;
	Иначе
		Если ПустоеЗначение(ДокументПриобретение)=1 Тогда
			глСоздатьНовыйОбъект(Док);
			Док.ДатаДок=Константа.ДатаСлужебныхДокументов;
			//Закомментировано Инсталлятором МОД:Док.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Док, );
	//Конец текста, вставленного Инсталлятором МОД

			ДокументПриобретение=Док.ТекущийДокумент();
		Иначе
			Док.НайтиДокумент(ДокументПриобретение);
			Док.УдалитьСтроки();
		КонецЕсли;
		Док.ЗагрузитьТабличнуюЧасть(ТабЗакупка);
		//Закомментировано Инсталлятором МОД:Док.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Док, );
	//Конец текста, вставленного Инсталлятором МОД

	КонецЕсли;
 
	Док=СоздатьОбъект("Документ.ЗаявкаНаИзготовление");
	Если ТабИзготовление.КоличествоСтрок()=0 Тогда
		Если ПустоеЗначение(ДокументИзготовление)=0 Тогда
			Док.НайтиДокумент(ДокументИзготовление);
			//Закомментировано Инсталлятором МОД:Док.Удалить(0);
	//Начало текста, вставленного Инсталлятором МОД
			ОбъектУдалить(Док, 0);
	//Конец текста, вставленного Инсталлятором МОД

			ДокументИзготовление=ПолучитьПустоеЗначение("Документ.ЗаявкаНаИзготовление");
		КонецЕсли;
	Иначе
		Если ПустоеЗначение(ДокументИзготовление)=1 Тогда
			глСоздатьНовыйОбъект(Док);
			Док.ДатаДок=Константа.ДатаСлужебныхДокументов;
			//Закомментировано Инсталлятором МОД:Док.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Док, );
	//Конец текста, вставленного Инсталлятором МОД

			ДокументИзготовление=Док.ТекущийДокумент();
		Иначе
			Док.НайтиДокумент(ДокументИзготовление);
			Док.УдалитьСтроки();
		КонецЕсли;
		Док.ЗагрузитьТабличнуюЧасть(ТабИзготовление);
		//Закомментировано Инсталлятором МОД:Док.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Док, );
	//Конец текста, вставленного Инсталлятором МОД

	КонецЕсли;
КонецПроцедуры
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
//	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	стар_ПриЗаписи();
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД
   

Процедура Подбор()
	ОткрытьПодбор("Номенклатура","ДляПодбора");
	УстановитьЗначениеВПодборе("Склад",Склад);
КонецПроцедуры

Процедура ОбработкаПодбора(Выб)
	ЗапросКоличестваВПодборе(Контекст,"Каталог",Выб); 
	УстановкаЕдиницыИзмерения(Контекст);
	ТовКод = Выб.Код;
	АктивизироватьСтроку();
КонецПроцедуры 

//=== Процедуры управления таблицами ===  
Функция глВыборЕдиницыИзмеренияВТаблице(Таб) //Экспорт - если выносить в глоб. модуль                                                            
                                                        
	Перем Товар;
	Перем БазоваяЕдИзм;
	Перем Справ;
	Перем ФлЗаписана;
	//*****
	ФлЗаписана=0;
	Товар=Таб.Товар;
	БазоваяЕдИзм=Товар.БазоваяЕдиницаИзмерения;
	Справ=СоздатьОбъект("Справочник.Единицы");
	Справ.ИспользоватьВладельца(Товар);
	Справ.ВыбратьЭлементы();
	Пока Справ.ПолучитьЭлемент()=1 Цикл
		Если Справ.Единица=БазоваяЕдИзм Тогда
			ФлЗаписана=1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	// если базовая единица еще не  прописана в Справочнике "Единицы"
	Если ФлЗаписана=0 Тогда
		глСоздатьНовыйОбъект(Справ);
		Справ.Владелец=Товар;
		Справ.Единица=БазоваяЕдИзм;
		Справ.Коэффициент=1;
		Справ.Наименование=Строка(БазоваяЕдИзм);
		//Закомментировано Инсталлятором МОД:Справ.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Справ, );
	//Конец текста, вставленного Инсталлятором МОД

	КонецЕсли;
	//*****
	Если Справ.Выбрать("Укажите единицу измерения","ФормаСписка")=1 Тогда
		Таб.Единица=Справ.ТекущийЭлемент();//.Единица;
		Таб.Коэффициент=Справ.Коэффициент;
		Возврат(1);
	Иначе
		Возврат(0);
	КонецЕсли;
	//*****
КонецФункции 

Функция глВвестиЗначениеВТаблицу(Таб,НомСтр=0,НомКол=0,ТипЗнач="",Подсказка="Введите значение",Условие="",Текст="") //Экспорт - если выносить в глоб. модуль
	//***** Ввод значения в текущую ячейку таблицы значений
	//***** Таб: Таблица значений
	//***** НомСтр: Номер строки (0 текущая строка, -1 Новая строка, т.е. строка может быть добавлена)
	//***** НомКол: Номер (ИД) колонки (0 - текущая колонка)
	//***** ТипЗнач: Тип вводимого значения (если не задан, то определяется типом колонки)
	//***** Подсказка: Подсказка для ввода
	//***** Условие: Строка - условие проверки, если не задано, то не проверяется. В условии вводимое значение
	//***** доступно через переменную ЗначВвода, например "ЗначВвода>2"
	//***** Текст: Текст предупреждения, выдаваемый при невыполнении условия (если не задан, то не отображается)
	//***** Возвращаемые значения:
	//***** 0 Запись не выполнена 
	//***** 1 Запись выполнена
	//*****
	Перем ФлВвода,ЗначВвода,ФлДобавл;
	Перем Тип,Длина,Точность;
	Перем СтрШаб;
	Перем ВыходИзЦикла;
	Перем Справ,Счет;
	//*****
	Если НомСтр=0 Тогда
		НомСтр=Таб.ТекущаяСтрока();
	КонецЕсли;
	Если НомКол=0 Тогда
		НомКол=Таб.ТекущаяКолонка();
	КонецЕсли;
	ФлДобавл=?(НомСтр=-1,1,0);
	//*****
	Таб.ПолучитьПараметрыКолонки(НомКол,Тип,Длина,Точность);
	Если ПустаяСтрока(ТипЗнач)=1 Тогда
		ТипЗнач=Тип;
	КонецЕсли;
	//*****
	ВыполнениеЦикла=1;
	Пока ВыполнениеЦикла=1 Цикл
		//*****
		ЗначВвода=?(ФлДобавл=1,ПолучитьПустоеЗначение(Тип),Таб.ПолучитьЗначение(НомСтр,НомКол));
		Если Лев(ТипЗнач,5)="Справ" Тогда
			//***** Для справочников отдельная ветка, поскольку функция 
			//***** ВвестиЗначение позволяет выбирать группы справочников,
			//***** следовательно надо отключить эту возможность
			Справ=СоздатьОбъект(ТипЗнач);
			Справ.НайтиЭлемент(ЗначВвода);
			Справ.ВыборГруппы(0);
			ФлВвода=Справ.Выбрать(Подсказка,"ФормаСписка");
			Если ФлВвода=1 Тогда
				ЗначВвода=Справ.ТекущийЭлемент();
			КонецЕсли;
		Иначе
			//***** Для остальных типов объектов используем функцию ВвестиЗначение
			ФлВвода=ВвестиЗначение(ЗначВвода,Подсказка,ТипЗнач,Длина,Точность);
		КонецЕсли;
		//*****
		//Если ФлВвода=1 Тогда       //обойдемся без проверки условий пока
			//Если ТипЗначенияСтр(Условие)="Строка" Тогда
			//	Если ПустаяСтрока(Условие)=0 Тогда
			//		Если (глПроверкаУсловия(ЗначВвода,Условие)=0) Тогда
			//			Если ПустаяСтрока(Текст)=0 Тогда
			//				Предупреждение(Текст);
			//			КонецЕсли;
			//			Продолжить;
			//		КонецЕсли;
			//	КонецЕсли;
			//ИначеЕсли ТипЗначенияСтр(Условие)="СписокЗначений" Тогда
			//	Если Условие.Принадлежит(ЗначВвода.ВидТовара)=1 Тогда
			//		Если ПустаяСтрока(Текст)=0 Тогда
			//			Предупреждение(Текст);
			//		КонецЕсли;
			//		Продолжить;
			//	КонецЕсли;
			//КонецЕсли;
		//КонецЕсли;
		ВыполнениеЦикла=0;
		//*****
	КонецЦикла;
	//*****
	Если ФлВвода=1 Тогда
		Если ФлДобавл=1 Тогда
			Таб.НоваяСтрока();
			НомСтр=Таб.КоличествоСтрок();
			Таб.ТекущаяСтрока(НомСтр);
		КонецЕсли;
		Таб.УстановитьЗначение(НомСтр,НомКол,ЗначВвода);
	КонецЕсли;
	Возврат(ФлВвода);
	//*****
КонецФункции     
//***************************************************************

Процедура ПриРедактированииТаблицы(Таб)//Закупка()
   	ТекКол=Таб.ТекущаяКолонка();
    СпрТовар=СоздатьОбъект("Справочник.Номенклатура");
	
	Если ТекКол="ОписаниеТовара" Тогда
		Если глВвестиЗначениеВТаблицу(Таб,,,,"Введите описание товара")=1 Тогда
			Форма.Обновить(1);
		КонецЕсли;
	ИначеЕсли ТекКол="ТребуемоеКоличество" Тогда
		Если глВвестиЗначениеВТаблицу(Таб,,,,"Введите требуемое количество")=1 Тогда
			Форма.Обновить(1);
		КонецЕсли;
	ИначеЕсли ТекКол="ТовКод" Тогда
		Если глВвестиЗначениеВТаблицу(Таб,,,,"Введите код товара")=1 Тогда
			СпрТовар.НайтиПоКоду(Таб.ТовКод,0);
			Таб.Товар=СпрТовар.ТекущийЭлемент();
			Форма.Обновить(1);
		КонецЕсли;
	ИначеЕсли ТекКол="Товар" Тогда
		Если глВвестиЗначениеВТаблицу(Таб,,,,"ВведитеТовар")=1 Тогда
		    Таб.ТовКод=Таб.Товар.Код;  
			Форма.Обновить(1);
		КонецЕсли; 	
	ИначеЕсли ТекКол="Количество" Тогда
  		Если глВвестиЗначениеВТаблицу(Таб,,,,"Введите количество")=1 Тогда
			Форма.Обновить(1);
		КонецЕсли;     
	ИначеЕсли ТекКол="Единица" Тогда
		Если глВыборЕдиницыИзмеренияВТаблице(Таб)=1 Тогда  			
			Форма.Обновить(1);
		КонецЕсли;
	ИначеЕсли ТекКол="ДатаВыполнения" Тогда
		Если глВвестиЗначениеВТаблицу(Таб,,,,"Введите дату выполнения")=1 Тогда
			Форма.Обновить(1);
		КонецЕсли;
	КонецЕсли
КонецПроцедуры
//---------------

Процедура ДобавитьТовар(Таб)    
    СпрТовар=СоздатьОбъект("Справочник.Номенклатура");
	
	Если глВвестиЗначениеВТаблицу(Таб,-1,"ОписаниеТовара",,"Введите описание товара")=1 Тогда
		глВвестиЗначениеВтаблицу(Таб,,"ТребуемоеКоличество",,"Введите требуемое количество");
	КонецЕсли;   
	Если глВвестиЗначениеВТаблицу(Таб,,"ТовКод",,"Введите код товара")=1 Тогда
		СпрТовар.НайтиПоКоду(Таб.ТовКод,0);
		Таб.Товар=СпрТовар.ТекущийЭлемент(); 
	КонецЕсли;	
    Если ПустоеЗначение(Таб.Товар)=1 Тогда
		Если глВвестиЗначениеВТаблицу(Таб,,"Товар",,"Введите товар")=1 Тогда
			Таб.ТовКод=Таб.Товар.Код;  
		КонецЕсли;        
    КонецЕсли;
	Если ПустоеЗначение(Таб.Товар)=0 Тогда
		глВыборЕдиницыИзмеренияВТаблице(Таб);
		Таб.Количество=1;
		глВвестиЗначениеВТаблицу(Таб,,"Количество",,"Введите количество");		    
	КонецЕсли;
	глВвестиЗначениеВТаблицу(Таб,,"ДатаВыполнения",,"Введите дату выполнения");	
	Форма.Обновить(1);
	
КонецПроцедуры

	
Процедура КнДобавить()
	Если ТекЗакладка="Закупка" Тогда
		ДобавитьТовар(ТабЗакупка);
		Активизировать("ТабЗакупка");
	ИначеЕсли ТекЗакладка="Изготовление" Тогда
		ДобавитьТовар(ТабИзготовление);
		Активизировать("ТабИзготовление");
	КонецЕсли;	 
КонецПроцедуры

Процедура КнИзменить()
	Если ТекЗакладка="Закупка" Тогда
		ПриРедактированииТаблицы(ТабЗакупка);
		Активизировать("ТабЗакупка");
	ИначеЕсли ТекЗакладка="Изготовление" Тогда
		ПриРедактированииТаблицы(ТабИзготовление);
		Активизировать("ТабИзготовление");
	КонецЕсли;
КонецПроцедуры

Процедура КнУдалить()
	Если ТекЗакладка="Закупка" Тогда
		ТабЗакупка.УдалитьСтроку();
		Активизировать("ТабЗакупка");
	ИначеЕсли ТекЗакладка="Изготовление" Тогда
		ТабИзготовление.УдалитьСтроку();
		Активизировать("ТабИзготовление");
	КонецЕсли;
КонецПроцедуры	
//===========================================================
// процедуры ввода новых документов
Процедура ОформитьЗаказ()
	Если Проведен()=1 Тогда
		Если (СогласованоЗакупки=0) И (ТабЗакупка.КоличествоСтрок()>0) Тогда
		    Сообщить("Документ не согласован с одтелом закупок!");
		ИначеЕсли (СогласованоПроизводство=0) И (ТабИзготовление.КоличествоСтрок()>0) Тогда
			Сообщить("Документ не согласован с производством!");
		Иначе
			ОткрытьФорму("Документ.ЗаказОтПокупателя",,ТекущийДокумент());			
		КонецЕсли;                                                        		
	Иначе
		Предупреждение("Заказ поставщику нельзя вводить на основании непроведенного документа!");
	КонецЕсли;    
КонецПроцедуры
                 
Процедура ОформитьЗаказПоставщику()
	Если Проведен()=1 Тогда
	    Если ТабЗакупка.КоличествоСтрок()=0 Тогда 
			Сообщить("Нет товаров для заказа поставщику!"); 
		Иначе
			ОткрытьФорму("Документ.ЗаказПоставщику",,ТекущийДокумент());
		КонецЕсли;	
	Иначе
		Предупреждение("Заказ поставщику нельзя вводить на основании непроведенного документа!");
	КонецЕсли;
КонецПроцедуры

Процедура НоваяКалькуляция(Тов="")
	Если ПустоеЗначение(Тов)=1 Тогда
		Тов=ТабИзготовление.ПолучитьЗначение(ТабИзготовление.ТекущаяСтрока(),"Товар");	    
	КонецЕсли;
	КалькКарт=СоздатьОбъект("Документ.КалькуляционнаяКарта");
	КоличествоКалькуляции=1;
	СписокПараметров=СоздатьОбъект("СписокЗначений");
	СписокПараметров.Установить("КоличествоКалькуляции",КоличествоКалькуляции);
	СписокПараметров.Установить("ТоварШапки",Тов);
	ОткрытьФорму("Документ.КалькуляционнаяКарта",СписокПараметров);  
КонецПроцедуры                                                      

Процедура ОткрытьКалькуляцию()
	Тов=ТабИзготовление.ПолучитьЗначение(ТабИзготовление.ТекущаяСтрока(),"Товар");
	КалькКарт=СоздатьОбъект("Документ");
	КалькКарт.ОбратныйПорядок(1);
	КалькКарт.ВыбратьПоЗначению(,РабочаяДата(),"ТоварШапки",Тов);
	Пока КалькКарт.ПолучитьДокумент()=1 Цикл
		Если КалькКарт.Вид()="КалькуляционнаяКарта" Тогда  
			Если (КалькКарт.ПометкаУдаления()=1) или (КалькКарт.Проведен()=0) Тогда  	
				Продолжить;
			КонецЕсли;
			ЕстьКалькуляция=1;
			ДокумКальк=КалькКарт;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если  КалькКарт.Проведен()<>1 Тогда
		Предупреждение("Калькуляционная карта не проведена !!!");
	КонецЕсли;
	Если ЕстьКалькуляция=1 Тогда
		ОткрытьФорму(ДокумКальк.ТекущийДокумент(),1);
	Иначе
		НоваяКалькуляция(Тов);
	КонецЕсли;   
КонецПроцедуры   

//************************************************************
Форма.ИспользоватьЗакладки(1);  

ТабЗакупка.НоваяКолонка("ОписаниеТовара","Строка",256);
ТабЗакупка.НоваяКолонка("ТребуемоеКоличество","Число",10,3);
ТабЗакупка.НоваяКолонка("ТовКод","Строка",10);
ТабЗакупка.НоваяКолонка("Товар","Справочник.Номенклатура");
ТабЗакупка.НоваяКолонка("Количество","Число",10,3);
ТабЗакупка.НоваяКолонка("Единица","Справочник.Единицы");
ТабЗакупка.НоваяКолонка("Коэффициент","Число",10,3);
ТабЗакупка.НоваяКолонка("ДатаВыполнения","Дата");

ТабИзготовление.НоваяКолонка("ОписаниеТовара","Строка",256);
ТабИзготовление.НоваяКолонка("ТребуемоеКоличество","Число",10,3);
ТабИзготовление.НоваяКолонка("ТовКод","Строка",10);
ТабИзготовление.НоваяКолонка("Товар","Справочник.Номенклатура");
ТабИзготовление.НоваяКолонка("Количество","Число",10,3);
ТабИзготовление.НоваяКолонка("Единица","Справочник.Единицы");
ТабИзготовление.НоваяКолонка("Коэффициент","Число",10,3);
ТабИзготовление.НоваяКолонка("ДатаВыполнения","Дата");

//<<Алгоритм Успеха>> (end) 
