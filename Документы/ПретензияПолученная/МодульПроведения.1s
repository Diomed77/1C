//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаПроведения() Далее
//Конец текста, вставленного Инсталлятором МОД

Функция ПолучитьДанныеПоТовару()
	Колво = 0; Сумма = 0;

	Запрос=СоздатьОбъект("ODBCRecordSet");	
	
	Если (Найти(ДокОснование.Вид(),"Расходная")>0) ИЛИ (ДокОснование.Вид()="Перемещение") Тогда
		ТекстЗапроса="SELECT $ДокППС.Товар [Товар $Справочник.Номенклатура]
		|					, $СчетСтроки.Сумма/($СчетСтроки.Количество*$СчетСтроки.Коэффициент)*($СчетСтроки.Количество*$СчетСтроки.Коэффициент - COALESCE($ДокРНС.Количество,$ДокРННС.Количество,$ДокПС.Количество,0)*COALESCE($ДокРНС.Коэффициент,$ДокРННС.Коэффициент,$ДокПС.Коэффициент,0)) * CASE WHEN $Счет.Валюта <> :БазоваяВалюта THEN $ПоследнееЗначение.Валюты.Курс($Счет.Валюта,LEFT(Жур.DATE_TIME_IDDOC,8)) ELSE 1 END СуммаРазница
		|					, $СчетСтроки.Количество*$СчетСтроки.Коэффициент - COALESCE($ДокРНС.Количество,$ДокРННС.Количество,$ДокПС.Количество,0)*COALESCE($ДокРНС.Коэффициент,$ДокРННС.Коэффициент,$ДокПС.Коэффициент,0) КолРазница 
		|					, $СчетСтроки.Количество СчетСтрокиКоличество
		|					, $СчетСтроки.Коэффициент СчетСтрокиКоэффициент
		|					, СчетСтроки.IDDOC [ПоСчету $Документ.Счет]
		|			  FROM $ДокументСтроки.Счет AS СчетСтроки (NOLOCK) 
		|			  INNER JOIN $Документ.Счет AS Счет (NOLOCK) ON Счет.IDDOC = СчетСтроки.IDDOC 
		|			  LEFT JOIN $Справочник.Единицы СпрЕД (NOLOCK) ON СпрЕД.ID = $СчетСтроки.Единица
		|			  INNER JOIN $Справочник.Номенклатура СпрН (NOLOCK) ON СпрН.ID=$СчетСтроки.Товар
		|			  INNER JOIN $ДокументСтроки.ПретензияПолученная AS ДокППС (NOLOCK) ON $ДокППС.Товар = $СчетСтроки.Товар AND ДокППС.IDDOC = :ТекДок
		|			  INNER JOIN _1sjourn Жур (NOLOCK) ON Жур.IDDOC = Счет.IDDOC AND Жур.IDDOCDEF = $ВидДокумента.Счет
		|			  LEFT JOIN $ДокументСтроки.РасходнаяНакладная AS ДокРНС (NOLOCK) ON  СчетСтроки.IDDOC = $ДокРНС.Счет AND $СчетСтроки.Товар = $ДокРНС.Товар AND ДокРНС.IDDOC = :РасхНакл
		|			  LEFT JOIN $ДокументСтроки.РасходнаяНакладнаяНал AS ДокРННС (NOLOCK) ON  $СчетСтроки.Товар = $ДокРННС.Товар AND ДокРННС.IDDOC = :РасхНакл
		|			  LEFT JOIN $ДокументСтроки.Перемещение AS ДокПС (NOLOCK) ON  $СчетСтроки.Товар = $ДокПС.Товар AND ДокПС.IDDOC = :РасхНакл
		|			  WHERE СчетСтроки.IDDOC IN (SELECT Val FROM #Счета)
		|			  AND ((COALESCE($ДокРНС.Товар,$ДокРННС.Товар,$ДокПС.Товар) IS NULL)
		|				OR ( $СчетСтроки.Количество*$СчетСтроки.Коэффициент - COALESCE($ДокРНС.Количество,$ДокРННС.Количество,$ДокПС.Количество,0)*COALESCE($ДокРНС.Коэффициент,$ДокРННС.Коэффициент,$ДокПС.Коэффициент,0) > 0
		|					AND COALESCE($СпрЕД.Единица,$СпрН.БазоваяЕдиницаИзмерения) <>:ЕдКг))
	//	|					AND $СчетСтроки.Количество*$СчетСтроки.Коэффициент <> $РасходнаяНакладнаяСтроки.Количество*$РасходнаяНакладнаяСтроки.Коэффициент
		|";
		
		
		спСчета=СоздатьОбъект("СписокЗначений");
		Если ДокОснование.Вид()="РасходнаяНакладная" Тогда
			ДокОснование.ВыгрузитьТабличнуюЧасть(спСчета,"Счет");
		Иначе
			спСчета.ДобавитьЗначение(ДокОснование.ДокументОснование);
		КонецЕсли;
		Запрос.УложитьСписокОбъектов(спСчета,"#Счета");
		Запрос.УстановитьТекстовыйПараметр("РасхНакл",ДокОснование);
		Запрос.УстановитьТекстовыйПараметр("ЕдКг",Перечисление.ЕдиницыИзмерения.Килограмм);

	Иначе

		ТекстЗапроса="SELECT $ПретензияПолученнаяСтроки.Товар [Товар $Справочник.Номенклатура]
		|					, $СчетСтроки.Сумма * CASE WHEN $Счет.Валюта <> :БазоваяВалюта THEN $ПоследнееЗначение.Валюты.Курс($Счет.Валюта,LEFT(Жур.DATE_TIME_IDDOC,8)) ELSE 1 END СуммаРазница
		|					, $СчетСтроки.Количество*$СчетСтроки.Коэффициент КолРазница 
		|					, $СчетСтроки.Количество СчетСтрокиКоличество
		|					, $СчетСтроки.Коэффициент СчетСтрокиКоэффициент
		|					, СчетСтроки.IDDOC [ПоСчету $Документ.Счет]
		|			  FROM $ДокументСтроки.Счет AS СчетСтроки (NOLOCK) 
		|			  INNER JOIN $Документ.Счет AS Счет (NOLOCK) ON Счет.IDDOC = СчетСтроки.IDDOC 
		|			  INNER JOIN _1sjourn Жур (NOLOCK) ON Жур.IDDOC = Счет.IDDOC AND Жур.IDDOCDEF = $ВидДокумента.Счет
		|			  LEFT JOIN $Справочник.Единицы СпрЕД (NOLOCK) ON СпрЕД.ID = $СчетСтроки.Единица
		|			  INNER JOIN $Справочник.Номенклатура СпрН (NOLOCK) ON СпрН.ID=$СчетСтроки.Товар
		|			  INNER JOIN $ДокументСтроки.ПретензияПолученная AS ПретензияПолученнаяСтроки (NOLOCK) ON $ПретензияПолученнаяСтроки.Товар = $СчетСтроки.Товар AND ПретензияПолученнаяСтроки.IDDOC = :ТекДок
		|			  WHERE СчетСтроки.IDDOC = :ВыбСчет 
		|					AND $СчетСтроки.Количество*$СчетСтроки.Коэффициент > 0
	//	|					AND $СчетСтроки.Количество*$СчетСтроки.Коэффициент <> $РасходнаяНакладнаяСтроки.Количество*$РасходнаяНакладнаяСтроки.Коэффициент
		|";
		Запрос.УстановитьТекстовыйПараметр("ВыбСчет",ДокОснование);
	КонецЕсли;
	Запрос.УстановитьТекстовыйПараметр("ТекДок",ТекущийДокумент());
	Запрос.УстановитьТекстовыйПараметр("БазоваяВалюта",Константа.БазоваяВалюта);
	
	итТабл=СоздатьОбъект("ИндексированнаяТаблица");
	Запрос.ВыполнитьИнструкцию(ТекстЗапроса,итТабл);
	итТабл.ДобавитьИндекс("иТовар","*Товар");
	Возврат итТабл;
	//итТабл.Показать();
	
	//итТабл.ДобавитьИндекс("Товар","*Товар");
	//Если итТабл.НайтиСтроку("иТовар",Товар,,1)>0 Тогда
	//	Колво = итТабл.Количество*итТабл.Коэффициент;
	//	Если глЕстьРеквизитШапки("Валюта",Док.Вид()) = 1 Тогда
	//		Сумма = Пересчет(итТабл.Сумма,итТабл.Валюта,итТабл.ДатаДок,Константа.БазоваяВалюта,итТабл.ДатаДок);
	//	Иначе
	//		Сумма = итТабл.Сумма;
	//	КонецЕсли;
	//КонецЕсли;
	//если нет товара
	Возврат 1;
КонецФункции


Процедура стар_ОбработкаПроведения()
	//Закомментировано Инсталлятором МОД:Процедура ОбработкаПроведения()
	Если семМожноПровести( Контекст ) = 0 Тогда Возврат; КонецЕсли;
	//Если ДатаДок>ТекущаяДата() Тогда
	//	Сообщить("Ошибка проведения!","!");
	//	Сообщить("Нельзя проводить документ будущей датой!","I");
	//	СтатусВозврата(0);Возврат;
	//КонецЕсли;   
	
	Если ПроверкаДублейСтрок(Контекст)=1 Тогда 
		//НеПроводить(Контекст,"В документе строки с одинаковым товаром!");
	КонецЕсли;
	
	Если КоличествоСтрок()=0 Тогда 
		НеПроводить(Контекст,"Документ пустой!");
	КонецЕсли;

	Если (Склад.Выбран()=0) И (ВидПретензии=Перечисление.ВидыПретензий.ОтСклада) Тогда
		НеПроводить(Контекст,"Не указан склад!");
	КонецЕсли;

	итТабл="";
	Если Константа.НовыйМеханизмПретензий.Получить(ДатаДок)<>Да Тогда
		итТабл=ПолучитьДанныеПоТовару();
	КонецЕсли;
	
	итТаблПрих=СоздатьОбъект("ИндексированнаяТаблица");
	сзКлюч=СоздатьОбъект("СписокЗначений");

	ВыбратьСтроки(); ЕстьОшибки = 0;
	Пока ПолучитьСтроку() = 1 Цикл
		
		Если ПустоеЗначение(ПрихДокумент)=1 Тогда
			Если ДокОснованиеТ.Вид()="ПриходнаяНакладная" Тогда
				ПрихДокумент = ДокОснованиеТ;
			КонецЕсли;
		КонецЕсли;
		Агент = АгентПоТовару;
		Если Товар.Выбран()=0 Тогда
			Сообщить("Ошибка проведения!","!");
			Сообщить(Шаблон("Не выбран товар в строке [НомерСтроки]."),"I");
			ЕстьОшибки = 1;
		КонецЕсли;

		Если (АгентПоТовару.Выбран()=0) И (ВидПретензии<>Перечисление.ВидыПретензий.ОтСклада) Тогда
			Сообщить("Ошибка проведения!","!");
			Сообщить(Шаблон("Не указан агент по товару в строке [НомерСтроки]."),"I");
			ЕстьОшибки = 1;
		ИначеЕсли (ВидПретензии=Перечисление.ВидыПретензий.ОтСклада) И (АгентПоТовару.Выбран()=0) Тогда
			АгентПоТовару=Поставщик.Агент;
		ИначеЕсли (ВидПретензии=Перечисление.ВидыПретензий.ОтАгента) И (ПустоеЗначение(АгентПоТовару.Родитель.АгентВнутр)=0) Тогда
			//подставляем другого агента
			АгентПоТовару=АгентПоТовару.Родитель.АгентВнутр;
		КонецЕсли;

		
		Если СутьПретензии.Выбран()=0 Тогда
			Сообщить("Ошибка проведения!","!");
			Сообщить(Шаблон("Не выбрана суть претензии в строке [НомерСтроки]."),"I");
			ЕстьОшибки = 1;
		КонецЕсли;
		
		//по новому механизму - пишем в регистр
		Если Константа.НовыйМеханизмПретензий.Получить(ДатаДок)=Да Тогда
			
			Если (ПустоеЗначение(ДокОснованиеТ)=1) И (ВидПретензии=Перечисление.ВидыПретензий.ОтКлиента) Тогда
				Сообщить("В строке "+НомерСтроки+" не указан документ основания!");
//				НеПроводить(Контекст,"В строке "+НомерСтроки+" не указан документ основания!");
			КонецЕсли;			

			Если (ПустоеЗначение(СутьПретензии.НуженПоставщик)=0) И (ПустоеЗначение(Поставщик)=1) И (ГрупповаяОбработка()=0) Тогда
				Если СокрЛП(Товар.Поставщик.Рег_номер) = СокрЛП(Фирма.Рег_номер) Тогда
					//если наше производство ничего не делаем
				Иначе
					НеПроводить(Контекст,"В строке "+НомерСтроки+" согласно сути претензии должен быть указан поставщик!");
				КонецЕсли;
			КонецЕсли;			
			
			Если (ПустоеЗначение(Поставщик)=1) И (ВидПретензии = Перечисление.ВидыПретензий.ОтСклада) Тогда
				НеПроводить(Контекст,"В строке "+НомерСтроки+" не указан поставщик!");
			КонецЕсли;

			Если (ПустоеЗначение(СутьПретензии.НуженСрокРеализ)=0) И (ПустоеЗначение(СрокРеализ)=1) И (ГрупповаяОбработка()=0) Тогда
				НеПроводить(Контекст,"В строке "+НомерСтроки+" согласно сути претензии должен быть указан срок реализации!");
			КонецЕсли;			
			
			Если (ПустоеЗначение(СутьПретензии.НуженПоСчету)=0) И (ПустоеЗначение(ПоСчету)=1) Тогда
				НеПроводить(Контекст,"В строке "+НомерСтроки+" согласно сути претензии должна быть указана эл. заявка!");
			КонецЕсли;	
			
			Если (СутьПретензии.КонтрагентПоДоговору=1) И (Клиент.ВозвратПоДоговору=0) Тогда
				Если (НазваниеНабораПрав()="Администратор") ИЛИ (ГрупповаяОбработка()=1) Тогда
					Сообщить("В строке "+НомерСтроки+" для данной сути претензии должна стоять отметка в карточке контрагента!","!!");
				Иначе
					НеПроводить(Контекст,"В строке "+НомерСтроки+" для данной сути претензии должна стоять отметка в карточке контрагента!");
				КонецЕсли;
			КонецЕсли;	
			
			Если ГрупповаяОбработка()=0 Тогда
				Если (СутьПретензии.АвтоматическоеПодтверждение=1) И (ПустоеЗначение(СутьПретензииПодтв)=1) И (СутьПретензии.АвтоматическоеПодтверждениеПоСумме>Сумма) Тогда
					СутьПретензииПодтв = СутьПретензии;
				КонецЕсли;
			Иначе
				
				Если (ПустоеЗначение(СутьПретензииПодтв)=1) И (ДатаДок<ДобавитьМесяц(НачМесяца(РабочаяДата()),-1)) И (ТекущаяИБЦентральная()=1) Тогда
					//ничего не делаем если не подтверждена суть 
					СутьПретензииПодтв = Константа.ОснСутьПретензийБезПодтверждения;
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			СутьПретензииПодтв = СутьПретензии;	//приравниваем для старого механизма
		КонецЕсли;

		Если ДатаДок>='01.01.11' Тогда
			ПривязыватьСтроку(НомерСтроки);			
			Регистр.ПретензииПолученные.ПривязыватьСтроку(НомерСтроки);
			Регистр.ПретензииПолученные.Фирма = Константа.ОсновнаяФирма;
			Регистр.ПретензииПолученные.Товар = Товар;
			Регистр.ПретензииПолученные.СутьПретензии = СутьПретензии;
			Регистр.ПретензииПолученные.СутьПретензииПодтв = СутьПретензииПодтв;
			Регистр.ПретензииПолученные.Агент = АгентПоТовару;
			Регистр.ПретензииПолученные.Клиент = ?(ПустоеЗначение(Клиент)=1,Поставщик,Клиент);			
			Регистр.ПретензииПолученные.КлиентФилиала = КлиентФилиала;
			
			
			Регистр.ПретензииПолученные.Поставщик = Поставщик;
			Если ПустоеЗначение(ДокОснованиеТ)=0 Тогда
				Регистр.ПретензииПолученные.ПоДокументу = ДокОснованиеТ;
			ИначеЕсли ПустоеЗначение(ПрихДокумент)=0 Тогда
				Регистр.ПретензииПолученные.ПоДокументу = ПрихДокумент;
			Иначе
				Регистр.ПретензииПолученные.ПоДокументу = ПоСчету;
			КонецЕсли;
			
			Если Константа.НовыйМеханизмПретензий.Получить(ДатаДок)<>Да Тогда
				
				ДокОснованиеТ = ДокОснование;
				Регистр.ПретензииПолученные.ПоДокументу = ДокОснованиеТ;
				Если итТабл.НайтиСтроку("иТовар",Товар,,1)>0 Тогда
					Регистр.ПретензииПолученные.Количество = итТабл.КолРазница;
					Регистр.ПретензииПолученные.Сумма = итТабл.СуммаРазница;
					Регистр.ПретензииПолученные.ПоСчету = итТабл.ПоСчету;
					Количество = итТабл.КолРазница;
					Сумма = итТабл.СуммаРазница;
				КонецЕсли;
				
			Иначе
				Регистр.ПретензииПолученные.ПоСчету = ПоСчету;
				
				Регистр.ПретензииПолученные.Количество = Количество;
				Если глЕстьРеквизитШапки("Валюта",Регистр.ПретензииПолученные.ПоДокументу.Вид())=1 Тогда
					Регистр.ПретензииПолученные.Сумма = Пересчет(Сумма,Регистр.ПретензииПолученные.ПоДокументу.Валюта,Регистр.ПретензииПолученные.ПоДокументу.ДатаДок,Рубли,ДатаДок);
				Иначе
					Регистр.ПретензииПолученные.Сумма = Сумма;
				КонецЕсли;
			КонецЕсли;
			
			Если ПустоеЗначение(Регистр.ПретензииПолученные.ПоСчету)=0 Тогда
				Регистр.ПретензииПолученные.АгентФилиала = АгентПоТовару;
			Иначе
				Регистр.ПретензииПолученные.АгентФилиала = АгентПоТовару.АгентКонсолидации;
			КонецЕсли;
			
			Регистр.ПретензииПолученные.ПретензияПолучена = 1;
			Регистр.ПретензииПолученные.СуммаПотерь = СуммаПотерь;
			Регистр.ПретензииПолученные.ДвижениеВыполнить();
		КонецЕсли;
		
		Если Константа.НовыйМеханизмПретензий.Получить(ДатаДок)=Да Тогда

			Если ((СутьПретензии.ВыставитьПретензиюПоставщику=1) И (ДатаДок<='01.03.16')) ИЛИ (СутьПретензииПодтв.ВыставитьПретензиюПоставщику=1)  Тогда
				
				Если ПустоеЗначение(Поставщик) = 1 Тогда
					Если СокрЛП(Товар.Поставщик.Рег_номер) = СокрЛП(Константа.ОсновнаяФирма.Рег_номер) Тогда
						//если наше производство ничего не делаем
						Продолжить;
					Иначе
						НеПроводить(Контекст,"В строке "+НомерСтроки+" согласно сути подтвержденной претензии должен быть указан поставщик!");
					КонецЕсли;
				КонецЕсли;
				
				Если (ПустоеЗначение(СутьПретензииПодтв)=0) И (СутьПретензииПодтв.ВыставитьПретензиюПоставщику=0) Тогда
					Продолжить;
				КонецЕсли;
				
				Регистр.УчетКомпенсацийОтПоставщиков.Фирма = Константа.ОсновнаяФирма; //только основную фирму, т.к. документ может быть оформлен на другую фирму
				Регистр.УчетКомпенсацийОтПоставщиков.Товар = Товар;
				Регистр.УчетКомпенсацийОтПоставщиков.СутьПретензии = ?(ПустоеЗначение(СутьПретензииПодтв)=1,СутьПретензии,СутьПретензииПодтв);
				Регистр.УчетКомпенсацийОтПоставщиков.Поставщик = Поставщик;
				Регистр.УчетКомпенсацийОтПоставщиков.ПоДокументу = ТекущийДокумент();
				Регистр.УчетКомпенсацийОтПоставщиков.ПрихДокумент = ПрихДокумент;
				Регистр.УчетКомпенсацийОтПоставщиков.Количество = Количество;
				Регистр.УчетКомпенсацийОтПоставщиков.Сумма = 0;
				
			КонецЕсли;

			Если ((СутьПретензииПодтв.ВыставитьТребПредПодгПоставщику=1)) И (ДатаДок>='01.10.14') Тогда
				
				Если ПустоеЗначение(Поставщик) = 1 Тогда
					Если СокрЛП(Товар.Поставщик.Рег_номер) = СокрЛП(Константа.ОсновнаяФирма.Рег_номер) Тогда
						//если наше производство ничего не делаем
						Продолжить;
					Иначе
						НеПроводить(Контекст,"В строке "+НомерСтроки+" согласно сути подтвержденной претензии должен быть указан поставщик!");
					КонецЕсли;
				КонецЕсли;
				
				Регистр.УчетТоваровПоПредпродажнойПодготовке.ПривязыватьСтроку(НомерСтроки);
				Регистр.УчетТоваровПоПредпродажнойПодготовке.Фирма		= Константа.ОсновнаяФирма;
				Регистр.УчетТоваровПоПредпродажнойПодготовке.Товар		= Товар;
				Регистр.УчетТоваровПоПредпродажнойПодготовке.Клиент		= Поставщик;
				Регистр.УчетТоваровПоПредпродажнойПодготовке.Количество	= Количество;
				Регистр.УчетТоваровПоПредпродажнойПодготовке.ПрихДокумент=?(ПустоеЗначение(ПрихДокумент)=1,ДокОснованиеТ,ПрихДокумент);
				Регистр.УчетТоваровПоПредпродажнойПодготовке.Статус 	= 1;
				Регистр.УчетТоваровПоПредпродажнойПодготовке.ДвижениеПриходВыполнить();
				
			КонецЕсли;

			
			Если (ПустоеЗначение(ПрихДокумент)=0) И (ПрихДокумент.Вид()="ПриходнаяНакладная") Тогда
				
				ДокПрих=СоздатьОбъект("Документ.ПриходнаяНакладная");
				ДокПрих.НайтиДокумент(ПрихДокумент);
//				Если (СутьПретензии.ПроблемаПриПриходе = 1) Тогда
//					Сообщить(Шаблон("Приход: [ДокПрих] отмечен как проблемный"),"!!!");
//					ДокПрих.Проблемный = 1;						
//					ДокПрих.Записать();
//				КонецЕсли;
//
//				Если (ДокОснованиеТ.Вид()="ПриходнаяНакладная") И (ДокОснованиеТ<>ПрихДокумент) Тогда
//					ДокПрих2=СоздатьОбъект("Документ.ПриходнаяНакладная");
//					ДокПрих2.НайтиДокумент(ДокОснованиеТ);
//					Если (СутьПретензии.ПроблемаПриПриходе = 1) Тогда
//						Сообщить(Шаблон("Приход: [ДокПрих2] отмечен как проблемный"),"!!!");
//						ДокПрих2.Проблемный = 1;						
//						ДокПрих2.Записать();
//					КонецЕсли;
//				КонецЕсли;
				
				
				итТаблПрих.Загрузить(ПрихДокумент);
				итТаблПрих.ДобавитьИндекс("иТовар","*Товар,СрокРеализ");
				сзКлюч.УдалитьВсе();
				сзКлюч.ДобавитьЗначение(Товар);
				Если ПустоеЗначение(СрокРеализ)=0 Тогда
					сзКлюч.ДобавитьЗначение(СрокРеализ);
					итТаблПрих.Подмножество(сзКлюч,2,"иТовар");
				Иначе
					итТаблПрих.Подмножество(сзКлюч,1,"иТовар");
				КонецЕсли;
				итТаблПрих.ВыбратьСтроки("иТовар");
				Если итТаблПрих.ПолучитьСтроку("иТовар")=1 Тогда
					
					
					Если ((СутьПретензии.ВыставитьПретензиюПоставщику=1) И (ДатаДок<='01.03.16')) ИЛИ (СутьПретензииПодтв.ВыставитьПретензиюПоставщику=1) Тогда
						Регистр.УчетКомпенсацийОтПоставщиков.Сумма = Пересчет(итТаблПрих.Цена,ПрихДокумент.Валюта,ПрихДокумент.ДатаДок,Поставщик.ВалютаКредитаПоставщика,ДатаДок)*Количество;
					КонецЕсли;
					
					Если (СутьПретензииПодтв.ПроблемаКачестваТовара=1) ИЛИ (СутьПретензии.ПроблемаКачестваТовара=1) Тогда
						Попытка
							ДокПрих.ПолучитьСтрокуПоНомеру(итТаблПрих.НомерСтрокиДокумента);
							Если ДокПрих.ПроблемаКачестваТовара<>Да Тогда
								Сообщить("Записана проблема качества товара "+Товар.Код+" "+Товар +" в приходе "+ДокПрих);
								ДокПрих.ПроблемаКачестваТовара = Да;
								ДокПрих.Записать();
							КонецЕсли;
						Исключение
							Сообщить(ОписаниеОшибки());
						КонецПопытки;
					ИначеЕсли (СутьПретензииПодтв.ПроблемаНеСоответствиеСпецификации=1) ИЛИ (СутьПретензии.ПроблемаНеСоответствиеСпецификации=1) Тогда
						Попытка
							ДокПрих.ПолучитьСтрокуПоНомеру(итТаблПрих.НомерСтрокиДокумента);
							Если ДокПрих.ПроблемаНеСоответствиеСпецификации<>Да Тогда
								Сообщить("Записана проблема несоответствия специф. товара "+Товар.Код+" "+Товар +" в приходе "+ДокПрих);
								ДокПрих.ПроблемаНеСоответствиеСпецификации = Да;
								ДокПрих.Записать();
							КонецЕсли;
						Исключение
							Сообщить(ОписаниеОшибки());
						КонецПопытки;

					ИначеЕсли (СутьПретензииПодтв.ПроблемаНесоответствияМаркировкиLV=1) ИЛИ (СутьПретензии.ПроблемаНесоответствияМаркировкиLV=1) Тогда
						Попытка
							ДокПрих.ПолучитьСтрокуПоНомеру(итТаблПрих.НомерСтрокиДокумента);
							Если ДокПрих.ПроблемаНесоответствияМаркировкиLV<>Да Тогда
								Сообщить("Записана проблема маркировки товара "+Товар.Код+" "+Товар +" в приходе "+ДокПрих);
								ДокПрих.ПроблемаНесоответствияМаркировкиLV = Да;
								ДокПрих.Записать();
							КонецЕсли;
						Исключение
							Сообщить(ОписаниеОшибки());
						КонецПопытки;
						
					ИначеЕсли (СутьПретензииПодтв.ПроблемаОтсутствиеШтрихКода=1) ИЛИ (СутьПретензии.ПроблемаОтсутствиеШтрихКода=1) Тогда
						Попытка
							ДокПрих.ПолучитьСтрокуПоНомеру(итТаблПрих.НомерСтрокиДокумента);
							Если ДокПрих.ПроблемаОтсутствиеШтрихКода<>Да Тогда
								Сообщить("Записана проблема отсутствия штрих-кода товара "+Товар.Код+" "+Товар +" в приходе "+ДокПрих);
								ДокПрих.ПроблемаОтсутствиеШтрихКода = Да;
								ДокПрих.Записать();
							КонецЕсли;
						Исключение
							Сообщить(ОписаниеОшибки());
						КонецПопытки;

					ИначеЕсли (СутьПретензииПодтв.ПроблемаКачестваЕВРОПаллета=1) ИЛИ (СутьПретензии.ПроблемаКачестваЕВРОПаллета=1) Тогда
						Попытка
							ДокПрих.ПолучитьСтрокуПоНомеру(итТаблПрих.НомерСтрокиДокумента);
							Если ДокПрих.ПроблемаКачестваЕВРОПаллета<>Да Тогда
								Сообщить("Записана проблема качества ЕВРО паллета "+Товар.Код+" "+Товар +" в приходе "+ДокПрих);
								ДокПрих.ПроблемаКачестваЕВРОПаллета = Да;
								ДокПрих.Записать();
							КонецЕсли;
						Исключение
							Сообщить(ОписаниеОшибки());
						КонецПопытки;

						
					КонецЕсли;
				Иначе
					Сообщить("Товар "+Товар.Код+" "+Товар +" не найден в приходе "+ДокПрих);
				КонецЕсли;
			Иначе
				Регистр.УчетКомпенсацийОтПоставщиков.Сумма = Пересчет(Товар.ЦенаПоставщика.Получить(ДатаДок),Товар.ВалютаПоставщика,ДатаДок,Поставщик.ВалютаКредитаПоставщика,ДатаДок)*Количество;
			КонецЕсли;
				
			Если ((СутьПретензии.ВыставитьПретензиюПоставщику=1) И (ДатаДок<='01.03.16')) ИЛИ (СутьПретензииПодтв.ВыставитьПретензиюПоставщику=1)  Тогда
				
				Если (ПустоеЗначение(СутьПретензииПодтв)=0) И (СутьПретензииПодтв.ВыставитьПретензиюПоставщику=0) Тогда
					Продолжить;
				КонецЕсли;
				
				Регистр.УчетКомпенсацийОтПоставщиков.Статус = 1;
				Регистр.УчетКомпенсацийОтПоставщиков.ДвижениеПриходВыполнить();
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;

	Если ЕстьОшибки = 1 Тогда
		СтатусВозврата(0);Возврат;
	КонецЕсли;
КонецПроцедуры

//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаПроведения()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	Если ПроведениеМОД(Контекст)=1 Тогда
		Возврат;
	КонецЕсли;
	стар_ОбработкаПроведения();
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаУдаленияПроведения()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	Если ПроведениеПоАлгоритмуМОД=1 Тогда
		Возврат;
	КонецЕсли;
	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	ПриОтменеПроведенияДокумента(Контекст);
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД

