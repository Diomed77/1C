Перем Режим;
Перем пОтКлиента, пОтАгента;

Процедура ПриВыбореТовара() Далее

Функция АдресСтрокой( пАдрес, начУр, конУр, пРазд )
	сп = СоздатьОбъект( "СписокЗначений" );
	сп.ДобавитьЗначение( "пАдрес.Родитель.Родитель.Родитель.Код", "1" );
	сп.ДобавитьЗначение( "пАдрес.Родитель.Родитель.Код" , "2" );
	сп.ДобавитьЗначение( "пАдрес.Родитель.Код" , "3" );
	сп.ДобавитьЗначение( "пАдрес.Код" , "4" );
	текУр = пАдрес.Уровень();
	начУр = ?( начУр > текУр, текУр, начУр );
	конУр = ?( конУр > текУр, текУр, конУр );
	стр = "";
	Для н = начУр по конУр Цикл
		стр = стр + "[" + сп.ПолучитьЗначение( н+4-текУр ) + "]" + ?( н = конУр, "", пРазд );
	КонецЦикла;
	Возврат Шаблон( стр );
КонецФункции


Функция Доступ()
	
	Форма.Клиент.Доступность(1);
	
	Если ПустоеЗначение(ДокОснование)=0 Тогда
		Форма.Клиент.Доступность(0);
	КонецЕсли;
	
	Если ВидПретензии=Перечисление.ВидыПретензий.ОтСклада Тогда
		Форма.Клиент.Доступность(0);
	КонецЕсли;
	
	Если (Константа.НовыйМеханизмПретензий.Получить(ДатаДок)<>Да) Тогда
		Форма.Клиент.Доступность(0);
		Форма.Количество.Доступность(0);
		Форма.Товар.Доступность(0);
		Форма.СрокРеализ.Видимость(0);
		Форма.Поставщик.Видимость(0);
		Форма.ДокОснованиеТ.Видимость(0);
		Форма.СутьПретензииПодтв.Доступность(0);
		//Форма.СуммаПотерь.Видимость(0);
		Форма.кнЗаполнить.Доступность(1);
		Форма.кнИззаявки.Доступность(1);
		Форма.лСебестоимость.Видимость(0);
		Форма.ДопРасходы.Видимость(0);

	Иначе
		Форма.СрокРеализ.Видимость(1);
		Форма.Поставщик.Видимость(1);
		Форма.Пояснения.Видимость(0);
		Форма.Товар.Доступность(1);
		Форма.ДокОснованиеТ.Видимость(1);
		Форма.СутьПретензииПодтв.Доступность(1);
		//Форма.СуммаПотерь.Видимость(1);
		
		Если ((ВидПретензии=Перечисление.ВидыПретензий.ОтАгента) или (ВидПретензии=Перечисление.ВидыПретензий.ОтСклада)) Тогда
			Форма.СутьПретензии.Доступность(1);
			Форма.кнЗаполнить.Доступность(1);
			Форма.кнИззаявки.Доступность(1);
		Иначе 
			Форма.СутьПретензии.Доступность(1);
			Форма.кнЗаполнить.Доступность(0);
			Форма.кнИззаявки.Доступность(0);
		КонецЕсли;

		Если семЕстьПраво("Документ","ПретензияПолученная","Подтверждение")=1 Тогда
			Форма.лСебестоимость.Видимость(1);
			Форма.ДопРасходы.Видимость(1);
		Иначе
			Форма.лСебестоимость.Видимость(0);
			Форма.ДопРасходы.Видимость(0);
		КонецЕсли;
		
	КонецЕсли;
	Возврат "";
КонецФункции


Функция ВыборСутиПретензии(выб="",ДляПодтв=0)

		Запрос=СоздатьОбъект("ODBCRecordSet");
		Если (Константа.НовыйМеханизмПретензий.Получить(ДатаДок)<>Да) ИЛИ (ДокОснование.Вид()="СнятиеРезерва") Тогда
			Запрос.УложитьСписокОбъектов(Константа.СутьПретензийB,"#СутиПретензийB","Претензии");
			ЗапросПретензий="(SELECT Val FROM #СутиПретензийA UNION ALL SELECT Val FROM #СутиПретензийB)";
		ИначеЕсли ((ВидПретензии=Перечисление.ВидыПретензий.ОтАгента) И (ДокОснование.Вид()="Счет")) ИЛИ ((ДокОснование.Вид()="ПеремещениеНаСкладГотовойПродукции")) ИЛИ ( (ВидПретензии=Перечисление.ВидыПретензий.ОтАгента) И (ДокОснование.Вид()="ПриходнаяНакладная")) Тогда
			Запрос.УложитьСписокОбъектов(Константа.СутьПретензийB,"#СутиПретензийB","Претензии");
			ЗапросПретензий="(SELECT Val FROM #СутиПретензийB)";
		ИначеЕсли ВидПретензии=Перечисление.ВидыПретензий.ОтКлиента Тогда
			ЗапросПретензий="(SELECT Val FROM #СутиПретензийA)";
		ИначеЕсли ВидПретензии=Перечисление.ВидыПретензий.ОтАгента Тогда
			ЗапросПретензий="(SELECT Val FROM #СутиПретензийA)";
		ИначеЕсли  ВидПретензии=Перечисление.ВидыПретензий.ОтСклада Тогда
			Запрос.УложитьСписокОбъектов(Константа.СутьПретензийB,"#СутиПретензийB","Претензии");
			ЗапросПретензий="(SELECT Val FROM #СутиПретензийB)";
		КонецЕсли;
		
		Если семЕстьПраво("Документ","ПретензияПолученная","Подтверждение")=1 Тогда
			ДопУсловие = "";
		ИначеЕсли ВидПретензии<>Перечисление.ВидыПретензий.ОтСклада Тогда
			ДопУсловие = " AND $Претензии.ДляАгента = 1";
		КонецЕсли;
		
		Если Найти(ДокОснование.Вид(),"РасходнаяНакладная")>0 Тогда
			Запрос.УложитьСписокОбъектов(Константа.СутьПретензийB,"#СутиПретензийB","Претензии");
			ЗапросПретензий="(SELECT Val FROM #СутиПретензийA UNION ALL SELECT Val FROM #СутиПретензийB)";
			ДопУсловие = " AND $Претензии.ДляНакладной = 1";
		КонецЕсли;

		
		Если ДляПодтв=1 Тогда
			ДопУсловие = " AND $Претензии.ДляПодтверждения = 1";
		КонецЕсли;
		
		
		
		ТекстЗапроса="SELECT Претензии.CODE Код
		|					, Претензии.ID [Ссылка $Справочник.Претензии]
		|					, $Претензии.НаименованиеРусс СутьПретензии
		|					, $Претензии.ОграничениеДней ОгрДней
		|					, $Претензии.НуженСрокРеализ ТребСрокРеализ
		|			  FROM $Справочник.Претензии AS Претензии (NOLOCK)
//		|			  INNER JOIN $Справочник.Претензии AS ПретензииРод (NOLOCK) ON ПретензииРод.ID = Претензии.PARENTID
		|			  WHERE Претензии.ISMARK = 0 AND Претензии.ID IN "+ЗапросПретензий+ДопУсловие+"
		|			  ORDER BY Претензии.CODE
		|";
		
		Запрос.УложитьСписокОбъектов(Константа.СутьПретензийA,"#СутиПретензийA","Претензии");
		
		табл=СоздатьОбъект("ТаблицаЗначений");
		табл=Запрос.ВыполнитьИнструкцию(ТекстЗапроса);
		табл.ВидимостьКолонки("Ссылка",0);
		
		ном=0;
		Если ПустоеЗначение(выб)=0 Тогда
			Если табл.НайтиЗначение(выб,ном,"Ссылка")=1 Тогда
			КонецЕсли;
		КонецЕсли;

		Если табл.ВыбратьСтроку(ном,"Выберите причичину претензии")=1 Тогда
			Возврат табл.ПолучитьЗначение(ном,"Ссылка");
		Иначе
			Возврат ПолучитьПустоеЗначение("Справочник.Претензии");
		КонецЕсли;

КонецФункции

Процедура кнПодбор()
	
	пКлиент = ?(ПустоеЗначение(КлиентФилиала)=1,Клиент.ТекущийЭлемент(),КлиентФилиала.ТекущийЭлемент());
	
	Если ВидПретензии=Перечисление.ВидыПретензий.ОтКлиента Тогда
		Если ПустоеЗначение(пКлиент)=1 Тогда
			Предупреждение("Выберите клиента!");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	//пСклад = Склад;
	//пВалюта = Валюта;
	ОткрытьПодбор("Справочник.Номенклатура","ДляПодбора",пКлиент);
	Попытка
		УстановитьЗначениеВПодборе("Склад",Склад);
	Исключение
	КонецПопытки;
	Режим="Каталог";
КонецПроцедуры


Процедура кнЗаполнить()
	// выбираем вариант заполнения
	сп = СоздатьОбъект( "СписокЗначений" );
	сп.ДобавитьЗначение(0,"Заполнить все");
	сп.ДобавитьЗначение(1,"Заполнить пустые");
	выб = 0; Если сп.ВыбратьЗначение(выб,,,,1) = 0 Тогда Возврат; КонецЕсли;
	
	// выбираем причину притензии для заполнения
//	спр = СоздатьОбъект( "Справочник.Претензии" );
//	Если спр.Выбрать("Выберите причичину претензии","ФормаСписка") = 0 Тогда Возврат; КонецЕсли;
	
	спр=ВыборСутиПретензии();

	Если ПустоеЗначение(Спр)=1 Тогда
		Возврат;
	КонецЕсли;
	// заполняем причину притензии согласно выбранному варианту
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если выб = 1 Тогда
			Если СутьПретензии.Выбран() = 1 Тогда Продолжить; КонецЕсли;
		КонецЕсли;
		СутьПретензии = спр;
	КонецЦикла;
КонецПроцедуры

Процедура ДобавитьТоварИзЗаявки()
	Если ДокОснование.Выбран() = 0 Тогда
		Сообщить("Ошибка подбора из документа.","!");
		Сообщить("Не выбран документ основание.","I");
		Возврат;
	КонецЕсли;
	табл = СоздатьОбъект("ТаблицаЗначений");
	ДокОснование.ВыгрузитьТабличнуюЧасть(табл,"НомерСтроки,ТовКод,Товар,АгентПоТовару");
	рез=0;
	табл.УстановитьПараметрыКолонки("НомерСтрокиДокумента",,,,"Ном",10,);
	табл.УстановитьПараметрыКолонки("ТовКод",,,,"КодТовара",15,);
	табл.УстановитьПараметрыКолонки("Товар",,,,,40,);
	табл.УстановитьПараметрыКолонки("АгентПоТовару",,,,"Агент",20,);
	табл.ВыбратьСтроку(рез,"Выберите товар...");
	Если Рез>0 Тогда
		табл.ПолучитьСтрокуПоНомеру(рез);
		НоваяСтрока();
		Товар=табл.Товар;
		
		Если Константа.НовыйМеханизмПретензий.Получить(ДатаДок)=Да Тогда
			ПриВыбореТовара();
		Иначе
			АгентПоТовару=табл.АгентПоТовару;
			Если ПустоеЗначение(АгентПоТовару)=1 Тогда
				Если ПустоеЗначение(Клиент)=1 Тогда
					АгентПоТовару=ДокОснование.ДокументОснование.Агент;
				Иначе
					АгентПоТовару=Клиент.Агент;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьПретензию(табл)
	таблДок = СоздатьОбъект( "ТаблицаЗначений" );
	ВыгрузитьТабличнуюЧасть(таблДок);
	УдалитьСтроки();
	табл.ВыбратьСтроки();
	Пока табл.ПолучитьСтроку() = 1 Цикл
		НоваяСтрока();
		
		Попытка
			Клиент 			= табл.ПоСчету.Клиент;
			ПоСчету 		= табл.ПоСчету;
			ДокОснованиеТ 	= табл.ПоДокументу;
			СрокРеализ 		= табл.СрокРеализ;
			Поставщик 		= табл.Поставщик;
			Склад 			= табл.Склад;
			ПрихДокумент 	= табл.ПрихДокумент;
		Исключение
		КонецПопытки;
		Товар = табл.Товар;
		Попытка
			АгентПоТовару = табл.АгентПоТовару;
		Исключение
		КонецПопытки;
		
		Если ПустоеЗначение(АгентПоТовару)=1 Тогда
			Попытка
				АгентПоТовару=ДокОснование.Агент;
			Исключение
				АгентПоТовару=Клиент.Агент;
			КонецПопытки;
		КонецЕсли;
		
		Попытка
			Количество = табл.КолРазницы;
			Сумма	= табл.СуммаРазницы;
			Цена	= ?(Количество=0,Сумма,Сумма/Количество);
			Если (Количество=0) И (Сумма<>0) Тогда
				Если ДокОснованиеТ.Вид()="ПриходнаяНакладная" Тогда
					Попытка
						СутьПретензии = табл.СутьПретензии;
					Исключение
						СутьПретензии=Константа.ОснСутьПретензийРасхожденияЦенПрих;
					КонецПопытки;
				Иначе
					СутьПретензии=Константа.ОснСутьПретензийРасхожденияЦен;
				КонецЕсли;

			Иначе
				Попытка
					СутьПретензии = табл.СутьПретензии;
				Исключение
				КонецПопытки;
			КонецЕсли;
		Исключение
			Количество = табл.Количество;
			Сумма	= табл.Сумма;
		КонецПопытки;
		НомСтр = 0;
		Если (таблДок.НайтиЗначение(табл.Товар,НомСтр,"Товар") = 1) И (ПустоеЗначение(СутьПретензии)=1) Тогда
			СутьПретензии = таблДок.ПолучитьЗначение(НомСтр,"СутьПретензии");
		КонецЕсли;

		Если (таблДок.НайтиЗначение(табл.Товар,НомСтр,"Товар") = 1) И (ПустоеЗначение(СутьПретензииПодтв)=1) Тогда
			СутьПретензииПодтв = таблДок.ПолучитьЗначение(НомСтр,"СутьПретензииПодтв");
		КонецЕсли;

	КонецЦикла;
КонецПроцедуры

Процедура ВводНового()
	ЗаполнитьШапку(Контекст);	
	
	Если семЕстьПраво("Документ","Претензия","Претензия от склада")=1 Тогда
		ВидПретензии = Перечисление.ВидыПретензий.ОтСклада;
	Иначе
		ВидПретензии = Перечисление.ВидыПретензий.ОтКлиента;
	КонецЕсли;
	
	Если Фирма<>Константа.ОсновнаяФирма Тогда
		Клиент=Фирма.Клиент;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ВводНаОсновании(ДокОсн)
	ЗаполнитьШапкуНаОсн(Контекст,ДокОсн);
	ДокОснование = ДокОсн;
//	ДатаДок	= ДокОсн.ДатаДок;
	Если Константа.НовыйМеханизмПретензий.Получить(РабочаяДата())=Да Тогда
		УстановитьНовыйНомер(ФК+"NA-");
	КонецЕсли;
	Если глЕстьРеквизитШапки("Клиент", ДокОсн.Вид()) = 1 Тогда
		Клиент = ДокОсн.Клиент;
	КонецЕсли;
	Если глЕстьРеквизитШапки("Комплектовщик", ДокОсн.Вид()) = 1 Тогда
		Комплектовщик = ДокОсн.Комплектовщик;
	КонецЕсли;
	Если ПустоеЗначение( Форма.Параметр ) = 1 Тогда
		ВидПретензии = пОтКлиента;
	Иначе
		ВидПретензии = Форма.Параметр.Получить("Вид");
		ЗаполнитьПретензию(Форма.Параметр.Получить("Табл"));
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()

	Форма.НомерДок.Доступность(?(НазваниеНабораПрав()="Администратор",1,0));
	
	Если ДатаДок<=Константа.ДатаЗапретаРедактированияЗаказов Тогда
		Форма.ТолькоПросмотр(1);
		Предупреждение("Разрешен только просмотр документа!",4);
		Возврат;
	КонецЕсли;

	Если ПустоеЗначение( Форма.Параметр ) = 0 Тогда
		Если ТипЗначенияСтр(Форма.Параметр)="СписокЗначений" Тогда
			ВидПретензии = Форма.Параметр.Получить("Вид");
			ЗаполнитьПретензию(Форма.Параметр.Получить("Табл"));
			
			Попытка
				ДокОсн = Форма.Параметр.Получить("ДокОснование");
				Если ПустоеЗначение(ДокОсн)=0 Тогда
					Если ДокОсн.Вид()="РасходнаяНакладная" Тогда
						Если ДатаГод(РабочаяДата())<>ДатаГод(ДокОсн.ДатаПоставки) Тогда
							УстановитьНовыйНомер(ФК+"PA-");
						КонецЕсли;
						ДатаДок = ДокОсн.ДатаПоставки; //для расходной накладной прописываем дату доставки накладной как дату претензии
						
					ИначеЕсли ДокОсн.Вид()="ПриходнаяНакладная" Тогда
						Если ДатаГод(РабочаяДата())<>ДатаГод(ДокОсн.ДатаПоставки) Тогда
							УстановитьНовыйНомер(ФК+"PA-");
						КонецЕсли;

						ДатаДок = ДокОсн.ДатаДок; //для приходной накладной прописываем дату прихода
					КонецЕсли;
						
				Иначе
						
					//получим заявку по первой строке и дату пропишем в претензии				
					ПолучитьСтрокуПоНомеру(1);
					ДатаДок = ПоСчету.ДатаПоставки;
//					ДатаДок=ТекущаяДата();
					Если ДатаДок > РабочаяДата() Тогда
						ДатаДок = РабочаяДата();
					КонецЕсли;
					Если ДатаГод(РабочаяДата())<>ДатаГод(ПоСчету.ДатаПоставки) Тогда
						ДатаДок=ТекущаяДата();
	//					глУстановитьНовыйНомер(Контекст,ФК+"PГ-");
						УстановитьНовыйНомер(ФК+"PГ-");
	//					ДатаДок = ПоСчету.ДатаПоставки;
					КонецЕсли;
						
				КонецЕсли;
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	Если Фирма<>Константа.ОсновнаяФирма Тогда
		Форма.Клиент.Видимость(0);
		Форма.КлиентФилиала.Видимость(1);
	Иначе
		Форма.Клиент.Видимость(1);
		Форма.КлиентФилиала.Видимость(0);
	КонецЕсли;
	
	Если глКодСтраныПользователя="LV" Тогда
//		Форма.лНаименованиеТовара.Видимость(0);
//		Форма.Товар.Видимость(1);
	Иначе 
//		Форма.лНаименованиеТовара.Видимость(1);
//		Форма.Товар.Видимость(0);  
	КонецЕсли;

	Если Константа.НовыйМеханизмПретензий.Получить(ДатаДок)<>Да Тогда	
		Если ПустоеЗначение(ДокОснование)=0 Тогда
			Форма.ВидПретензии.Доступность(0);
		КонецЕсли;
	Иначе
		Если семЕстьПраво("Документ","ПретензияПолученная","Претензия от склада")=1 Тогда
			Форма.ВидПретензии.Доступность(1);
		Иначе
			Форма.ВидПретензии.Доступность(0);
		КонецЕсли;
		
		//Форма.ДатаДок.Доступность(0);
	КонецЕсли;

	Форма.Заголовок(Шаблон("[ВидПретензии] - [НомерДок] [ДатаДок]"));
КонецПроцедуры

Функция ФорматВывода( парам )
	Если парам = "Вид" Тогда
		Возврат ВидПретензии;
	ИначеЕсли парам = "КодТовара" Тогда
		Возврат ?(Товар.Выбран() = 1, Товар.Код, "");
	КонецЕсли;
КонецФункции

//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи() Далее
//Конец текста, вставленного Инсталлятором МОД
Процедура стар_ПриЗаписи()
//Закомментировано Инсталлятором МОД:Процедура ПриЗаписи()
	Если семМожноЗаписать( Контекст ) = 0 Тогда Возврат; КонецЕсли;
	//АвтоВремяОтключить();
	//Часы=0; Минуты=0; Секунды=0;
	//ДокОснование.ПолучитьВремя(Часы,Минуты,Секунды);
	Если (ВидПретензии = пОтАгента) и (Выбран() = 0) Тогда
		//ДатаДок = ДокОснование.ДатаДок;
		//АвтоВремяОтключить();
		//Часы=0; Минуты=0; Секунды=0;
		//ДокОснование.ПолучитьВремя(Часы,Минуты,Секунды);
		//УстановитьВремя(Часы,Минуты,Секунды);  
	КонецЕсли;
	
	Если (ДокОснование.Вид()="Перемещение") И (ПустоеЗначение(Агент)=1) Тогда
		Агент=ДокОснование.ДокументОснование.Агент;
	КонецЕсли;
	
	Если КоличествоСтрок()=0 Тогда
		Предупреждение("Нельзя записать пустой документ!");
		СтатусВозврата(0);
	КонецЕсли;
	
	Подтверждена=1;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПустоеЗначение(СутьПретензииПодтв)=1 Тогда
			Подтверждена=0;
		КонецЕсли;
		
		Если ПустоеЗначение(АгентПоТовару)=1 Тогда
			АгентПоТовару = Агент;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	стар_ПриЗаписи();
	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД
//Клиент.ИспользоватьДату(ДатаДок);
//-----------------------------------------------

Функция ВыборПартииПрихода(пТовар,пСрокРеализ,пСуть)
	Запрос=СоздатьОбъект("ODBCRecordSet");
	ТекстЗапроса="SELECT TOP 100 Cast(Left(ПартииТоваров.DATE_TIME_IDDOC, 8) AS datetime) ДатаДок
	|  					, ПартииТоваров.IDDOC [Документ $Документ]
	|					, ПартииТоваров.IDDOCDEF Документ_вид
	|					, $ПартииТоваров.Контрагент [Поставщик $Справочник.Контрагенты]
	|					, NULLIF($ПартииТоваров.СрокРеализации,'17530101') СрокРеализ
	|					, $ПартииТоваров.Статус Статус
	|					, $ПартииТоваров.Стоимость Стоимость
	|					, $ПартииТоваров.ОстатокТовара Количество
	|			  FROM $Регистр.ПартииТоваров AS ПартииТоваров (NOLOCK)
	|			  WHERE ($ПартииТоваров.Товар = :ВыбТовар)
	|					"+?(ПустоеЗначение(пСрокРеализ)=0," AND ($ПартииТоваров.СрокРеализации BETWEEN DATEADD(day,-5,:ВыбСрокРеализ) AND DATEADD(day,5,:ВыбСрокРеализ))","")+"
	|					AND ПартииТоваров.DATE_TIME_IDDOC >= :НачДата
	|					AND ПартииТоваров.DEBKRED = 0
	|					AND $ПартииТоваров.КодОперации IN (:КодОп1,:КодОп2,:КодОп3, :КодОп4)
	|			  ORDER BY ПартииТоваров.DATE_TIME_IDDOC DESC
	|";
	
	Запрос.УстановитьТекстовыйПараметр("ВыбТовар", пТовар);
	Запрос.УстановитьТекстовыйПараметр("ВыбСрокРеализ", пСрокРеализ);
	Если пСуть.ОграничениеДней > 0  Тогда
		//устанавливаем ограничение на кол-во дней назад 
		НаДату=БанковскаяДата(РабочаяДата(),-пСуть.ОграничениеДней);
	Иначе
		Если ВидПретензии = Перечисление.ВидыПретензий.ОтСклада Тогда
			НаДату =  ДатаДок - 900;
		Иначе
			НаДату =  ДатаДок - 720;
		КонецЕсли;
		
	КонецЕсли;		
	
	Если ВидПретензии = Перечисление.ВидыПретензий.ОтСклада Тогда
		Запрос.УстановитьТекстовыйПараметр("НачДата", НаДату);
	Иначе
		Запрос.УстановитьТекстовыйПараметр("НачДата", НаДату);
	КонецЕсли;
	Запрос.УстановитьТекстовыйПараметр("КодОп1", ЗакупкаТовара);
	Запрос.УстановитьТекстовыйПараметр("КодОп2", ПроизводствоБлюда);
	Запрос.УстановитьТекстовыйПараметр("КодОп3", ПринятоНаРеализацию);
	Запрос.УстановитьТекстовыйПараметр("КодОп4", ВозвратТовараСПереработки);
	//Запрос.УстановитьТекстовыйПараметр("КодОп5", ВозвратОтПокупателяКупленногоТовара);
	
	табл = Запрос.ВыполнитьИнструкцию(ТекстЗапроса);
	табл.ВидимостьКолонки("Документ_вид,Стоимость",0);
	Если табл.КоличествоСтрок()=0 Тогда
		Предупреждение("Партия товара с таким сроком не закупалась!");
		Возврат 0;
	КонецЕсли;
	поз=0;
	Если табл.ВыбратьСтроку(поз,"Выберите партию товара")=1 Тогда
		табл.ПолучитьСтрокуПоНомеру(поз);
		Возврат табл;
	Иначе
		Возврат 0;
	КонецЕсли;
	
	
КонецФункции


Функция ВыборПартииИКоличества(пТовар,пСуть)
	Запрос=СоздатьОбъект("ODBCRecordSet");

	Если пСуть.ОграничениеДней > 0  Тогда
		//устанавливаем ограничение на кол-во дней назад 
		НаДатуПоставки=БанковскаяДата(РабочаяДата(),-пСуть.ОграничениеДней);
		НаДату=ДобавитьМесяц(НачМесяца(РабочаяДата()),-1);
		УсловиеДатыПоставки = " AND COALESCE($ДокР.ДатаПоставки,Cast(Left(ОборотыТоваров.DATE_TIME_IDDOC, 8) AS datetime)) >= :НачДатаПоставки";
		Запрос.УстановитьТекстовыйПараметр("НачДатаПоставки", НаДатуПоставки);
	Иначе
		НаДату=ДобавитьМесяц(НачМесяца(РабочаяДата()),-24);
		НаДатуПоставки=НаДату;
		УсловиеДатыПоставки = "";
	КонецЕсли;
	
	Запрос.УстановитьТекстовыйПараметр("НачДата", НаДату);
	
	Если (Фирма=Константа.ОсновнаяФирма) И (СокрЛП(Клиент.Рег_номер)<>СокрЛП(Фирма.Рег_номер)) Тогда
		
		Если пСуть.Реализация=0 Тогда
			
			ТекстЗапроса="
			|SELECT RTRIM(Журн.DOCNO) + '(' + Convert(varchar(8),Cast(Left(Журн.DATE_TIME_IDDOC, 8) AS datetime),4)+')' Документ
			|		, Cast(Left(Журн.DATE_TIME_IDDOC, 8) AS datetime) ДатаДок
	//		|		, $ПартииТоваров.СрокРеализации СрокРеализ
	//		|		, $ПартииТоваров.Контрагент [Поставщик $Справочник.Контрагенты]
			|		, $ОборотыТоваров.Количество Кол
			|		, $ОборотыТоваров.СуммаПЦЧ Сумма
			|		, $ОборотыТоваров.СуммаБазовая БазСто
			|		, ОборотыТоваров.IDDOC [Док $Документ]
			|		, ОборотыТоваров.IDDOCDEF [Док_вид $ВидДокумента]
			|		, COALESCE($ДокРС.Счет,RIGHT($ДокРН.ДокументОснование,9)) [ПоСчету $Документ.Счет]
			|		, RTRIM(ЖурнЗаявка.DOCNO) + '(' + Convert(varchar(8),Cast(Left(ЖурнЗаявка.DATE_TIME_IDDOC, 8) AS datetime),4)+')' ЭлЗаявка
	//		|		, $ДокСчет.Агент [Агент $Справочник.Сотрудники]
			|		, $ОборотыТоваров.Агент [Агент $Справочник.Сотрудники]
			
			|FROM $Регистр.ОборотыТоваров ОборотыТоваров (NOLOCK)
			|INNER JOIN _1sjourn Журн (NOLOCK) ON Журн.IDDOC = ОборотыТоваров.IDDOC AND Журн.IDDOCDEF IN ($ВидДокумента.РасходнаяНакладная, $ВидДокумента.РасходнаяНакладнаяНал) 
			|INNER JOIN $Регистр.ПартииТоваров ПартииТоваров (NOLOCK) ON ПартииТоваров.IDDOC = ОборотыТоваров.IDDOC AND ПартииТоваров.LineNo_=ОборотыТоваров.LineNo_
			|LEFT JOIN $ДокументСтроки.РасходнаяНакладная ДокРС (NOLOCK) ON ДокРС.IDDOC = ОборотыТоваров.IDDOC AND ДокРС.LineNo_=ОборотыТоваров.LineNo_
			|LEFT JOIN $Документ.РасходнаяНакладная ДокР (NOLOCK) ON ДокР.IDDOC = ДокРС.IDDOC
			|LEFT JOIN $Документ.РасходнаяНакладнаяНал ДокРН (NOLOCK) ON ДокРН.IDDOC = ОборотыТоваров.IDDOC
			|LEFT JOIN $Документ.Счет ДокСчет (NOLOCK) ON ДокСчет.IDDOC = COALESCE($ДокРС.Счет,RIGHT($ДокРН.ДокументОснование,9))
			|LEFT JOIN _1sjourn ЖурнЗаявка (NOLOCK) ON ЖурнЗаявка.IDDOC = COALESCE($ДокРС.Счет,RIGHT($ДокРН.ДокументОснование,9)) AND ЖурнЗаявка.IDDOCDEF =$ВидДокумента.Счет
			|WHERE $ОборотыТоваров.Клиент = :Клиент AND $ОборотыТоваров.ВидОперации='-' AND $ОборотыТоваров.Товар = :ВыбТовар AND ОборотыТоваров.IDDOCDEF IN ($ВидДокумента.РасходнаяНакладная, $ВидДокумента.РасходнаяНакладнаяНал) 
			|	AND ОборотыТоваров.DATE_TIME_IDDOC >= :НачДата " + УсловиеДатыПоставки + "
			|ORDER BY ОборотыТоваров.DATE_TIME_IDDOC DESC";
			Запрос.УстановитьТекстовыйПараметр("Клиент", Клиент);
			Запрос.УстановитьТекстовыйПараметр("ВыбТовар", пТовар);
		Иначе
			ТекстЗапроса="
			|SELECT RTRIM(Журн.DOCNO) + '(' + Convert(varchar(8),Cast(Left(Журн.DATE_TIME_IDDOC, 8) AS datetime),4)+')' Документ
			|		, Cast(Left(Журн.DATE_TIME_IDDOC, 8) AS datetime) ДатаДок
			|		, $ДокРР.Количество Кол
			|		, $ДокРР.Сумма Сумма
			|		, 0 БазСто
			|		, Журн.IDDOC [Док $Документ]
			|		, Журн.IDDOCDEF [Док_вид $ВидДокумента]
			|		, $ДокРР.Счет [ПоСчету $Документ.Счет]
			|		, RTRIM(ЖурнЗаявка.DOCNO) + '(' + Convert(varchar(8),Cast(Left(ЖурнЗаявка.DATE_TIME_IDDOC, 8) AS datetime),4)+')' ЭлЗаявка
	//		|		, $ДокСчет.Агент [Агент $Справочник.Сотрудники]
			|		, $ДокР.Агент [Агент $Справочник.Сотрудники]
			
			|FROM $ДокументСтроки.РасходнаяРеализатора ДокРР (NOLOCK)
			|INNER JOIN _1sjourn Журн (NOLOCK) ON Журн.IDDOC = ДокРР.IDDOC AND Журн.IDDOCDEF = $ВидДокумента.РасходнаяРеализатора
			|INNER JOIN $Документ.РасходнаяРеализатора ДокР (NOLOCK) ON ДокР.IDDOC = ДокРР.IDDOC
			|LEFT JOIN $Документ.Счет ДокСчет (NOLOCK) ON ДокСчет.IDDOC = $ДокРР.Счет
			|LEFT JOIN _1sjourn ЖурнЗаявка (NOLOCK) ON ЖурнЗаявка.IDDOC = $ДокРР.Счет AND ЖурнЗаявка.IDDOCDEF =$ВидДокумента.Счет
			|WHERE $ДокР.Клиент = :Клиент AND $ДокРР.Товар = :ВыбТовар
			|	AND Журн.DATE_TIME_IDDOC >= :НачДата " + УсловиеДатыПоставки + "
			|ORDER BY Журн.DATE_TIME_IDDOC DESC";
			Запрос.УстановитьТекстовыйПараметр("Клиент", Клиент);
			Запрос.УстановитьТекстовыйПараметр("ВыбТовар", пТовар);
			
		КонецЕсли;

		
	ИначеЕсли (Фирма=Константа.ОсновнаяФирма) И (СокрЛП(Клиент.Рег_номер)=СокрЛП(Фирма.Рег_номер)) Тогда //если внутренний клиент - склад

		ТекстЗапроса = "SELECT RTRIM(Журн.DOCNO) + '(' + Convert(varchar(8),Cast(Left(Журн.DATE_TIME_IDDOC, 8) AS datetime),4)+')' Документ
						|		, Cast(Left(Журн.DATE_TIME_IDDOC, 8) AS datetime) ДатаДок
						|	, $СчетСтроки.Количество Кол
						|	, $СчетСтроки.Единица [Единица $Справочник.Единицы]
						|	, $СчетСтроки.Сумма Сумма
						|	, 0 БазСто
						|	, СчетСтроки.IDDOC [ПоСчету $Документ.Счет]
						|	, $ПустойИД Док
						|	, $Счет.Агент [Агент $Справочник.Сотрудники]
						|FROM $ДокументСтроки.Счет AS СчетСтроки (NOLOCK)
						|	INNER JOIN $Документ.Счет AS Счет ON СчетСтроки.IDDOC = Счет.IDDOC
						|	INNER JOIN _1SJOURN AS Журн ON СчетСтроки.IDDOC = Журн.IDDOC AND (Журн.CLOSED & 1) = 1 AND (Журн.DATE_TIME_IDDOC >= :НачДата)
						|WHERE ($Счет.Клиент = :Клиент)
						|	AND ($Счет.ВидЗаявки <> $Перечисление.ВидыЗаявок.ЗаявкаНаВозврат)
						|	AND ($СчетСтроки.Товар = :ВыбТовар)
						|ORDER BY Журн.DATE_TIME_IDDOC DESC
						|";
						
		Запрос.УстановитьТекстовыйПараметр("Клиент", Клиент);
		Запрос.УстановитьТекстовыйПараметр("ВыбТовар", пТовар);
		Запрос.УстановитьТекстовыйПараметр("НачДата", НаДатуПоставки);
		
	Иначе
		//если пользователь филиала 
		ИмяБазы=Пользователь.ОсновнаяФирма.ИмяБД;
		//БД=СоздатьОбъект("ODBCDataBase");
		//БД.ПрисоединитьИБ(СокрЛП(Фирма.КаталогКонфигурации),"OLE","oletransfe");
		//Запрос.УстБД(БД);

		ТекстЗапроса="
		|SELECT RTRIM(Журн.DOCNO) + '(' + Convert(varchar(8),Cast(Left(Журн.DATE_TIME_IDDOC, 8) AS datetime),4)+')' Документ
		|		, Cast(Left(Журн.DATE_TIME_IDDOC, 8) AS datetime) ДатаДок
		//		|		, $ПартииТоваров.СрокРеализации СрокРеализ
//		|		, $ПартииТоваров.Контрагент [Поставщик $Справочник.Контрагенты]
		|		, $ОборотыТоваров.Количество Кол
		|		, $ОборотыТоваров.СуммаПЦЧ Сумма
		|		, $ОборотыТоваров.СуммаБазовая БазСто
		|		, $ПустойИД [Док $Документ]
		|		, ОборотыТоваров.IDDOCDEF [Док_вид $ВидДокумента]
		|		, ЖурнЗаявкаЦентр.IDDOC [ПоСчету $Документ.Счет]
		|		, RTRIM(ЖурнЗаявка.DOCNO) + '(' + Convert(varchar(8),Cast(Left(ЖурнЗаявка.DATE_TIME_IDDOC, 8) AS datetime),4)+')' ЭлЗаявка
		|		, СпрСОриг.ID [Агент $Справочник.Сотрудники]
		|FROM "+ИмяБазы+".dbo.$Регистр.ОборотыТоваров ОборотыТоваров (NOLOCK)
		|INNER JOIN "+ИмяБазы+".dbo._1sjourn Журн (NOLOCK) ON Журн.IDDOC = ОборотыТоваров.IDDOC AND Журн.IDDOCDEF IN ($ВидДокумента.РасходнаяНакладная, $ВидДокумента.РасходнаяНакладнаяНал) 
		|INNER JOIN "+ИмяБазы+".dbo.$Регистр.ПартииТоваров ПартииТоваров (NOLOCK) ON ПартииТоваров.IDDOC = ОборотыТоваров.IDDOC AND ПартииТоваров.LineNo_=ОборотыТоваров.LineNo_
		|INNER JOIN "+ИмяБазы+".dbo.$Справочник.Контрагенты as СпрК ON СпрК.ID = $ОборотыТоваров.Клиент
//		|INNER JOIN $Справочник.Контрагенты as СпрОригК ON $СпрОригК.IDD = $СпрК.IDD
		|INNER JOIN "+ИмяБазы+".dbo.$Справочник.Сотрудники as СпрС ON СпрС.ID = $ОборотыТоваров.Агент
		|INNER JOIN $Справочник.Сотрудники as СпрСОриг ON $СпрСОриг.IDD= $СпрС.IDD
		|INNER JOIN "+ИмяБазы+".dbo.$Справочник.Номенклатура as Спр ON Спр.ID = $ОборотыТоваров.Товар
		//		|INNER JOIN $Справочник.Номенклатура as СпрОриг ON $СпрОриг.IDD= $Спр.IDD
		|LEFT JOIN "+ИмяБазы+".dbo.$ДокументСтроки.РасходнаяНакладная ДокРС (NOLOCK) ON ДокРС.IDDOC = ОборотыТоваров.IDDOC AND ДокРС.LineNo_=ОборотыТоваров.LineNo_
		|LEFT JOIN "+ИмяБазы+".dbo.$Документ.РасходнаяНакладная ДокР (NOLOCK) ON ДокР.IDDOC = ДокРС.IDDOC
		|LEFT JOIN "+ИмяБазы+".dbo.$Документ.РасходнаяНакладнаяНал ДокРН (NOLOCK) ON ДокРН.IDDOC = ОборотыТоваров.IDDOC
		|LEFT JOIN "+ИмяБазы+".dbo._1sjourn ЖурнЗаявка (NOLOCK) ON ЖурнЗаявка.IDDOC = COALESCE($ДокРС.Счет,RIGHT($ДокРН.ДокументОснование,9)) AND ЖурнЗаявка.IDDOCDEF =$ВидДокумента.Счет
		|LEFT JOIN _1sjourn ЖурнЗаявкаЦентр (NOLOCK) ON ЖурнЗаявкаЦентр.$ОбщийРеквизит.IDD = ЖурнЗаявка.$ОбщийРеквизит.IDD
		|WHERE $СпрК.IDD=:Клиент AND $ОборотыТоваров.ВидОперации='-' AND $Спр.IDD = :ВыбТовар AND ОборотыТоваров.IDDOCDEF IN ($ВидДокумента.РасходнаяНакладная, $ВидДокумента.РасходнаяНакладнаяНал) 
		|	AND ОборотыТоваров.DATE_TIME_IDDOC >= :НачДата " + УсловиеДатыПоставки + "
		|ORDER BY ОборотыТоваров.DATE_TIME_IDDOC DESC";
		Запрос.УстановитьТекстовыйПараметр("Клиент", КлиентФилиала.IDD);
		Запрос.УстановитьТекстовыйПараметр("ВыбТовар", пТовар.IDD);
		
	КонецЕсли;
	
	Если НазваниеНабораПрав()="Администратор" Тогда
//		Запрос.Отладка(1);
	КонецЕсли;
	табл = Запрос.ВыполнитьИнструкцию(ТекстЗапроса);
	табл.ВидимостьКолонки("Док,Док_вид,ПоСчету,БазСто",0);
	Если табл.КоличествоСтрок()=0 Тогда
		Предупреждение("Данный товар не отгружался клиенту с "+НаДатуПоставки+" числа!");
		Возврат 0;
	КонецЕсли;
	поз=0;
	Если табл.ВыбратьСтроку(поз,"Выберите партию отгрузки")=1 Тогда
		табл.ПолучитьСтрокуПоНомеру(поз);
		Возврат табл;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

Процедура ОбработкаПодбора(Выб)
	
//	ЗапросКоличестваВПодборе(Контекст,Режим,Выб);

	выбСуть=ВыборСутиПретензии();
	Если ПустоеЗначение(выбСуть)=1 Тогда
		Возврат;
	КонецЕсли;

	Если ВидПретензии=Перечисление.ВидыПретензий.ОтКлиента Тогда
		табл=ВыборПартииИКоличества(выб,выбСуть);
		Если ТипЗначенияСтр(табл)="ТаблицаЗначений" Тогда
			Кол=табл.Кол;
			
			Если (выбСуть.НуженСрокРеализ=1) ИЛИ (выбСуть.НуженПоставщик=1) Тогда
				выбСрок=Дата(0);
				
				Пока 1=1 Цикл
					Если ВвестиДату(выбСрок,"Введите срок реализации")=1 Тогда
						таблПарт=ВыборПартииПрихода(выб,выбСрок,выбСуть);
						Если ТипЗначенияСтр(таблПарт)<>"ТаблицаЗначений" Тогда
						Иначе
							Прервать;
						КонецЕсли;
					Иначе
						Возврат;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Пока 1=1 Цикл
				Если ВвестиЧисло(Кол,"Введите количество",12,3)=1 Тогда
					Если Кол>табл.Кол Тогда
						Предупреждение("Вы указали кол-во больше чем было отгружено по данной партии.");
					Иначе
						Прервать;
					КонецЕсли;
				Иначе
					Возврат;
				КонецЕсли;
				
			КонецЦикла;

			ПричинаНов="";
			Спр=СоздатьОбъект("Справочник.ПретензииПричины");
			Спр.ИспользоватьВладельца(выбСуть);
			Если Спр.ВыбратьЭлементы()>0 Тогда
				Спр.НайтиЭлемент(Причина);
				Если спр.Выбрать("Выберите причину","ФормаСписка")=1 Тогда
					ПричинаНов=Спр.ТекущийЭлемент();
				КонецЕсли;
			КонецЕсли;
			
		
			НоваяСтрока();
			Товар			= Выб;
			ДокОснованиеТ	= табл.Док;
			ПоСчету			= табл.ПоСчету;
			Причина 		= ПричинаНов;
			
			Если (выбСуть.НуженСрокРеализ=1) ИЛИ (выбСуть.НуженПоставщик=1) Тогда
				СрокРеализ		= таблПарт.СрокРеализ;
				Поставщик 		= таблПарт.Поставщик;
				ПрихДокумент	= таблПарт.Документ;
			КонецЕсли;
			
			АгентПоТовару	= табл.Агент;
			Количество		= Кол;

			Попытка
				СуммаПотерь		= Пересчет(табл.Сумма-табл.БазСто,Фирма.ОсновнаяВалюта,табл.ДатаДок,Рубли,1);
				Цена			= Пересчет(табл.Сумма/табл.Кол,Фирма.ОсновнаяВалюта,табл.ДатаДок,Рубли,1);
				Себестоимость	= Пересчет(табл.БазСто,Фирма.ОсновнаяВалюта,табл.ДатаДок,Рубли,1)/табл.Кол;
			Исключение
				СуммаПотерь		= табл.Сумма-табл.БазСто;
				Цена			= табл.Сумма/табл.Кол;
				Себестоимость	= табл.БазСто/табл.Кол;
			КонецПопытки;			
			ЦенаПотерь		= СуммаПотерь/Количество;
			Сумма 			= Цена*Количество;
			СутьПретензии	= выбСуть;
			
			АктивизироватьСтроку();       
		КонецЕсли;
	Иначе
		
		Если (выбСуть.НуженСрокРеализ=1) ИЛИ (выбСуть.НуженПоставщик=1) ИЛИ (ВидПретензии=Перечисление.ВидыПретензий.ОтСклада) Тогда
			выбСрок=Дата(0);
			
			Пока 1=1 Цикл
				Если ВвестиДату(выбСрок,"Введите срок реализации")=1 Тогда
					таблПарт=ВыборПартииПрихода(выб,выбСрок,выбСуть);
					Если ТипЗначенияСтр(таблПарт)<>"ТаблицаЗначений" Тогда
					Иначе
						Прервать;
					КонецЕсли;
				Иначе
					Возврат;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Пока 1=1 Цикл
			Если ВвестиЧисло(Кол,"Введите количество",12,3)=1 Тогда
				Если Кол>таблПарт.Количество Тогда
					Предупреждение("Вы указали кол-во больше чем было оприходовано по данной партии.");
				Иначе
					Прервать;
				КонецЕсли;
			Иначе
				Возврат;
			КонецЕсли;
		КонецЦикла;

		ПричинаНов="";
		Спр=СоздатьОбъект("Справочник.ПретензииПричины");
		Спр.ИспользоватьВладельца(выбСуть);
		Если Спр.ВыбратьЭлементы()>0 Тогда
			Спр.НайтиЭлемент(Причина);
			Если спр.Выбрать("Выберите причину","ФормаСписка")=1 Тогда
				ПричинаНов=Спр.ТекущийЭлемент();
			КонецЕсли;
		КонецЕсли;
		
		
		НоваяСтрока();
		Товар			= Выб;
		ДокОснованиеТ	= "";
		ПоСчету			= "";
		Количество		= Кол;
		Причина 		= ПричинаНов;
		
		Если (выбСуть.НуженСрокРеализ=1) ИЛИ (выбСуть.НуженПоставщик=1) ИЛИ (ВидПретензии=Перечисление.ВидыПретензий.ОтСклада) Тогда
			СрокРеализ		= таблПарт.СрокРеализ;
			Если ПустоеЗначение(таблПарт.Поставщик)=0 Тогда
				Поставщик 		= таблПарт.Поставщик;
			Иначе
				Поставщик		= Товар.Поставщик;
			КонецЕсли;
			ПрихДокумент	= таблПарт.Документ;
			СуммаПотерь		= таблПарт.Стоимость/таблПарт.Количество*Кол;
			Себестоимость	= таблПарт.Стоимость/таблПарт.Количество;
			ЦенаПотерь		= СуммаПотерь/Количество;
		КонецЕсли;
		
		АгентПоТовару	= ?(ПустоеЗначение(Поставщик)=1,Пользователь.Сотрудник,Поставщик.Агент);
		Цена			= 0;
		Сумма 			= 0;
		СутьПретензии	= выбСуть;
		АктивизироватьСтроку();       
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриВыбореТовара()

	выбСуть			= ВыборСутиПретензии();
	Если ПустоеЗначение(выбСуть)=1 Тогда
		Возврат;
	КонецЕсли;
	
	табл=ВыборПартииИКоличества(Товар,выбСуть);
	Если ТипЗначенияСтр(табл)="ТаблицаЗначений" Тогда
		ДокОснованиеТ	= табл.Док;
		ПоСчету			= табл.ПоСчету;
		СрокРеализ		= табл.СрокРеализ;
		Поставщик		= табл.Поставщик;
		АгентПоТовару	= табл.Агент;
		Количество		= табл.Кол;
		
		СуммаПотерь		= табл.Сумма-табл.БазСто;
		СутьПретензии	= выбСуть;
	КонецЕсли;
КонецПроцедуры

Процедура ПриНачалеВыбораЗначения(ИдЭлем, ФлагСт)
	Если (ИдЭлем="СутьПретензии") Тогда
		ФлагСт=0;
		
		Если ПустоеЗначение(СутьПретензии)=0 Тогда
			РазрПодтв=глРазрешеноПодтверждатьСутьПретензии(Пользователь,АгентПоТовару,СутьПретензии);
		КонецЕсли;
		
		Если (НазваниеНабораПрав()="Администратор") И (РазрПодтв=0) Тогда
		ИначеЕсли РазрПодтв = 0 Тогда
			Предупреждение("Вы не можете изменить первоначальную суть претензии. Вводите новую строку!");
			Возврат;
		КонецЕсли;
		
		выб=ВыборСутиПретензии(выб);
		Если ПустоеЗначение(выб)=1 Тогда
			Возврат;
		Иначе
			УстановитьАтрибут(ИдЭлем,выб);
		КонецЕсли;
	ИначеЕсли ИдЭлем="КлиентФилиала" Тогда
		ФлагСт=0;
		СтатусВозврата(0);
		Кл=СоздатьОбъект("Справочник.Контрагенты");
		Если ПустоеЗначение(КлиентФилиала)=0 Тогда
			Кл.НайтиЭлемент(КлиентФилиала);
		КонецЕсли;
		Кл.ИспользоватьРодителя(Фирма.ОснГруппаКлиентов,0);
		Если Кл.Выбрать("Выберите клиента...","")=1 Тогда
			КлиентФилиала=Кл.ТекущийЭлемент();
			Валюта=КлиентФилиала.ВалютаКредита;
		КонецЕсли;
	
	КонецЕсли;
КонецПроцедуры

Процедура ПриНачалеРедактированияСтроки()
	Если (Форма.ТекущаяКолонка()="Поставщик") ИЛИ (Форма.ТекущаяКолонка()="СрокРеализ") ИЛИ (Форма.ТекущаяКолонка()="ПоСчету") Тогда
		Статус1 = СутьПретензии.ПолучитьАтрибут("Нужен"+Форма.ТекущаяКолонка());
		Статус2 = СутьПретензииПодтв.ПолучитьАтрибут("Нужен"+Форма.ТекущаяКолонка());
		
		СтатусВозврата(Макс(Статус1,Статус2));
	ИначеЕсли Форма.ТекущаяКолонка()="СутьПретензииПодтв" Тогда
		
		СтатусВозврата(0);
		
		Если ПустоеЗначение(СутьПретензии)=1 Тогда
			Предупреждение("Не указана основная суть претензии!");
			Возврат;
		КонецЕсли;
		
		
		ИдЭлем=Форма.ТекущаяКолонка();
		РазрПодтв=глРазрешеноПодтверждатьСутьПретензии(Пользователь,АгентПоТовару,СутьПретензии);
		РазрЗакл=глРазрешеноПисатьЗаключениеСутьПретензии(Пользователь,АгентПоТовару,СутьПретензии);
		Если (РазрПодтв=0) и (РазрЗакл=1) Тогда
			текстЗаключения=Пояснения;
			Если ВвестиСтроку(текстЗаключения,"Введите заключение",100)=1 Тогда
				Пояснения=текстЗаключения;
			КонецЕсли;
			Возврат;
		ИначеЕсли (РазрЗакл+РазрПодтв) = 0 Тогда
			Предупреждение("У Вас нет права подтверждать данную претензию!");
			Возврат;
		КонецЕсли;

		Если ПустоеЗначение(СутьПретензииПодтв)=0 Тогда
			СутьПретензииПодтв="";
			Возврат;			
		КонецЕсли;
		
		выб = СутьПретензии;
		выб=ВыборСутиПретензии(выб,1);
		Если ПустоеЗначение(выб)=1 Тогда
			Возврат;
		Иначе
			УстановитьАтрибут(ИдЭлем,выб);
			текстЗаключения=Пояснения;
			Если ВвестиСтроку(текстЗаключения,"Введите заключение",100)=1 Тогда
				Пояснения=текстЗаключения;
			КонецЕсли;
			ПользовательПодтв=Пользователь;
			ЗаписьЖурналаРегистрации("Подтверждена претензия","Документы","Претензия подтверждена",ТекущийДокумент(),2);
		КонецЕсли;
		
	ИначеЕсли ИдЭлем = "СутьПретензии" Тогда
		
//		Если ПустоеЗначение(СутьПретензии)=0 Тогда
//			РазрПодтв=глРазрешеноПодтверждатьСутьПретензии(Пользователь,АгентПоТовару,СутьПретензии);
//		КонецЕсли;
//		
//		Если (НазваниеНабораПрав()="Администратор") И (РазрПодтв=0) Тогда
//		ИначеЕсли РазрПодтв = 0 Тогда
//			Предупреждение("Вы не можете изменить первоначальную суть претензии. Вводите новую строку!");
//			СтатусВозврата(0);
//			Возврат;
//		КонецЕсли;
//
//		выб=ВыборСутиПретензии(выб);
//		Если ПустоеЗначение(выб)=1 Тогда
//			Возврат;
//		Иначе
//			УстановитьАтрибут(ИдЭлем,выб);
//		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

Процедура ПриВводеСтроки()
	Если семЕстьПраво("Документ","ПретензияПолученная","Подтверждение")=1 Тогда
		// можно разрешить копировать строки		
	Иначе
		Предупреждение("Используйте кнопку подбора для добавления товара!");
		СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры

Процедура РасчетСумм()
	СуммаПотерь =ЦенаПотерь * Количество;
	Сумма = Цена * Количество;
КонецПроцедуры

Процедура кнПомощь()
	Помощь = СоздатьОбъект("Общие.Помощь");
	Помощь.Открыть( "Документ.ПретензияПолученная" );
КонецПроцедуры

Процедура Печать()
	
	Если Проведен()=0 Тогда
		ЗаписьЖурналаРегистрации("Попытка печати не проведенной претензии - "+НомерДок,,"Печать не проведенного документа",,3);
		Предупреждение("Печать не проведенного документа запрещена. Все попытки будут зафиксированы. Контора пишет!");
		Возврат;
	КонецЕсли;

	таб=СоздатьОбъект( "Таблица" );
	пДатаПоставки = ДатаДок;
	пАгент = Агент;
	пНомерДок = НомерДок;
	пДатаДок = ДатаДок;
	пФирма = Фирма.ПолноеНаименование.Получить(ДатаДок);
	пСклад = Склад.Наименование;
	пАдрес = Склад.Адрес;
	пКомп = ИмяКомпьютера();
	пАвтор = Автор;
	Если семТекСтрана() = "LV" Тогда
		промКлиент = ?(КлиентФилиала.Выбран() = 0,Клиент,КлиентФилиала);
	Иначе
		промКлиент = Клиент;
	КонецЕсли;

	Если промКлиент.КлГруппа.Выбран()=1 Тогда
		промКлГруппа=промКлиент.КлГруппа;
	Иначе
		промКлГруппа=промКлиент;
	КонецЕсли;       
	
	пКлиентКод = промКлиент.Код;
	пКлиентНаим = промКлиент.ПолноеНаименование;
	Если промКлиент.АдресДоставки.Выбран() = 0 Тогда
		пКлиентАдрес =  СокрЛП( промКлиент.ПочтовыйАдрес ) +", "+СокрЛП( промКлиент.ГородДоставки )+", "+СокрЛП( промКлиент.ПочтовыйИндекс );
		пМаршрут = ?(промКлиент.Маршрут.Выбран() = 1, Шаблон( "[промКлиент.Маршрут.Код] ([промКлиент.Маршрут.ДниОбслуживания])" ), "" ) ;
	Иначе
		Адрес = промКлиент.АдресДоставки;
		пКлиентАдрес = Шаблон( "[Адрес.Наименование] [промКлиент.АдресДоставкиДоп]" ) ;
		//пМаршрут = Шаблон( "[Адрес.Маршрут.Описание] ([Адрес.Маршрут.ДниОбслуживания])" ) ;
		пМаршрут = ?(Адрес.Маршрут.Выбран() = 1,Шаблон( "[Адрес.Маршрут.Описание] ([Адрес.Маршрут.ДниОбслуживания])" ), "" );
		//пМаршрут = Адрес.Маршрут.Описание;
	КонецЕсли;
	
	таб.ВывестиСекцию( "Заголовок" );
	
	таб.ВывестиСекцию( "Шапка" );
	табл = СоздатьОбъект( "ТаблицаЗначений" );
	ВыгрузитьТабличнуюЧасть(табл);
	табл.НоваяКолонка("Группа");
	табл.НоваяКолонка("СклАдрес");
	табл.НоваяКолонка("Сорт");

	пОснование = Основание;
	
	пИтогРезерв = 0;
	пИтогКол 	= 0;
	спр = СоздатьОбъект( "Справочник.СкладскиеАдреса" );
	табл.ВыбратьСтроки();
	Пока табл.ПолучитьСтроку() = 1 Цикл
		промТовар = табл.Товар;
		Если спр.НайтиПоРеквизиту( "Товар", промТовар, 1 ) = 1 Тогда
			Ячейка = спр.ТекущийЭлемент();
			табл.Группа = АдресСтрокой( Ячейка, 1, 1, "" ) + Шаблон( " ([Ячейка.Родитель.Родитель.Родитель.МестоХранения.УсловияХранения])" );
			табл.СклАдрес = АдресСтрокой( Ячейка, 2, 4, "-" );
			табл.Сорт = 0;
		Иначе
			табл.Группа = "ййй";
			Если промТовар.МестоХранения.Выбран() = 1 Тогда
				табл.СклАдрес = промТовар.МестоХранения.УсловияХранения;
				табл.Сорт = промТовар.МестоХранения.Код;
			Иначе
				табл.СклАдрес = "не указан";
				табл.Сорт = 99;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	табл.Сортировать( "+Группа,+Сорт,+СклАдрес" );
	текГруппа = "";
	табл.ВыбратьСтроки();
	Пока табл.ПолучитьСтроку() = 1 Цикл
		Если текГруппа <> табл.Группа Тогда
			пГруппа = ?( табл.Группа = "ййй", "", табл.Группа );
			таб.ВывестиСекцию( "Группа" );
			текГруппа = табл.Группа;
		КонецЕсли;
		пНом = табл.НомерСтроки;
		пАдрес = табл.СклАдрес;
		пШтрихКод = табл.Товар.ШтрихКод;
		пКод = табл.Товар.Код;
		Если семТекСтрана() <> "LV" Тогда 
			пТовар = табл.Товар.ПолучитьАтрибут("Наименование"+семТекСтрана());
		Иначе 
			пТовар = Шаблон("[табл.Товар.Наименование] [табл.Товар.КодПоставщика] ");
		КонецЕсли;
		пЕд = глБазоваяЕдиницаИзмерения(табл.Товар);
		пКол = табл.Количество;
		пСрокРеал = табл.СрокРеализ;
		пПричина = табл.СутьПретензии;
		пИтогКол = пИтогКол + пКол;
		пУслХранения = табл.Товар.МестоХранения.УсловияХранения;
		таб.ВывестиСекцию( "Строка" );
	КонецЦикла;
	
	таб.ВывестиСекцию( "Подвал" );		
	Если ПустоеЗначение( пОснование ) = 0 Тогда 
		таб.ВывестиСекцию( "Пустая10" ); 
		таб.ВывестиСекцию( "Коммент" ); 
	КонецЕсли;
	таб.ТолькоПросмотр(1);
	таб.ПараметрыСтраницы(1,100,,,,,,,,1);
	таб.Опции(0,0,0,0);  
	таб.Показать("Neatbilst®bu - pretenzijas akts: "+ НомерДок,"");
	
	
КонецПроцедуры

пОтКлиента = Перечисление.ВидыПретензий.ОтКлиента;
пОтАгента = Перечисление.ВидыПретензий.ОтАгента;

Форма.Товар.ВыполнятьФормулуТолькоПриИзменении(1);