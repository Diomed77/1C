
Функция ГаситьРегистрОжПоставка()
	Рег=СоздатьОбъект("Регистр.ОжидаемаяПоставка");
	Рег.УстановитьЗначениеФильтра("ПоПоставке",ТекущийДокумент(),1);
	табл=СоздатьОбъект("ТаблицаЗначений");
	Рег.ВыгрузитьИтоги(табл,1,1);
//	табл.ВыбратьСтроку();
	табл.ВыбратьСтроки();
	Пока табл.ПолучитьСтроку() = 1 Цикл

		Регистр.ОжидаемаяПоставка.ПривязыватьСтроку(999);
		Регистр.ОжидаемаяПоставка.Товар=табл.Товар;
		Регистр.ОжидаемаяПоставка.Количество=табл.Количество;
		Регистр.ОжидаемаяПоставка.Цена=табл.Цена;
		Регистр.ОжидаемаяПоставка.Клиент=табл.Клиент; 
		Регистр.ОжидаемаяПоставка.Склад=табл.Склад;
		Регистр.ОжидаемаяПоставка.ДатаОтгрузки=табл.ДатаОтгрузки;
		Регистр.ОжидаемаяПоставка.ПоПоставке=ТекущийДокумент();
		Регистр.ОжидаемаяПоставка.ПоЗаказу=табл.ПоЗаказу;
		Регистр.ОжидаемаяПоставка.ДвижениеРасходВыполнить();
	КонецЦикла;	
КонецФункции


Процедура ОтправитьСообщениеПользПочта( пТема,пПользователь,пСообщ, пОбъект="" )
	//********* //Отправка файла по адресам
	пПольз=СоздатьОбъект("Справочник.Пользователи");
	
	л_Проверка=0;
	
	Попытка
		ЭлПочта = СокрЛП(пПользователь.Сотрудник.ЭлПочта);
		л_Проверка=1;
	Исключение
		ЭлПочта = "";
		л_Проверка=0;
	КонецПопытки;
	
	Если л_Проверка=0 Тогда
		Попытка
			ЭлПочта = СокрЛП(пПользователь.ЭлПочта);
		Исключение
			ЭлПочта = "";
		КонецПопытки;
	КонецЕсли;
	
	Если ПустоеЗначение(ЭлПочта)=1 Тогда
		ЭлПочта = "it.prog@reaton.lv";
	КонецЕсли;
	
	Параметры = СоздатьОбъект("СписокЗначений"); 
	СписокФайлов = СоздатьОбъект("СписокЗначений");
	//// СписокФайлов.ДобавитьЗначение(ИмяФайлаОтчета); 
	Параметры.ДобавитьЗначение(пТема,"ТЕМА"); 
	Параметры.ДобавитьЗначение(Шаблон("[пСообщ]"),"ТЕЛО"); 
	Параметры.ДобавитьЗначение("reportsIT@reaton.lv" ,"ОТКОГО"); 
	Параметры.ДобавитьЗначение(ЭлПочта,"КОМУ"); 
//	Параметры.ДобавитьЗначение(СписокФайлов ,"ФАЙЛ"); 
	Параметры.ДобавитьЗначение(0 ,"ISREAD"); 
	//затребовать подтверждение о прочтении 
	Параметры.ДобавитьЗначение(1 ,"ERR");
	//затребовать подтверждение о прочтении 
	Параметры.ДобавитьЗначение("192.168.0.3" ,"SMTPСЕРВЕР"); 
	//пояснения по параметрам smtp - читать в коде обработки 
	Параметры.ДобавитьЗначение(25 ,"SMTPПОРТ"); 
	//пояснения по параметрам smtp - читать в коде обработки 
	Параметры.ДобавитьЗначение(1,"НЕМЕДЛЕННАЯОТПРАВКА"); 
	ОткрытьФорму("Отчет",Параметры,КаталогИБ()+"ExtForms\ЕМАЙЛ_СиДиОу.ert");
КонецПроцедуры


Функция УстановитьСостояние(Сост,Док)
	спрСост=СоздатьОбъект("Справочник.СостоянияДокументов");
	спрСост.НайтиПоНаименованию(Док.Вид()); 
	спрСост.ИспользоватьРодителя(спрСост.ТекущийЭлемент());
	спрСост.НайтиПоНаименованию(Сост,1);
	Возврат спрСост.ТекущийЭлемент();
КонецФункции

Процедура стар_ОбработкаПроведения()
//Закомментировано Инсталлятором МОД:Процедура ОбработкаПроведения()
        // сем \\
	Если семМожноПровести( Контекст ) = 0 Тогда
		Возврат;
	КонецЕсли;
	семОбновитьКурс( контекст );
        // сем //
	
	СутьПретензии1 = СоздатьОбъект("Справочник.Претензии");
	СутьПретензии1.НайтиПоКоду("C01");
	СутьПретензии2 = СоздатьОбъект("Справочник.Претензии");
	СутьПретензии2.НайтиПоКоду("C02");
	
	//Проверка условий проведения Документов.
	Если (ГрупповаяОбработка() = 0) Тогда	
		Если ПустоеЗначение(ОснСрокПоставки)=1 Тогда
			НеПроводить(Контекст,"Укажите поставку из заказа !");
			Возврат;
		ИначеЕсли ПустоеЗначение(ДатаОтгрузки)=1 Тогда
			НеПроводить(Контекст,"Укажите дату отгрузки !");
			Возврат;
		ИначеЕсли ПустоеЗначение(Клиент)=1 Тогда
			НеПроводить(Контекст,"Укажите клиента !");
			Возврат;
		ИначеЕсли ПустоеЗначение(ДатаПрихода)=1 Тогда
			НеПроводить(Контекст,"Укажите дату прихода на склад !");
		ИначеЕсли ПустоеЗначение(ПодписьМенеджера)=1 Тогда
			НеПроводить(Контекст,"Поставьте подпись Закупщика !");
			Возврат;
		КонецЕсли;	
	КонецЕсли;
	
//***проверка на дату формирования документа***\\	
	
	Если (ГрупповаяОбработка() = 0) Тогда	
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ДокументОснованиеТабл.ДатаДок>ДатаДок Тогда
				НеПроводить(Контекст,"Дата заказа "+ДокументОснованиеТабл+" меньше даты ож. поставки !");
				Возврат;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
//***проверка на дату формирования документа***\\

//***проверка брони в пути
	Если (ГрупповаяОбработка() = 0) Тогда	
		Док = СоздатьОбъект("Документ");
		Док.ВыбратьПодчиненныеДокументы(ДатаДок,,ТекущийДокумент());
		Пока Док.ПолучитьДокумент() = 1 Цикл
			Если Док.Вид()="Счет" Тогда
				Если Док.ВидЗаявки=Перечисление.ВидыЗаявок.ЗаявкаБронь Тогда
					Если Док.фБроньвпути=1 Тогда
						Если Док.ДатаПоставки<ДатаПрихода Тогда
							ОтправитьСообщениеПользПочта("Эл. заявка - бронирование",Док.Агент,"Документ бронь в пути будет аннулирован "+док.НомерДок+" , дата поставки меньше даты поставки в ож.поставке "+ТекущийДокумент().НомерДок,);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
//***проверка брони в пути

	Клиент.ИспользоватьДату(ДатаДок);
	// Запишем главного клиента
	Если Клиент.КлГруппа.Выбран()=1 Тогда
		КлГруппа=Клиент.КлГруппа;
	Иначе
		КлГруппа=Клиент;
	КонецЕсли;

	ВыбратьСтроки();
	Пока( ПолучитьСтроку()=1) Цикл
		
		Если Товар.Выбран()=0 Тогда
			НеПроводить(Контекст,"В документе "+Вид()+" № "+НомерДок
			+" от "+ДатаДок+"Не указан товар, который выписывается!");
		КонецЕсли;
		
		Если Количество=0 Тогда
			НеПроводить(Контекст,"В строке "+НомерСтроки+" не задано количество!");
		КонецЕсли;
		
//		Рег=Регистр.ТоварыВПути;
		Регистр.ТоварыВПути.Док=ТекущийДокумент();
		Регистр.ТоварыВПути.Товар=Товар;
		Регистр.ТоварыВПути.СрокПоставки=ДатаПрихода;
		Регистр.ТоварыВПути.ПоЗаказу=ДокументОснованиеТабл; 
		Регистр.ТоварыВПути.ПривязыватьСтроку(НомерСтроки);
	//	РегТП.Количество=Количество;
		Регистр.ТоварыВПути.Количество=Подтверждено;
		Регистр.ТоварыВПути.ДвижениеПриходВыполнить();
		
//		РегОП=Регистр.ОжидаемаяПоставка;
		Регистр.ОжидаемаяПоставка.ПривязыватьСтроку(НомерСтроки);
		Регистр.ОжидаемаяПоставка.Товар=Товар;
//		Регистр.ОжидаемаяПоставка.Количество=Количество;
		Регистр.ОжидаемаяПоставка.Количество=Подтверждено;
		Регистр.ОжидаемаяПоставка.Цена=ЦенаПодтв;
		Регистр.ОжидаемаяПоставка.Клиент=Клиент; 
		Регистр.ОжидаемаяПоставка.Склад=Склад;
		Регистр.ОжидаемаяПоставка.ДатаОтгрузки=ДатаОтгрузки;
		Регистр.ОжидаемаяПоставка.ПоПоставке=ТекущийДокумент();
		Регистр.ОжидаемаяПоставка.ПоЗаказу=ДокументОснованиеТабл;
		Регистр.ОжидаемаяПоставка.ДвижениеРасходВыполнить();

			
		//регистрируем только до 01.08.16 - потом в приходном документе только
		Если ДатаДок<'01.08.2016' Тогда
			ЦенаРазн = ЦенаПодтв-Цена;
			РазницаКол = Количество-Подтверждено;
			Если  РазницаКол>0 Тогда
				
				Регистр.ПретензииПолученные.ПривязыватьСтроку(НомерСтроки);
				Регистр.ПретензииПолученные.Фирма = Фирма;
				Регистр.ПретензииПолученные.Товар = Товар;
				Регистр.ПретензииПолученные.СутьПретензии = СутьПретензии1.ТекущийЭлемент();
				Регистр.ПретензииПолученные.СутьПретензииПодтв = СутьПретензии1.ТекущийЭлемент();
				Регистр.ПретензииПолученные.Агент = товар.Закупщик;
				Регистр.ПретензииПолученные.Клиент = Клиент;
				Регистр.ПретензииПолученные.КлиентФилиала = "";
				Регистр.ПретензииПолученные.Поставщик = Клиент;
				Регистр.ПретензииПолученные.ПоСчету = "";
				Регистр.ПретензииПолученные.ПоДокументу = ТекущийДокумент();
				Регистр.ПретензииПолученные.Количество = РазницаКол;
				
				Регистр.ПретензииПолученные.Сумма = ?(Подтверждено=0,ЦенаПодтв,СуммаПодтв/Подтверждено)*РазницаКол;
				
				Регистр.ПретензииПолученные.ПретензияПолучена = 1;
				Регистр.ПретензииПолученные.СуммаПотерь = "";
				Регистр.ПретензииПолученные.ДвижениеВыполнить();
			КонецЕсли;		
	
			Если (ЦенаРазн<>0) И (Подтверждено>0) Тогда
				Регистр.ПретензииПолученные.ПривязыватьСтроку(НомерСтроки);
				Регистр.ПретензииПолученные.Фирма = Фирма;
				Регистр.ПретензииПолученные.Товар = Товар;
				Регистр.ПретензииПолученные.СутьПретензии = СутьПретензии2.ТекущийЭлемент();
				Регистр.ПретензииПолученные.СутьПретензииПодтв = СутьПретензии2.ТекущийЭлемент();
				Регистр.ПретензииПолученные.Агент = товар.Закупщик;
				Регистр.ПретензииПолученные.Клиент = Клиент;
				Регистр.ПретензииПолученные.КлиентФилиала = "";
				Регистр.ПретензииПолученные.Поставщик = Клиент;
				Регистр.ПретензииПолученные.ПоСчету = "";
				Регистр.ПретензииПолученные.ПоДокументу = ТекущийДокумент();
				Регистр.ПретензииПолученные.Количество = Подтверждено;
				
				Регистр.ПретензииПолученные.Сумма = ЦенаРазн*Подтверждено;
				
				Регистр.ПретензииПолученные.ПретензияПолучена = 1;
				Регистр.ПретензииПолученные.СуммаПотерь = "";
				Регистр.ПретензииПолученные.ДвижениеВыполнить();
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;

	ГаситьРегистрОжПоставка();	
	//Изменение состояния документа
	
//	РегСД=Регистр.СостояниеДокумента;
	Регистр.СостояниеДокумента.Док=ТекущийДокумент();
	Регистр.СостояниеДокумента.Пользователь=Автор;
	Регистр.СостояниеДокумента.Количество=1;
	Если (ПустоеЗначение(ПодписьЛогиста)=0)ИЛИ (фДоставкаКлиента=1)  Тогда
		Регистр.СостояниеДокумента.СостояниеДок=УстановитьСостояние("ОтЛогиста",ТекущийДокумент());
	Иначе
		Регистр.СостояниеДокумента.СостояниеДок=УстановитьСостояние("ОтЗакупщика",ТекущийДокумент());
	КонецЕсли;
	Регистр.СостояниеДокумента.ДвижениеПриходВыполнить();
	
	Если ГрупповаяОбработка()=0 Тогда
		спПроведениеДок = СоздатьОбъект("СписокЗначений");
		спПроведениеДок.ДобавитьЗначение(ТекущийДокумент(),"ОжидаемаяПоставка");
		ОбработкаОжидания("глПроведениеПоВремени",5);
	КонецЕсли;
	
КонецПроцедуры
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаПроведения()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	Если ПроведениеМОД(Контекст)=1 Тогда
	    Возврат;
	КонецЕсли;
	стар_ОбработкаПроведения();
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД
////Начало текста, вставленного Инсталлятором МОД
//Процедура ОбработкаУдаленияПроведения()
//	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
//	//без сохранения текущего кода !!!
//	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
//	Если ПроведениеПоАлгоритмуМОД=1 Тогда
//	    Возврат;
//	КонецЕсли;
//	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
//КонецПроцедуры
////Конец текста, вставленного Инсталлятором МОД

