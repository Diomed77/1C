Перем спКодов;
Перем табл;

Процедура ОчиститьФото(ТекКартинка)
	Перем Пусто;
	
	Пусто = СоздатьОбъект("Картинка");
	ТекКартинка.УстановитьКартинку(Пусто);
КонецПроцедуры

Функция ПечатьКартинки1(ТекКартинка) 

   ОчиститьФото(ТекКартинка);
	
	Если ПустоеЗначение(Константа.ПутьККаталогуФотоТоваров)=1 Тогда
		КаталогФотографий=КаталогИБ()+"Photo\";
	Иначе
		КаталогФотографий=СокрЛП(Константа.ПутьККаталогуФотоТоваров);
	КонецЕсли;
	ФС.УстТекКаталог(КаталогФотографий);
	ФайлФото=""+СокрЛП(табл.Товар.КодТовара)+".jpg";
	Если (ФС.СуществуетФайл(ФайлФото) = 1) Тогда
		ТекКартинка.Загрузить(КаталогФотографий+ФС.НайтиПервыйФайл(ФайлФото));
		ТекКартинка.РежимРисования(3);
	Иначе
		ОчиститьФото(ТекКартинка);
	КонецЕсли; 

	
//		ТекКартинка.РежимРисования(3); 
//		НазваниеКартинки=СокрЛП(Константа.КаталогКартинок)+СокрЛП(Артикул)+"_1"+".jpg";
//		Если ФС.СуществуетФайл(СокрЛП(НазваниеКартинки))=1 Тогда
//			текКартинка.Загрузить(СокрЛП(НазваниеКартинки));
//			ТекКартинка.РежимРисования(3);
//		КонецЕсли;

Возврат "" 
КонецФункции

Функция Перекодировка(стр,спПерекод)
	рез = "";
	Для н = 1 по СтрДлина(стр) Цикл
		ТекСим = Сред(стр,н,1);
		Код = спПерекод.Получить(КодСимв(ТекСим));
		Если ПустоеЗначение(Код) = 1 Тогда
			рез = рез + ТекСим;
		Иначе
			рез = рез + Симв(Число(Код));
		КонецЕсли;
	КонецЦикла;
	Возврат рез;
КонецФункции

Функция ПолучитьПереводУсловийХранения( пУсловиеХранения )

	Если глКодСтраныПользователя="LV" Тогда
		Возврат пУсловиеХранения;
	Иначе
		Если (СокрЛП(пУсловиеХранения) = "parasti") ИЛИ (СокрЛП(пУсловиеХранения) = "istabas temperatЅrў") ИЛИ ((СокрЛП(пУсловиеХранения) = "sausў, v§sў vietў")) Тогда
			Возврат "+1 +25C";
		Иначе
			Возврат пУсловиеХранения;
		КонецЕсли;
	КонецЕсли;

КонецФункции


Функция ПолучитьНаименование(пТовар,пЯзык="")
	Если пЯзык="RU" Тогда
		Возврат СокрЛП(пТовар.НаименованиеРусс);		
	ИначеЕсли пЯзык="EN" Тогда
		Возврат СокрЛП(пТовар.НаименованиеАнгл);
	ИначеЕсли Клиент.Страна.Код = "LT" Тогда
		Возврат СокрЛП(пТовар.НаименованиеLT);
	ИначеЕсли Клиент.Страна.Код = "EE" Тогда
		Возврат СокрЛП(пТовар.НаименованиеEE);
	Иначе
		Возврат СокрЛП(пТовар.Наименование);
	КонецЕсли;
КонецФункции

Функция ПолучитьЕдиницу(пЕдиница)
	спр = СоздатьОбъект( "Справочник.ЕдиницыПеревод" );
	Если спр.НайтиПоРеквизиту( "Единица", пЕдиница, 1 ) = 1 Тогда
		Если Клиент.Страна.Код = "LT" Тогда
			Возврат спр.ПолучитьАтрибут( "Лит" );
		ИначеЕсли Клиент.Страна.Код = "EE" Тогда
			Возврат спр.ПолучитьАтрибут( "Эст" );
		Иначе
			Возврат Строка(пЕдиница);
		КонецЕсли;
	Иначе
		Возврат "";
	КонецЕсли;
КонецФункции

Процедура РассчитатьСтроку( парам = "" )
	Если парам = "" Тогда
		парам = Форма.ТекущаяКолонка();
	КонецЕсли;
	             
	КоэффКГ = глВернутьКоэффКГТовара(Товар,Перечисление.ЕдиницыИзмерения.Килограмм);
	
	Если ЦенаБазоваяKG=0 Тогда                      
		
		ЦенаБазоваяKG=Окр(Пересчет(ЦенаБазовая*КоэффКГ,Валюта,ДатаДок,Евро,ДатаДок),2);
	КонецЕсли;
	
	Если парам="Скидка" Тогда
		Цена=Окр(ЦенаБазовая*(100-Скидка)/100,2);
		ЦенаKG = Окр(ЦенаБазоваяKG*(100-Скидка)/100,2);
	ИначеЕсли парам = "Цена" Тогда
		Если ЦенаБазовая=0 Тогда
			Скидка = 0;
		Иначе
			Скидка = (1-Цена/ЦенаБазовая)*100;
		КонецЕсли;
		
		ЦенаKG = Окр(ЦенаБазоваяKG*(100-Скидка)/100,2);
		
	ИначеЕсли парам = "ЦенаKG" Тогда
		Если ЦенаБазовая=0 Тогда
			Скидка = 0;
		Иначе
			Скидка = (1-ЦенаKG/ЦенаБазоваяKG)*100;
		КонецЕсли;
		
		Цена=Окр(ЦенаБазовая*(100-Скидка)/100,2);
	КонецЕсли;
	
	//Переоценка=(Цена-ПредЦена)*Количество*Коэффициент;
КонецПроцедуры

Процедура ВывестиЗаголовок()
	Если СостояниеДокумента=Перечисление.ВидыСчетовФактур.Подтвержденная Тогда
		Форма.лЗаголовок.Заголовок("Предложение клиенту Nr. ");
	Иначе
		Форма.лЗаголовок.Заголовок("Предложение клиенту Nr. (Неподтв.)");
	КонецЕсли;
КонецПроцедуры

Процедура ПриВыбореТовара()
	УстановкаЕдиницыИзмерения(Контекст);                                                                                    
	ЦенаБазовая=Окр(ЦенаТовараПоКатегорииДляТовара(Товар,КатегорияЦены,Валюта,КурсДляВалюты(Валюта,ДатаДок),ДатаДок),Константа.КоэффОкрРублЦены,1); 
	ЦенаБазоваяKG=Окр(Окр(ЦенаТовараПоКатегорииДляТовара(Товар,КатегорияЦены,Евро,КурсДляВалюты(Евро,ДатаДок),ДатаДок,Перечисление.ЕдиницыИзмерения.Килограмм),2),Константа.КоэффОкрРублЦены,1); 
	
	ЦенаСкидка  = ЦенаБазовая;
	ВидСкидки 	= ЦенаСоСкидкой(Контекст,ЦенаСкидка,0,1); //получаем цены без скидки
	Цена      	= Окр(ЦенаСкидка,2,1);
	СкидкаТек	= (1-Цена/ЦенаБазовая)*100;
	РассчитатьСтроку("Цена");
КонецПроцедуры

Процедура кнЗаполнить()
	Путь = КаталогИБ() + "ExtForms\ПредложениеКлиентуЗаполнить.ert";
	спПарам = СоздатьОбъект( "СписокЗначений" );
	//спПарам.Установить( "Отдел", Отдел );
	спПарам.Установить( "КатегорияЦены", КатегорияЦены );
	спПарам.Установить( "ДатаДок", ДатаДок );
	спПарам.Установить( "Валюта", Валюта );
	спПарам.Установить( "Клиент", Клиент );
	ОткрытьФормуМодально( "Обработка", спПарам, Путь );
	ЗагрузитьТабличнуюЧасть(спПарам.Получить("Таблица"));
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		
		Состояние(Шаблон("[НомерСтроки]/[КоличествоСтрок()]"));
		ЦенаБазовая=Окр(ЦенаТовараПоКатегорииДляТовара(Товар,КатегорияЦены,Валюта,КурсДляВалюты(Валюта,ДатаДок),ДатаДок),Константа.КоэффОкрРублЦены,1); 
		ЦенаБазоваяKG=Окр(Окр(ЦенаТовараПоКатегорииДляТовара(Товар,КатегорияЦены,Евро,КурсДляВалюты(Евро,ДатаДок),ДатаДок,Перечисление.ЕдиницыИзмерения.Килограмм),2),Константа.КоэффОкрРублЦены,1); 
		
		ЦенаСкидка  		= ЦенаБазовая;
		ВидСкидки 		= ЦенаСоСкидкой(Контекст,ЦенаСкидка,0,1); //получаем цены без скидки
		Цена      		= Окр(ЦенаСкидка,2);
		Если ЦенаБазовая=0 Тогда
		Иначе
			СкидкаТек		= (1-Цена/ЦенаБазовая)*100;
			Скидка			= (1-Цена/ЦенаБазовая)*100;
		КонецЕсли;
		ЦенаKG 		= Окр(ЦенаБазоваяKG*(100-Скидка)/100,2);
		
	КонецЦикла;
	
КонецПроцедуры


//-----------------------------------------------
Процедура ВводНового(ФлКопирования);
	ЗаполнитьШапку(Контекст);
	
	Если ФлКопирования=0 Тогда
		Валюта=Константа.БазоваяВалюта;
	КонецЕсли;
	
	СостояниеДокумента = Перечисление.ВидыСчетовФактур.Неподтвержденная;
	КатегорияЦены = Константа.ОсновнаяКатегорияЦены;
КонецПроцедуры



Процедура ВводНаОсновании(ДокОснование,Переоформление=0)
	
	ЗаполнитьШапкуНаОсн(Контекст,ДокОснование);
	
	Валюта=ДокОснование.Валюта;
	Клиент = ДокОснование.Клиент;
	КатегорияЦены = Константа.ОсновнаяКатегорияЦены;
	СостояниеДокумента	= Перечисление.ВидыСчетовФактур.Подтвержденная;
	
	ВывестиЗаголовок();   
	                 
	ДокументОснование=ДокОснование;
	ТТ="";
	
	ДокОснование.ВыбратьСтроки();
	Пока ДокОснование.ПолучитьСтроку()=1 Цикл
		НоваяСтрока();
		Товар 	= ДокОснование.Товар;
		ТовКод 	= Товар.Код;
		ПриВыбореТовара();
		Цена = ДокОснование.Цена;
		РассчитатьСтроку("Цена");
	КонецЦикла;
	
КонецПроцедуры

Процедура кнПодбор()
	пКлиент = Клиент.ТекущийЭлемент();
	ОткрытьПодбор("Справочник.Номенклатура","ДляПодбора",пКлиент);
	Попытка
		УстановитьЗначениеВПодборе("выбВалюта",Валюта);
	Исключение
	КонецПопытки;
	Режим="Каталог";
КонецПроцедуры

Процедура ОбработкаПодбора(Выб)
	НоваяСтрока();
	Товар=Выб;
	ТовКод=Товар.Код;
	ПриВыбореТовара();
КонецПроцедуры

Процедура ПриОткрытии()
	ПриЗаписиПерепроводить(1);
	
	Если глКодСтраныПользователя="LV" Тогда
		Форма.лНаименованиеТовара.Видимость(0);
		Форма.Товар.Видимость(1);
	Иначе 
		Форма.лНаименованиеТовара.Видимость(1);
		Форма.Товар.Видимость(0);  
	КонецЕсли;           
	
	Форма.ЦенаБазоваяKG.Видимость(Константа.ВыводитьЦеныВKG);
	Форма.ЦенаKG.Видимость(Константа.ВыводитьЦеныВKG);
	
	
КонецПроцедуры
//********************************
//********************************
Процедура кнПечать()    
	
	печKG=Константа.ВыводитьЦеныВKG;
	
	таб = СоздатьОбъект( "Таблица" );
	Если Клиент.Страна.Код = "LT" Тогда
		таб.ИсходнаяТаблица(?(	печKG=1, "ТаблицаLT_2018","ТаблицаLT_2013" ));
		пПериод = "";
		Если Число(ПериодС) > 0  Тогда пПериод = пПериод +"Speka no "+ПериодС+" "; КонецЕсли;
		Если Число(ПериодПо) > 0  Тогда пПериод = пПериод +"Galioja iki "+ПериодПо; КонецЕсли;
	ИначеЕсли Клиент.Страна.Код = "EE" Тогда
		таб.ИсходнаяТаблица(?(	печKG=1, "ТаблицаEE_2018","ТаблицаEE_2013" ));
		пПериод = "";
		Если Число(ПериодС) > 0  Тогда пПериод = пПериод +"Kehtib alates "+ПериодС; КонецЕсли;
		Если Число(ПериодПо) > 0  Тогда пПериод = пПериод +", kuni "+ПериодПо; КонецЕсли;
	Иначе
		таб.ИсходнаяТаблица(?(	печKG=1, "ТаблицаLV_2018","ТаблицаLV_2013" ));
		пПериод = "Sp§kў";
		Если Число(ПериодС) > 0  Тогда пПериод = пПериод +" no "+ПериодС; КонецЕсли;
		Если Число(ПериодПо) > 0  Тогда пПериод = пПериод +" l®dz "+ПериодПо; КонецЕсли;
	КонецЕсли;

	Если глКодСтраныПользователя="LV" Тогда
		Если (ПустоеЗначение(Евро)=0) И (Валюта<>Евро) Тогда
//			печЕвро=1;
		КонецЕсли;
	КонецЕсли;

	
	Меню = СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение(1,глКодСтраныПользователя);
	Меню.ДобавитьЗначение(2,"EN");
	Меню.ДобавитьЗначение(3,"RU");
	чЯзык = 1;
	Если Меню.ВыбратьЗначение(чЯзык,,,,1)=0 Тогда
		Возврат;
	КонецЕсли;
	
	пЯзык="";
	Если чЯзык=2 Тогда
		пПериод = "offer valid";
		пЯзык="EN";
		Если Число(ПериодС) > 0  Тогда пПериод = пПериод +" from "+ПериодС; КонецЕсли;
		Если Число(ПериодПо) > 0  Тогда пПериод = пПериод +" till "+ПериодПо; КонецЕсли;
		таб.ИсходнаяТаблица( "ТаблицаEN_2013" );
	ИначеЕсли чЯзык=3 Тогда
		пПериод = "предложение в силе";
		пЯзык="RU";
		Если Число(ПериодС) > 0  Тогда пПериод = пПериод +" с "+ПериодС; КонецЕсли;
		Если Число(ПериодПо) > 0  Тогда пПериод = пПериод +" по "+ПериодПо; КонецЕсли;
		таб.ИсходнаяТаблица( "ТаблицаRU_2013" );
	КонецЕсли;
	
	
	
	
	пКлиент = ?(Клиент.Выбран() = 1,Клиент.ПолноеНаименование,"");
	таб.ПовторятьПриПечатиСтроки(1,1);
	таб.ВывестиСекцию( "Шапка|Основная" );		
	Если печKG=1 Тогда
		таб.ПрисоединитьСекцию("Шапка|KG" );
	КонецЕсли;
	таб.Опции( 0, 0, таб.ВысотаТаблицы(), 0 );
	
	табл="";
	ВыгрузитьТабличнуюЧасть(табл);
	табл.НоваяКолонка("ТоварНаим","Строка",,,"Товар",30,,);
	табл.НоваяКолонка("Штрихкод","Строка",,,"Товар",15,,);
	табл.НоваяКолонка("УслХранения","Строка",,,"Усл.хр.",10,,);
	табл.НоваяКолонка("ЕдИзм","Строка",,,"Ед",5,,);

	таб.ВывестиСекцию( "ШапкаТабл|Основная" );
	Если печKG=1 Тогда
		таб.ПрисоединитьСекцию("ШапкаТабл|KG" );
	КонецЕсли;
	Если чПечШтрихкод=1 Тогда
		таб.ПрисоединитьСекцию("ШапкаТабл|Штрихкод" );
	КонецЕсли;
	
	
	табл.ВыбратьСтроки();
	Пока табл.ПолучитьСтроку() = 1 Цикл
		табл.УслХранения    = ПолучитьПереводУсловийХранения(табл.Товар.УсловияХранения); 
		
		табл.ТоварНаим 		= ПолучитьНаименование( табл.Товар,пЯзык );
		табл.Штрихкод 		= табл.Товар.Штрихкод;
//		табл.ЕдИзм = глПолучитьПереводЕдИзм( табл.Товар.БазоваяЕдиницаИзмерения, пЯзык);

		ПечЕдиница 			= Перекодировка(табл.Единица,спКодов);
		
		ПечТовар 			= Перекодировка(табл.ТоварНаим,спКодов);
		Если (чВсеЯзыки=1) И (глКодСтраныПользователя="LV") Тогда
			ПечТовар=ПечТовар+РазделительСтрок;
			ПечТовар=ПечТовар+НазваниеТовара( табл.Товар,"LT");
			ПечТовар=ПечТовар+РазделительСтрок;
			ПечТовар=ПечТовар+НазваниеТовара( табл.Товар,"EE");

			ПечЕдиница=ПечЕдиница+РазделительСтрок;
			ПечЕдиница=ПечЕдиница+глПолучитьПереводЕдИзм(табл.Единица.Единица,"LT");
			ПечЕдиница=ПечЕдиница+РазделительСтрок;
			ПечЕдиница=ПечЕдиница+глПолучитьПереводЕдИзм(табл.Единица.Единица,"EE");

		КонецЕсли;
		ПечКоммент 			= "";
		Если ПустоеЗначение(табл.Комментарий)=0 Тогда
			
			Если ч_картинка=1 Тогда
				ПечКоммент 	= Перекодировка(табл.Комментарий,спКодов);
			Иначе
				ПечТовар	= ПечТовар+РазделительСтрок+Перекодировка(табл.Комментарий,спКодов);
			КонецЕсли;
						
		КонецЕсли;

		таб.ВывестиСекцию( "СтрокаТабл|Основная" );
		Если печKG=1 Тогда
			таб.ПрисоединитьСекцию("СтрокаТабл|KG" );
		КонецЕсли;
		Если чПечШтрихкод=1 Тогда
			таб.ПрисоединитьСекцию("СтрокаТабл|Штрихкод" );
		КонецЕсли;
		Если ч_картинка=1 Тогда
			таб.ВывестиСекцию("Картинка|Основная");
		КонецЕсли;
	
	КонецЦикла;
	таб.ВывестиСекцию( "ПодвалТабл|Основная" );		
	Если печKG=1 Тогда
		таб.ПрисоединитьСекцию("ПодвалТабл|KG" );
	КонецЕсли;

	Если чПечШтрихкод=1 Тогда
		таб.ПрисоединитьСекцию("ПодвалТабл|Штрихкод" );
	КонецЕсли;

	
	таб.ВывестиСекцию( "Подвал|Основная" );
	Если печKG=1 Тогда
		таб.ПрисоединитьСекцию("Подвал|KG" );
	КонецЕсли;
	Если чПечШтрихкод=1 Тогда
		таб.ПрисоединитьСекцию("Подвал|Штрихкод" );
	КонецЕсли;

	
	таб.ПараметрыСтраницы(1,100,,,,,,,,1);
	таб.ТолькоПросмотр( 1 );
	таб.Показать( "" ); 
КонецПроцедуры
//********************************

Процедура ЗаполнитьПроцент( парам )
	//Если семЕстьПраво("Документ","РасходнаяНакладнаяНал","Скидка") = 0 Тогда
	//	Сообщить("У Вас нет прав изменять скидку.","I");
	//	Возврат;
	//КонецЕсли;
	ВыбратьСтроки(); Всего = КоличествоСтрок();
	Пока ПолучитьСтроку() = 1 Цикл Состояние( Шаблон("Заполнение процента скидки... Заполнено [Окр(НомерСтроки/Всего*100)]%."));
		Если парам = "+" Тогда
			Скидка = Скидка + УстСкидка;
		ИначеЕсли парам = "-" Тогда
			Скидка = Скидка - УстСкидка;
		ИначеЕсли парам = "=" Тогда
			Скидка = УстСкидка;
		КонецЕсли;
		РассчитатьСтроку("Скидка");
	КонецЦикла;
КонецПроцедуры

//-----------------------------------------------
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи() Далее
//Конец текста, вставленного Инсталлятором МОД
Процедура стар_ПриЗаписи()
//Закомментировано Инсталлятором МОД:Процедура ПриЗаписи()
	Если семМожноЗаписать( Контекст ) = 0 Тогда Возврат; КонецЕсли;

	Если (ПустоеЗначение(ПериодС)=1) Тогда
		Предупреждение("Не указана дата начала действия предложения!");
		СтатусВозврата(0);
	КонецЕсли;

	Если (ПустоеЗначение(ПериодПо)=1) Тогда
		Предупреждение("Не указана дата окончания действия предложения!");
		СтатусВозврата(0);
	КонецЕсли;
	
	Если ПериодПо<ПериодС Тогда
		Предупреждение("Проверьте даты периода действия предложения!");
		СтатусВозврата(0);
	КонецЕсли;	
	
КонецПроцедуры

//-----------------------------------------------
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
//	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	стар_ПриЗаписи();
КонецПроцедуры  


спКодов = СоздатьОбъект( "СписокЗначений" );
спКодов.Установить("161",194);
спКодов.Установить("162",226);
спКодов.Установить("163",200);
спКодов.Установить("165",232);
спКодов.Установить("166",199);
спКодов.Установить("167",231);
спКодов.Установить("168",204);
спКодов.Установить("170",236);
спКодов.Установить("172",206);
спКодов.Установить("174",238);
спКодов.Установить("175",205);
спКодов.Установить("176",237);
спКодов.Установить("177",207);
спКодов.Установить("178",239);
спКодов.Установить("179",210);
спКодов.Установить("180",242);
спКодов.Установить("185",208);
спКодов.Установить("186",240);
спКодов.Установить("188",219);
спКодов.Установить("189",251);
спКодов.Установить("190",222);
спКодов.Установить("191",254);
