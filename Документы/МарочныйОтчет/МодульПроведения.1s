Перем ТабБлюда;
Перем РегОстаткиТоваров;  
Перем РегПарт;
Перем РегВзаиморасчетыПок;  
Перем КалькКарт;
Перем НетКарты;
Перем ПромЗамена;                   
Перем Парт;
Перем НачальноеБлюдо, Найден;
Перем НСтрПром;
Перем ТабВзПок;
Перем КолВлож;
Перем СписаниеЗамены;
Перем итТаблОстатки, итТаблПартии;
Перем сзКлючТовар, сзКлюч;
Перем ЗапросОстатки, ЗапросПартии;

Процедура НеХватаетНаСкладе( пТовар, пБлюдо, пУровень, пСклад, пКолво, пОстаток, пВидСписания )
	Флаг = ?(глРазрОтрицОстатки = Да,"I","!");
	Ед = пТовар.БазоваяЕдиницаИзмерения;
	Отступ = Лев(". . . . . . . . . . . . . . . . ",пУровень*2);
	Если пБлюдо.ВидТовара = Перечисление.ВидыТоваров.Блюдо Тогда
		Сообщить( Шаблон("[НомерСтроки] [Отступ] На складе нет нужного количества товара [пТовар.Код] [пТовар]. Необходимо [пКолво] [Ед]. Осталось [пОстаток] [Ед]. Для блюда [пБлюдо.Код] [пБлюдо]. ([пВидСписания])"), Флаг );
	Иначе
		Сообщить( Шаблон("[НомерСтроки] [Отступ] На складе нет нужного количества товара [пТовар.Код] [пТовар]. Необходимо [пКолво] [Ед]. Осталось [пОстаток] [Ед]. ([пВидСписания])"), Флаг );
	КонецЕсли;
	Если глНуженСписокТоваров=1 Тогда
		глСписокТоваров.НоваяСтрока();
		глСписокТоваров.Склад=пСклад;
		глСписокТоваров.Товар=пТовар;
		глСписокТоваров.Блюдо=пБлюдо;
		глСписокТоваров.Количество=пКолво;
		глСписокТоваров.Остаток=пОстаток;
	КонецЕсли;
КонецПроцедуры

//----------------------------------------------- 
Процедура ЗаписатьСебестоимостьСтар()
	ТЗ=СоздатьОбъект("ТаблицаЗначений");
	ТЗ.НоваяКолонка("Фирма",,,,,,,); 
	ТЗ.НоваяКолонка("Товар",,,,,,,); 
	ТЗ.НоваяКолонка("Стоимость",,,,,,,);
	ТЗ.НоваяКолонка("НДС",,,,,,,);
	ТЗ.НоваяКолонка("КодОперации",,,,,,,); 
	ПредНомерСтроки=0;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Себестоимость=0;    
	КонецЦикла;
	РегПарт.ВыбратьДвиженияДокумента(ТекущийДокумент());
	Пока РегПарт.ПолучитьДвижение()=1 Цикл
		НомСтр = РегПарт.НомерСтроки(); 
		Если ( РегПарт.КодОперации <> ПродажаБлюда ) 
		и ( РегПарт.КодОперации <> ПродажаТовара ) 
		и ( РегПарт.КодОперации <> ПродажаПринятогоТовара )
		Тогда
			Продолжить;
		КонецЕсли;
		Если (( РегПарт.КодОперации = ПродажаПринятогоТовара ) и ( РегПарт.ФлагУчета = 33 )) Тогда
			Продолжить;
		КонецЕсли;
		
//		Если (РегПарт.КодОперации=СписаниеНаПроизводcтвоБлюда) или (РегПарт.КодОперации=ПроизводствоБлюда) Тогда
//			Продолжить;
//		КонецЕсли;
		Если ТипУчета>Упр Тогда
			Если ПустоеЗначение(РегПарт.Фирма)=1 Тогда
				Продолжить;
			КонецЕсли;	  
		ИначеЕсли	ТипУчета=Упр Тогда
			Если ПустоеЗначение(РегПарт.Фирма)=0 Тогда
				Продолжить; 
			КонецЕсли;	
		КонецЕсли;
		
		ПолучитьСтрокуПоНомеру(НомСтр);
		Себестоимость=Себестоимость+РегПарт.Стоимость;//+ТЗ.Итог("НДС");

		Продолжить;
		
		Если Не(НомСтр = ПредНомерСтроки) Тогда
			Если НЕ(ПредНомерСтроки=0) Тогда 
				ПолучитьСтрокуПоНомеру(ПредНомерСтроки);
				Себестоимость=ТЗ.Итог("Стоимость");//+ТЗ.Итог("НДС");
				ТЗ.УдалитьСтроки();
			КонецЕсли;	
			ПредНомерСтроки = НомСтр; 
		КонецЕсли;
		ТЗ.НоваяСтрока();  
		ТЗ.Фирма=РегПарт.Фирма; 
		ТЗ.Товар=РегПарт.Товар; 
		ТЗ.Стоимость=РегПарт.Стоимость;
		ТЗ.НДС=РегПарт.НДС;
		ТЗ.КодОперации=РегПарт.КодОперации;  
	КонецЦикла; 
//	Если НЕ(ПредНомерСтроки=0) Тогда   
//		ПолучитьСтрокуПоНомеру(ПредНомерСтроки);
//		Себестоимость=ТЗ.Итог("Стоимость");//+ТЗ.Итог("НДС");
//		ТЗ.УдалитьСтроки();
//	КонецЕсли;	
КонецПроцедуры

Процедура ЗаписатьСебестоимость()
	ТЗ=СоздатьОбъект("ТаблицаЗначений");
	ТЗ.НоваяКолонка("Фирма",,,,,,,); 
	ТЗ.НоваяКолонка("Товар",,,,,,,); 
	ТЗ.НоваяКолонка("Стоимость",,,,,,,);
	ТЗ.НоваяКолонка("НДС",,,,,,,);
	ТЗ.НоваяКолонка("КодОперации",,,,,,,); 
	ПредНомерСтроки=0;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Себестоимость=0;
		Себестоимость2=0;    
	КонецЦикла;
	
	Запрос=СоздатьОбъект("ODBCRecordSet");
	ТекстЗапроса="SELECT Sum($ПартииТоваров.Стоимость) Стоимость
	|					, Sum($ПартииТоваров.ПродСтоимость) ПродСтоимость
	|					 , LINENO_ НомерСтрокиДокумента
	|			  FROM $Регистр.ПартииТоваров AS ПартииТоваров
	|			  WHERE ($ПартииТоваров.КодОперации IN (:ПродажаБлюда,:ПродажаТовара)
	|					OR ($ПартииТоваров.КодОперации =:ПродажаПринятогоТовара AND $ПартииТоваров.ФлагУчета <> 33))
	|					AND (IDDOC = :ВыбДок AND DEBKRED = 1)
	|			  GROUP BY LINENO_
	|";
	Запрос.УстановитьТекстовыйПараметр("ВыбДок",ТекущийДокумент());
	Запрос.УстановитьТекстовыйПараметр("ПродажаБлюда",ПродажаБлюда);
	Запрос.УстановитьТекстовыйПараметр("ПродажаТовара",ПродажаТовара);
	Запрос.УстановитьТекстовыйПараметр("ПродажаПринятогоТовара",ПродажаПринятогоТовара);
	ТаблПарт = Запрос.ВыполнитьИнструкцию(ТекстЗапроса);

	ТаблПарт.ВыбратьСтроки();
	Пока ТаблПарт.ПолучитьСтроку()=1 Цикл
		
		ПолучитьСтрокуПоНомеру(ТаблПарт.НомерСтрокиДокумента);
		Себестоимость=Себестоимость+ТаблПарт.Стоимость;//+ТЗ.Итог("НДС");
		Себестоимость2=Себестоимость2+ТаблПарт.ПродСтоимость;//+ТЗ.Итог("НДС");

	КонецЦикла; 
//	Если НЕ(ПредНомерСтроки=0) Тогда   
//		ПолучитьСтрокуПоНомеру(ПредНомерСтроки);
//		Себестоимость=ТЗ.Итог("Стоимость");//+ТЗ.Итог("НДС");
//		ТЗ.УдалитьСтроки();
//	КонецЕсли;	
КонецПроцедуры

//-----------------------------------------------
Процедура ПроверкаВложенныхБлюд(Бл)
	Найден=0;
	КалькК=СоздатьОбъект("Документ.КалькуляционнаяКарта");
	СписокБлюд=СоздатьОбъект("СписокЗначений");
	КалькК=ПолучитьКалькуляцию(ДатаДок,Бл,ТекущийДокумент()); 
	Если КалькК=0 Тогда
		Найден=2;
		Возврат;
	КонецЕсли;
	КалькК.ВыбратьСтроки();
	Пока КалькК.ПолучитьСтроку()=1 Цикл
		Если КалькК.Ингредиент.ВидТовара=Перечисление.ВидыТоваров.Блюдо Тогда
			СписокБлюд.ДобавитьЗначение(КалькК.Ингредиент.ТекущийЭлемент(),);
		КонецЕсли;	
	КонецЦикла;			
	Если СписокБлюд.НайтиЗначение(НачальноеБлюдо)>0 Тогда
		Найден=1;
		Возврат;
	Иначе
		Для Н=1 По СписокБлюд.РазмерСписка() Цикл
			Если Найден=1 Тогда
				Возврат;
			Иначе
				ПроверкаВложенныхБлюд(СписокБлюд.ПолучитьЗначение(Н));
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
//-----------------------------------------------
Процедура ПеремещениеПоПартиямСтар(ТУ,ПромТовар,СписываемКол,Владелец,Режим,НомВлож,РасхЦена=0,РасхНДС=0,РасхНП=0, ДелатьДвижения = 1)
	НадоСписать=Окр(СписываемКол,3,1);
	Фирма.ИспользоватьДату(ДатаДок);
	//партии и склады           
	Если (ТУ="Упр") Тогда
		Если Константа.МетодРасчетаСебестоимостиУправленческогоУчета.Выбран()=0 Тогда
			Возврат ; // учет Упр. не ведется
		КонецЕсли;
	ИначеЕсли (ТУ="Фин") Тогда
		Если Фирма.МетодРасчетаСебестоимостиФинансовогоУчета.Выбран()=0 Тогда
			Возврат ; // учет Фин. не ведется
		КонецЕсли;
	Иначе
		Сообщить("Неверно задан тип учета партий товаров по "+ТекущийДокумент());
		Возврат ;
	КонецЕсли;                               
	Если ТУ="Фин" Тогда
		ПромФирма=Фирма;
	Иначе
		ПромФирма=Фирма;
	КонецЕсли;	
	// склпарт
	Если Константа.ПартииНаСкладах=Перечисление.Булево.Да Тогда
		ПромСклад=Склад;
	Иначе
		ПромСклад=СоздатьОбъект("Справочник.МестаХранения");
	КонецЕсли;		   
	
	РегПарт.УстановитьФильтр(ПромФирма,ПромТовар,,,,ПромСклад);
	РегПарт.ВыгрузитьИтоги(Парт,1,1);
	Если ((ТУ="Фин") И (Фирма.МетодРасчетаСебестоимостиФинансовогоУчета=Перечисление.МетодыРасчетаСебестоимости.FIFO)) Тогда
		Парт.Сортировать("+СрокРеализации,-Статус,+ПрихДокумент",1);
	ИначеЕсли ((ТУ="Фин") И (Фирма.МетодРасчетаСебестоимостиФинансовогоУчета=Перечисление.МетодыРасчетаСебестоимости.LIFO)) Тогда 
		Парт.Сортировать("-СрокРеализации,-Статус,-ПрихДокумент",1);
	ИначеЕсли ((ТУ="Фин") И (Фирма.МетодРасчетаСебестоимостиФинансовогоУчета=Перечисление.МетодыРасчетаСебестоимости.ПоСреднему)) Тогда	
		Парт.Сортировать("-Статус,+ПрихДокумент",1);
	ИначеЕсли ((ТУ="Упр") И (Константа.МетодРасчетаСебестоимостиУправленческогоУчета=Перечисление.МетодыРасчетаСебестоимости.FIFO)) Тогда
		Парт.Сортировать("+СрокРеализации,-Статус,+ПрихДокумент",1);
	ИначеЕсли ((ТУ="Упр") И (Константа.МетодРасчетаСебестоимостиУправленческогоУчета=Перечисление.МетодыРасчетаСебестоимости.LIFO)) Тогда
		Парт.Сортировать("-СрокРеализации,-Статус,-ПрихДокумент",1);
	ИначеЕсли ((ТУ="Упр") И (Константа.МетодРасчетаСебестоимостиУправленческогоУчета=Перечисление.МетодыРасчетаСебестоимости.ПоСреднему)) Тогда	
		Парт.Сортировать("-Статус,+ПрихДокумент",1);                            
	КонецЕсли;
	Парт.ВыбратьСтроки();
	Пока Парт.ПолучитьСтроку()=1 Цикл
		Если НадоСписать=0 Тогда
			Прервать;
		КонецЕсли; 
		// сем \\
		//Если (Режим="СписатьИнгр") и ((Парт.Статус=Отданный) или (Парт.Статус=Принятый)) Тогда
		Если (Режим="СписатьИнгр") и (Парт.Статус=Отданный) Тогда
		// сем \\
			Продолжить;
		КонецЕсли;
	
		//*****
			ТабБлюда.ВыбратьСтроки();
		Пока ТабБлюда.ПолучитьСтроку()=1 Цикл
			Если (ТабБлюда.Контр=Парт.Контрагент) и (ТабБлюда.ПрихДок=Парт.ПрихДокумент) и (ТабБлюда.СрокРеализации = Парт.СрокРеализации) и (ТабБлюда.Партия = Парт.Партия) и (ТабБлюда.Товар=ПромТовар) Тогда
			    Парт.Стоимость=Парт.Стоимость-ТабБлюда.СтоимБезНДС;       
				Парт.НДС=Парт.НДС-ТабБлюда.НДС;
				Парт.ОстатокТовара=Парт.ОстатокТовара-ТабБлюда.Остаток;
			КонецЕсли;
		КонецЦикла;   
		Если Парт.ОстатокТовара <= 0 Тогда
		    Продолжить;
		КонецЕсли;
		//*****
	
		ТабБлюда.НоваяСтрока(); 
		ТабБлюда.НомВложения=НомВлож;
		ТабБлюда.Фирма=ПромФирма;
		ТабБлюда.Товар=ПромТовар;
		ТабБлюда.ДелатьДвижения = ДелатьДвижения;

		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		ТабБлюда.Партия = Парт.Партия;
		ТабБлюда.СрокРеализации = Парт.СрокРеализации;             
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		ТабБлюда.ТипТовара=ПромТовар.ВидТовара; 
		ТабБлюда.БлюдоВладелец=Владелец; 
//		Если ПромТовар.ВидТовара=Перечисление.ВидыТоваров.Блюдо Тогда
//			ТабБлюда.Статус=Произведенный;
//		Иначе
			ТабБлюда.Статус=Парт.Статус;
//		КонецЕсли;
		ТабБлюда.Контр=Парт.Контрагент;
		ТабБлюда.ПрихДок=Парт.ПрихДокумент;
		Если Режим="ПродажаГотовогоБлюда" Тогда
			
			Если ПромТовар<>Товар Тогда //Если списывается блюдо для производства другого блюда
				ТабБлюда.КодОпер=СписаниеНаПроизводcтвоБлюда;
			Иначе
				ТабБлюда.КодОпер=ПродажаБлюда;
			КонецЕсли;
			
		ИначеЕсли Режим="ПродажаИнгр" Тогда
			ТабБлюда.КодОпер=ПродажаТовара;
		Иначе
			ТабБлюда.КодОпер=СписаниеНаПроизводcтвоБлюда;
		КонецЕсли; 
		
		ОтатокПартииКол=Парт.ОстатокТовара; 
		ОтатокПартииВал=Парт.Стоимость;
		ОтатокПартииНДС=Парт.НДС;
		Если ОтатокПартииКол<0 Тогда  
			Продолжить;
		КонецЕсли;
		
		Если ОтатокПартииКол>=НадоСписать Тогда
			СписатьКол=НадоСписать;
		Иначе
			СписатьКол=ОтатокПартииКол;
		КонецЕсли;
		ТабБлюда.Остаток=СписатьКол;
		Если ОтатокПартииКол=0 Тогда
			ТабБлюда.СтоимБезНДС=ОтатокПартииВал;       
			ТабБлюда.НДС=ОтатокПартииНДС;
		Иначе
			ТабБлюда.СтоимБезНДС=ОтатокПартииВал/ОтатокПартииКол*СписатьКол;
			ТабБлюда.НДС=ОтатокПартииНДС/ОтатокПартииКол*СписатьКол; 
			Если (Режим="ПродажаИнгр") или (Режим="ПродажаГотовогоБлюда") Тогда
				ТабБлюда.Оборот=РасхЦена*СписатьКол;
				ТабБлюда.НДСРасхода=РасхНДС/СписываемКол*СписатьКол;
				ТабБлюда.НП=РасхНП/СписываемКол*СписатьКол;
			КонецЕсли;
		КонецЕсли;
		НадоСписать=НадоСписать-СписатьКол;
	КонецЦикла;
	//----------------------------------------------------------------------------
	Если (НадоСписать>0) И ((ПромТовар.ВидТовара=Перечисление.ВидыТоваров.Ингредиент) ИЛИ (ПромТовар.ВидТовара=Перечисление.ВидыТоваров.Товар)) Тогда   
		// сем \\
		Если глРазрОтрицОстатки=Перечисление.Булево.Нет Тогда
			Сообщить ("4При проведении партий товара по "+ТекущийДокумент()+" от "+ДатаДок+" по товару "
	                +ПромТовар.Код+" " +СокрЛП(ПромТовар)+" не распределилось по партиям "+НадоСписать+" "+ПромТовар.БазоваяЕдиницаИзмерения);
			Сообщить("4На складе нет нужного количества товара "+Товар.Наименование);
			НеПроводить(Контекст,"Не найдена партия товара!");
			Возврат;
		КонецЕсли;
		// сем //
		ТабБлюда.НоваяСтрока(); 
		ТабБлюда.Фирма=ПромФирма;
		ТабБлюда.Товар=ПромТовар;
		ТабБлюда.ТипТовара=ПромТовар.ВидТовара; 
		ТабБлюда.БлюдоВладелец=Владелец;
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		ТабБлюда.Партия = "";
		ТабБлюда.СрокРеализации = "";
		//Сообщить ("4При проведении партий товара по "+ТекущийДокумент()+" от "+ДатаДок+" по товару "
        //        +ПромТовар.Код+" " +СокрЛП(ПромТовар)+" не распределилось по партиям "+НадоСписать+" "+ПромТовар.БазоваяЕдиницаИзмерения);
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		
		Если глНуженСписокТоваров=1 Тогда
			глСписокТоваров.НоваяСтрока();
			глСписокТоваров.Склад=Склад;
			глСписокТоваров.Товар=ПромТовар;
			Если Владелец.ВидТовара=Перечисление.ВидыТоваров.Блюдо Тогда
//				глСписокТоваров.Блюдо=Владелец;
//				глСписокТоваров.КолБлюд=Количество*Коэффициент;
			КонецЕсли;
			глСписокТоваров.Количество=НадоСписать;
			глСписокТоваров.Остаток=0;
		КонецЕсли;
		
		ТабБлюда.Статус=Купленный;
		ТабБлюда.Контр=СоздатьОбъект("Справочник.Контрагенты");
		ТабБлюда.ПрихДок=ТекущийДокумент();
		ТабБлюда.КодОпер=?(Режим="СписатьИнгр",СписаниеНаПроизводcтвоБлюда,ПродажаТовара); //тут нужно смотреть, если продажа ингр, то статус продажа
		ТабБлюда.Остаток=НадоСписать;
		ПроцНДС=ПроцентНДС(Товар.СтавкаНДС);
		ТабБлюда.СтоимБезНДС=ПромТовар.ЦенаПриобретения*КурсДляВалюты(ПромТовар.ВалютаЗакупки,ДатаДок)*НадоСписать;
		
		ТабБлюда.НДС=(ТабБлюда.СтоимБезНДС*ПроцНДС/100)*НадоСписать;
		ТабБлюда.ДелатьДвижения = ДелатьДвижения;
//		ТабБлюда.СтоимБезНДС=ПромТовар.ЦенаПриобретения*СписатьКол;
//		ТабБлюда.НДС=(ТабБлюда.СтоимБезНДС*ПроцНДС/100)*СписатьКол;
	КонецЕсли; 
КонецПроцедуры	

Процедура ПеремещениеПоПартиям(ТУ,ПромТовар,СписываемКол,Владелец,Режим,НомВлож,РасхЦена=0,РасхНДС=0,РасхНП=0, ДелатьДвижения = 1)
	НадоСписать=Окр(СписываемКол,3,1);
	Фирма.ИспользоватьДату(ДатаДок);
	//партии и склады           
	Если (ТУ="Упр") Тогда
		Если Константа.МетодРасчетаСебестоимостиУправленческогоУчета.Выбран()=0 Тогда
			Возврат ; // учет Упр. не ведется
		КонецЕсли;
	ИначеЕсли (ТУ="Фин") Тогда
		Если Фирма.МетодРасчетаСебестоимостиФинансовогоУчета.Выбран()=0 Тогда
			Возврат ; // учет Фин. не ведется
		КонецЕсли;
	Иначе
		Сообщить("Неверно задан тип учета партий товаров по "+ТекущийДокумент());
		Возврат ;
	КонецЕсли;                               
	Если ТУ="Фин" Тогда
		ПромФирма=Фирма;
	Иначе
		ПромФирма=Фирма;
	КонецЕсли;	
	// склпарт
	Если Константа.ПартииНаСкладах=Перечисление.Булево.Да Тогда
		ПромСклад=Склад;
	Иначе
		ПромСклад=СоздатьОбъект("Справочник.МестаХранения");
	КонецЕсли;		   
	
//	РегПарт.УстановитьФильтр(ПромФирма,ПромТовар,,,,ПромСклад);
//	РегПарт.ВыгрузитьИтоги(Парт,1,1);
	
//	итТаблПартии.УстановитьФильтр(ПромТовар,ПромТовар,"иТовар");


	сзКлюч.УдалитьВсе();
	сзКлюч.ДобавитьЗначение(ПромТовар);
	итТаблПартии.Подмножество(сзКлюч,1,"иТовар");
	
	итТаблПартии.ВыбратьСтроки("иТовар");
	Пока итТаблПартии.ПолучитьСтроку("иТовар")=1 Цикл
		Если НадоСписать=0 Тогда
			Прервать;
		КонецЕсли; 
		
		// сем \\
		//Если (Режим="СписатьИнгр") и ((Парт.Статус=Отданный) или (Парт.Статус=Принятый)) Тогда
		Если (Режим="СписатьИнгр") и (итТаблПартии.Статус=Отданный) Тогда
		// сем \\
			Продолжить;
		КонецЕсли;
	
		Если итТаблПартии.ОстатокТовара <= 0 Тогда
		    Продолжить;
		КонецЕсли;
		//*****
	
		ТабБлюда.НоваяСтрока(); 
		ТабБлюда.НомВложения=НомВлож;
		ТабБлюда.Фирма=ПромФирма;
		ТабБлюда.Товар=ПромТовар;
		ТабБлюда.ДелатьДвижения = ДелатьДвижения;

		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		ТабБлюда.Партия = итТаблПартии.Партия;
		ТабБлюда.СрокРеализации = итТаблПартии.СрокРеализации;             
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		ТабБлюда.ТипТовара=ПромТовар.ВидТовара; 
		ТабБлюда.БлюдоВладелец=Владелец; 
//		Если ПромТовар.ВидТовара=Перечисление.ВидыТоваров.Блюдо Тогда
//			ТабБлюда.Статус=Произведенный;
//		Иначе
			ТабБлюда.Статус=итТаблПартии.Статус;
//		КонецЕсли;
		ТабБлюда.Контр=итТаблПартии.Контрагент;
		ТабБлюда.ПрихДок=итТаблПартии.ПрихДокумент;
		Если Режим="ПродажаГотовогоБлюда" Тогда
			
			Если ПромТовар<>Товар Тогда //Если списывается блюдо для производства другого блюда
				ТабБлюда.КодОпер=СписаниеНаПроизводcтвоБлюда;
			Иначе
				ТабБлюда.КодОпер=ПродажаБлюда;
			КонецЕсли;
			
		ИначеЕсли Режим="ПродажаИнгр" Тогда
			ТабБлюда.КодОпер=ПродажаТовара;
		Иначе
			ТабБлюда.КодОпер=СписаниеНаПроизводcтвоБлюда;
		КонецЕсли; 
		
		ОтатокПартииКол=итТаблПартии.ОстатокТовара; 
		ОтатокПартииВал=итТаблПартии.Стоимость;
		ОтатокПартииПродВал=итТаблПартии.ПродСтоимость;
		ОтатокПартииНДС=итТаблПартии.НДС;
		Если ОтатокПартииКол<0 Тогда  
			Продолжить;
		КонецЕсли;
		
		Если ОтатокПартииКол>=НадоСписать Тогда
			СписатьКол=НадоСписать;
		Иначе
			СписатьКол=ОтатокПартииКол;
		КонецЕсли;
		ТабБлюда.Остаток=СписатьКол;
		Если ОтатокПартииКол=0 Тогда
			ТабБлюда.СтоимБезНДС=ОтатокПартииВал;
			ТабБлюда.ПродСтоимБезНДС=ОтатокПартииПродВал;       
			ТабБлюда.НДС=ОтатокПартииНДС;
		Иначе
			ТабБлюда.СтоимБезНДС=ОтатокПартииВал/ОтатокПартииКол*СписатьКол;
			ТабБлюда.ПродСтоимБезНДС=ОтатокПартииПродВал/ОтатокПартииКол*СписатьКол;
			ТабБлюда.НДС=ОтатокПартииНДС/ОтатокПартииКол*СписатьКол; 
			Если (Режим="ПродажаИнгр") или (Режим="ПродажаГотовогоБлюда") Тогда
				ТабБлюда.Оборот=РасхЦена*СписатьКол;
				ТабБлюда.НДСРасхода=РасхНДС/СписываемКол*СписатьКол;
				ТабБлюда.НП=РасхНП/СписываемКол*СписатьКол;
			КонецЕсли;
		КонецЕсли;
		НадоСписать=НадоСписать-СписатьКол;
		
		
	    итТаблПартии.Стоимость=итТаблПартии.Стоимость-ТабБлюда.СтоимБезНДС;
		итТаблПартии.ПродСтоимость=итТаблПартии.ПродСтоимость-ТабБлюда.ПродСтоимБезНДС;       
		итТаблПартии.НДС=итТаблПартии.НДС-ТабБлюда.НДС;
		итТаблПартии.ОстатокТовара=итТаблПартии.ОстатокТовара-Окр(ТабБлюда.Остаток,3);

		

		
	КонецЦикла;
	//----------------------------------------------------------------------------
	Если (НадоСписать>0) И ((ПромТовар.ВидТовара=Перечисление.ВидыТоваров.Ингредиент) ИЛИ (ПромТовар.ВидТовара=Перечисление.ВидыТоваров.Товар)) Тогда   
		// сем \\
		Если глРазрОтрицОстатки=Перечисление.Булево.Нет Тогда
			Сообщить ("4При проведении партий товара по "+ТекущийДокумент()+" от "+ДатаДок+" по товару "
	                +ПромТовар.Код+" " +СокрЛП(ПромТовар)+" не распределилось по партиям "+НадоСписать+" "+ПромТовар.БазоваяЕдиницаИзмерения);
			Сообщить("4На складе нет нужного количества товара "+Товар.Наименование);
			НеПроводить(Контекст,"Не найдена партия товара!");
			Возврат;
		КонецЕсли;
		// сем //
		ТабБлюда.НоваяСтрока(); 
		ТабБлюда.Фирма=ПромФирма;
		ТабБлюда.Товар=ПромТовар;
		ТабБлюда.ТипТовара=ПромТовар.ВидТовара; 
		ТабБлюда.БлюдоВладелец=Владелец;
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		ТабБлюда.Партия = "";
		ТабБлюда.СрокРеализации = "";
		//Сообщить ("4При проведении партий товара по "+ТекущийДокумент()+" от "+ДатаДок+" по товару "
        //        +ПромТовар.Код+" " +СокрЛП(ПромТовар)+" не распределилось по партиям "+НадоСписать+" "+ПромТовар.БазоваяЕдиницаИзмерения);
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		
		Если глНуженСписокТоваров=1 Тогда
			глСписокТоваров.НоваяСтрока();
			глСписокТоваров.Склад=Склад;
			глСписокТоваров.Товар=ПромТовар;
			Если Владелец.ВидТовара=Перечисление.ВидыТоваров.Блюдо Тогда
//				глСписокТоваров.Блюдо=Владелец;
//				глСписокТоваров.КолБлюд=Количество*Коэффициент;
			КонецЕсли;
			глСписокТоваров.Количество=НадоСписать;
			глСписокТоваров.Остаток=0;
		КонецЕсли;
		
		ТабБлюда.Статус=Купленный;
		ТабБлюда.Контр=СоздатьОбъект("Справочник.Контрагенты");
		ТабБлюда.ПрихДок=ТекущийДокумент();
		ТабБлюда.КодОпер=?(Режим="СписатьИнгр",СписаниеНаПроизводcтвоБлюда,ПродажаТовара); //тут нужно смотреть, если продажа ингр, то статус продажа
		ТабБлюда.Остаток=НадоСписать;
		ПроцНДС=ПроцентНДС(Товар.СтавкаНДС);
		ТабБлюда.СтоимБезНДС=ПромТовар.ЦенаПриобретения*КурсДляВалюты(ПромТовар.ВалютаЗакупки,ДатаДок)*НадоСписать;
		ТабБлюда.ПродСтоимБезНДС=ПромТовар.ЦенаПриобретения*КурсДляВалюты(ПромТовар.ВалютаЗакупки,ДатаДок)*НадоСписать;
		
		ТабБлюда.НДС=(ТабБлюда.СтоимБезНДС*ПроцНДС/100)*НадоСписать;
		ТабБлюда.ДелатьДвижения = ДелатьДвижения;
//		ТабБлюда.СтоимБезНДС=ПромТовар.ЦенаПриобретения*СписатьКол;
//		ТабБлюда.НДС=(ТабБлюда.СтоимБезНДС*ПроцНДС/100)*СписатьКол;
	КонецЕсли; 
КонецПроцедуры	

//----------------------------------------------------------------------------------
Функция СписатьИнгредиентСтар(Товар,Количество,Единица,Коэффициент,БлюдоВладелец,КодОп,НомВлож,Сумма=0,НДС=0,НП=0, ДелатьДвижения = 1)
	Если Количество<=0 Тогда
		Возврат 0;
	КонецЕсли;  
	
	Если ДелатьДвижения = 1 Тогда
		Если ТипУчета<Фин Тогда
			ПромОстаток=РегОстаткиТоваров.СводныйОстаток(Товар,Склад,,"ОстатокТовара");
		Иначе
			ПромОстаток=РегПарт.СводныйОстаток(Фирма,Товар,,,,Склад,"ОстатокТовара");   
		КонецЕсли;
		Если Константа.РежимПроверки = 1 Тогда
			Если СписаниеЗамены = 1 Тогда // списание замены  
				Если ПромОстаток < Окр(Количество*Коэффициент,3) Тогда
					Возврат 0;
				КонецЕсли; 
			Иначе
				Если (ПромОстаток < Окр(Количество*Коэффициент,3)) и (глРазрОтрицОстатки=Перечисление.Булево.Нет) Тогда
					НеХватаетНаСкладе( Товар, БлюдоВладелец, НомВлож, Склад, Количество*Коэффициент, ПромОстаток, "Списание ингредиента (замена)" );
					//Сообщить("1На складе нет нужного количества товара "+Товар.Наименование);
					//НеПроводить(Контекст,"На складе осталось "+ПромОстаток+" "+Товар.БазоваяЕдиницаИзмерения);
					//Если глНуженСписокТоваров=1 Тогда
					//	глСписокТоваров.НоваяСтрока();
					//	глСписокТоваров.Склад=Склад;
					//	глСписокТоваров.Товар=Товар;
					//	глСписокТоваров.Количество=Количество*Коэффициент;
					//	глСписокТоваров.Остаток=ПромОстаток;
					//КонецЕсли;
					СтатусВозврата( 0 );
					Возврат 0;
				КонецЕсли;
			КонецЕсли;
		Иначе
			Если (ПромОстаток < Окр(Количество*Коэффициент,3)) и (глРазрОтрицОстатки=Перечисление.Булево.Нет) Тогда
				НеХватаетНаСкладе( Товар, БлюдоВладелец, НомВлож, Склад, Количество*Коэффициент, ПромОстаток, "Списание ингредиента" );
				//Сообщить("1На складе нет нужного количества товара "+Товар.Наименование);
				//НеПроводить(Контекст,"На складе осталось "+ПромОстаток+" "+Товар.БазоваяЕдиницаИзмерения);
				//Если глНуженСписокТоваров=1 Тогда
				//	глСписокТоваров.НоваяСтрока();
				//	глСписокТоваров.Склад=Склад;
				//	глСписокТоваров.Товар=Товар;
				//	глСписокТоваров.Количество=Количество*Коэффициент;
				//	глСписокТоваров.Остаток=ПромОстаток;
				//КонецЕсли;
				СтатусВозврата( 0 );
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
		Регистр.ОстаткиТоваров.Фирма= Фирма;
		Регистр.ОстаткиТоваров.Товар=Товар;
		Регистр.ОстаткиТоваров.Склад=Склад;
		Регистр.ОстаткиТоваров.ОстатокТовара=Количество*Коэффициент;
		Регистр.ОстаткиТоваров.ФлагУчета=2;
		
		Если БлюдоВладелец.ВидТовара<>Перечисление.ВидыТоваров.Блюдо Тогда
			Регистр.ОстаткиТоваров.Блюдо="";
		Иначе
			Регистр.ОстаткиТоваров.Блюдо=БлюдоВладелец;
		КонецЕсли;
		
		Если ТипУчета<Фин Тогда 
			Регистр.ОстаткиТоваров.ДвижениеРасходВыполнить();
		КонецЕсли;
	КонецЕсли;
	Если ТипУчета<Фин Тогда 
		ПеремещениеПоПартиямСтар("Упр",Товар,Количество*Коэффициент,БлюдоВладелец,КодОп,НомВлож,(Сумма-НДС)/(Количество*Коэффициент),НДС,НП, ДелатьДвижения);
	КонецЕсли;
	//------------------------------------------------------------------------------
	Если ТипУчета>Упр Тогда 
		ПеремещениеПоПартиямСтар("Фин",Товар,Количество*Коэффициент,БлюдоВладелец,КодОп,НомВлож,(Сумма-НДС)/(Количество*Коэффициент),НДС,НП, ДелатьДвижения);
	КонецЕсли;
	Возврат 1;
КонецФункции

Функция СписатьИнгредиент(Товар,Количество,Единица,Коэффициент,БлюдоВладелец,КодОп,НомВлож,Сумма=0,НДС=0,НП=0, ДелатьДвижения = 1)
	Если Количество<=0 Тогда
		Возврат 0;
	КонецЕсли;  
	
	Если ДелатьДвижения = 1 Тогда
		Если ТипУчета<Фин Тогда
			итТаблОстатки.УстановитьФильтр(Товар,Товар,"иТовар");
			ПромОстаток=итТаблОстатки.Итог("ОстатокТовара","иТовар");
		Иначе
			//ПромОстаток=РегПарт.СводныйОстаток(Фирма,Товар,,,,Склад,"ОстатокТовара");   
		КонецЕсли;
		Если Константа.РежимПроверки = 1 Тогда
			Если СписаниеЗамены = 1 Тогда // списание замены  
				Если ПромОстаток < Окр(Количество*Коэффициент,3) Тогда
					Возврат 0;
				КонецЕсли; 
			Иначе
				Если (ПромОстаток < Окр(Количество*Коэффициент,3)) и (глРазрОтрицОстатки=Перечисление.Булево.Нет) Тогда
					НеХватаетНаСкладе( Товар, БлюдоВладелец, НомВлож, Склад, Количество*Коэффициент, ПромОстаток, "Списание ингредиента (замена)" );
					//Сообщить("1На складе нет нужного количества товара "+Товар.Наименование);
					//НеПроводить(Контекст,"На складе осталось "+ПромОстаток+" "+Товар.БазоваяЕдиницаИзмерения);
					//Если глНуженСписокТоваров=1 Тогда
					//	глСписокТоваров.НоваяСтрока();
					//	глСписокТоваров.Склад=Склад;
					//	глСписокТоваров.Товар=Товар;
					//	глСписокТоваров.Количество=Количество*Коэффициент;
					//	глСписокТоваров.Остаток=ПромОстаток;
					//КонецЕсли;
					СтатусВозврата( 0 );
					Возврат 0;
				КонецЕсли;
			КонецЕсли;
		Иначе
			Если (ПромОстаток < Окр(Количество*Коэффициент,3)) и (глРазрОтрицОстатки=Перечисление.Булево.Нет) Тогда
				НеХватаетНаСкладе( Товар, БлюдоВладелец, НомВлож, Склад, Количество*Коэффициент, ПромОстаток, "Списание ингредиента" );
				//Сообщить("1На складе нет нужного количества товара "+Товар.Наименование);
				//НеПроводить(Контекст,"На складе осталось "+ПромОстаток+" "+Товар.БазоваяЕдиницаИзмерения);
				//Если глНуженСписокТоваров=1 Тогда
				//	глСписокТоваров.НоваяСтрока();
				//	глСписокТоваров.Склад=Склад;
				//	глСписокТоваров.Товар=Товар;
				//	глСписокТоваров.Количество=Количество*Коэффициент;
				//	глСписокТоваров.Остаток=ПромОстаток;
				//КонецЕсли;
				СтатусВозврата( 0 );
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
		Регистр.ОстаткиТоваров.Фирма= Фирма;
		Регистр.ОстаткиТоваров.Товар=Товар;
		Регистр.ОстаткиТоваров.Склад=Склад;
		Регистр.ОстаткиТоваров.ОстатокТовара=Количество*Коэффициент;
		Регистр.ОстаткиТоваров.ФлагУчета=2;
		
		Если БлюдоВладелец.ВидТовара<>Перечисление.ВидыТоваров.Блюдо Тогда
			Регистр.ОстаткиТоваров.Блюдо="";
		Иначе
			Регистр.ОстаткиТоваров.Блюдо=БлюдоВладелец;
		КонецЕсли;
		
		Если ТипУчета<Фин Тогда 
			Регистр.ОстаткиТоваров.ДвижениеРасходВыполнить();
			итТаблОстатки.ВыбратьСтроки("иТовар");
			Если итТаблОстатки.ПолучитьСтроку("иТовар") = 1 Тогда
				итТаблОстатки.ОстатокТовара = итТаблОстатки.ОстатокТовара - Окр(Регистр.ОстаткиТоваров.ОстатокТовара,3);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если ТипУчета<Фин Тогда 
		ПеремещениеПоПартиям("Упр",Товар,Количество*Коэффициент,БлюдоВладелец,КодОп,НомВлож,(Сумма-НДС)/(Количество*Коэффициент),НДС,НП, ДелатьДвижения);
	КонецЕсли;
	//------------------------------------------------------------------------------
	Если ТипУчета>Упр Тогда 
		ПеремещениеПоПартиям("Фин",Товар,Количество*Коэффициент,БлюдоВладелец,КодОп,НомВлож,(Сумма-НДС)/(Количество*Коэффициент),НДС,НП, ДелатьДвижения);
	КонецЕсли;
	Возврат 1;
КонецФункции

//-------------------------------------------------------------------------------
Функция СписатьЗаменуСтар(Товар,Количество,Единица,Коэффициент,БлюдоВладелец,НомВлож)
	СписаниеЗамены = 0;
	ЕстьЗамена=0;        
	СтатусВозвр=1; 
	Если ТипУчета<Фин Тогда
		ПромОстаток=РегОстаткиТоваров.СводныйОстаток(Товар,Склад,,"ОстатокТовара");
	Иначе
		ПромОстаток=РегПарт.СводныйОстаток(Фирма,Товар,,,,Склад,"ОстатокТовара");   
	КонецЕсли;
	//Если ((ПромОстаток < Окр(Количество*Коэффициент,3)) и (глРазрОтрицОстатки=Перечисление.Булево.Нет))Тогда
	Если ПромОстаток < Окр( Количество*Коэффициент,3 ) Тогда
		Если (Окр(Количество*Коэффициент,3)-ПромОстаток)<=Окр(Количество*Коэффициент,3)*Товар.ПроцентПогрешности/100 Тогда  //погрешность в минус
			Осталось=ПромОстаток;
			СписатьИнгредиентСтар(Товар,Осталось,Единица,1,БлюдоВладелец,"СписатьИнгр",НомВлож); 
			Возврат 1;
		Иначе
			НеХватает=окр(Количество*Коэффициент,3)-?(ПромОстаток>0,ПромОстаток,0);
			Осталось=ПромОстаток;
			СписатьИнгредиент(Товар,Осталось,Единица,1,БлюдоВладелец,"СписатьИнгр",НомВлож);
			Если ПромЗамена<>"" Тогда
				СписаниеЗамены = 1;
				ДокумЗам=ПромЗамена;

				Если ДатаДок>='01.02.2010' Тогда
					НеХватает=Окр(НеХватает/Коэффициент,5);
				КонецЕсли;
				ДокумЗам.ВыбратьСтроки();
				Пока ДокумЗам.ПолучитьСтроку()=1 Цикл  
					
					ТовЗамены= ДокумЗам.Замена;  
					//данная проверка действительна только с 01.07.07
					Если КалькКарт.ДатаДок>='01.07.07' Тогда
						Если Единица.Единица<>ДокумЗам.Единица.Единица Тогда
							НехвЗамены=Окр(НеХватает/Коэффициент,5);
							Сообщить("В документе "+ДокумЗам+" у замены ингредиента "+ДокумЗам.Замена.Код+" "+ДокумЗам.Замена+" отличается единица замены <"+ДокумЗам.Единица+"> от калькуляции <"+Единица+"> !");	
							СтатусВозврата(0);
							Прервать;      
						Иначе
							Если ДатаДок<'01.02.2010' Тогда
								НеХватает=Окр(НеХватает/Коэффициент,5);
							КонецЕсли;
						КонецЕсли;      
					КонецЕсли;
					
					ЕстьЗамена=1;
					Если ТипУчета<Фин Тогда
						ПромОстаток=РегОстаткиТоваров.СводныйОстаток(ДокумЗам.Замена,Склад,,"ОстатокТовара");
					Иначе
						ПромОстаток=РегПарт.СводныйОстаток(Фирма,ДокумЗам.Замена,,,,Склад,"ОстатокТовара");   
					КонецЕсли;
					Если (ПромОстаток < НЕХватает*ДокумЗам.КоэффициентЗамены*ДокумЗам.Коэффициент) Тогда
						ОстЗамены=?(ПромОстаток>0,ПромОстаток,0);
						НехвЗамены=НеХватает*ДокумЗам.КоэффициентЗамены*ДокумЗам.Коэффициент-ОстЗамены;
						СписатьИнгредиентСтар(ДокумЗам.Замена,ОстЗамены,,1,БлюдоВладелец,"СписатьИнгр",НомВлож);
						ТовЗамены= ДокумЗам.Замена;
					Иначе
						СписатьИнгредиент(ДокумЗам.Замена,НеХватает*ДокумЗам.КоэффициентЗамены*ДокумЗам.Коэффициент,,1,БлюдоВладелец,"СписатьИнгр",НомВлож);
						НехвЗамены=0;
						Прервать;
					КонецЕсли;
					Попытка
						НеХватает=(НехвЗамены/(ДокумЗам.КоэффициентЗамены*ДокумЗам.Коэффициент));
					Исключение
						НеХватает=НехвЗамены;
					КонецПопытки;
					ЕстьЗамена=0;
				КонецЦикла;
				Если НехвЗамены>0 Тогда
					НеХватаетНаСкладе( ТовЗамены, БлюдоВладелец, НомВлож, Склад, НехвЗамены, ПромОстаток, "Списание замены" );
					//Сообщить("2Не хватает "+ТовЗамены.Код+" "+ТовЗамены+" "+НехвЗамены+" "+ТовЗамены.БазоваяЕдиницаИзмерения+" !"+" Блюдо: "+БлюдоВладелец.Код+" "+БлюдоВладелец.Наименование);
					//Если глНуженСписокТоваров=1 Тогда
					//	глСписокТоваров.НоваяСтрока();
					//	глСписокТоваров.Склад=Склад;
					//	глСписокТоваров.Товар=ТовЗамены;
					//	глСписокТоваров.Количество=НехвЗамены;
					//	глСписокТоваров.Остаток=ПромОстаток;
					//КонецЕсли;
					
					Если глРазрОтрицОстатки=Перечисление.Булево.Нет Тогда
						СтатусВозвр=0;
					КонецЕсли;
				КонецЕсли;
				СписаниеЗамены = 0;
			КонецЕсли; 
		КонецЕсли;          
		
		Если ЕстьЗамена=0 Тогда  
			НеХватаетНаСкладе( Товар, БлюдоВладелец, НомВлож, Склад, Нехватает, ПромОстаток, "Списание товара" );
			СписатьИнгредиентСтар(Товар,Нехватает,Единица,1,БлюдоВладелец,"СписатьИнгр",НомВлож);
			//Сообщить("3Не хватает "+Товар.Код+" "+Товар+" "+Нехватает+" "+Товар.БазоваяЕдиницаИзмерения+" !"+" Блюдо: "+БлюдоВладелец.Код+" "+БлюдоВладелец.Наименование);
			//Если глНуженСписокТоваров=1 Тогда
			//	глСписокТоваров.НоваяСтрока();
			//	глСписокТоваров.Склад=Склад;
			//	глСписокТоваров.Товар=Товар;
			//	глСписокТоваров.Количество=Нехватает;
			//	глСписокТоваров.Остаток=ПромОстаток;
			//КонецЕсли;
			
			Если глРазрОтрицОстатки=Перечисление.Булево.Нет Тогда
				СтатусВозвр=0;
			КонецЕсли;
		КонецЕсли;
	Иначе 	// погрешность 
		Если (ПромОстаток-Окр(Количество*Коэффициент,3))>0 Тогда
			Если (ПромОстаток-Окр(Количество*Коэффициент,3))<=Окр(Количество*Коэффициент,3)*Товар.ПроцентПогрешности/100 Тогда
				Осталось=ПромОстаток;
				СписатьИнгредиентСтар(Товар,Осталось,Единица,1,БлюдоВладелец,"СписатьИнгр",НомВлож);  
				Возврат 1;
			КонецЕсли;
		КонецЕсли;
		//-------------------------------------
		СписатьИнгредиентСтар(Товар,Количество,Единица,Коэффициент,БлюдоВладелец,"СписатьИнгр",НомВлож);
	КонецЕсли;                
	Возврат СтатусВозвр;
КонецФункции

Функция СписатьЗамену(Товар,Количество,Единица,Коэффициент,БлюдоВладелец,НомВлож)
	СписаниеЗамены = 0;
	ЕстьЗамена=0;        
	СтатусВозвр=1; 
	Если ТипУчета<Фин Тогда
		итТаблОстатки.УстановитьФильтр(Товар,Товар,"иТовар");
		ПромОстаток=итТаблОстатки.Итог("ОстатокТовара","иТовар");
	Иначе
		//ПромОстаток=РегПарт.СводныйОстаток(Фирма,Товар,,,,Склад,"ОстатокТовара");   
	КонецЕсли;
	//Если ((ПромОстаток < Окр(Количество*Коэффициент,3)) и (глРазрОтрицОстатки=Перечисление.Булево.Нет))Тогда
	Если ПромОстаток < Окр( Количество*Коэффициент,3 ) Тогда
		Если (Окр(Количество*Коэффициент,3)-ПромОстаток)<=Окр(Количество*Коэффициент,3)*Товар.ПроцентПогрешности/100 Тогда  //погрешность в минус
			Осталось=ПромОстаток;
			СписатьИнгредиент(Товар,Осталось,Единица,1,БлюдоВладелец,"СписатьИнгр",НомВлож); 
			Возврат 1;
		Иначе
			НеХватает=окр(Количество*Коэффициент,3)-?(ПромОстаток>0,ПромОстаток,0);
			Осталось=ПромОстаток;
			СписатьИнгредиент(Товар,Осталось,Единица,1,БлюдоВладелец,"СписатьИнгр",НомВлож);
			Если ПромЗамена<>"" Тогда
				СписаниеЗамены = 1;
				ДокумЗам=ПромЗамена;

				Если ДатаДок>='01.02.2010' Тогда
					НеХватает=Окр(НеХватает/Коэффициент,5);
				КонецЕсли;
				ДокумЗам.ВыбратьСтроки();
				Пока ДокумЗам.ПолучитьСтроку()=1 Цикл  
					
					ТовЗамены= ДокумЗам.Замена;  
					//данная проверка действительна только с 01.07.07
					Если КалькКарт.ДатаДок>='01.07.07' Тогда
						Если Единица.Единица<>ДокумЗам.Единица.Единица Тогда
							НехвЗамены=Окр(НеХватает/Коэффициент,5);
							Сообщить("В документе "+ДокумЗам+" у замены ингредиента "+ДокумЗам.Замена.Код+" "+ДокумЗам.Замена+" отличается единица замены <"+ДокумЗам.Единица+"> от калькуляции <"+Единица+"> !");	
							СтатусВозврата(0);
							Прервать;      
						Иначе
							Если ДатаДок<'01.02.2010' Тогда
								НеХватает=Окр(НеХватает/Коэффициент,5);
							КонецЕсли;
						КонецЕсли;      
					КонецЕсли;
					
					ЕстьЗамена=1;
					Если ТипУчета<Фин Тогда
						итТаблОстатки.УстановитьФильтр(ДокумЗам.Замена,ДокумЗам.Замена,"иТовар");
						ПромОстаток=итТаблОстатки.Итог("ОстатокТовара","иТовар");
					Иначе
						//ПромОстаток=РегПарт.СводныйОстаток(Фирма,ДокумЗам.Замена,,,,Склад,"ОстатокТовара");   
					КонецЕсли;
					Если (ПромОстаток < НЕХватает*ДокумЗам.КоэффициентЗамены*ДокумЗам.Коэффициент) Тогда
						ОстЗамены=?(ПромОстаток>0,ПромОстаток,0);
						НехвЗамены=НеХватает*ДокумЗам.КоэффициентЗамены*ДокумЗам.Коэффициент-ОстЗамены;
						СписатьИнгредиент(ДокумЗам.Замена,ОстЗамены,,1,БлюдоВладелец,"СписатьИнгр",НомВлож);
						ТовЗамены= ДокумЗам.Замена;
					Иначе
						СписатьИнгредиент(ДокумЗам.Замена,НеХватает*ДокумЗам.КоэффициентЗамены*ДокумЗам.Коэффициент,,1,БлюдоВладелец,"СписатьИнгр",НомВлож);
						НехвЗамены=0;
						Прервать;
					КонецЕсли;
					Попытка
						НеХватает=(НехвЗамены/(ДокумЗам.КоэффициентЗамены*ДокумЗам.Коэффициент));
					Исключение
						НеХватает=НехвЗамены;
					КонецПопытки;
					ЕстьЗамена=0;
				КонецЦикла;
				Если НехвЗамены>0 Тогда
					НеХватаетНаСкладе( ТовЗамены, БлюдоВладелец, НомВлож, Склад, НехвЗамены, ПромОстаток, "Списание замены" );
					//Сообщить("2Не хватает "+ТовЗамены.Код+" "+ТовЗамены+" "+НехвЗамены+" "+ТовЗамены.БазоваяЕдиницаИзмерения+" !"+" Блюдо: "+БлюдоВладелец.Код+" "+БлюдоВладелец.Наименование);
					//Если глНуженСписокТоваров=1 Тогда
					//	глСписокТоваров.НоваяСтрока();
					//	глСписокТоваров.Склад=Склад;
					//	глСписокТоваров.Товар=ТовЗамены;
					//	глСписокТоваров.Количество=НехвЗамены;
					//	глСписокТоваров.Остаток=ПромОстаток;
					//КонецЕсли;
					
					Если глРазрОтрицОстатки=Перечисление.Булево.Нет Тогда
						СтатусВозвр=0;
					КонецЕсли;
				КонецЕсли;
				СписаниеЗамены = 0;
			КонецЕсли; 
		КонецЕсли;          
		
		Если ЕстьЗамена=0 Тогда  
			НеХватаетНаСкладе( Товар, БлюдоВладелец, НомВлож, Склад, Нехватает, ПромОстаток, "Списание товара" );
			СписатьИнгредиент(Товар,Нехватает,Единица,1,БлюдоВладелец,"СписатьИнгр",НомВлож);
			//Сообщить("3Не хватает "+Товар.Код+" "+Товар+" "+Нехватает+" "+Товар.БазоваяЕдиницаИзмерения+" !"+" Блюдо: "+БлюдоВладелец.Код+" "+БлюдоВладелец.Наименование);
			//Если глНуженСписокТоваров=1 Тогда
			//	глСписокТоваров.НоваяСтрока();
			//	глСписокТоваров.Склад=Склад;
			//	глСписокТоваров.Товар=Товар;
			//	глСписокТоваров.Количество=Нехватает;
			//	глСписокТоваров.Остаток=ПромОстаток;
			//КонецЕсли;
			
			Если глРазрОтрицОстатки=Перечисление.Булево.Нет Тогда
				СтатусВозвр=0;
			КонецЕсли;
		КонецЕсли;
	Иначе 	// погрешность 
		Если (ПромОстаток-Окр(Количество*Коэффициент,3))>0 Тогда
			Если (ПромОстаток-Окр(Количество*Коэффициент,3))<=Окр(Количество*Коэффициент,3)*Товар.ПроцентПогрешности/100 Тогда
				Осталось=ПромОстаток;
				СписатьИнгредиент(Товар,Осталось,Единица,1,БлюдоВладелец,"СписатьИнгр",НомВлож);  
				Возврат 1;
			КонецЕсли;
		КонецЕсли;
		//-------------------------------------
		СписатьИнгредиент(Товар,Количество,Единица,Коэффициент,БлюдоВладелец,"СписатьИнгр",НомВлож);
	КонецЕсли;                
	Возврат СтатусВозвр;
КонецФункции

Функция семСписатьЗаменуСтар( пТовар, пКоличество, пЕдиница, пКоэффициент, пБлюдоВладелец, НомВлож )
	СписаниеЗамены = 0;
	ЕстьЗамена=0;        
	СтатусВозвр=1;
	ОстатокТовара = РегОстаткиТоваров.СводныйОстаток( пТовар,Склад,,"ОстатокТовара");
	КолвоТовара = Окр( пКоличество*пКоэффициент,3 );
	//Сообщить( Шаблон("[пТовар.Код] [пТовар] [пКоличество][пЕдиница]") );
	//Сообщить( Шаблон("ОстатокТовара = [ОстатокТовара] КолвоТовара=[КолвоТовара]") );
	Если ОстатокТовара < КолвоТовара Тогда
		Если (КолвоТовара-ОстатокТовара) <= КолвоТовара*Товар.ПроцентПогрешности/100 Тогда  //погрешность в минус
			СписатьИнгредиентСтар(пТовар,ОстатокТовара,пЕдиница,1,пБлюдоВладелец,"СписатьИнгр",НомВлож); 
			Возврат 1;
		Иначе
			НеХватаетТов = КолвоТовара - ?( ОстатокТовара > 0, ОстатокТовара, 0 );
			СписатьИнгредиентСтар(пТовар,ОстатокТовара,пЕдиница,1,пБлюдоВладелец,"СписатьИнгр",НомВлож);
			Если ПромЗамена<>"" Тогда
				            
				Если ДатаДок>='01.12.08' Тогда
					//обнаружена ошибка
					НеХватаетТов = НеХватаетТов/пКоэффициент; //восстанавливаем оригинальное кол-во товара как в калькуляции заложено
				КонецЕсли;
				НеХватаетЗам = 0;
				СписаниеЗамены = 1;
				ДокумЗам=ПромЗамена;
				ДокумЗам.ВыбратьСтроки();
				Пока ДокумЗам.ПолучитьСтроку()=1 Цикл  
					Замена = ДокумЗам.Замена;
					Если пЕдиница.Единица<>ДокумЗам.Единица.Единица Тогда
						Сообщить("В документе "+ДокумЗам+" у замены ингредиента "+Замена.Код+" "+Замена+" отличается единица замены <"+ДокумЗам.Единица+"> от калькуляции <"+Единица+"> !");	
						СтатусВозврата(0);
						Прервать;      
					КонецЕсли;      
					                 
					ЕстьЗамена=1;
					ОстатокЗамены = РегОстаткиТоваров.СводныйОстаток(Замена,Склад,,"ОстатокТовара");
					КоэфЗамены = ДокумЗам.КоэффициентЗамены*ДокумЗам.Коэффициент;
					Если (ОстатокЗамены < НеХватаетТов/Коэффициент*КоэфЗамены) Тогда
						НеХватаетЗам = НеХватаетТов*КоэфЗамены-?(ОстатокЗамены>0,ОстатокЗамены,0);
						СписатьИнгредиентСтар(Замена,ОстатокЗамены,,1,пБлюдоВладелец,"СписатьИнгр",НомВлож);
					Иначе
						СписатьИнгредиентСтар(Замена,НеХватаетТов*КоэфЗамены,,1,пБлюдоВладелец,"СписатьИнгр",НомВлож);
						НеХватаетЗам=0;
						Прервать;
					КонецЕсли;
					
					НеХватаетТов = НеХватаетЗам/КоэфЗамены;
					ЕстьЗамена=0;
				КонецЦикла;
				Если НеХватаетЗам>0 Тогда
					НеХватаетНаСкладе( Замена, пБлюдоВладелец, НомВлож, Склад, НеХватаетЗам, ОстатокЗамены, "Списание замены" );
					Если глРазрОтрицОстатки=Перечисление.Булево.Нет Тогда
						СтатусВозвр=0;
					КонецЕсли;
				КонецЕсли;
				СписаниеЗамены = 0;
			КонецЕсли; 
		КонецЕсли;          
		
		Если ЕстьЗамена=0 Тогда  
			НеХватаетНаСкладе( пТовар, пБлюдоВладелец, НомВлож, Склад, НеХватаетТов, ОстатокТовара, "Списание товара" );
			СписатьИнгредиентСтар(пТовар,НеХватаетТов,пЕдиница,1,пБлюдоВладелец,"СписатьИнгр",НомВлож);
			Если глРазрОтрицОстатки=Перечисление.Булево.Нет Тогда
				СтатусВозвр=0;
			КонецЕсли;
		КонецЕсли;
	Иначе 	// погрешность 
		Если (ОстатокТовара-КолвоТовара)>0 Тогда
			Если (ОстатокТовара-КолвоТовара) <= КолвоТовара*Товар.ПроцентПогрешности/100 Тогда
				СписатьИнгредиентСтар(пТовар,ОстатокТовара,пЕдиница,1,пБлюдоВладелец,"СписатьИнгр",НомВлож);  
				Возврат 1;
			КонецЕсли;
		КонецЕсли;
		СписатьИнгредиентСтар(пТовар,пКоличество,пЕдиница,пКоэффициент,пБлюдоВладелец,"СписатьИнгр",НомВлож);
	КонецЕсли;                
	Возврат СтатусВозвр;
КонецФункции

Функция семСписатьЗамену( пТовар, пКоличество, пЕдиница, пКоэффициент, пБлюдоВладелец, НомВлож )
	СписаниеЗамены = 0;
	ЕстьЗамена=0;        
	СтатусВозвр=1;
	итТаблОстатки.УстановитьФильтр(пТовар,пТовар,"иТовар");
	ОстатокТовара =итТаблОстатки.Итог("ОстатокТовара","иТовар");
	КолвоТовара = Окр( пКоличество*пКоэффициент,3 );
	//Сообщить( Шаблон("[пТовар.Код] [пТовар] [пКоличество][пЕдиница]") );
	//Сообщить( Шаблон("ОстатокТовара = [ОстатокТовара] КолвоТовара=[КолвоТовара]") );
	Если ОстатокТовара < КолвоТовара Тогда
		Если (КолвоТовара-ОстатокТовара) <= КолвоТовара*Товар.ПроцентПогрешности/100 Тогда  //погрешность в минус
			СписатьИнгредиент(пТовар,ОстатокТовара,пЕдиница,1,пБлюдоВладелец,"СписатьИнгр",НомВлож); 
			Возврат 1;
		Иначе
			НеХватаетТов = КолвоТовара - ?( ОстатокТовара > 0, ОстатокТовара, 0 );
			СписатьИнгредиент(пТовар,ОстатокТовара,пЕдиница,1,пБлюдоВладелец,"СписатьИнгр",НомВлож);
			Если ПромЗамена<>"" Тогда
				            
				Если ДатаДок>='01.12.08' Тогда
					//обнаружена ошибка
					НеХватаетТов = НеХватаетТов/пКоэффициент; //восстанавливаем оригинальное кол-во товара как в калькуляции заложено
				КонецЕсли;
				НеХватаетЗам = 0;
				СписаниеЗамены = 1;
				ДокумЗам=ПромЗамена;
				ДокумЗам.ВыбратьСтроки();
				Пока ДокумЗам.ПолучитьСтроку()=1 Цикл  
					Замена = ДокумЗам.Замена;
					Если пЕдиница.Единица<>ДокумЗам.Единица.Единица Тогда
						Сообщить("В документе "+ДокумЗам+" у замены ингредиента "+Замена.Код+" "+Замена+" отличается единица замены <"+ДокумЗам.Единица+"> от калькуляции <"+Единица+"> !");	
						СтатусВозврата(0);
						Прервать;      
					КонецЕсли;      
					                 
					ЕстьЗамена=1;
					итТаблОстатки.УстановитьФильтр(Замена,Замена,"иТовар");
					ОстатокЗамены =итТаблОстатки.Итог("ОстатокТовара","иТовар");
					
					КоэфЗамены = ДокумЗам.КоэффициентЗамены*ДокумЗам.Коэффициент;
					Если (ОстатокЗамены < НеХватаетТов/Коэффициент*КоэфЗамены) Тогда
						НеХватаетЗам = НеХватаетТов*КоэфЗамены-?(ОстатокЗамены>0,ОстатокЗамены,0);
						СписатьИнгредиент(Замена,ОстатокЗамены,,1,пБлюдоВладелец,"СписатьИнгр",НомВлож);
					Иначе
						СписатьИнгредиент(Замена,НеХватаетТов*КоэфЗамены,,1,пБлюдоВладелец,"СписатьИнгр",НомВлож);
						НеХватаетЗам=0;
						Прервать;
					КонецЕсли;
					
					НеХватаетТов = НеХватаетЗам/КоэфЗамены;
					ЕстьЗамена=0;
				КонецЦикла;
				Если НеХватаетЗам>0 Тогда
					НеХватаетНаСкладе( Замена, пБлюдоВладелец, НомВлож, Склад, НеХватаетЗам, ОстатокЗамены, "Списание замены" );
					Если глРазрОтрицОстатки=Перечисление.Булево.Нет Тогда
						СтатусВозвр=0;
					КонецЕсли;
				КонецЕсли;
				СписаниеЗамены = 0;
			КонецЕсли; 
		КонецЕсли;          
		
		Если ЕстьЗамена=0 Тогда  
			НеХватаетНаСкладе( пТовар, пБлюдоВладелец, НомВлож, Склад, НеХватаетТов, ОстатокТовара, "Списание товара" );
			СписатьИнгредиент(пТовар,НеХватаетТов,пЕдиница,1,пБлюдоВладелец,"СписатьИнгр",НомВлож);
			Если глРазрОтрицОстатки=Перечисление.Булево.Нет Тогда
				СтатусВозвр=0;
			КонецЕсли;
		КонецЕсли;
	Иначе 	// погрешность 
		Если (ОстатокТовара-КолвоТовара)>0 Тогда
			Если (ОстатокТовара-КолвоТовара) <= КолвоТовара*Товар.ПроцентПогрешности/100 Тогда
				СписатьИнгредиент(пТовар,ОстатокТовара,пЕдиница,1,пБлюдоВладелец,"СписатьИнгр",НомВлож);  
				Возврат 1;
			КонецЕсли;
		КонецЕсли;
		СписатьИнгредиент(пТовар,пКоличество,пЕдиница,пКоэффициент,пБлюдоВладелец,"СписатьИнгр",НомВлож);
	КонецЕсли;                
	Возврат СтатусВозвр;
КонецФункции


//***********************************************************
//<<Алгоритм Успеха>> (begin)
Функция СписатьТолькоБлюдо(ПромТовар,ПромКоличество,ПромЕдиница,ПромКоэффициент,БлюдоВладелец,НомВлож,РасхЦена=0,РасхНДС=0,РасхНП=0)

	ПромНомВлож=НомВлож;
	КолВлож=КолВлож+1;
	ПромКолВлож=КолВлож;

	СтатусВозвр=1;
	ЕстьКалькуляция=0;
	ДокумКальк=ПолучитьКалькуляцию(ДатаДок,ПромТовар);
	Если ДокумКальк<>0 Тогда
		ЕстьКалькуляция=1;
	КонецЕсли;
	НетКарты=0;
	Если ЕстьКалькуляция=0 Тогда
		НетКарты=1;
		Сообщить( "Не обнаружена Калькуляционная карта на "+ПромТовар.Наименование+" !!!");
		СтатусВозвр=0;
	КонецЕсли;
	КалькКарт=ДокумКальк;
	Коэф=ПромКоличество*ПромКоэффициент/ДокумКальк.КоличествоКалькуляции;
	ДокумКальк.ВыбратьСтроки();
	Пока ДокумКальк.ПолучитьСтроку()=1 Цикл 
		Если ДокумКальк.Ингредиент.ВидТовара=Перечисление.ВидыТоваров.Компонент  Тогда
			Продолжить;
		КонецЕсли;
		Если ДокумКальк.Замена.Выбран()=1 Тогда
			ПромЗамена=ДокумКальк.Замена;
		Иначе
			ПромЗамена="";
		КонецЕсли;	
		Если (ДокумКальк.Ингредиент.ВидТовара=Перечисление.ВидыТоваров.Ингредиент) ИЛИ (ДокумКальк.Ингредиент.ВидТовара=Перечисление.ВидыТоваров.Товар)  Тогда
			//Если СписатьЗамену(ДокумКальк.Ингредиент,ДокумКальк.Количество*Коэф,ДокумКальк.Единица,ДокумКальк.Коэффициент,ПромТовар)=0 Тогда
			//	СтатусВозвр=0;;
			//КонецЕсли;	        
			СписатьИнгредиент(ДокумКальк.Ингредиент,ДокумКальк.Количество*Коэф,ДокумКальк.Единица,ДокумКальк.Коэффициент,ПромТовар,"СписатьИнгр",ПромКолВлож, , , , 0);
		ИначеЕсли ДокумКальк.Ингредиент.ВидТовара=Перечисление.ВидыТоваров.Блюдо Тогда 
			КоличествоВложенногоБлюда=ДокумКальк.Количество*Коэф;
			//Если ТипУчета<Фин Тогда
			//	РегОстаткиТоваров.Товар=ДокумКальк.Ингредиент;
			//	РегОстаткиТоваров.ОстаткиПолучить(); 
			//	ЕстьОстатокБлюда=РегОстаткиТоваров.ОстатокТовара;
			//Иначе
			//	ЕстьОстатокБлюда=РегПарт.СводныйОстаток(Фирма,ДокумКальк.Ингредиент,,,,Склад,"ОстатокТовара");   
			//КонецЕсли;
			//Если ЕстьОстатокБлюда < КоличествоВложенногоБлюда Тогда //Нет нужного количества готовых блюд 
			//	Если ЕстьОстатокБлюда<>0 Тогда 
			//		Регистр.ОстаткиТоваров.Товар=ДокумКальк.Ингредиент;
			//		Регистр.ОстаткиТоваров.Склад=Склад;                     
			//		Регистр.ОстаткиТоваров.Блюдо=БлюдоВладелец;
			//		Регистр.ОстаткиТоваров.ОстатокТовара=ЕстьОстатокБлюда; 
			//		Регистр.ОстаткиТоваров.ФлагУчета=2;
			//		Если ТипУчета<Фин Тогда 
			//			ПеремещениеПоПартиям("Упр",ДокумКальк.Ингредиент,ЕстьОстатокБлюда,ПромТовар,"СписатьИнгр"); 
			//			Регистр.ОстаткиТоваров.ДвижениеРасходВыполнить();
			//		КонецЕсли;
			//		Если ТипУчета>Упр Тогда 
			//			ПеремещениеПоПартиям("Фин",ДокумКальк.Ингредиент,ЕстьОстатокБлюда,ПромТовар,"СписатьИнгр");
			//		КонецЕсли;  
			//	КонецЕсли;
			//	Если ЕстьОстатокБлюда<0 Тогда
					ЕстьОстатокБлюда=0;	
			//	КонецЕсли;
				НедостающееКоличествоБлюд=КоличествоВложенногоБлюда-ЕстьОстатокБлюда;
				Если НедостающееКоличествоБлюд=0 Тогда
					Продолжить;
				КонецЕсли;
				Если СписатьТолькоБлюдо(ДокумКальк.Ингредиент,НедостающееКоличествоБлюд,ПромЕдиница,ПромКоэффициент,ПромТовар,ПромКолВлож)=0 Тогда
					СтатусВозвр=0;    //блюда нет на складе,поэтому списываем ингредиенты 
				КонецЕсли;	          //себестоимость из части готовых и части произведенных блюд
				Если НетКарты=1 Тогда
					Продолжить;
				КонецЕсли;
			//Иначе      //на складе есть нужное количество готового блюда
			//	Регистр.ОстаткиТоваров.Товар=ДокумКальк.Ингредиент;
			//	Регистр.ОстаткиТоваров.Склад=Склад;
			//	Регистр.ОстаткиТоваров.ОстатокТовара=ПромКоличество*ПромКоэффициент;     
			//	Регистр.ОстаткиТоваров.ФлагУчета=2;
			//	Регистр.ОстаткиТоваров.Блюдо=БлюдоВладелец;
			//	Если ТипУчета<Фин Тогда 
			//		ПеремещениеПоПартиям("Упр",ДокумКальк.Ингредиент,ПромКоличество*ПромКоэффициент,ПромТовар,"ПродажаГотовогоБлюда",Цена,НДС,СуммаНП);
			//		Регистр.ОстаткиТоваров.ДвижениеРасходВыполнить();
			//	КонецЕсли;
			//	Если ТипУчета>Упр Тогда
			//		ПеремещениеПоПартиям("Фин",ДокумКальк.Ингредиент,ПромКоличество*ПромКоэффициент,ПромТовар,"ПродажаГотовогоБлюда",Цена,НДС,СуммаНП);  
			//		//себестоимость полностью берем из регистра 
			//	КонецЕсли;  
			//	НедостающееКоличествоБлюд=0;
			//КонецЕсли;
		КонецЕсли;	
	КонецЦикла; 
	ТабДляСебестоимости=СоздатьОбъект("ТаблицаЗначений");
	ТабБлюда.Выгрузить(ТабДляСебестоимости); 
	
	ТабДляСебестоимости.НоваяКолонка("СтоимостьУпр");
	ТабДляСебестоимости.НоваяКолонка("НДСУпр");                                                       //smip
	ТабДляСебестоимости.ВыбратьСтроки();
	Пока ТабДляСебестоимости.ПолучитьСтроку()=1 Цикл                                                  
		КурсВалютыУчета=КурсДляВалюты(ТабДляСебестоимости.Товар.ВалютаУчета,ДатаДок);
		ТабДляСебестоимости.СтоимостьУпр=ТабДляСебестоимости.СтоимБезНДС*КурсВалютыУчета; 
		ТабДляСебестоимости.НДСУпр=ТабДляСебестоимости.НДС*КурсВалютыУчета;  
	КонецЦикла;                                                                                        
	
	ТабДляСебестоимости.Свернуть("НомВложения,БлюдоВладелец,Фирма,КодОпер","СтоимБезНДС,НДС,СтоимостьУпр,НДСУпр");  //smip
	ТабДляСебестоимости.НоваяКолонка("Уд");
	ТабДляСебестоимости.ВыбратьСтроки();
	Пока ТабДляСебестоимости.ПолучитьСтроку()=1 Цикл 
		Если (ТабДляСебестоимости.БлюдоВладелец=ПромТовар) И (ТабДляСебестоимости.НомВложения=ПромКолВлож) Тогда
			ТабДляСебестоимости.Уд=0;
		Иначе
			ТабДляСебестоимости.Уд=1;
		КонецЕсли;
	КонецЦикла;
	НС="";
	П=1;
	Пока П=1 Цикл
		Если ТабДляСебестоимости.НайтиЗначение(1,НС,"Уд")=1 Тогда
			ТабДляСебестоимости.УдалитьСтроку(НС); 
			НС="";
		Иначе
			П=0
		КонецЕсли;
	КонецЦикла;
	Если (ТабДляСебестоимости.КоличествоСтрок()>0) И (ТипУчета<Фин) Тогда
		ТабДляСебестоимости.ПолучитьСтрокуПоНомеру(1); 
		//ПО РЕГИСТРУ ОСТАТКОВ БЛЮДО ТОЖЕ НАДО ОПРИХОДОВАТЬ И СПИСАТЬ, КАК В ПАРТИЯХ
		
		Регистр.ОстаткиТоваров.Фирма= Фирма;
		Регистр.ОстаткиТоваров.Товар=ТабДляСебестоимости.БлюдоВладелец;
		Регистр.ОстаткиТоваров.Склад=Склад;
		Регистр.ОстаткиТоваров.ОстатокТовара=ПромКоличество*ПромКоэффициент;     
		Регистр.ОстаткиТоваров.ФлагУчета=2;
		Регистр.ОстаткиТоваров.Блюдо="";
		Регистр.ОстаткиТоваров.ДвижениеПриходВыполнить();
		
		Регистр.ОстаткиТоваров.Товар=ТабДляСебестоимости.БлюдоВладелец;
		Регистр.ОстаткиТоваров.Склад=Склад;
		Регистр.ОстаткиТоваров.ОстатокТовара=ПромКоличество*ПромКоэффициент;     
		Регистр.ОстаткиТоваров.ФлагУчета=2;
		Регистр.ОстаткиТоваров.Блюдо=?(ТабДляСебестоимости.БлюдоВладелец=БлюдоВладелец,"",БлюдоВладелец);
		Регистр.ОстаткиТоваров.ДвижениеРасходВыполнить();
	КонецЕсли;
	
	ТабДляСебестоимости.ВыбратьСтроки();
	Пока ТабДляСебестоимости.ПолучитьСтроку()=1 Цикл  
		Если ТабДляСебестоимости.КодОпер=СписаниеНаПроизводcтвоБлюда Тогда
			ФирмаТаб=ТабДляСебестоимости.Фирма;
			БлюдоВладелецТаб=ТабДляСебестоимости.БлюдоВладелец;  
			СтоимБезНДСТаб=ТабДляСебестоимости.СтоимБезНДС;
			НДСТаб=ТабДляСебестоимости.НДС;
			Если ФирмаТаб.Выбран()=0 Тогда                                                       //smip
				КурсВалютыУчетаБлюда=КурсДляВалюты(БлюдоВладелецТаб.ВалютаУчета,ДатаДок);
				СтоимБезНДСТаб=ТабДляСебестоимости.СтоимостьУпр/КурсВалютыУчетаБлюда;
				НДСТаб=ТабДляСебестоимости.НДСУпр/КурсВалютыУчетаБлюда; 
			КонецЕсли;                                                                           //smip
			ТабБлюда.НоваяСтрока();
			ТабБлюда.НомВложения=ПромНомВлож;
			ТабБлюда.Фирма=ФирмаТаб;
			ТабБлюда.Товар=БлюдоВладелецТаб;
			ТабБлюда.ТипТовара=БлюдоВладелецТаб.ВидТовара;
			//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			Если (Партия.Выбран() = 0) и (Товар.Выбран() = 1) Тогда
				СпрПартии = СоздатьОбъект("Справочник.Партии");
				СпрПартии.ИспользоватьВладельца(Товар);
//				Сообщить("Для товара "+Товар.Код+" "+Товар+" записана новая партия!");
				глСоздатьНовыйОбъект(СпрПартии); 
				Попытка
					//Закомментировано Инсталлятором МОД:СпрПартии.Записать();
					//Начало текста, вставленного Инсталлятором МОД
					СпрПартии.Записать();
					//Конец текста, вставленного Инсталлятором МОД

					Партия = СпрПартии.ТекущийЭлемент();
					ДатаПроизв = ДатаДок;
				Исключение  
				КонецПопытки;
			КонецЕсли;
			ТабБлюда.Партия = глЗаполнитьПартию(Контекст,Партия);
			ТабБлюда.СрокРеализации = ТабБлюда.Партия.СрокРеализации;             
			//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			ТабБлюда.БлюдоВладелец=БлюдоВладелец;
			ТабБлюда.Статус=Произведенный;
			ТабБлюда.Контр="";
			ТабБлюда.ПрихДок=ТекущийДокумент();
			ТабБлюда.Остаток=ПромКоличество*ПромКоэффициент;
			ТабБлюда.СтоимБезНДС=СтоимБезНДСТаб;
			ТабБлюда.НДС=НДСТаб;
			ТабБлюда.КодОпер=ПроизводствоБлюда; 
			ТабБлюда.ДелатьДвижения = 1;
	
			ТабБлюда.НоваяСтрока();
			ТабБлюда.НомВложения=ПромНомВлож;
			ТабБлюда.Фирма=ФирмаТаб;
			ТабБлюда.Товар=БлюдоВладелецТаб;
			ТабБлюда.ТипТовара=БлюдоВладелецТаб.ВидТовара;
			//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			ТабБлюда.Партия = глЗаполнитьПартию(Контекст,Партия);
			ТабБлюда.СрокРеализации = ТабБлюда.Партия.СрокРеализации;             
			//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			ТабБлюда.БлюдоВладелец=БлюдоВладелец;
			ТабБлюда.Статус=Произведенный;
			ТабБлюда.Контр="";
			ТабБлюда.ПрихДок=ТекущийДокумент();
			ТабБлюда.Остаток=ПромКоличество*ПромКоэффициент;
			ТабБлюда.СтоимБезНДС=СтоимБезНДСТаб;
			ТабБлюда.НДС=НДСТаб;
			ТабБлюда.КодОпер=?(ТабДляСебестоимости.БлюдоВладелец=Товар,ПродажаБлюда,СписаниеНаПроизводcтвоБлюда);
			ТабБлюда.Оборот=ПромКоличество*РасхЦена;
			ТабБлюда.НДСРасхода=РасхНДС;
			ТабБлюда.НП=РасхНП;
			ТабБлюда.ДелатьДвижения = 1;
		КонецЕсли;
	КонецЦикла;   
	Возврат СтатусВозвр;
КонецФункции

//<<Алгоритм Успеха>> (end) 
//************************************************************
//-----------------------------------------------
Функция СписатьБлюдоСтар(ПромТовар,ПромКоличество,ПромЕдиница,ПромКоэффициент,БлюдоВладелец,НомВлож,РасхЦена=0,РасхНДС=0,РасхНП=0)
	ПромНомВлож=НомВлож;
	КолВлож=КолВлож+1;
	ПромКолВлож=КолВлож;

	СтатусВозвр=1;
	ЕстьКалькуляция=0;
	ДокумКальк=ПолучитьКалькуляцию(ДатаДок,ПромТовар,ТекущийДокумент());
	Если ДокумКальк<>0 Тогда
		ЕстьКалькуляция=1;
	КонецЕсли;
	НетКарты=0;
	Если ЕстьКалькуляция=0 Тогда
		НетКарты=1;
		Сообщить( "Не обнаружена Калькуляционная карта на "+ПромТовар.Наименование+" !!!");
		СтатусВозвр=0;
	КонецЕсли;
	КалькКарт=ДокумКальк;
	Коэф=ПромКоличество*ПромКоэффициент/ДокумКальк.КоличествоКалькуляции;
	ДокумКальк.ВыбратьСтроки();
	Пока ДокумКальк.ПолучитьСтроку()=1 Цикл 
		Если ДокумКальк.Ингредиент.ВидТовара=Перечисление.ВидыТоваров.Компонент  Тогда
			Продолжить;
		КонецЕсли;
		Если ДокумКальк.Замена.Выбран()=1 Тогда
			ПромЗамена=ДокумКальк.Замена;
		Иначе
			ПромЗамена="";
		КонецЕсли;	
		Если (ДокумКальк.Ингредиент.ВидТовара=Перечисление.ВидыТоваров.Ингредиент) ИЛИ (ДокумКальк.Ингредиент.ВидТовара=Перечисление.ВидыТоваров.Товар)  Тогда
			Если семСписатьЗаменуСтар(ДокумКальк.Ингредиент,ДокумКальк.Количество*Коэф,ДокумКальк.Единица,ДокумКальк.Коэффициент,ПромТовар,ПромКолВлож)=0 Тогда
				СтатусВозвр=0;;
			КонецЕсли;	
		ИначеЕсли ДокумКальк.Ингредиент.ВидТовара=Перечисление.ВидыТоваров.Блюдо Тогда 
			КоличествоВложенногоБлюда=ДокумКальк.Количество*Коэф;
			Если ТипУчета<Фин Тогда
				//РегОстаткиТоваров.Товар=ДокумКальк.Ингредиент;
				//РегОстаткиТоваров.ОстаткиПолучить(); 
				//ЕстьОстатокБлюда=РегОстаткиТоваров.ОстатокТовара;
				ЕстьОстатокБлюда=РегОстаткиТоваров.СводныйОстаток(ДокумКальк.Ингредиент,Склад,,"ОстатокТовара")
			Иначе
				ЕстьОстатокБлюда=РегПарт.СводныйОстаток(Фирма,ДокумКальк.Ингредиент,,,,Склад,"ОстатокТовара");   
			КонецЕсли;
			Если ЕстьОстатокБлюда < КоличествоВложенногоБлюда Тогда //Нет нужного количества готовых блюд 
				Если ЕстьОстатокБлюда<>0 Тогда 
					Регистр.ОстаткиТоваров.Фирма= Фирма;
					Регистр.ОстаткиТоваров.Товар=ДокумКальк.Ингредиент;
					Регистр.ОстаткиТоваров.Склад=Склад;                     
					Регистр.ОстаткиТоваров.Блюдо=БлюдоВладелец;
					Регистр.ОстаткиТоваров.ОстатокТовара=ЕстьОстатокБлюда; 
					Регистр.ОстаткиТоваров.ФлагУчета=2;
					Если ТипУчета<Фин Тогда 
						ПеремещениеПоПартиямСтар("Упр",ДокумКальк.Ингредиент,ЕстьОстатокБлюда,ПромТовар,"СписатьИнгр",ПромКолВлож); 
						Регистр.ОстаткиТоваров.ДвижениеРасходВыполнить();
					КонецЕсли;
					Если ТипУчета>Упр Тогда 
						ПеремещениеПоПартиямСтар("Фин",ДокумКальк.Ингредиент,ЕстьОстатокБлюда,ПромТовар,"СписатьИнгр",ПромКолВлож);
					КонецЕсли;  
				КонецЕсли;
				Если ЕстьОстатокБлюда<0 Тогда
					ЕстьОстатокБлюда=0;	
				КонецЕсли;
				НедостающееКоличествоБлюд=КоличествоВложенногоБлюда-ЕстьОстатокБлюда;
				Если НедостающееКоличествоБлюд=0 Тогда
					Продолжить;
				КонецЕсли;
				Если СписатьБлюдоСтар(ДокумКальк.Ингредиент,НедостающееКоличествоБлюд,ПромЕдиница,ПромКоэффициент,ПромТовар,ПромКолВлож)=0 Тогда
					СтатусВозвр=0;    //блюда нет на складе,поэтому списываем ингредиенты 
				КонецЕсли;	          //себестоимость из части готовых и части произведенных блюд
				Если НетКарты=1 Тогда
					Продолжить;
				КонецЕсли;
			Иначе      //на складе есть нужное количество готового блюда
				Регистр.ОстаткиТоваров.Фирма= Фирма;
				Регистр.ОстаткиТоваров.Товар=ДокумКальк.Ингредиент;
				Регистр.ОстаткиТоваров.Склад=Склад;
				Регистр.ОстаткиТоваров.ОстатокТовара=КоличествоВложенногоБлюда;
				Регистр.ОстаткиТоваров.ФлагУчета=2;
				Регистр.ОстаткиТоваров.Блюдо=БлюдоВладелец;
				Если ТипУчета<Фин Тогда 
					ПеремещениеПоПартиямСтар("Упр",ДокумКальк.Ингредиент,КоличествоВложенногоБлюда,ПромТовар,"ПродажаГотовогоБлюда",ПромКолВлож,(Сумма-НДС)/(Количество*Коэффициент),НДС,СуммаНП);
					Регистр.ОстаткиТоваров.ДвижениеРасходВыполнить();
				КонецЕсли;
				Если ТипУчета>Упр Тогда
					ПеремещениеПоПартиямСтар("Фин",ДокумКальк.Ингредиент,КоличествоВложенногоБлюда,ПромТовар,"ПродажаГотовогоБлюда",ПромКолВлож,(Сумма-НДС)/(Количество*Коэффициент),НДС,СуммаНП);  
					//себестоимость полностью берем из регистра 
				КонецЕсли;  
				НедостающееКоличествоБлюд=0;
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла; 
	ТабДляСебестоимости=СоздатьОбъект("ТаблицаЗначений");
	ТабБлюда.Выгрузить(ТабДляСебестоимости); 
	
	ТабДляСебестоимости.НоваяКолонка("СтоимостьУпр");
	ТабДляСебестоимости.НоваяКолонка("НДСУпр");                                                       //smip
	ТабДляСебестоимости.ВыбратьСтроки();
	Пока ТабДляСебестоимости.ПолучитьСтроку()=1 Цикл                                                  
		КурсВалютыУчета=КурсДляВалюты(ТабДляСебестоимости.Товар.ВалютаУчета,ДатаДок);
		ТабДляСебестоимости.СтоимостьУпр=ТабДляСебестоимости.СтоимБезНДС*КурсВалютыУчета; 
		ТабДляСебестоимости.НДСУпр=ТабДляСебестоимости.НДС*КурсВалютыУчета;  
	КонецЦикла;                                                                                        
	
	ТабДляСебестоимости.Свернуть("НомВложения,БлюдоВладелец,Фирма,КодОпер","СтоимБезНДС,НДС,СтоимостьУпр,НДСУпр");  //smip
	ТабДляСебестоимости.НоваяКолонка("Уд");
	ТабДляСебестоимости.ВыбратьСтроки();
	Пока ТабДляСебестоимости.ПолучитьСтроку()=1 Цикл 
		Если (ТабДляСебестоимости.БлюдоВладелец=ПромТовар) И (ТабДляСебестоимости.НомВложения=ПромКолВлож) Тогда
			ТабДляСебестоимости.Уд=0;
		Иначе
			ТабДляСебестоимости.Уд=1;
		КонецЕсли;
	КонецЦикла;
	НС="";
	П=1;
	Пока П=1 Цикл
		Если ТабДляСебестоимости.НайтиЗначение(1,НС,"Уд")=1 Тогда
			ТабДляСебестоимости.УдалитьСтроку(НС); 
			НС="";
		Иначе
			П=0
		КонецЕсли;
	КонецЦикла;
	Если (ТабДляСебестоимости.КоличествоСтрок()>0) И (ТипУчета<Фин) Тогда
		ТабДляСебестоимости.ПолучитьСтрокуПоНомеру(1); 
		//ПО РЕГИСТРУ ОСТАТКОВ БЛЮДО ТОЖЕ НАДО ОПРИХОДОВАТЬ И СПИСАТЬ, КАК В ПАРТИЯХ
		
		Регистр.ОстаткиТоваров.Фирма= Фирма;
		Регистр.ОстаткиТоваров.Товар=ТабДляСебестоимости.БлюдоВладелец;
		Регистр.ОстаткиТоваров.Склад=Склад;
		Регистр.ОстаткиТоваров.ОстатокТовара=ПромКоличество*ПромКоэффициент;     
		Регистр.ОстаткиТоваров.ФлагУчета=2;
		Регистр.ОстаткиТоваров.Блюдо="";
		Регистр.ОстаткиТоваров.ДвижениеПриходВыполнить();
		
		Регистр.ОстаткиТоваров.Товар=ТабДляСебестоимости.БлюдоВладелец;
		Регистр.ОстаткиТоваров.Склад=Склад;
		Регистр.ОстаткиТоваров.ОстатокТовара=ПромКоличество*ПромКоэффициент;     
		Регистр.ОстаткиТоваров.ФлагУчета=2;
		Регистр.ОстаткиТоваров.Блюдо=?(ТабДляСебестоимости.БлюдоВладелец=БлюдоВладелец,"",БлюдоВладелец);
		Регистр.ОстаткиТоваров.ДвижениеРасходВыполнить();
	КонецЕсли;
	
	ТабДляСебестоимости.ВыбратьСтроки();
	Пока ТабДляСебестоимости.ПолучитьСтроку()=1 Цикл  
		Если ТабДляСебестоимости.КодОпер=СписаниеНаПроизводcтвоБлюда Тогда
			ФирмаТаб=ТабДляСебестоимости.Фирма;
			БлюдоВладелецТаб=ТабДляСебестоимости.БлюдоВладелец;  
			СтоимБезНДСТаб=ТабДляСебестоимости.СтоимБезНДС;
			НДСТаб=ТабДляСебестоимости.НДС;
			Если ФирмаТаб.Выбран()=0 Тогда                                                       //smip
				КурсВалютыУчетаБлюда=КурсДляВалюты(БлюдоВладелецТаб.ВалютаУчета,ДатаДок);
				СтоимБезНДСТаб=ТабДляСебестоимости.СтоимостьУпр/КурсВалютыУчетаБлюда;
				НДСТаб=ТабДляСебестоимости.НДСУпр/КурсВалютыУчетаБлюда; 
			КонецЕсли;                                                                           //smip
			ТабБлюда.НоваяСтрока();     
			ТабБлюда.НомВложения=ПромНомВлож;
			ТабБлюда.Фирма=ФирмаТаб;
			ТабБлюда.Товар=БлюдоВладелецТаб;
			ТабБлюда.ТипТовара=БлюдоВладелецТаб.ВидТовара;
			//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			Если (Партия.Выбран() = 0) и (Товар.Выбран() = 1) Тогда
				СпрПартии = СоздатьОбъект("Справочник.Партии");
				СпрПартии.ИспользоватьВладельца(Товар);
//				Сообщить("Для товара "+Товар.Код+" "+Товар+" записана новая партия!");
				глСоздатьНовыйОбъект(СпрПартии); 
				Попытка
					//Закомментировано Инсталлятором МОД:
					СпрПартии.Записать();
	//Начало текста, вставленного Инсталлятором МОД
//	ОбъектЗаписать(СпрПартии, );
	//Конец текста, вставленного Инсталлятором МОД

					Партия = СпрПартии.ТекущийЭлемент();
					ДатаПроизв = ДатаДок;
				Исключение  
				КонецПопытки;
			КонецЕсли;
			ТабБлюда.Партия = глЗаполнитьПартию(Контекст,Партия);
			ТабБлюда.СрокРеализации = ТабБлюда.Партия.СрокРеализации;             
			//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			ТабБлюда.БлюдоВладелец=БлюдоВладелец;
			ТабБлюда.Статус=Произведенный;
			ТабБлюда.Контр="";
			ТабБлюда.ПрихДок=ТекущийДокумент();
			ТабБлюда.Остаток=ПромКоличество*ПромКоэффициент;
			ТабБлюда.СтоимБезНДС=СтоимБезНДСТаб;
			ТабБлюда.НДС=НДСТаб;
			ТабБлюда.КодОпер=ПроизводствоБлюда; 
			ТабБлюда.ДелатьДвижения = 1;
			
			ТабБлюда.НоваяСтрока();  
			ТабБлюда.НомВложения=ПромНомВлож;
			ТабБлюда.Фирма=ФирмаТаб;
			ТабБлюда.Товар=БлюдоВладелецТаб;
			ТабБлюда.ТипТовара=БлюдоВладелецТаб.ВидТовара;
			//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			ТабБлюда.Партия = глЗаполнитьПартию(Контекст,Партия);
			ТабБлюда.СрокРеализации = ТабБлюда.Партия.СрокРеализации;             
			//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			ТабБлюда.БлюдоВладелец=БлюдоВладелец;
			ТабБлюда.Статус=Произведенный;
			ТабБлюда.Контр="";
			ТабБлюда.ПрихДок=ТекущийДокумент();
			ТабБлюда.Остаток=ПромКоличество*ПромКоэффициент;
			ТабБлюда.СтоимБезНДС=СтоимБезНДСТаб;
			ТабБлюда.НДС=НДСТаб;
			ТабБлюда.КодОпер=?(ТабДляСебестоимости.БлюдоВладелец=Товар,ПродажаБлюда,СписаниеНаПроизводcтвоБлюда);
			ТабБлюда.Оборот=ПромКоличество*РасхЦена;
			ТабБлюда.НДСРасхода=РасхНДС;
			ТабБлюда.НП=РасхНП;
			ТабБлюда.ДелатьДвижения = 1;
		КонецЕсли;
	КонецЦикла;   
	Возврат СтатусВозвр;
КонецФункции

Функция СписатьБлюдо(ПромТовар,ПромКоличество,ПромЕдиница,ПромКоэффициент,БлюдоВладелец,НомВлож,РасхЦена=0,РасхНДС=0,РасхНП=0)
	ПромНомВлож=НомВлож;
	КолВлож=КолВлож+1;
	ПромКолВлож=КолВлож;

	СтатусВозвр=1;
	ЕстьКалькуляция=0;
	ДокумКальк=ПолучитьКалькуляцию(ДатаДок,ПромТовар,ТекущийДокумент());
	Если ДокумКальк<>0 Тогда
		ЕстьКалькуляция=1;
	КонецЕсли;
	НетКарты=0;
	Если ЕстьКалькуляция=0 Тогда
		НетКарты=1;
		Сообщить( "Не обнаружена Калькуляционная карта на "+ПромТовар.Наименование+" !!!");
		СтатусВозвр=0;
	КонецЕсли;
	КалькКарт=ДокумКальк;
	Коэф=ПромКоличество*ПромКоэффициент/ДокумКальк.КоличествоКалькуляции;
	ДокумКальк.ВыбратьСтроки();
	Пока ДокумКальк.ПолучитьСтроку()=1 Цикл 
		Если ДокумКальк.Ингредиент.ВидТовара=Перечисление.ВидыТоваров.Компонент  Тогда
			Продолжить;
		КонецЕсли;
		Если ДокумКальк.Замена.Выбран()=1 Тогда
			ПромЗамена=ДокумКальк.Замена;
		Иначе
			ПромЗамена="";
		КонецЕсли;	
		Если (ДокумКальк.Ингредиент.ВидТовара=Перечисление.ВидыТоваров.Ингредиент) ИЛИ (ДокумКальк.Ингредиент.ВидТовара=Перечисление.ВидыТоваров.Товар)  Тогда
			Если семСписатьЗамену(ДокумКальк.Ингредиент,ДокумКальк.Количество*Коэф,ДокумКальк.Единица,ДокумКальк.Коэффициент,ПромТовар,ПромКолВлож)=0 Тогда
				СтатусВозвр=0;;
			КонецЕсли;	
		ИначеЕсли ДокумКальк.Ингредиент.ВидТовара=Перечисление.ВидыТоваров.Блюдо Тогда 
			КоличествоВложенногоБлюда=ДокумКальк.Количество*Коэф;
			Если ТипУчета<Фин Тогда
				итТаблОстатки.УстановитьФильтр(ДокумКальк.Ингредиент,ДокумКальк.Ингредиент,"иТовар");
				ЕстьОстатокБлюда=итТаблОстатки.Итог("ОстатокТовара","иТовар");
			Иначе
				//ЕстьОстатокБлюда=РегПарт.СводныйОстаток(Фирма,ДокумКальк.Ингредиент,,,,Склад,"ОстатокТовара");   
			КонецЕсли;
			Если ЕстьОстатокБлюда < КоличествоВложенногоБлюда Тогда //Нет нужного количества готовых блюд 
				Если ЕстьОстатокБлюда<>0 Тогда 
					Регистр.ОстаткиТоваров.Фирма= Фирма;
					Регистр.ОстаткиТоваров.Товар=ДокумКальк.Ингредиент;
					Регистр.ОстаткиТоваров.Склад=Склад;                     
					Регистр.ОстаткиТоваров.Блюдо=БлюдоВладелец;
					Регистр.ОстаткиТоваров.ОстатокТовара=ЕстьОстатокБлюда; 
					Регистр.ОстаткиТоваров.ФлагУчета=2;
					Если ТипУчета<Фин Тогда 
						ПеремещениеПоПартиям("Упр",ДокумКальк.Ингредиент,ЕстьОстатокБлюда,ПромТовар,"СписатьИнгр",ПромКолВлож); 
						Регистр.ОстаткиТоваров.ДвижениеРасходВыполнить();
						
						итТаблОстатки.ВыбратьСтроки("иТовар");
						Если итТаблОстатки.ПолучитьСтроку("иТовар") = 1 Тогда
							итТаблОстатки.ОстатокТовара = итТаблОстатки.ОстатокТовара - Окр(Регистр.ОстаткиТоваров.ОстатокТовара,3);
						КонецЕсли;
						
					КонецЕсли;
					Если ТипУчета>Упр Тогда 
						ПеремещениеПоПартиям("Фин",ДокумКальк.Ингредиент,ЕстьОстатокБлюда,ПромТовар,"СписатьИнгр",ПромКолВлож);
					КонецЕсли;  
				КонецЕсли;
				Если ЕстьОстатокБлюда<0 Тогда
					ЕстьОстатокБлюда=0;	
				КонецЕсли;
				НедостающееКоличествоБлюд=КоличествоВложенногоБлюда-ЕстьОстатокБлюда;
				Если НедостающееКоличествоБлюд=0 Тогда
					Продолжить;
				КонецЕсли;
				Если СписатьБлюдо(ДокумКальк.Ингредиент,НедостающееКоличествоБлюд,ПромЕдиница,ПромКоэффициент,ПромТовар,ПромКолВлож)=0 Тогда
					СтатусВозвр=0;    //блюда нет на складе,поэтому списываем ингредиенты 
				КонецЕсли;	          //себестоимость из части готовых и части произведенных блюд
				Если НетКарты=1 Тогда
					Продолжить;
				КонецЕсли;
			Иначе      //на складе есть нужное количество готового блюда
				Регистр.ОстаткиТоваров.Фирма= Фирма;
				Регистр.ОстаткиТоваров.Товар=ДокумКальк.Ингредиент;
				Регистр.ОстаткиТоваров.Склад=Склад;
				Регистр.ОстаткиТоваров.ОстатокТовара=КоличествоВложенногоБлюда;
				Регистр.ОстаткиТоваров.ФлагУчета=2;
				Регистр.ОстаткиТоваров.Блюдо=БлюдоВладелец;
				Если ТипУчета<Фин Тогда 
					ПеремещениеПоПартиям("Упр",ДокумКальк.Ингредиент,КоличествоВложенногоБлюда,ПромТовар,"ПродажаГотовогоБлюда",ПромКолВлож,(Сумма-НДС)/(Количество*Коэффициент),НДС,СуммаНП);
					Регистр.ОстаткиТоваров.ДвижениеРасходВыполнить();
					итТаблОстатки.ВыбратьСтроки("иТовар");
					Если итТаблОстатки.ПолучитьСтроку("иТовар") = 1 Тогда
						итТаблОстатки.ОстатокТовара = итТаблОстатки.ОстатокТовара - Окр(Регистр.ОстаткиТоваров.ОстатокТовара,3);
					КонецЕсли;
					
				КонецЕсли;
				Если ТипУчета>Упр Тогда
					ПеремещениеПоПартиям("Фин",ДокумКальк.Ингредиент,КоличествоВложенногоБлюда,ПромТовар,"ПродажаГотовогоБлюда",ПромКолВлож,(Сумма-НДС)/(Количество*Коэффициент),НДС,СуммаНП);  
					//себестоимость полностью берем из регистра 
				КонецЕсли;  
				НедостающееКоличествоБлюд=0;
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла; 
	ТабДляСебестоимости=СоздатьОбъект("ТаблицаЗначений");
	ТабБлюда.Выгрузить(ТабДляСебестоимости); 
	
	ТабДляСебестоимости.НоваяКолонка("СтоимостьУпр");
	ТабДляСебестоимости.НоваяКолонка("ПродСтоимостьУпр");
	ТабДляСебестоимости.НоваяКолонка("НДСУпр");                                                       //smip
	ТабДляСебестоимости.ВыбратьСтроки();
	Пока ТабДляСебестоимости.ПолучитьСтроку()=1 Цикл                                                  
		КурсВалютыУчета=КурсДляВалюты(ТабДляСебестоимости.Товар.ВалютаУчета,ДатаДок);
		ТабДляСебестоимости.СтоимостьУпр=ТабДляСебестоимости.СтоимБезНДС*КурсВалютыУчета;
		ТабДляСебестоимости.ПродСтоимостьУпр=ТабДляСебестоимости.ПродСтоимБезНДС*КурсВалютыУчета; 
		ТабДляСебестоимости.НДСУпр=ТабДляСебестоимости.НДС*КурсВалютыУчета;  
	КонецЦикла;                                                                                        
	
	ТабДляСебестоимости.Свернуть("НомВложения,БлюдоВладелец,Фирма,КодОпер","СтоимБезНДС,ПродСтоимБезНДС,НДС,ПродСтоимостьУпр,СтоимостьУпр,НДСУпр");  //smip
	ТабДляСебестоимости.НоваяКолонка("Уд");
	ТабДляСебестоимости.ВыбратьСтроки();
	Пока ТабДляСебестоимости.ПолучитьСтроку()=1 Цикл 
		Если (ТабДляСебестоимости.БлюдоВладелец=ПромТовар) И (ТабДляСебестоимости.НомВложения=ПромКолВлож) Тогда
			ТабДляСебестоимости.Уд=0;
		Иначе
			ТабДляСебестоимости.Уд=1;
		КонецЕсли;
	КонецЦикла;
	НС="";
	П=1;
	Пока П=1 Цикл
		Если ТабДляСебестоимости.НайтиЗначение(1,НС,"Уд")=1 Тогда
			ТабДляСебестоимости.УдалитьСтроку(НС); 
			НС="";
		Иначе
			П=0
		КонецЕсли;
	КонецЦикла;
	Если (ТабДляСебестоимости.КоличествоСтрок()>0) И (ТипУчета<Фин) Тогда
		ТабДляСебестоимости.ПолучитьСтрокуПоНомеру(1); 
		//ПО РЕГИСТРУ ОСТАТКОВ БЛЮДО ТОЖЕ НАДО ОПРИХОДОВАТЬ И СПИСАТЬ, КАК В ПАРТИЯХ
		
		Регистр.ОстаткиТоваров.Фирма= Фирма;
		Регистр.ОстаткиТоваров.Товар=ТабДляСебестоимости.БлюдоВладелец;
		Регистр.ОстаткиТоваров.Склад=Склад;
		Регистр.ОстаткиТоваров.ОстатокТовара=ПромКоличество*ПромКоэффициент;     
		Регистр.ОстаткиТоваров.ФлагУчета=2;
		Регистр.ОстаткиТоваров.Блюдо="";
		Регистр.ОстаткиТоваров.ДвижениеПриходВыполнить();
		
		Регистр.ОстаткиТоваров.Товар=ТабДляСебестоимости.БлюдоВладелец;
		Регистр.ОстаткиТоваров.Склад=Склад;
		Регистр.ОстаткиТоваров.ОстатокТовара=ПромКоличество*ПромКоэффициент;     
		Регистр.ОстаткиТоваров.ФлагУчета=2;
		Регистр.ОстаткиТоваров.Блюдо=?(ТабДляСебестоимости.БлюдоВладелец=БлюдоВладелец,"",БлюдоВладелец);
		Регистр.ОстаткиТоваров.ДвижениеРасходВыполнить();
	КонецЕсли;
	
	ТабДляСебестоимости.ВыбратьСтроки();
	Пока ТабДляСебестоимости.ПолучитьСтроку()=1 Цикл  
		Если ТабДляСебестоимости.КодОпер=СписаниеНаПроизводcтвоБлюда Тогда
			ФирмаТаб=ТабДляСебестоимости.Фирма;
			БлюдоВладелецТаб=ТабДляСебестоимости.БлюдоВладелец;  
			СтоимБезНДСТаб=ТабДляСебестоимости.СтоимБезНДС;
			ПродСтоимБезНДСТаб=ТабДляСебестоимости.ПродСтоимБезНДС;
			НДСТаб=ТабДляСебестоимости.НДС;
			Если ФирмаТаб.Выбран()=0 Тогда                                                       //smip
				КурсВалютыУчетаБлюда=КурсДляВалюты(БлюдоВладелецТаб.ВалютаУчета,ДатаДок);
				СтоимБезНДСТаб=ТабДляСебестоимости.СтоимостьУпр/КурсВалютыУчетаБлюда;
				ПродСтоимБезНДСТаб=ТабДляСебестоимости.ПродСтоимостьУпр/КурсВалютыУчетаБлюда;
				НДСТаб=ТабДляСебестоимости.НДСУпр/КурсВалютыУчетаБлюда; 
			КонецЕсли;                                                                           //smip
			ТабБлюда.НоваяСтрока();     
			ТабБлюда.НомВложения=ПромНомВлож;
			ТабБлюда.Фирма=ФирмаТаб;
			ТабБлюда.Товар=БлюдоВладелецТаб;
			ТабБлюда.ТипТовара=БлюдоВладелецТаб.ВидТовара;
			//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			Если (Партия.Выбран() = 0) и (Товар.Выбран() = 1) Тогда
				СпрПартии = СоздатьОбъект("Справочник.Партии");
				СпрПартии.ИспользоватьВладельца(Товар);
//				Сообщить("Для товара "+Товар.Код+" "+Товар+" записана новая партия!");
				глСоздатьНовыйОбъект(СпрПартии); 
				Попытка
					//Закомментировано Инсталлятором МОД:
					СпрПартии.Записать();
	//Начало текста, вставленного Инсталлятором МОД
//	ОбъектЗаписать(СпрПартии, );
	//Конец текста, вставленного Инсталлятором МОД

					Партия = СпрПартии.ТекущийЭлемент();
					ДатаПроизв = ДатаДок;
				Исключение  
				КонецПопытки;
			КонецЕсли;
			ТабБлюда.Партия = глЗаполнитьПартию(Контекст,Партия);
			ТабБлюда.СрокРеализации = ТабБлюда.Партия.СрокРеализации;             
			//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			ТабБлюда.БлюдоВладелец=БлюдоВладелец;
			ТабБлюда.Статус=Произведенный;
			ТабБлюда.Контр="";
			ТабБлюда.ПрихДок=ТекущийДокумент();
			ТабБлюда.Остаток=ПромКоличество*ПромКоэффициент;
			ТабБлюда.СтоимБезНДС=СтоимБезНДСТаб;
			ТабБлюда.ПродСтоимБезНДС=ПродСтоимБезНДСТаб;
			ТабБлюда.НДС=НДСТаб;
			ТабБлюда.КодОпер=ПроизводствоБлюда; 
			ТабБлюда.ДелатьДвижения = 1;
			
			ТабБлюда.НоваяСтрока();  
			ТабБлюда.НомВложения=ПромНомВлож;
			ТабБлюда.Фирма=ФирмаТаб;
			ТабБлюда.Товар=БлюдоВладелецТаб;
			ТабБлюда.ТипТовара=БлюдоВладелецТаб.ВидТовара;
			//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			ТабБлюда.Партия = глЗаполнитьПартию(Контекст,Партия);
			ТабБлюда.СрокРеализации = ТабБлюда.Партия.СрокРеализации;             
			//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			ТабБлюда.БлюдоВладелец=БлюдоВладелец;
			ТабБлюда.Статус=Произведенный;
			ТабБлюда.Контр="";
			ТабБлюда.ПрихДок=ТекущийДокумент();
			ТабБлюда.Остаток=ПромКоличество*ПромКоэффициент;
			ТабБлюда.СтоимБезНДС=СтоимБезНДСТаб;
			ТабБлюда.ПродСтоимБезНДС=ПродСтоимБезНДСТаб;
			ТабБлюда.НДС=НДСТаб;
			ТабБлюда.КодОпер=?(ТабДляСебестоимости.БлюдоВладелец=Товар,ПродажаБлюда,СписаниеНаПроизводcтвоБлюда);
			ТабБлюда.Оборот=ПромКоличество*РасхЦена;
			ТабБлюда.НДСРасхода=РасхНДС;
			ТабБлюда.НП=РасхНП;
			ТабБлюда.ДелатьДвижения = 1;
		КонецЕсли;
	КонецЦикла;   
	Возврат СтатусВозвр;
КонецФункции

//-----------------------------------------------
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаПроведения() Далее
//Конец текста, вставленного Инсталлятором МОД
Процедура стар_ОбработкаПроведенияСтар()
	//Закомментировано Инсталлятором МОД:Процедура ОбработкаПроведения()
        // сем \\
	Если семМожноПровести( Контекст ) = 0 Тогда Возврат; КонецЕсли;
	семОбновитьКурс( контекст );
        // сем //
	Если Склад.Выбран()=0 Тогда
		НеПроводить(Контекст,"Не выбран склад!");
		Возврат;
	КонецЕсли;
	Если КоличествоСтрок()=0 Тогда 
		НеПроводить(Контекст,"Не введены блюда!");
		Возврат;
	КонецЕсли;    
	
	Если Агент.Выбран()=0 Тогда
		Агент=Склад.Агент;    
	КонецЕсли;
	
	Если ПустоеЗначение(КатегорияЦены)=1 Тогда
		КатегорияЦены = Константа.РестораннаяКатегорияЦены;
	КонецЕсли;
	
	Если (Нал=Нет) И (ПустоеЗначение(Клиент)=1) Тогда
		НеПроводить(Контекст,"Не указан клиент для безналичных расчетов!");
		Возврат;
	КонецЕсли;

	Клиент.ИспользоватьДату(ДатаДок);
	// Запишем главного клиента
	Если Клиент.КлГруппа.Выбран()=1 Тогда
		КлГруппа=Клиент.КлГруппа;
	Иначе
		КлГруппа=Клиент;
	КонецЕсли;       
	
	КлГруппа.ИспользоватьДату("");
	
	Если КлГруппа.ДляВыгрузки=0 Тогда
		спр=СоздатьОбъект("Справочник.Контрагенты");
		Спр.НайтиЭлемент(КлГруппа);
		Спр.ДляВыгрузки=1;
		ОбъектЗаписать(Спр,);
	КонецЕсли;		
	
	ТабБлюда=СоздатьОбъект("ТаблицаЗначений");
	ТабБлюда.НоваяКолонка("Фирма");
	ТабБлюда.НоваяКолонка("Товар");
	ТабБлюда.НоваяКолонка("ТипТовара");
	ТабБлюда.НоваяКолонка("БлюдоВладелец");
	ТабБлюда.НоваяКолонка("Статус");
	ТабБлюда.НоваяКолонка("Контр");
	ТабБлюда.НоваяКолонка("ПрихДок");
	ТабБлюда.НоваяКолонка("Остаток","Число");
	ТабБлюда.НоваяКолонка("СтоимБезНДС","Число");
	ТабБлюда.НоваяКолонка("НДС","Число");
	ТабБлюда.НоваяКолонка("КодОпер");
	ТабБлюда.НоваяКолонка("Оборот","Число");      
	ТабБлюда.НоваяКолонка("НДСРасхода","Число");
	ТабБлюда.НоваяКолонка("НП","Число"); 
	ТабБлюда.НоваяКолонка("Партия");  
	ТабБлюда.НоваяКолонка("СрокРеализации");
	ТабБлюда.НоваяКолонка("ДелатьДвижения");
	ТабБлюда.НоваяКолонка("НомВложения");
	
	ТабДляВзаиморасчетов=СоздатьОбъект("ТаблицаЗначений"); 
	ТабДляВзаиморасчетов.НоваяКолонка("Фирма");
	ТабДляВзаиморасчетов.НоваяКолонка("Долг");
	ТабДляВзаиморасчетов.НоваяКолонка("СтавкаНДС");
	
	КурсВалютыДокумента=Курс;
	КурсВалВзаиморасчетов=?(КлГруппа.ВалютаВзаиморасчетов.Выбран()=1,КурсДляВалюты(КлГруппа.ВалютаВзаиморасчетов,ДатаДок),КурсДляВалюты(Константа.ВалютаВзаиморасчетов,ДатаДок));
	
	Парт=СоздатьОбъект("ТаблицаЗначений");
	ВремРегистры=СоздатьОбъект("Регистры");
	РегПарт=ВремРегистры.ПартииТоваров;
	РегОстаткиТоваров=ВремРегистры.ОстаткиТоваров;
	
	Если Нал = Нет Тогда
		РегВзаиморасчетыПок=ВремРегистры.ВзаиморасчетыПокупателей;
	КонецЕсли;
	Если ИтогиАктуальны()=0  Тогда
		РегОстаткиТоваров.ВременныйРасчет();
		РегПарт.ВременныйРасчет();            
		
		РегОстаткиТоваров.УстановитьЗначениеФильтра("Склад",Склад,1);
		Если Константа.ПартииНаСкладах=Перечисление.Булево.Да Тогда
			РегПарт.УстановитьЗначениеФильтра("Склад",Склад,1);
		КонецЕсли;           
		
		Если Константа.РежимПроверки = 1 Тогда
			спТоваров = семПолучтьСписокИспТоваров( ТекущийДокумент() );
			РегОстаткиТоваров.УстановитьЗначениеФильтра("Товар",спТоваров,2);
			РегПарт.УстановитьЗначениеФильтра("Товар",спТоваров,2);
 		КонецЕсли;

		Если Нал = Нет Тогда
			РегВзаиморасчетыПок.УстановитьЗначениеФильтра("Клиент",КлГруппа,1);
			РегВзаиморасчетыПок.ВременныйРасчет();
		КонецЕсли;
		ВремРегистры.Актуальность(1);
		ВремРегистры.РассчитатьРегистрыНа(ТекущийДокумент());
	КонецЕсли;
	// склпарт
	Если Константа.ПартииНаСкладах=Перечисление.Булево.Да Тогда
		ПромСклад=Склад;
	Иначе
		ПромСклад="";
	КонецЕсли;     
	              

	РегОстаткиТоваров.Склад=ПромСклад;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		
		НачалоСтроки_=_GetPerformanceCounter();
		КолВлож=0;
		Если Коэффициент=0 Тогда
			Коэффициент=1;
		КонецЕсли;
		
		Состояние("Движения документа: "+НомерСтроки+"/"+КоличествоСтрок());
		
		Регистр.ПартииТоваров.ПривязыватьСтроку(НомерСтроки);
		Регистр.ОстаткиТоваров.ПривязыватьСтроку(НомерСтроки);

		Если ((Товар.ВидТовара=Перечисление.ВидыТоваров.Ингредиент)или(Товар.ВидТовара=Перечисление.ВидыТоваров.Товар)) Тогда
			СписатьИнгредиентСтар(Товар,Количество,Единица,Коэффициент,Товар,"ПродажаИнгр",1,Сумма,НДС,СуммаНП);
		ИначеЕсли  Товар.ВидТовара=Перечисление.ВидыТоваров.Блюдо Тогда 
			НачальноеБлюдо=Товар;
			ПроверкаВложенныхБлюд(НачальноеБлюдо);
			Если Найден=1 Тогда
				Предупреждение("Неправильно реализована схема ""блюдо в блюде"" для блюда "+Товар.Наименование,5);
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
			Если Найден=2 Тогда
				Предупреждение("Нет калькуляционной карты для блюда "+Товар.Наименование+" или одного из блюд, вложенных в него",5);
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
			
			//***********************************************************
			//<<Алгоритм Успеха>> (begin)
			Если Константа.СписыватьИнгридиентыВМО.Получить(ДатаДок) = Перечисление.Булево.Нет  Тогда
				//Надо оприходовать и списывать блюда...это криво, но ничего не поделаешь ... пока это так
				НедостающееКоличествоБлюд=окр(Количество*Коэффициент,3);
				Если СписатьТолькоБлюдо(Товар,НедостающееКоличествоБлюд,Единица,1,Товар,1,Сумма/НедостающееКоличествоБлюд,НДС,СуммаНП)=0 Тогда
					СтатусВозврата(0); 
				КонецЕсли;	           
			Иначе
				//<<Алгоритм Успеха>> (end) 
				//************************************************************
				Если ТипУчета<Фин Тогда
					//РегОстаткиТоваров.Товар=Товар;
					//РегОстаткиТоваров.ОстаткиПолучить(); 
					//ЕстьОстатокБлюда=РегОстаткиТоваров.ОстатокТовара;
					ЕстьОстатокБлюда=РегОстаткиТоваров.СводныйОстаток(Товар,ПромСклад,,"ОстатокТовара")
				Иначе
					ЕстьОстатокБлюда=РегПарт.СводныйОстаток(Фирма,Товар,,,,ПромСклад,"ОстатокТовара");   
				КонецЕсли;
				Если ЕстьОстатокБлюда < окр(Количество*Коэффициент,3) Тогда //Нет нужного количества готовых блюд 
					Если ЕстьОстатокБлюда<>0 Тогда 
						Регистр.ОстаткиТоваров.Товар=Товар;
						Регистр.ОстаткиТоваров.Склад=Склад;                     
						Регистр.ОстаткиТоваров.Блюдо="";
						Регистр.ОстаткиТоваров.ОстатокТовара=ЕстьОстатокБлюда; 
						Регистр.ОстаткиТоваров.ФлагУчета=2;
						Если ТипУчета<Фин Тогда
							Регистр.ОстаткиТоваров.ДвижениеРасходВыполнить();
							ПеремещениеПоПартиямСтар("Упр",Товар,ЕстьОстатокБлюда,Товар,"ПродажаГотовогоБлюда",1,(Сумма-НДС)/(Количество*Коэффициент),НДС,СуммаНП);
						КонецЕсли;
						Если ТипУчета>Упр Тогда 
							ПеремещениеПоПартиямСтар("Фин",Товар,ЕстьОстатокБлюда,Товар,"ПродажаГотовогоБлюда",1,(Сумма-НДС)/(Количество*Коэффициент),НДС,СуммаНП);
						КонецЕсли;  
					КонецЕсли;
					Если ЕстьОстатокБлюда<0 Тогда
						ЕстьОстатокБлюда=0;	
					КонецЕсли;
					НедостающееКоличествоБлюд=окр(Количество*Коэффициент,3)-ЕстьОстатокБлюда;
					Если НедостающееКоличествоБлюд=0 Тогда
						Продолжить;
					КонецЕсли;  
					Если СписатьБлюдоСтар(Товар,НедостающееКоличествоБлюд,Единица,1,Товар,1,(Сумма-НДС)/(Количество*Коэффициент),НДС,СуммаНП)=0 Тогда
						СтатусВозврата(0); //блюда нет на складе,поэтому списываем ингредиенты 
					КонецЕсли;	           //себестоимость из части готовых и части произведенных блюд
					Если НетКарты=1 Тогда
						Продолжить;
					КонецЕсли;
				Иначе      //на складе есть нужноеколичество готового блюда
					Регистр.ОстаткиТоваров.Фирма= Фирма;
					Регистр.ОстаткиТоваров.Товар=Товар;
					Регистр.ОстаткиТоваров.Склад=Склад;
					Регистр.ОстаткиТоваров.ОстатокТовара=Количество*Коэффициент;     
					Регистр.ОстаткиТоваров.ФлагУчета=2;
					Регистр.ОстаткиТоваров.Блюдо="";
					Если ТипУчета<Фин Тогда
						Регистр.ОстаткиТоваров.ДвижениеРасходВыполнить(); 
						ПеремещениеПоПартиямСтар("Упр",Товар,Количество*Коэффициент,Товар,"ПродажаГотовогоБлюда",1,(Сумма-НДС)/(Количество*Коэффициент),НДС,СуммаНП);
					КонецЕсли;
					Если ТипУчета>Упр Тогда
						ПеремещениеПоПартиямСтар("Фин",Товар,Количество*Коэффициент,Товар,"ПродажаГотовогоБлюда",1,(Сумма-НДС)/(Количество*Коэффициент),НДС,СуммаНП);  
						//себестоимость полностью берем из регистра
					КонецЕсли;  
					НедостающееКоличествоБлюд=0;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		//------------------------------------------------------------------------------------------------------------------  
		ТабБлюда.ВыбратьСтроки();
		Если Константа.ПартииНаСкладах=Перечисление.Булево.Да Тогда
			СкладВРегистр=Склад;
		Иначе
			СкладВРегистр="";
		КонецЕсли;	
		Пока ТабБлюда.ПолучитьСтроку()>0 Цикл //Здесь нужно прописать все движения по списанию блюда 
			// по регистру "Остатки товаров"
			КОп=ТабБлюда.КодОпер;
			
			//***********************************************************
			//<<Алгоритм Успеха>> (begin)
			Если ТабБлюда.ДелатьДвижения = 0 Тогда
			    Продолжить;
			КонецЕсли;
			//<<Алгоритм Успеха>> (end) 
			//************************************************************
			
			Если (КОп=ПродажаТовара) или (КОп=ПродажаБлюда) Тогда
				//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
				//Регистр.ПартииТоваров.ДвижениеРасход(ТабБлюда.Фирма,ТабБлюда.Товар,ТабБлюда.Статус,ТабБлюда.Контр,ТабБлюда.ПрихДок,СкладВРегистр,ТабБлюда.Партия,ТабБлюда.СрокРеализации,ТабБлюда.Остаток,ТабБлюда.СтоимБезНДС,0,ТабБлюда.НДС,ТабБлюда.Оборот,ТабБлюда.НДС,ТабБлюда.НДСРасхода,ТабБлюда.КодОпер,ТабБлюда.НП,13,);
				Регистр.ПартииТоваров.ДвижениеРасход(ТабБлюда.Фирма,ТабБлюда.Товар,ТабБлюда.Статус,ТабБлюда.Контр,ТабБлюда.ПрихДок,СкладВРегистр,ТабБлюда.Партия,ТабБлюда.СрокРеализации,ТабБлюда.Остаток,ТабБлюда.СтоимБезНДС,0,ТабБлюда.НДС,ТабБлюда.Оборот,ТабБлюда.НДС,ТабБлюда.НДСРасхода,?(ТабБлюда.Статус=Принятый,ПродажаПринятогоТовара,ТабБлюда.КодОпер),ТабБлюда.НП,13,);
				//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			ИначеЕсли КОп=СписаниеНаПроизводcтвоБлюда Тогда
				Фл=33;
				Если Константа.СписыватьИнгридиентыВМО.Получить(ДатаДок) = Перечисление.Булево.Нет  Тогда
					Фл=34;
				КонецЕсли;
				//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
				//Регистр.ПартииТоваров.ДвижениеРасход(ТабБлюда.Фирма,ТабБлюда.Товар,ТабБлюда.Статус,ТабБлюда.Контр,ТабБлюда.ПрихДок,СкладВРегистр,ТабБлюда.Партия,ТабБлюда.СрокРеализации,ТабБлюда.Остаток,ТабБлюда.СтоимБезНДС,0,ТабБлюда.НДС,,,,ТабБлюда.КодОпер,,Фл,ТабБлюда.БлюдоВладелец);
				Регистр.ПартииТоваров.ДвижениеРасход(ТабБлюда.Фирма,ТабБлюда.Товар,ТабБлюда.Статус,ТабБлюда.Контр,ТабБлюда.ПрихДок,СкладВРегистр,ТабБлюда.Партия,ТабБлюда.СрокРеализации,ТабБлюда.Остаток,ТабБлюда.СтоимБезНДС,0,ТабБлюда.НДС,,,,?(ТабБлюда.Статус=Принятый,ПродажаПринятогоТовара,ТабБлюда.КодОпер),,Фл,ТабБлюда.БлюдоВладелец);
				//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			ИначеЕсли КОп=ПроизводствоБлюда Тогда
				Фл=33;
				Если Константа.СписыватьИнгридиентыВМО.Получить(ДатаДок) = Перечисление.Булево.Нет  Тогда
					Фл=34;
				КонецЕсли;
				
				Регистр.ПартииТоваров.ДвижениеПриход(ТабБлюда.Фирма,ТабБлюда.Товар,ТабБлюда.Статус,ТабБлюда.Контр,ТабБлюда.ПрихДок,СкладВРегистр,ТабБлюда.Партия,ТабБлюда.СрокРеализации,ТабБлюда.Остаток,ТабБлюда.СтоимБезНДС,0,ТабБлюда.НДС,,,,ТабБлюда.КодОпер,,Фл,);
			КонецЕсли; 
			
			Если (КОп=ПродажаТовара) или (КОп=ПродажаБлюда) Тогда			
				ТабДляВзаиморасчетов.НоваяСтрока();
				ТабДляВзаиморасчетов.Фирма=ТабБлюда.Фирма;
				СуммаДолгаРуб=(ТабБлюда.Оборот+ТабБлюда.НДСРасхода)*КурсВалютыДокумента;
				СуммаДолгаФин=СуммаДолгаРуб;
				СуммаДолгаУпр=СуммаДолгаРуб/КурсВалВзаиморасчетов;
				ТабДляВзаиморасчетов.Долг=?(ТабБлюда.Фирма.Выбран()=1,СуммаДолгаФин,СуммаДолгаУпр);
				ТабДляВзаиморасчетов.СтавкаНДС=ТабБлюда.Товар.СтавкаНДС; 
			КонецЕсли;
		КонецЦикла; 
		ТабБлюда.УдалитьСтроки();
		
		КонецСтроки=_GetPerformanceCounter();
		
		Если НазваниеНабораПрав()="Администратор" Тогда
			//Сообщить("Время проведения строки "+НомерСтроки+", мс: "+(КонецСтроки-НачалоСтроки_));
		КонецЕсли;
		
	КонецЦикла; //Перебор строк марочного отчета

	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		
		Если Товар.ВидТовара=Перечисление.ВидыТоваров.Услуга Тогда
			ТабДляВзаиморасчетов.НоваяСтрока();
			ПромФирма=Фирма;
			ТабДляВзаиморасчетов.Фирма=ПромФирма;
			СуммаДолгаРуб=Сумма*КурсВалютыДокумента;
			СуммаДолгаФин=СуммаДолгаРуб;
			СуммаДолгаУпр=СуммаДолгаРуб/КурсВалВзаиморасчетов;
			ТабДляВзаиморасчетов.Долг=?(Фирма.Выбран()=1,СуммаДолгаФин,СуммаДолгаУпр);
			ТабДляВзаиморасчетов.СтавкаНДС=Товар.СтавкаНДС;
		КонецЕсли;
	КонецЦикла;
	
	//ТабДляВзаиморасчетов.ВыбратьСтроку();
	
	//-------------------------------------------------------------------------------------------------------	
	// учет по Кредитам 
	// ВЫГРУЗКА ИТОГОВ ПО ВЗАИМОРАСЧЕТАМ В ТАБЛИЦУ И ПЕРЕБОР ИХ - ТАКЖЕ, КАК С ПАРТИЯМИ. 
	// ЕСЛИ В ИТОГАХ НИЧЕГО ПОДХОДЯЩЕГО НЕТ ИЛИ ВСЕ УЖЕ ЗАКРЫТО, ТО СОЗДАТЬ НОВУЮ ПАРТИЮ
	
	Если Нал = Нет Тогда
//	Если Загружен<>1 Тогда
		ТабДляВзаиморасчетов.Свернуть("Фирма,СтавкаНДС","Долг"); 
		ТабДляВзаиморасчетов.ВыбратьСтроки();
		Пока ТабДляВзаиморасчетов.ПолучитьСтроку()=1 Цикл
			СуммаНадоЗакрыть=ТабДляВзаиморасчетов.Долг;
			Если СуммаНадоЗакрыть<0 Тогда
				Продолжить;
			КонецЕсли;
			Если ТабДляВзаиморасчетов.Фирма.Выбран()=1 Тогда
				ПромФирма=ТабДляВзаиморасчетов.Фирма;
			Иначе
				ПромФирма=Фирма;
			КонецЕсли;
			ПромКлиент=КлГруппа;
			ПромСтавкаНДС=?(ТабДляВзаиморасчетов.Фирма.Выбран()=1,ТабДляВзаиморасчетов.СтавкаНДС,"");
			ПромВидОтгрузки="";
			
			РегВзаиморасчетыПок.УстановитьФильтр(ПромФирма,ПромКлиент,ПромСтавкаНДС,ПромВидОтгрузки);
			РегВзаиморасчетыПок.ВыгрузитьИтоги(ТабВзПок,1,1); 
			Если ТабДляВзаиморасчетов.Фирма.Выбран()=1 Тогда
				ТабВзПок.Сортировать("+КредДокумент",1);
			Иначе
				ТабВзПок.Сортировать("+КредДокумент",1);
			КонецЕсли;	
			ТабВзПок.ВыбратьСтроки();
			Пока ТабВзПок.ПолучитьСтроку()=1 Цикл
				ОстатокДолгаРег=ТабВзПок.Долг;
				Если ОстатокДолгаРег>0 Тогда
					Продолжить;
				КонецЕсли;
				Если -ОстатокДолгаРег>=СуммаНадоЗакрыть Тогда
					ЗакрытьОстатокДолга=СуммаНадоЗакрыть;
				Иначе
					ЗакрытьОстатокДолга=-ОстатокДолгаРег;
				КонецЕсли;
				ФирмаДвиж=ТабВзПок.Фирма;
				КлиентДвиж=ТабВзПок.Клиент;
				СтавкаНДСДвиж=ТабВзПок.СтавкаНДС;
				ВидОтгрузкиДвиж=ТабВзПок.ВидОтгрузки;
				КредДокументДвиж=ТабВзПок.КредДокумент;
				ДолгДвиж=ЗакрытьОстатокДолга;
				КодОперацииДвиж=ОтгрузкаОплаченногоТовараКупленного;
				
				Регистр.ВзаиморасчетыПокупателей.ДвижениеПриход(ФирмаДвиж,КлиентДвиж,СтавкаНДСДвиж,ВидОтгрузкиДвиж,КредДокументДвиж,ДолгДвиж,КодОперацииДвиж,0);
				
				СуммаЗакрыто=ЗакрытьОстатокДолга;//сумма, на которую только что закрыли
				СуммаНадоЗакрыть=СуммаНадоЗакрыть-СуммаЗакрыто;
			КонецЦикла;
			Если СуммаНадоЗакрыть>0 Тогда //создаем задолженность покупателя
				ФирмаДвиж=ТабДляВзаиморасчетов.Фирма;
				КлиентДвиж=КлГруппа;
				СтавкаНДСДвиж=?(ФирмаДвиж.Выбран()=1,ТабДляВзаиморасчетов.СтавкаНДС,"");
				ВидОтгрузкиДвиж=?(ФирмаДвиж.Выбран()=1,ОтгрузкаТовара,"");
				КредДокументДвиж=ТекущийДокумент();
				ДолгДвиж=СуммаНадоЗакрыть;
				КодОперацииДвиж=НеоплаченнаяОтгрузкаТовараКупленного;
				Регистр.ВзаиморасчетыПокупателей.ДвижениеПриход(ФирмаДвиж,КлиентДвиж,СтавкаНДСДвиж,ВидОтгрузкиДвиж,КредДокументДвиж,ДолгДвиж,КодОперацииДвиж,0);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	ЗаписатьСебестоимостьСтар();
	
	Если глЗаполнитьРеквизитыДокументаШ(Контекст,0)=0 Тогда
		Сообщить("Внимание: Не удалось заполнить реквизиты Ш. Обязательно обратитесь к админстратору!!!","!");
	КонецЕсли; 
	        
	Если Константа.СписыватьИнгридиентыВМО.Получить(ДатаДок) = Перечисление.Булево.Нет  Тогда
		СебестоимостьШ=0;
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			Если Товар.ВидТовара<>Перечисление.ВидыТоваров.Блюдо Тогда
				СебестоимостьШ=СебестоимостьШ+Себестоимость;
			КонецЕсли;
		КонецЦикла;
	Иначе
		СебестоимостьШ=Итог("Себестоимость");
	КонецЕсли;
	
	Если Нал = Да Тогда
		_Получено = 0;
		_ПолученоКарта = 0;
		_ПолученоПодарочнаяКарта = 0;
		_ВалютаПлатежа = ?(ДатаДок<'01.01.14',Латы,Рубли);
		Док = СоздатьОбъект("Документ.ОплатаЧеков");
		Док.ВыбратьДокументы(ДатаДок, ДатаДок);
		Пока Док.ПолучитьДокумент() = 1 Цикл
			Если Док.Склад <> Склад Тогда Продолжить; КонецЕсли;
			Если Док.Касса <> Касса Тогда Продолжить; КонецЕсли;
			Если Док.Проведен() = 0 Тогда
				Сообщить("Не проведен документ Оплата чеков "+Док+" - могут быть некорректные данные по кассовому отчету!");
				Продолжить;
			КонецЕсли;
			
			Док.ВыбратьСтроки();
			Пока Док.ПолучитьСтроку() = 1 Цикл
				Если Док.ВалютаРК.Тип = Перечисление.ТипыВалютРК.КредитныеКарты Тогда
					_ПолученоКарта = _ПолученоКарта + Пересчет(Док.Сумма, Док.ВалютаРК.Валюта, ДатаДок, _ВалютаПлатежа, ДатаДок);
				ИначеЕсли Док.ВалютаРК.Тип = Перечисление.ТипыВалютРК.ПодарочныеКарты Тогда
					_ПолученоПодарочнаяКарта = _ПолученоПодарочнаяКарта + Пересчет(Док.Сумма, Док.ВалютаРК.Валюта, ДатаДок, _ВалютаПлатежа, ДатаДок);
				ИначеЕсли Док.ВалютаРК.Тип = Перечисление.ТипыВалютРК.Наличные Тогда
					_Получено = _Получено + Пересчет(Док.Сумма, Док.ВалютаРК.Валюта, ДатаДок, _ВалютаПлатежа, ДатаДок);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;       
		ПолученоНал = _Получено;
		ПолученоКарта = _ПолученоКарта;
		ПолученоПодарочнаяКарта = _ПолученоПодарочнаяКарта;
		ВалютаПлатежа = _ВалютаПлатежа;
	КонецЕсли;
	
	глОборотыТоваров(Контекст);

	СообщОтладка(СообщитьРеквизитыШ(Контекст),"I");
	
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// продажа товара, принятого на реализацию
	РегПартДляРеализации = СоздатьОбъект("Регистр.ПартииТоваров");
	РегПартДляРеализации.ВыбратьДвиженияДокумента(ТекущийДокумент());
	Пока РегПартДляРеализации.ПолучитьДвижение() = 1 Цикл
	    Если не(РегПартДляРеализации.Статус = Принятый) 
		или (РегПартДляРеализации.Приход = 1) Тогда
	        Продолжить;
	    КонецЕсли;
		Если ПогашениеДолгаПоКредиту(Контекст,РегПартДляРеализации.ПрихДокумент,РегПартДляРеализации.Стоимость+РегПартДляРеализации.НДС,РегПартДляРеализации.Товар.СтавкаНДС,"Упр",Строка(РегПартДляРеализации.Товар.ВидТовара)) = 1 Тогда
			Возврат;
		КонецЕсли;                                                    
		Регистр.ПродажаВзятогоНаРеализацию.ПривязыватьСтроку(РегПартДляРеализации.НомерСтроки());
		ДокПриходнаяРеализатора = РегПартДляРеализации.ПрихДокумент;
		Регистр.ПродажаВзятогоНаРеализацию.Фирма = РегПартДляРеализации.Фирма;
		Регистр.ПродажаВзятогоНаРеализацию.Клиент = ДокПриходнаяРеализатора.Клиент;
		Регистр.ПродажаВзятогоНаРеализацию.Товар  = РегПартДляРеализации.Товар;
		Регистр.ПродажаВзятогоНаРеализацию.ОстатокТовара = РегПартДляРеализации.ОстатокТовара;
		Регистр.ПродажаВзятогоНаРеализацию.ПродСтоимость = РегПартДляРеализации.Стоимость;
		Регистр.ПродажаВзятогоНаРеализацию.ДвижениеПриходВыполнить();
	КонецЦикла;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	
КонецПроцедуры

Функция ОстатокТовара(пТовар)
	
	ТекстЗапроса="SELECT ОстаткиТоваров.ОстатокТовараОстаток ОстатокТовара
	|			  FROM $РегистрОстатки.ОстаткиТоваров("+?(ИтогиАктуальны()=1,"",":Позиция~")+",,
	|												(Склад = :ВыбСклад) AND (Товар = :ВыбТовар),
	|												Товар,) AS ОстаткиТоваров		
	|";
	
	ЗапросОстатки.УстановитьТекстовыйПараметр("ВыбСклад",Склад);
	ЗапросОстатки.УстановитьТекстовыйПараметр("ВыбТовар",пТовар);
	ЗапросОстатки.УстановитьТекстовыйПараметр("Позиция", СформироватьПозициюДокумента(ТекущийДокумент(),1));
	
	Возврат ЗапросОстатки.ВыполнитьСкалярный(ТекстЗапроса);
	
КонецФункции

Функция ПолучитьПартииТоваров(пТовар)
	
	ТекстЗапроса="SELECT ПартииТоваров.Товар [Товар $Справочник.Номенклатура]
	|					, ПартииТоваров.Статус Статус
	|					, ПартииТоваров.ПрихДокумент [ПрихДокумент $Документ]
//		|					, Журн.IDDOCDEF [IncomeWayBill_Вид $ВидДокумента]
	|					, ПартииТоваров.Контрагент [Контрагент $Справочник.Контрагенты]
	|					, ПартииТоваров.Партия [Партия $Справочник.Партии]
	|					, ПартииТоваров.СрокРеализации СрокРеализации
	|					, ПартииТоваров.ОстатокТовараОстаток ОстатокТовара
	|					, ПартииТоваров.СтоимостьОстаток Стоимость
	|					, ПартииТоваров.НДСОстаток НДС
	|					, ПартииТоваров.ПродСтоимостьОстаток ПродСтоимость
	|					, 99 Приоритет
	|			  FROM $РегистрОстатки.ПартииТоваров("+?(ИтогиАктуальны()=1,"",":Позиция~")+",,(Фирма = $ПустойИД) AND (Склад = :ВыбСклад) AND (Товар = :ВыбТовар),
	|												,) AS ПартииТоваров
	|			  WHERE ПартииТоваров.ОстатокТовараОстаток > 0 
//		|			  LEFT JOIN _1sjourn Журн (NOLOCK) ON Журн.IDDOC=PartiesGoodsОстатки.IncomeWayBill
	|";
	
	
	ЗапросПартии.УстановитьТекстовыйПараметр("ВыбСклад",Склад);
	ЗапросПартии.УстановитьТекстовыйПараметр("ВыбТовар",пТовар);
	ЗапросПартии.УстановитьТекстовыйПараметр("Позиция", СформироватьПозициюДокумента(ТекущийДокумент(),1));

	итПартии=СоздатьОбъект("ИндексированнаяТаблица");
	ЗапросПартии.ВыполнитьИнструкцию(ТекстЗапроса,итПартии);
	
	Возврат итПартии;
КонецФункции

Процедура стар_ОбработкаПроведения()
	//Закомментировано Инсталлятором МОД:Процедура ОбработкаПроведения()
        // сем \\
	Если семМожноПровести( Контекст ) = 0 Тогда Возврат; КонецЕсли;
	семОбновитьКурс( контекст );
        // сем //
	Если Склад.Выбран()=0 Тогда
		НеПроводить(Контекст,"Не выбран склад!");
		Возврат;
	КонецЕсли;
	Если КоличествоСтрок()=0 Тогда 
		НеПроводить(Контекст,"Не введены блюда!");
		Возврат;
	КонецЕсли;    
	
	Если Агент.Выбран()=0 Тогда
		Агент=Склад.Агент;    
	КонецЕсли;
	
	Если ПустоеЗначение(КатегорияЦены)=1 Тогда
		КатегорияЦены = Константа.РестораннаяКатегорияЦены;
	КонецЕсли;
	
	Если (Нал=Нет) И (ПустоеЗначение(Клиент)=1) Тогда
		НеПроводить(Контекст,"Не указан клиент для безналичных расчетов!");
		Возврат;
	КонецЕсли;

	Клиент.ИспользоватьДату(ДатаДок);
	// Запишем главного клиента
	Если Клиент.КлГруппа.Выбран()=1 Тогда
		КлГруппа=Клиент.КлГруппа;
	Иначе
		КлГруппа=Клиент;
	КонецЕсли;       
	
	КлГруппа.ИспользоватьДату("");
	
	Если КлГруппа.ДляВыгрузки=0 Тогда
		спр=СоздатьОбъект("Справочник.Контрагенты");
		Спр.НайтиЭлемент(КлГруппа);
		Спр.ДляВыгрузки=1;
		ОбъектЗаписать(Спр,);
	КонецЕсли;		
	
	ТабБлюда=СоздатьОбъект("ИндексированнаяТаблица");
	ТабБлюда.НоваяКолонка("Фирма");
	ТабБлюда.НоваяКолонка("Товар");
	ТабБлюда.НоваяКолонка("ТипТовара");
	ТабБлюда.НоваяКолонка("БлюдоВладелец");
	ТабБлюда.НоваяКолонка("Статус");
	ТабБлюда.НоваяКолонка("Контр");
	ТабБлюда.НоваяКолонка("ПрихДок");
	ТабБлюда.НоваяКолонка("Остаток");
	ТабБлюда.НоваяКолонка("СтоимБезНДС");
	ТабБлюда.НоваяКолонка("ПродСтоимБезНДС");
	ТабБлюда.НоваяКолонка("НДС");
	ТабБлюда.НоваяКолонка("КодОпер");
	ТабБлюда.НоваяКолонка("Оборот");      
	ТабБлюда.НоваяКолонка("НДСРасхода");
	ТабБлюда.НоваяКолонка("НП"); 
	ТабБлюда.НоваяКолонка("Партия");  
	ТабБлюда.НоваяКолонка("СрокРеализации");
	ТабБлюда.НоваяКолонка("ДелатьДвижения");
	ТабБлюда.НоваяКолонка("НомВложения");
	
//	ТабБлюда.ДобавитьИндекс("иТоварПартия","*Товар,*Контр,ПрихДок,*Партия,СрокРеализации");
	
	ТабДляВзаиморасчетов=СоздатьОбъект("ТаблицаЗначений"); 
	ТабДляВзаиморасчетов.НоваяКолонка("Фирма");
	ТабДляВзаиморасчетов.НоваяКолонка("Долг");
	ТабДляВзаиморасчетов.НоваяКолонка("СтавкаНДС");
	
	КурсВалютыДокумента=Курс;
	КурсВалВзаиморасчетов=?(КлГруппа.ВалютаВзаиморасчетов.Выбран()=1,КурсДляВалюты(КлГруппа.ВалютаВзаиморасчетов,ДатаДок),КурсДляВалюты(Константа.ВалютаВзаиморасчетов,ДатаДок));
	
	//Сообщить("Товаров: "+спТоваров.РазмерСписка());
	
	Позиция=СформироватьПозициюДокумента(ТекущийДокумент(),0);
	
	
	ЗапросСКЛ=СоздатьОбъект("ODBCRecordSet");
	
	//спТоваров = семПолучтьСписокИспТоваров( ТекущийДокумент());
	//ЗапросСКЛ.УложитьСписокОбъектов(спТоваров,"#Товары");	
	
	ТекстЗапроса="SELECT ОстаткиТоваров.Товар [Товар $Справочник.Номенклатура]
	|					, ОстаткиТоваров.ОстатокТовараОстаток ОстатокТовара
	|			  FROM $РегистрОстатки.ОстаткиТоваров("+?(ИтогиАктуальны()=1,"",":Позиция~")+",,
	|												(Склад = :ВыбСклад) AND (Фирма = :ВыбФирма),
	|												Товар,) AS ОстаткиТоваров		
	|";
	ЗапросСКЛ.УстановитьТекстовыйПараметр("ВыбСклад",Склад);
	ЗапросСКЛ.УстановитьТекстовыйПараметр("ВыбФирма",Фирма);
//	ЗапросСКЛ.УстановитьТекстовыйПараметр("ВыбДок", ТекущийДокумент());
	ЗапросСКЛ.УстановитьТекстовыйПараметр("Позиция", Позиция );
	
	итТаблОстатки=СоздатьОбъект("ИндексированнаяТаблица");
	ЗапросСКЛ.ВыполнитьИнструкцию(ТекстЗапроса,итТаблОстатки);
	итТаблОстатки.ДобавитьИндекс("иТовар","*Товар");
//	Сообщить("Остатки: "+итТаблОстатки.КоличествоСтрок());
//	итТаблОстатки.Показать();
	
	Условия=" (Фирма = :ВыбФирма AND Склад = :ВыбСклад) ";
//	Условия=Условия+" AND Товар IN (SELECT Val FROM #Товары)";
	//ЗапросСКЛ.УстановитьТекстовыйПараметр("ВыбДок",ТекущийДокумент());
	ЗапросСКЛ.УстановитьТекстовыйПараметр("ВыбСклад",Склад);
	ЗапросСКЛ.УстановитьТекстовыйПараметр("ВыбФирма",Фирма);
	
	итТаблПартии=СоздатьОбъект("ИндексированнаяТаблица");
		
	ТекстЗапроса="SELECT ПартииТоваров.Товар [Товар $Справочник.Номенклатура]
	|					, ПартииТоваров.Статус Статус
	|					, ПартииТоваров.ПрихДокумент [ПрихДокумент $Документ]
//		|					, Журн.IDDOCDEF [IncomeWayBill_Вид $ВидДокумента]
	|					, ПартииТоваров.Контрагент [Контрагент $Справочник.Контрагенты]
	|					, ПартииТоваров.Партия [Партия $Справочник.Партии]
	|					, ПартииТоваров.СрокРеализации СрокРеализации
	|					, ПартииТоваров.ОстатокТовараОстаток ОстатокТовара
	|					, ПартииТоваров.СтоимостьОстаток Стоимость
	|					, ПартииТоваров.НДСОстаток НДС
	|					, ПартииТоваров.ПродСтоимостьОстаток ПродСтоимость
	|					, 99 Приоритет
	|			  FROM $РегистрОстатки.ПартииТоваров("+?(ИтогиАктуальны()=1,"",":Позиция~")+",,"+Условия+",
	|												,) AS ПартииТоваров
	|			  WHERE ПартииТоваров.ОстатокТовараОстаток > 0 
//		|			  LEFT JOIN _1sjourn Журн (NOLOCK) ON Журн.IDDOC=PartiesGoodsОстатки.IncomeWayBill
	|";
		
	ЗапросСКЛ.УстановитьТекстовыйПараметр("Позиция",Позиция);

	ЗапросСКЛ.ВыполнитьИнструкцию(ТекстЗапроса,итТаблПартии);
	итТаблПартии.ДобавитьИндекс("иТовар","*Товар,СрокРеализации,-Статус,ПрихДокумент");
//	итТаблПартии.ДобавитьИндекс("иТовар","*Товар");
//	Сообщить("Партии: "+итТаблПартии.КоличествоСтрок());
//	итТаблПартии.Показать();	
	
	Парт=СоздатьОбъект("ТаблицаЗначений");
	
	Если Нал = Нет Тогда
		ВремРегистры=СоздатьОбъект("Регистры");
		РегВзаиморасчетыПок=ВремРегистры.ВзаиморасчетыПокупателей;
		Если ИтогиАктуальны()=0  Тогда
			РегВзаиморасчетыПок.УстановитьЗначениеФильтра("Клиент",КлГруппа,1);
			РегВзаиморасчетыПок.ВременныйРасчет();
			ВремРегистры.Актуальность(1);
			ВремРегистры.РассчитатьРегистрыНа(ТекущийДокумент());
		КонецЕсли;
	КонецЕсли;
	// склпарт
	Если Константа.ПартииНаСкладах=Перечисление.Булево.Да Тогда
		ПромСклад=Склад;
	Иначе
		ПромСклад="";
	КонецЕсли;     
	              

	сзКлючТовар=СоздатьОбъект("СписокЗначений");
	сзКлюч=СоздатьОбъект("СписокЗначений");
	//РегОстаткиТоваров.Склад=ПромСклад;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		
		НачалоСтроки_=_GetPerformanceCounter();
		
		сзКлючТовар.УдалитьВсе();
		сзКлючТовар.ДобавитьЗначение(Товар);
		КолВлож=0;
		Если Коэффициент=0 Тогда
			Коэффициент=1;
		КонецЕсли;
		
		Состояние("Движения документа: "+НомерСтроки+"/"+КоличествоСтрок());
		
		Если (ГрупповаяОбработка()=0) И (ПустоеЗначение(Товар)=1) И (кБлокироватьВМарочномПустойТовар=1) Тогда
			НеПроводить(Контекст,"В строке "+НомерСтроки+" не указан товар!");
		КонецЕсли;
		
		Регистр.ПартииТоваров.ПривязыватьСтроку(НомерСтроки);
		Регистр.ОстаткиТоваров.ПривязыватьСтроку(НомерСтроки);

		Если ((Товар.ВидТовара=Перечисление.ВидыТоваров.Ингредиент)или(Товар.ВидТовара=Перечисление.ВидыТоваров.Товар)) Тогда
			СписатьИнгредиент(Товар,Количество,Единица,Коэффициент,Товар,"ПродажаИнгр",1,Сумма,НДС,СуммаНП);
		ИначеЕсли  Товар.ВидТовара=Перечисление.ВидыТоваров.Блюдо Тогда 
			НачальноеБлюдо=Товар;
			ПроверкаВложенныхБлюд(НачальноеБлюдо);
			Если Найден=1 Тогда
				Предупреждение("Неправильно реализована схема ""блюдо в блюде"" для блюда "+Товар.Наименование,5);
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
			Если Найден=2 Тогда
				Предупреждение("Нет калькуляционной карты для блюда "+Товар.Наименование+" или одного из блюд, вложенных в него",5);
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
			
			//***********************************************************
			//<<Алгоритм Успеха>> (begin)
			Если Константа.СписыватьИнгридиентыВМО.Получить(ДатаДок) = Перечисление.Булево.Нет  Тогда
				//Надо оприходовать и списывать блюда...это криво, но ничего не поделаешь ... пока это так
				НедостающееКоличествоБлюд=окр(Количество*Коэффициент,3);
				Если СписатьТолькоБлюдо(Товар,НедостающееКоличествоБлюд,Единица,1,Товар,1,Сумма/НедостающееКоличествоБлюд,НДС,СуммаНП)=0 Тогда
					СтатусВозврата(0); 
				КонецЕсли;	           
			Иначе
				//<<Алгоритм Успеха>> (end) 
				//************************************************************
				Если ТипУчета<Фин Тогда
					итТаблОстатки.УстановитьФильтр(Товар,Товар,"иТовар");
					//РегОстаткиТоваров.Товар=Товар;
					//РегОстаткиТоваров.ОстаткиПолучить();
//					ЕстьОстатокБлюда=РегОстаткиТоваров.ОстатокТовара;
					ЕстьОстатокБлюда=итТаблОстатки.Итог("ОстатокТовара","иТовар");
				Иначе
//					ЕстьОстатокБлюда=РегПарт.СводныйОстаток(Фирма,Товар,,,,ПромСклад,"ОстатокТовара");   
				КонецЕсли;
				Если ЕстьОстатокБлюда < окр(Количество*Коэффициент,3) Тогда //Нет нужного количества готовых блюд 
					Если ЕстьОстатокБлюда<>0 Тогда 
						Регистр.ОстаткиТоваров.Фирма= Фирма;
						Регистр.ОстаткиТоваров.Товар=Товар;
						Регистр.ОстаткиТоваров.Склад=Склад;                     
						Регистр.ОстаткиТоваров.Блюдо="";
						Регистр.ОстаткиТоваров.ОстатокТовара=ЕстьОстатокБлюда; 
						Регистр.ОстаткиТоваров.ФлагУчета=2;
						Если ТипУчета<Фин Тогда
							Регистр.ОстаткиТоваров.ДвижениеРасходВыполнить();
							итТаблОстатки.ВыбратьСтроки("иТовар");
							Если итТаблОстатки.ПолучитьСтроку("иТовар") = 1 Тогда
								итТаблОстатки.ОстатокТовара = итТаблОстатки.ОстатокТовара - Окр(Регистр.ОстаткиТоваров.ОстатокТовара,3);
							КонецЕсли;
							ПеремещениеПоПартиям("Упр",Товар,ЕстьОстатокБлюда,Товар,"ПродажаГотовогоБлюда",1,(Сумма-НДС)/(Количество*Коэффициент),НДС,СуммаНП);
						КонецЕсли;
						Если ТипУчета>Упр Тогда 
							ПеремещениеПоПартиям("Фин",Товар,ЕстьОстатокБлюда,Товар,"ПродажаГотовогоБлюда",1,(Сумма-НДС)/(Количество*Коэффициент),НДС,СуммаНП);
						КонецЕсли;  
					КонецЕсли;
					Если ЕстьОстатокБлюда<0 Тогда
						ЕстьОстатокБлюда=0;	
					КонецЕсли;
					НедостающееКоличествоБлюд=окр(Количество*Коэффициент,3)-ЕстьОстатокБлюда;
					Если НедостающееКоличествоБлюд=0 Тогда
						Продолжить;
					КонецЕсли;  
					Если СписатьБлюдо(Товар,НедостающееКоличествоБлюд,Единица,1,Товар,1,(Сумма-НДС)/(Количество*Коэффициент),НДС,СуммаНП)=0 Тогда
						СтатусВозврата(0); //блюда нет на складе,поэтому списываем ингредиенты 
					КонецЕсли;	           //себестоимость из части готовых и части произведенных блюд
					Если НетКарты=1 Тогда
						Продолжить;
					КонецЕсли;
				Иначе      //на складе есть нужное количество готового блюда
					Регистр.ОстаткиТоваров.Фирма= Фирма;
					Регистр.ОстаткиТоваров.Товар=Товар;
					Регистр.ОстаткиТоваров.Склад=Склад;
					Регистр.ОстаткиТоваров.ОстатокТовара=Количество*Коэффициент;     
					Регистр.ОстаткиТоваров.ФлагУчета=2;
					Регистр.ОстаткиТоваров.Блюдо="";
					Если ТипУчета<Фин Тогда
						Регистр.ОстаткиТоваров.ДвижениеРасходВыполнить(); 
						итТаблОстатки.ВыбратьСтроки("иТовар");
						Если итТаблОстатки.ПолучитьСтроку("иТовар") = 1 Тогда
							итТаблОстатки.ОстатокТовара = итТаблОстатки.ОстатокТовара - Окр(Регистр.ОстаткиТоваров.ОстатокТовара,3);
						КонецЕсли;
						ПеремещениеПоПартиям("Упр",Товар,Количество*Коэффициент,Товар,"ПродажаГотовогоБлюда",1,(Сумма-НДС)/(Количество*Коэффициент),НДС,СуммаНП);
					КонецЕсли;
					Если ТипУчета>Упр Тогда
						ПеремещениеПоПартиям("Фин",Товар,Количество*Коэффициент,Товар,"ПродажаГотовогоБлюда",1,(Сумма-НДС)/(Количество*Коэффициент),НДС,СуммаНП);  
						//себестоимость полностью берем из регистра
					КонецЕсли;  
					НедостающееКоличествоБлюд=0;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		//------------------------------------------------------------------------------------------------------------------  
		ТабБлюда.ВыбратьСтроки();
		Если Константа.ПартииНаСкладах=Перечисление.Булево.Да Тогда
			СкладВРегистр=Склад;
		Иначе
			СкладВРегистр="";
		КонецЕсли;	
		Пока ТабБлюда.ПолучитьСтроку()>0 Цикл //Здесь нужно прописать все движения по списанию блюда 
			// по регистру "Остатки товаров"
			КОп=ТабБлюда.КодОпер;
			
			//***********************************************************
			//<<Алгоритм Успеха>> (begin)
			Если ТабБлюда.ДелатьДвижения = 0 Тогда
			    Продолжить;
			КонецЕсли;
			//<<Алгоритм Успеха>> (end) 
			//************************************************************
			
			Если (КОп=ПродажаТовара) или (КОп=ПродажаБлюда) Тогда
				//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
				//Регистр.ПартииТоваров.ДвижениеРасход(ТабБлюда.Фирма,ТабБлюда.Товар,ТабБлюда.Статус,ТабБлюда.Контр,ТабБлюда.ПрихДок,СкладВРегистр,ТабБлюда.Партия,ТабБлюда.СрокРеализации,ТабБлюда.Остаток,ТабБлюда.СтоимБезНДС,0,ТабБлюда.НДС,ТабБлюда.Оборот,ТабБлюда.НДС,ТабБлюда.НДСРасхода,ТабБлюда.КодОпер,ТабБлюда.НП,13,);
				Регистр.ПартииТоваров.ДвижениеРасход(ТабБлюда.Фирма,ТабБлюда.Товар,ТабБлюда.Статус,ТабБлюда.Контр,ТабБлюда.ПрихДок,СкладВРегистр,ТабБлюда.Партия,ТабБлюда.СрокРеализации,ТабБлюда.Остаток,ТабБлюда.СтоимБезНДС,ТабБлюда.ПродСтоимБезНДС,ТабБлюда.НДС,ТабБлюда.Оборот,ТабБлюда.НДС,ТабБлюда.НДСРасхода,?(ТабБлюда.Статус=Принятый,ПродажаПринятогоТовара,ТабБлюда.КодОпер),ТабБлюда.НП,13,);

				
				//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			ИначеЕсли КОп=СписаниеНаПроизводcтвоБлюда Тогда
				Фл=33;
				Если Константа.СписыватьИнгридиентыВМО.Получить(ДатаДок) = Перечисление.Булево.Нет  Тогда
					Фл=34;
				КонецЕсли;
				//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
				//Регистр.ПартииТоваров.ДвижениеРасход(ТабБлюда.Фирма,ТабБлюда.Товар,ТабБлюда.Статус,ТабБлюда.Контр,ТабБлюда.ПрихДок,СкладВРегистр,ТабБлюда.Партия,ТабБлюда.СрокРеализации,ТабБлюда.Остаток,ТабБлюда.СтоимБезНДС,0,ТабБлюда.НДС,,,,ТабБлюда.КодОпер,,Фл,ТабБлюда.БлюдоВладелец);
				Регистр.ПартииТоваров.ДвижениеРасход(ТабБлюда.Фирма,ТабБлюда.Товар,ТабБлюда.Статус,ТабБлюда.Контр,ТабБлюда.ПрихДок,СкладВРегистр,ТабБлюда.Партия,ТабБлюда.СрокРеализации,ТабБлюда.Остаток,ТабБлюда.СтоимБезНДС,ТабБлюда.ПродСтоимБезНДС,ТабБлюда.НДС,,,,?(ТабБлюда.Статус=Принятый,ПродажаПринятогоТовара,ТабБлюда.КодОпер),,Фл,ТабБлюда.БлюдоВладелец);
				//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			ИначеЕсли КОп=ПроизводствоБлюда Тогда
				Фл=33;
				Если Константа.СписыватьИнгридиентыВМО.Получить(ДатаДок) = Перечисление.Булево.Нет  Тогда
					Фл=34;
				КонецЕсли;
				
				Регистр.ПартииТоваров.ДвижениеПриход(ТабБлюда.Фирма,ТабБлюда.Товар,ТабБлюда.Статус,ТабБлюда.Контр,ТабБлюда.ПрихДок,СкладВРегистр,ТабБлюда.Партия,ТабБлюда.СрокРеализации,ТабБлюда.Остаток,ТабБлюда.СтоимБезНДС,ТабБлюда.ПродСтоимБезНДС,ТабБлюда.НДС,,,,ТабБлюда.КодОпер,,Фл,);
			КонецЕсли; 
			
			Если (КОп=ПродажаТовара) или (КОп=ПродажаБлюда) Тогда			
				ТабДляВзаиморасчетов.НоваяСтрока();
				ТабДляВзаиморасчетов.Фирма=ТабБлюда.Фирма;
				СуммаДолгаРуб=(ТабБлюда.Оборот+ТабБлюда.НДСРасхода)*КурсВалютыДокумента;
				СуммаДолгаФин=СуммаДолгаРуб;
				СуммаДолгаУпр=СуммаДолгаРуб/КурсВалВзаиморасчетов;
				ТабДляВзаиморасчетов.Долг=?(ТабБлюда.Фирма.Выбран()=1,СуммаДолгаФин,СуммаДолгаУпр);
				ТабДляВзаиморасчетов.СтавкаНДС=ТабБлюда.Товар.СтавкаНДС; 
			КонецЕсли;
		КонецЦикла; 
		ТабБлюда.УдалитьСтроки();
		
		КонецСтроки=_GetPerformanceCounter();
		
		Если НазваниеНабораПрав()="Администратор" Тогда
			//Сообщить("Время проведения строки "+НомерСтроки+", мс: "+(КонецСтроки-НачалоСтроки_));
		КонецЕсли;
		
	КонецЦикла; //Перебор строк марочного отчета

	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		
		Если Товар.ВидТовара=Перечисление.ВидыТоваров.Услуга Тогда
			ТабДляВзаиморасчетов.НоваяСтрока();
			ПромФирма=Фирма;
			ТабДляВзаиморасчетов.Фирма=ПромФирма;
			СуммаДолгаРуб=Сумма*КурсВалютыДокумента;
			СуммаДолгаФин=СуммаДолгаРуб;
			СуммаДолгаУпр=СуммаДолгаРуб/КурсВалВзаиморасчетов;
			ТабДляВзаиморасчетов.Долг=?(Фирма.Выбран()=1,СуммаДолгаФин,СуммаДолгаУпр);
			ТабДляВзаиморасчетов.СтавкаНДС=Товар.СтавкаНДС;
		КонецЕсли;
	КонецЦикла;
	
	//ТабДляВзаиморасчетов.ВыбратьСтроку();
	
	//-------------------------------------------------------------------------------------------------------	
	// учет по Кредитам 
	// ВЫГРУЗКА ИТОГОВ ПО ВЗАИМОРАСЧЕТАМ В ТАБЛИЦУ И ПЕРЕБОР ИХ - ТАКЖЕ, КАК С ПАРТИЯМИ. 
	// ЕСЛИ В ИТОГАХ НИЧЕГО ПОДХОДЯЩЕГО НЕТ ИЛИ ВСЕ УЖЕ ЗАКРЫТО, ТО СОЗДАТЬ НОВУЮ ПАРТИЮ
	
	Если Нал = Нет Тогда
//	Если Загружен<>1 Тогда
		ТабДляВзаиморасчетов.Свернуть("Фирма,СтавкаНДС","Долг"); 
		ТабДляВзаиморасчетов.ВыбратьСтроки();
		Пока ТабДляВзаиморасчетов.ПолучитьСтроку()=1 Цикл
			СуммаНадоЗакрыть=ТабДляВзаиморасчетов.Долг;
			Если СуммаНадоЗакрыть<0 Тогда
				Продолжить;
			КонецЕсли;
			Если ТабДляВзаиморасчетов.Фирма.Выбран()=1 Тогда
				ПромФирма=ТабДляВзаиморасчетов.Фирма;
			Иначе
				ПромФирма=Фирма;
			КонецЕсли;
			ПромКлиент=КлГруппа;
			ПромСтавкаНДС="";
			//ПромСтавкаНДС=?(ТабДляВзаиморасчетов.Фирма.Выбран()=1,ТабДляВзаиморасчетов.СтавкаНДС,"");
			ПромВидОтгрузки="";
			
			РегВзаиморасчетыПок.УстановитьФильтр(ПромФирма,ПромКлиент,ПромСтавкаНДС,ПромВидОтгрузки);
			РегВзаиморасчетыПок.ВыгрузитьИтоги(ТабВзПок,1,1); 
			Если ТабДляВзаиморасчетов.Фирма.Выбран()=1 Тогда
				ТабВзПок.Сортировать("+КредДокумент",1);
			Иначе
				ТабВзПок.Сортировать("+КредДокумент",1);
			КонецЕсли;	
			ТабВзПок.ВыбратьСтроки();
			Пока ТабВзПок.ПолучитьСтроку()=1 Цикл
				ОстатокДолгаРег=ТабВзПок.Долг;
				Если ОстатокДолгаРег>0 Тогда
					Продолжить;
				КонецЕсли;
				Если -ОстатокДолгаРег>=СуммаНадоЗакрыть Тогда
					ЗакрытьОстатокДолга=СуммаНадоЗакрыть;
				Иначе
					ЗакрытьОстатокДолга=-ОстатокДолгаРег;
				КонецЕсли;
				ФирмаДвиж=ТабВзПок.Фирма;
				КлиентДвиж=ТабВзПок.Клиент;
				СтавкаНДСДвиж=ТабВзПок.СтавкаНДС;
				ВидОтгрузкиДвиж=ТабВзПок.ВидОтгрузки;
				КредДокументДвиж=ТабВзПок.КредДокумент;
				ДолгДвиж=ЗакрытьОстатокДолга;
				КодОперацииДвиж=ОтгрузкаОплаченногоТовараКупленного;
				
				Регистр.ВзаиморасчетыПокупателей.ДвижениеПриход(ФирмаДвиж,КлиентДвиж,СтавкаНДСДвиж,ВидОтгрузкиДвиж,КредДокументДвиж,ДолгДвиж,КодОперацииДвиж,0);
				
				СуммаЗакрыто=ЗакрытьОстатокДолга;//сумма, на которую только что закрыли
				СуммаНадоЗакрыть=СуммаНадоЗакрыть-СуммаЗакрыто;
			КонецЦикла;
			Если СуммаНадоЗакрыть>0 Тогда //создаем задолженность покупателя
				ФирмаДвиж=ТабДляВзаиморасчетов.Фирма;
				КлиентДвиж=КлГруппа;
				//СтавкаНДСДвиж=?(ФирмаДвиж.Выбран()=1,ТабДляВзаиморасчетов.СтавкаНДС,"");
				СтавкаНДСДвиж="";
				ВидОтгрузкиДвиж=?(ФирмаДвиж.Выбран()=1,ОтгрузкаТовара,"");
				КредДокументДвиж=ТекущийДокумент();
				ДолгДвиж=СуммаНадоЗакрыть;
				КодОперацииДвиж=НеоплаченнаяОтгрузкаТовараКупленного;
				Регистр.ВзаиморасчетыПокупателей.ДвижениеПриход(ФирмаДвиж,КлиентДвиж,СтавкаНДСДвиж,ВидОтгрузкиДвиж,КредДокументДвиж,ДолгДвиж,КодОперацииДвиж,0);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	ЗаписатьСебестоимость();
	
	Если глЗаполнитьРеквизитыДокументаШ(Контекст,0)=0 Тогда
		Сообщить("Внимание: Не удалось заполнить реквизиты Ш. Обязательно обратитесь к админстратору!!!","!");
	КонецЕсли; 
	        
	Если Константа.СписыватьИнгридиентыВМО.Получить(ДатаДок) = Перечисление.Булево.Нет  Тогда
		СебестоимостьШ=0;
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			Если Товар.ВидТовара<>Перечисление.ВидыТоваров.Блюдо Тогда
				СебестоимостьШ=СебестоимостьШ+Себестоимость;
			КонецЕсли;
		КонецЦикла;
	Иначе
		СебестоимостьШ=Итог("Себестоимость");
	КонецЕсли;
	
	
	Если (Касса.ТипККМ=Перечисление.ТипыККМ.RKeeper6POS) ИЛИ (Касса.ТипККМ=Перечисление.ТипыККМ.RKeeper7POS) Тогда
		
		Если (Нал = Да) И (ГрупповаяОбработка()=0) Тогда
			_Получено = 0;
			_Получено2 = 0;
			_ПолученоКарта = 0;
			_ПолученоПодарочнаяКарта = 0;
			_ВалютаПлатежа = ?(ДатаДок<'01.01.14',Латы,Рубли);
			_ВалютаПлатежа2 = ?(ДатаДок<'01.01.14',Рубли,Латы);
			Док = СоздатьОбъект("Документ.ОплатаЧеков");
			Док.ВыбратьДокументы(ДатаДок, ДатаДок);
			Пока Док.ПолучитьДокумент() = 1 Цикл
				Если Док.Склад <> Склад Тогда Продолжить; КонецЕсли;
				Если Док.Касса <> Касса Тогда Продолжить; КонецЕсли;
				Если Док.Проведен() = 0 Тогда
					Сообщить("Не проведен документ Оплата чеков "+Док+" - могут быть некорректные данные по кассовому отчету!");
					Продолжить;
				КонецЕсли;
				
				Док.ВыбратьСтроки();
				Пока Док.ПолучитьСтроку() = 1 Цикл
					Если Док.ВалютаРК.Тип = Перечисление.ТипыВалютРК.КредитныеКарты Тогда
						_ПолученоКарта = _ПолученоКарта + Пересчет(Док.Сумма, Док.ВалютаРК.Валюта, ДатаДок, _ВалютаПлатежа, ДатаДок);
					ИначеЕсли Док.ВалютаРК.Тип = Перечисление.ТипыВалютРК.ПодарочныеКарты Тогда
						_ПолученоПодарочнаяКарта = _ПолученоПодарочнаяКарта + Пересчет(Док.Сумма, Док.ВалютаРК.Валюта, ДатаДок, _ВалютаПлатежа, ДатаДок);
					ИначеЕсли Док.ВалютаРК.Тип = Перечисление.ТипыВалютРК.Наличные Тогда
						Если _ВалютаПлатежа = Док.ВалютаРК.Валюта Тогда
							_Получено = _Получено + Пересчет(Док.Сумма, Константа.БазоваяВалюта_R_Keeper, ДатаДок, _ВалютаПлатежа, ДатаДок);
						ИначеЕсли _ВалютаПлатежа2 = Док.ВалютаРК.Валюта Тогда
							_Получено2 = _Получено2 + Пересчет(Док.Сумма, Константа.БазоваяВалюта_R_Keeper, ДатаДок, _ВалютаПлатежа2, ДатаДок);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;       
			ПолученоНал = _Получено;
			ПолученоНал2 = _Получено2;
			ПолученоКарта = _ПолученоКарта;
			ПолученоПодарочнаяКарта = _ПолученоПодарочнаяКарта;
			ВалютаПлатежа = _ВалютаПлатежа;
			ВалютаПлатежа2 = _ВалютаПлатежа2;
		КонецЕсли;
		
	КонецЕсли;
	
	глОборотыТоваров(Контекст);

	СообщОтладка(СообщитьРеквизитыШ(Контекст),"I");
	
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// продажа товара, принятого на реализацию
	РегПартДляРеализации = СоздатьОбъект("Регистр.ПартииТоваров");
	РегПартДляРеализации.ВыбратьДвиженияДокумента(ТекущийДокумент());
	Пока РегПартДляРеализации.ПолучитьДвижение() = 1 Цикл
	    Если не(РегПартДляРеализации.Статус = Принятый) 
		или (РегПартДляРеализации.Приход = 1) Тогда
	        Продолжить;
	    КонецЕсли;
		Если ПогашениеДолгаПоКредиту(Контекст,РегПартДляРеализации.ПрихДокумент,РегПартДляРеализации.Стоимость+РегПартДляРеализации.НДС,РегПартДляРеализации.Товар.СтавкаНДС,"Упр",Строка(РегПартДляРеализации.Товар.ВидТовара)) = 1 Тогда
			Возврат;
		КонецЕсли;                                                    
		Регистр.ПродажаВзятогоНаРеализацию.ПривязыватьСтроку(РегПартДляРеализации.НомерСтроки());
		ДокПриходнаяРеализатора = РегПартДляРеализации.ПрихДокумент;
		Регистр.ПродажаВзятогоНаРеализацию.Фирма = РегПартДляРеализации.Фирма;
		Регистр.ПродажаВзятогоНаРеализацию.Клиент = ДокПриходнаяРеализатора.Клиент;
		Регистр.ПродажаВзятогоНаРеализацию.Товар  = РегПартДляРеализации.Товар;
		Регистр.ПродажаВзятогоНаРеализацию.ОстатокТовара = РегПартДляРеализации.ОстатокТовара;
		Регистр.ПродажаВзятогоНаРеализацию.ПродСтоимость = РегПартДляРеализации.Стоимость;
		Регистр.ПродажаВзятогоНаРеализацию.ДвижениеПриходВыполнить();
	КонецЦикла;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	
КонецПроцедуры

//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаПроведения()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	Если ПроведениеМОД(Контекст)=1 Тогда      
	    Возврат;
	КонецЕсли;
	
	Позиция=СформироватьПозициюДокумента(ТекущийДокумент(),1);
	
	Начало_=_GetPerformanceCounter();
	
	Если ДатаДок<'01.10.11' Тогда
		Сообщить("Старый алгоритм проведения!");
		стар_ОбработкаПроведенияСтар();
	Иначе
		стар_ОбработкаПроведения();
	КонецЕсли;
	
	Конец_=_GetPerformanceCounter();	
	
	Если НазваниеНабораПрав()="Администратор" Тогда
		Сообщить("Время проведения документа, мс: "+(Конец_-Начало_));
	КонецЕсли;
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД

//------------------------
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаУдаленияПроведения() Далее
//Конец текста, вставленного Инсталлятором МОД
Процедура стар_ОбработкаУдаленияПроведения()
//Закомментировано Инсталлятором МОД:Процедура ОбработкаУдаленияПроведения()
	Если СравнитьГП(ТекущийДокумент())<0 Тогда
		УстановитьГП(ТекущийДокумент());
	КонецЕсли;
КонецПроцедуры
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаУдаленияПроведения()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	Если ПроведениеПоАлгоритмуМОД=1 Тогда
	    Возврат;
	КонецЕсли;
	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	ПриОтменеПроведенияДокумента(ТекущийДокумент());

	стар_ОбработкаУдаленияПроведения();
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД

//-----------------------------------------------

ЗапросОстатки = СоздатьОбъект("ODBCRecordSet");
//ЗапросОстатки.РежимRPC(1);

ЗапросПартии = СоздатьОбъект("ODBCRecordSet");	
//ЗапросПартии.РежимRPC(1);

		
	
	
семВклОтладка = 1;