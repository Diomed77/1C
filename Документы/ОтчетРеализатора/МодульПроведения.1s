//--------------------------------------------
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаПроведения() Далее
//Конец текста, вставленного Инсталлятором МОД
Процедура стар_ОбработкаПроведения()
//Закомментировано Инсталлятором МОД:Процедура ОбработкаПроведения()
        // сем \\
	Если семМожноПровести( Контекст ) = 0 Тогда Возврат; КонецЕсли;
	семОбновитьКурс( контекст );
        // сем //
	//Если ДатаДок>ТекущаяДата() Тогда
	//	НеПроводить(Контекст,"Нельзя проводить документ будущей датой!");
	//	Возврат;
	//КонецЕсли;
	Если Клиент.Выбран()=0 Тогда
		НеПроводить(Контекст,"Не выбран клиент по реализации!");
	КонецЕсли;

	Клиент.ИспользоватьДату(ДатаДок);
	// Запишем главного клиента
	Если Клиент.КлГруппа.Выбран()=1 Тогда
		КлГруппа=Клиент.КлГруппа;
	Иначе
		КлГруппа=Клиент;
	КонецЕсли;       
	
	КлГруппа.ИспользоватьДату("");
	
	Если КлГруппа.ДляВыгрузки=0 Тогда
		спр=СоздатьОбъект("Справочник.Контрагенты");
		Спр.НайтиЭлемент(КлГруппа);
		Спр.ДляВыгрузки=1;
		ОбъектЗаписать(Спр,);
	КонецЕсли;
	
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// если реализаторы - мы
	Если ПризнакРеализатора = Перечисление.ПризнакиРеализаторов.Реализатор_фирма Тогда
	    ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Регистр.ПродажаВзятогоНаРеализацию.Фирма = Фирма;
			Регистр.ПродажаВзятогоНаРеализацию.Клиент = Клиент;
			Регистр.ПродажаВзятогоНаРеализацию.Товар  = Товар;
			Регистр.ПродажаВзятогоНаРеализацию.ОстатокТовара = Количество*Коэффициент;
			Регистр.ПродажаВзятогоНаРеализацию.ПродСтоимость = Сумма;
			Регистр.ПродажаВзятогоНаРеализацию.ДвижениеРасходВыполнить();
		КонецЦикла;
		Возврат;
	КонецЕсли;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	
// Теперь учтем партию отданных на реализацию товаров	
// по Регистру ПартииТоваров
	Если ТипУчета<Фин Тогда
		Если ПогашениеПартииТоваров(Контекст,"Упр","Консигнация")=1 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
//-------------------------------------
// по ФинПартииТоваров
	Если ТипУчета>Упр Тогда
		Если ПогашениеПартииТоваров(Контекст,"Фин","Консигнация")=1 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
//---------------------
// учет по Кредитам
	// Выделим отдельно Товары и Услуги
	ТаблицаРеализации=СоздатьОбъект("ТаблицаЗначений");
	ТаблицаРеализации.НоваяКолонка("СуммаТоваров","Число",15,2);
	ТаблицаРеализации.НоваяКолонка("СуммаУслуг","Число",15,2);
	ТаблицаРеализации.НоваяКолонка("СтавкаНДС",Перечисление.ЗначенияНДС);
	
	СуммаТоваров=0;
	//СуммаТоваров20=0;
	//СуммаТоваров10=0;
	//СуммаТоваровБез=0;
	СуммаУслуг=0;
	//СуммаУслуг20=0;
	//СуммаУслуг10=0;
	//СуммаУслугБез=0;
	// ОтчетРеализатора и ИнвентаризацияРеализатора это особый случай
	//РегП=СоздатьОбъект("Регистр.ПартииТоваров");
	//РегП.ВыбратьДвиженияДокумента(ТекущийДокумент());
	//СумПогаш=0;
	//Пока РегП.ПолучитьДвижение()=1 Цикл
	//	Если РегП.Расход=0 Тогда
	//	    Продолжить;
	//	КонецЕсли;
	//	Если РегП.Товар.ВидТовара=Перечисление.ВидыТоваров.Товар Тогда 
	//		Если РегП.Фирма.Выбран()=0 Тогда  // для  ТипУчета="Упр"
	//			СуммаТоваров=СуммаТоваров+Пересчет(РегП.ПродСтоимость,РегП.Товар.ВалютаУчета,Дата_курса,Валюта,Курс);
	//		ИначеЕсли РегП.Фирма.Выбран()=1 Тогда  // для  ТипУчета="Фин"
	//			//Если РегП.Товар.СтавкаНДС=Перечисление.ЗначенияНДС.ОсновнаяСтавкаНДС Тогда 
	//			//	 СуммаТоваров20=СуммаТоваров20+Пересчет(РегП.ПродСтоимость,Рубли,Дата_курса,Валюта,Курс);
	//			//ИначеЕсли  РегП.Товар.СтавкаНДС=Перечисление.ЗначенияНДС.ЛьготнаяСтавкаНДС Тогда
	//			//	 СуммаТоваров10=СуммаТоваров10+Пересчет(РегП.ПродСтоимость,Рубли,Дата_курса,Валюта,Курс);
	//			//ИначеЕсли  РегП.Товар.СтавкаНДС=Перечисление.ЗначенияНДС.безНДС Тогда
	//			//	 СуммаТоваровБез=СуммаТоваровБез+Пересчет(РегП.ПродСтоимость,Рубли,Дата_курса,Валюта,Курс);
	//			//КонецЕсли;
	//			ТаблицаРеализации.НоваяСтрока();
	//			ТаблицаРеализации.СуммаТоваров = Пересчет(РегП.ПродСтоимость,Рубли,Дата_курса,Валюта,Курс);;
	//			ТаблицаРеализации.СуммаУслуг = 0;
	//			ТаблицаРеализации.СтавкаНДС = РегП.Товар.СтавкаНДС;
	//		КонецЕсли;
	//	ИначеЕсли  РегП.Товар.ВидТовара=Перечисление.ВидыТоваров.Услуга Тогда
	//		Если РегП.Фирма.Выбран()=0 Тогда  // для  ТипУчета="Упр"
	//			СуммаУслуг=СуммаУслуг+Пересчет(РегП.ПродСтоимость,РегП.Товар.ВалютаУчета,Дата_курса,Валюта,Курс);
	//		ИначеЕсли РегП.Фирма.Выбран()=1 Тогда  // для  ТипУчета="Фин"
	//			//Если РегП.Товар.СтавкаНДС=Перечисление.ЗначенияНДС.ОсновнаяСтавкаНДС Тогда 
	//			//	 СуммаУслуг20=СуммаУслуг20+Пересчет(РегП.ПродСтоимость,Рубли,Дата_курса,Валюта,Курс);
	//			//ИначеЕсли  РегП.Товар.СтавкаНДС=Перечисление.ЗначенияНДС.ЛьготнаяСтавкаНДС Тогда
	//			//	 СуммаУслуг10=СуммаУслуг10+Пересчет(РегП.ПродСтоимость,Рубли,Дата_курса,Валюта,Курс);
	//			//ИначеЕсли  РегП.Товар.СтавкаНДС=Перечисление.ЗначенияНДС.безНДС Тогда
	//			//	 СуммаУслугБез=СуммаУслугБез+Пересчет(РегП.ПродСтоимость,Рубли,Дата_курса,Валюта,Курс);
	//			//КонецЕсли;
	//			ТаблицаРеализации.НоваяСтрока();
	//			ТаблицаРеализации.СуммаУслуг = Пересчет(РегП.ПродСтоимость,Рубли,Дата_курса,Валюта,Курс);;
	//			ТаблицаРеализации.Сумматоваров = 0;
	//			ТаблицаРеализации.СтавкаНДС = РегП.Товар.СтавкаНДС;
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЦикла;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ТипУчета < Фин Тогда
			Если Товар=Перечисление.ВидыТоваров.Товар Тогда
				СуммаТоваров=СуммаТоваров+Сумма+НДС;
			Иначе // услуга
				СуммаУслуг=СуммаУслуг+Сумма+НДС;
			КонецЕсли;
		КонецЕсли;
		Если ТипУчета > Упр Тогда
			ТаблицаРеализации.НоваяСтрока();
			Если Товар=Перечисление.ВидыТоваров.Товар Тогда
				ТаблицаРеализации.Сумматоваров = Сумма+НДС;
				ТаблицаРеализации.СуммаУслуг = 0;
			Иначе // услуга
				ТаблицаРеализации.СуммаУслуг = Сумма+НДС;
				ТаблицаРеализации.Сумматоваров = 0;
			КонецЕсли;
			ТаблицаРеализации.СтавкаНДС = СтавкаНДС;
		КонецЕсли;
	КонецЦикла;

	ПривязыватьСтроку(0);
	Если ДатаДок >= '01.01.2011'   Тогда
		Если ТипУчета<Фин Тогда
			// Выделим отдельно Товары и Услуги
			Если СуммаТоваров<>0 Тогда
				Если ПогашениеДолгаПоКредиту(Контекст,ТекущийДокумент(),СуммаТоваров,"","Упр","Товар")=1 Тогда
					Возврат;
				КонецЕсли;
			КонецЕсли;
			Если СуммаУслуг<>0 Тогда
				Если ПогашениеДолгаПоКредиту(Контекст,ТекущийДокумент(),СуммаУслуг,"","Упр","Услуга")=1 Тогда
					Возврат;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		//--------------------
		ТаблицаРеализации.Свернуть("СтавкаНДС","СуммаТоваров,СуммаУслуг");
		Если ТипУчета > Упр Тогда
			ТаблицаРеализации.ВыбратьСтроки();
			Пока ТаблицаРеализации.ПолучитьСтроку() = 1 Цикл
				Если ТаблицаРеализации.СуммаТоваров<>0 Тогда
					Если ПогашениеДолгаПоКредиту(Контекст,ТекущийДокумент(),ТаблицаРеализации.СуммаТоваров,ТаблицаРеализации.СтавкаНДС,"Фин","Товар")=1 Тогда
						Возврат;
					КонецЕсли;
				КонецЕсли;
				Если ТаблицаРеализации.СуммаУслуг<>0 Тогда
					Если ПогашениеДолгаПоКредиту(Контекст,ТекущийДокумент(),ТаблицаРеализации.СуммаУслуг,ТаблицаРеализации.СтавкаНДС,"Фин","Услуга")=1 Тогда
						Возврат;
					КонецЕсли;
				КонецЕсли;	
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Если ПризнакРеализатора = Перечисление.ПризнакиРеализаторов.Реализатор_клиент Тогда
		Если Агент.Выбран()=0 Тогда
			НеПроводить(Контекст,"Не выбран агент по реализации!");
		КонецЕсли;
		глОборотыТоваров(Контекст);
	КонецЕсли;
	
	Если глЗаполнитьРеквизитыДокументаШ(Контекст,0)=0 Тогда //по складам заполнение себестоимости
		Сообщить("Внимание: Не удалось заполнить реквизиты Ш. Обязательно обратитесь к админстратору!!!","!");
	КонецЕсли;
	
	СебестоимостьШ=0;
	Рег=СоздатьОбъект("Регистр.ПартииТоваров");
	Рег.ВыбратьДвиженияДокумента(ТекущийДокумент());
	Пока Рег.ПолучитьДвижение()=1 Цикл
		Если Рег.Расход=1 Тогда
			СебестоимостьШ=СебестоимостьШ+Рег.Стоимость;
		КонецЕсли;
	КонецЦикла;
	
	Если МожноПроводить(Контекст)=1 Тогда
		УстановитьГП(ТекущийДокумент());
	КонецЕсли;

КонецПроцедуры
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаПроведения()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	Если ПроведениеМОД(Контекст)=1 Тогда
	    Возврат;
	КонецЕсли;
	стар_ОбработкаПроведения();
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД
 
//------------------------
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаУдаленияПроведения() Далее
//Конец текста, вставленного Инсталлятором МОД
Процедура стар_ОбработкаУдаленияПроведения()
//Закомментировано Инсталлятором МОД:Процедура ОбработкаУдаленияПроведения()
	Если СравнитьГП(ТекущийДокумент())<0 Тогда
		УстановитьГП(ТекущийДокумент());
	КонецЕсли;
КонецПроцедуры
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаУдаленияПроведения()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	Если ПроведениеПоАлгоритмуМОД=1 Тогда
	    Возврат;
	КонецЕсли;
	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	ПриОтменеПроведенияДокумента(ТекущийДокумент());	
	стар_ОбработкаУдаленияПроведения();
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД


