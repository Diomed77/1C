Перем Валюта_Прежн;
Перем Курс_Прежн;
Перем ИнформационнаяСтрока;
Перем Prompt;
Перем Режим;
Перем Язык;

Перем ТабЭлемент;
Перем ВременнаяТаблица; 
Перем СводнаяТаблица;


Процедура ПриСменеНазванияФайла()
    
	Если ПустаяСтрока(НазваниеФайла)=1 Тогда
		Возврат;
	КонецЕсли;	
	
	Если ФС.СуществуетФайл(НазваниеФайла)=1 Тогда		// то, что ввели, является названием существующего файла

	Иначе       // то, что ввели, не является названием существующего файла
	   	Предупреждение("Файл "+НазваниеФайла+" не существует");
	КонецЕсли;
    
КонецПроцедуры  // ПриСменеНазванияФайла

Процедура ВвестиНазваниеФайла()
	// процедура ввода названия входного файла

	Перем Путь,Расширение,СтароеНазваниеФайла;
                                             
	СтароеНазваниеФайла = НазваниеФайла;
	
	Если Найти(НазваниеФайла,"\")<=0 Тогда
		Путь = КаталогИБ()+"ExtForms\Import\";
	Иначе      
		Индекс = СтрДлина(НазваниеФайла);
		Пока Сред(НазваниеФайла,Индекс,1)<>"\" Цикл
			Индекс = Индекс - 1;
		КонецЦикла;	            
		Путь = Лев(НазваниеФайла,Индекс);
	КонецЕсли;	
		
			Расширение = "XLS-таблица(*.xls)|*.xls";
		НазвФайла = "";
	
	Если ФС.ВыбратьФайл(0,НазвФайла,Путь,"Выберите импортируемый файл",Расширение,,)=1 Тогда
		НазваниеФайла = Путь + НазвФайла;
		Если НазваниеФайла<>СтароеНазваниеФайла Тогда	// изменилось название импортируемого файла
		    ПриСменеНазванияФайла();
		КонецЕсли;
	Иначе		// отказались от выбора - восстанавливаем старое название файла
		НазваниеФайла = СтароеНазваниеФайла;
	КонецЕсли;
    
КонецПроцедуры  // ВвестиНазваниеФайла

//******************************************************************************
Процедура СоздатьЭлементУправления ()
	Форма.ОбработкаОжидания ("", 0);
	
	ВремДокумент = СоздатьОбъект ("ТабличныйДокумент");
	ТабЭлемент = ВремДокумент.СоздатьЭлементУправления (Форма, "ВыбТабличныйДокумент");
	ТабЭлемент.ТолькоПросмотр = 0;
	//ТабЭлемент.Документ.ЗагрузитьИзТаблицы (ВременнаяТаблица);
КонецПроцедуры

//------------------------
Процедура ПриОткрытии()
	//ПроверкаРазрешенияРедактирования(Контекст);
	УстановкаРеквизитаТип(Контекст);
	Тип.ДобавитьЗначение("Упр.");
	Тип.ДобавитьЗначение("Общ.");
	Тип.ДобавитьЗначение("Фин.");
	Тип.ТекущаяСтрока(ТипУчета+1);
	Если Форма.ТолькоПросмотр()=1 Тогда
	    Форма.КнФирма.Доступность(0);
	    Форма.КнВалюта.Доступность(0);
	    Форма.ВводСчФ.Доступность(0);
	    Форма.ОК.Доступность(0);
	    Форма.КнопкаПоУмолчанию("Закрыть");
	Иначе
	    Форма.КнопкаПоУмолчанию("ОК");
	КонецЕсли;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	Форма.ПризнакРеализатора.Доступность(1);
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	
	Форма.ОбработкаОжидания ("СоздатьЭлементУправления", 1);   
	ВременнаяТаблица = СоздатьОбъект ("Таблица");      
	
КонецПроцедуры
//-----------------------------------------------
Процедура Взаиморасчеты()
	Форма.ИнфПодпись.Видимость(0);
//	Форма.ИнфКнопка.Видимость(0);
	ИнформационнаяСтрока=ДолгПоКредиту(Контекст);
КонецПроцедуры
//-----------------------------------------------
Процедура ВыборДаты()
	Устан_Вал(Контекст,ДатаДок,Валюта_Прежн,Курс_Прежн);
//	Взаиморасчеты();
КонецПроцедуры
//-----------------------------------------------
Процедура ВыборРеализатора()
//	Взаиморасчеты();
	ИнформационнаяСтрока="";
	Форма.ИнфПодпись.Видимость(1);
	СтавкаНДС = семПолучитьСтавкуНДС(Клиент,Контекст);	
	ДатаОплаты = семПолучитьДатуОплаты( Клиент, Перечисление.ВидыКлиентов.Покупатель,ДатаДок);
	
КонецПроцедуры
//-----------------------------------------------
Процедура ПечатьСтарая()
	Фирма.ИспользоватьДату(ДатаДок);
	Таб=СоздатьОбъект("Таблица");
	Таб.ВывестиСекцию("Шапка");
	ВыбратьСтроки();
	Ном=0;
	Пока ПолучитьСтроку() = 1 Цикл
		Ном=Ном+1;
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;
	Таб.ВывестиСекцию("Подвал");
	Таб.Опции(0,0,0,0,ПарСтрДок);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Отчет реализатора","");
КонецПроцедуры
//-----------------------------------------------
Функция ПолучитьПереводНаименования( пТовар )
	Если Язык = "Англ" Тогда Возврат пТовар.НаименованиеАнгл;
	ИначеЕсли Язык = "Рус" Тогда Возврат пТовар.НаименованиеРусс;
	ИначеЕсли Язык = "Лит" Тогда Возврат пТовар.НаименованиеLT;
	ИначеЕсли Язык = "Эст" Тогда Возврат пТовар.НаименованиеEE;
	КонецЕсли;
КонецФункции
Функция ПолучитьПереводУсловийХранения( пТовар )
	Если СокрЛП(пТовар.УсловияХранения) = "parasti" Тогда
		Возврат "toat.";
	Иначе
		Возврат пТовар.МестоХранения.УсловияХранения;
	КонецЕсли;
КонецФункции
Функция ПолучитьПереводЕдИзм( пЕдиница )
	спр = СоздатьОбъект( "Справочник.ЕдиницыПеревод" );
	Если спр.НайтиПоРеквизиту( "Единица", пЕдиница, 1 ) = 1 Тогда
		Возврат спр.ПолучитьАтрибут( Язык );
	Иначе
		Возврат "";
	КонецЕсли;
КонецФункции
//-----------------------------------------------
Процедура ПечатьРеал( сп )
	таб = СоздатьОбъект( "Таблица" );
	таб.ИсходнаяТаблица( "Реализация" );
	таб.ВывестиСекцию( "Шапка" );
	таб.ПовторятьПриПечатиСтроки( 1, таб.ВысотаТаблицы() );
	табл = сп.Получить( "Таблица" );
	табл.ВыбратьСтроки();

	Пока табл.ПолучитьСтроку() = 1 Цикл
		таб.ВывестиСекцию("Строка");
	КонецЦикла;
	
	таб.ВывестиСекцию("Подвал");
	Попытка 
		таб.ВывестиСекцию("Подвал1");
	Исключение 
	КонецПопытки;
	таб.ПараметрыСтраницы( 1,,,0,0,7,0,0,0,1,, );
	таб.ТолькоПросмотр( 1 );   
	//таб.Защита(1);
	таб.Показать( "" );
КонецПроцедуры
//-----------------------------------------------
Процедура Печать()
	Если Проведен() = 0 Тогда
		Сообщить("Нельзя печатать непроведенный документ!");
		Возврат;
	КонецЕсли;        
	Если ПризнакРеализатора=Перечисление.ПризнакиРеализаторов.Реализатор_клиент Тогда
		Фирма.ИспользоватьДату(ДатаДок);
		Язык = "Эст";
		кСуммаВключаетНДС = Константа.СуммаВключаетНДС.Получить(ДатаДок);
		сп = СоздатьОбъект( "СписокЗначений" );
		// данные об отправителе
		сп.Установить( "Отправитель", Фирма.ПолноеНаименование );
		сп.Установить( "ЮрАдресОтправителя", Фирма.ЮридическийАдрес);
		сп.Установить( "БанкОтправителя", Шаблон( "[Фирма.Банк.Наименование],  [Фирма.Банк.Код_Банка]" ) );
		сп.Установить( "СчетОтправителя1", Шаблон( "[Фирма.Р_счет1] EEK" ) );
		сп.Установить( "СчетОтправителя2", "LV94 UNLA 0050 0001 9199 5 EUR" );
		сп.Установить( "РегНомОтправителя", Фирма.Рег_номер );
		сп.Установить( "НалНомОтправителя", Фирма.ИНН );
		сп.Установить( "АдресОтправителя", Склад.Адрес );
		// данные о получателе
		сп.Установить( "КодПолучателя", Клиент.Код );
		сп.Установить( "Получатель", Клиент.ПолноеНаименование  );
		сп.Установить( "ЮрАдресПолучателя", Клиент.ЮридическийАдрес );
		сп.Установить( "БанкПолучателя", Шаблон( "[Клиент.Банк.Наименование], [Клиент.Банк.Код_Банка]" ) );
		сп.Установить( "СчетПолучателя", Шаблон( "[Клиент.Р_счет1], [Клиент.Р_Счет2]" ) );
		сп.Установить( "РегНомПолучателя", Клиент.Рег_номер );
		сп.Установить( "НалНомПолучателя", Клиент.ИНН );
		сп.Установить( "АдресПолучателя", Шаблон( "[Клиент.ГородДоставки], [Клиент.ПочтовыйАдрес], [Клиент.ПочтовыйИндекс]" ) );
		// данные о документе
		сп.Установить( "НомерДок", НомерДок );
		
		пДата = Формат(ДатаДок,"ДГГГГММДД");
		пДата = Лев(пДата,4)+"."+Сред(пДата,5,2)+"."+Прав(пДата,2);
		
		сп.Установить( "ДатаДок", пДата );
		сп.Установить( "Валюта", Валюта );
		сп.Установить( "ДатаСтрокой", ПолучитьСтрокуДаты(ДатаДок) );
		// дополнительная информация  
		сп.Установить( "Склад", Склад.Мол );
		сп.Установить( "Лицензия", "" );
		сп.Установить( "НомераСертификатов", СформироватьСтрокуСертификатов(ТекущийДокумент()) );
		//сп.Установить( "Оплата", Шаблон("Apmaksўt l®dz: [ДатаОплаты] ar pўrskait®jumu") );
		сп.Установить( "Основание", Основание );
		сп.Установить( "ПоКонтракту", Шаблон( "[Клиент.Договор] от [Клиент.ДоговорС]" ) );
		сп.Установить( "АдресДоставки", Шаблон( "[Клиент.ГородДоставки], [Клиент.ПочтовыйАдрес], [Клиент.ПочтовыйИндекс]" ) );
			сп.Установить( "ДатаОплаты", "" );
			сп.Установить( "ДатаПоставки", "" );
		// табличная часть документа
		табл = СоздатьОбъект( "ТаблицаЗначений" );
		табл.НоваяКолонка( "НомСтр" );
		табл.НоваяКолонка( "ШтрихКод" );
		табл.НоваяКолонка( "КодТовара" );
		табл.НоваяКолонка( "Товар" );
		табл.НоваяКолонка( "УслХранения" );
		табл.НоваяКолонка( "СрокРеал" );
		табл.НоваяКолонка( "ЕдИзм" );
		табл.НоваяКолонка( "Колво" );
		табл.НоваяКолонка( "Скидка" );
		табл.НоваяКолонка( "Цена" );
		табл.НоваяКолонка( "Сумма" );
		табл.НоваяКолонка( "ЦенаСоСкидкой" );
		табл.НоваяКолонка( "СуммаСоСкидкой" );
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			табл.НоваяСтрока();
			табл.НомСтр = НомерСтроки;
			табл.КодТовара = Товар.Код;
			табл.ШтрихКод = Товар.ШтрихКод;
			табл.Товар = ПолучитьПереводНаименования( Товар );
			табл.УслХранения = ПолучитьПереводУсловийХранения( Товар );
			табл.СрокРеал = "";
			табл.ЕдИзм = ПолучитьПереводЕдИзм( Единица.Единица );
			табл.Колво = Количество;
			табл.Скидка = СокрЛ( Формат(0,"Ч14.2"));
			табл.Цена = СокрЛ( Формат( ЦенаТовараПоКатегорииДляТовара(Товар,КатегорияЦены,Валюта,Курс,ДатаДок)*Коэффициент, "Ч14.2" ) );
			табл.Сумма = СокрЛ( Формат(?(кСуммаВключаетНДС=Да,(Сумма/Количество*табл.Колво)-(НДС/Количество*табл.Колво),(Сумма/Количество*табл.Колво)),"Ч14.2") );
			табл.ЦенаСоСкидкой = СокрЛ( Формат((Окр(Цена*Коэффициент,5,1)),"Ч14.2") );
			табл.СуммаСоСкидкой = СокрЛ( Формат(Цена*табл.Колво*Коэффициент,"Ч14.2") );
		КонецЦикла;
		сп.Установить( "Таблица", табл );
		// итоги
		
		ВалЕВРО=семПолучитьВалютуПоНаим("EUR");
		сп.Установить( "ВклНДС", ?(кСуммаВключаетНДС = Да,"iekІauts cenў","") );
		сп.Установить( "СуммаБезСк", СокрЛ( Формат(?(кСуммаВключаетНДС = Да,Строка(Итог("Сумма")-Итог("НДС")),Строка(Итог("Сумма"))),"Ч14.2") ) );
		сп.Установить( "Сумма", СокрЛ( Формат(?(кСуммаВключаетНДС = Да,Строка(Итог("Сумма")-Итог("НДС")),Строка(Итог("Сумма"))),"Ч14.2") ) );
		сп.Установить( "ИтогСкидка", 0);
		сп.Установить( "НДС", СокрЛ( Формат( Итог("НДС"),"Ч14.2") ) );
		сп.Установить( "Итого", СокрЛ( Формат(?(кСуммаВключаетНДС = Да,Итог("Сумма"),Итог("Сумма")+Итог("НДС")),"Ч14.2") ) );
		сп.Установить( "СуммаПрописью", СуммаПрописью(ТекущийДокумент()) );
		сп.Установить( "СуммаEUR", СокрЛ( Формат( Пересчет(?(кСуммаВключаетНДС = Да,Итог("Сумма"),Итог("Сумма")+Итог("НДС")),Валюта,ДатаДок,ВалЕВРО,ДатаДок), "Ч14.2")));	
		
		сп.Установить( "МестоОтгрузки", Склад.МОЛ );
		сп.Установить( "ДопИнфо", "" );
		ПоЗаявке="";
		поз=Найти(ПоЗаявке,"_");
		Если поз>0 Тогда
			ПоЗаявке=Лев(ПоЗаявке,поз-1);
		КонецЕсли;
		сп.Установить( "ПоЗаявке", ПоЗаявке);
		ПечатьРеал( сп );
		Возврат;
	КонецЕсли;
	  
	
	
	Таб=СоздатьОбъект("Таблица");
	Таб.ВывестиСекцию("Шапка");
		
	сп=СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(сп,"Товар");
		ТекстЗапроса = "SELECT $ПартииТоваров.Товар [Товар $Справочник.Номенклатура]
		|				, $ПартииТоваров.ПрихДокумент [ПрихДокумент $Документ]
		|				, SUM($ПартииТоваров.ОстатокТовара) ОстатокТовара
		|				, SUM(ПродажаВзятогоНаРеализацию.ОстатокТовара) ОстатокТовараР
		|			FROM (SELECT $ПродажаВзятогоНаРеализацию.Товар Товар,
		|						 ПродажаВзятогоНаРеализацию.LINENO_,
		|						 ПродажаВзятогоНаРеализацию.IDDOC, 
		|			             SUM($ПродажаВзятогоНаРеализацию.ОстатокТовара) ОстатокТовара
		|				  FROM $Регистр.ПродажаВзятогоНаРеализацию AS ПродажаВзятогоНаРеализацию (NOLOCK)
		|				  WHERE ($ПродажаВзятогоНаРеализацию.Товар IN (SELECT $Док.Товар FROM $ДокументСтроки.ОтчетРеализатора Док WHERE Док.IDDOC=:ТекДок AND $Док.Количество>0) ) 
		|						AND ПродажаВзятогоНаРеализацию.DATE_TIME_IDDOC BETWEEN :Нач AND :Кон  
		|						AND ПродажаВзятогоНаРеализацию.IDDOCDEF NOT IN ($ВидДокумента.ПриходнаяНакладная,$ВидДокумента.ОтчетРеализатора)
		|						AND ПродажаВзятогоНаРеализацию.DebKred = 0 
		|			      GROUP BY $ПродажаВзятогоНаРеализацию.Товар, LINENO_, IDDOC) ПродажаВзятогоНаРеализацию 
		|			INNER JOIN $Регистр.ПартииТоваров AS ПартииТоваров (NOLOCK) ON ПродажаВзятогоНаРеализацию.Товар = $ПартииТоваров.Товар 
		|					  AND ПродажаВзятогоНаРеализацию.LINENO_ = ПартииТоваров.LINENO_ 
		|					  AND ПродажаВзятогоНаРеализацию.IDDOC = ПартииТоваров.IDDOC 
		|			GROUP BY $ПартииТоваров.Товар
		|			   	, $ПартииТоваров.ПрихДокумент       
		|			ORDER BY 1, 2
		|";                                                            
		
		Запрос = СоздатьОбъект("ODBCRecordset");Запрос.УстановитьТекстовыйПараметр("Нач",НачМесяца(ДобавитьМесяц(ДатаДок,-2)));
		Запрос.УстановитьТекстовыйПараметр("Кон",ДатаДок);
		Запрос.УстановитьТекстовыйПараметр("ТекДок",ТекущийДокумент());
		тз = СоздатьОбъект("ИндексированнаяТаблица");
		Запрос.ВыполнитьИнструкцию(ТекстЗапроса,тз);
		//тз.Показать();
		тз.ДобавитьИндекс("Товар","*Товар");
		тз.Сортировать("*Товар,*ПрихДокумент");
		//	тз.Показать();
		
		Фирма.ИспользоватьДату(ДатаДок);
		ВыбратьСтроки();
		Ном=0;
		Пока ПолучитьСтроку() = 1 do
			Если Количество>0 Тогда
			Иначе
				Продолжить;
			КонецЕсли;
			Ном=Ном+1;
			тз.УстановитьФильтр(Товар,Товар,"Товар");
			тз.ВыбратьСтроки("Товар");
			ОстВывести=Количество;
			Пока тз.ПолучитьСтроку("Товар") = 1 Цикл   
				Если ОстВывести=0 Тогда
					Прервать;
				КонецЕсли;   
				
				ПечКол=Мин(тз.ОстатокТовара,ОстВывести);
				ОстВывести=ОстВывести-ПечКол;
				тхтПрихДок=тз.ПрихДокумент.НомерДок+"("+тз.ПрихДокумент.ДатаДок+")";
				Таб.ВывестиСекцию("Строка");
			КонецЦикла;
		КонецЦикла;	
	
	Таб.ВывестиСекцию("Подвал");
	Таб.Опции(0,0,0,0,ПарСтрДок);
	Таб.ПараметрыСтраницы(1,100,,,,,,,,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Отчет реализатора","");
КонецПроцедуры
//-----------------------------------------------
Процедура Подбор()
	Режим="Каталог";
	ОткрытьПодбор("Номенклатура","ДляПодбора");
	УстановитьЗначениеВПодборе("Склад",Константа.ОсновнойСклад);
	Если ТипУчета=Фин Тогда
		УстановитьЗначениеВПодборе("Фирма",Фирма);
	КонецЕсли;
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриВыбореТовара()
	Если Товар.Выбран()=0 Тогда
	    Возврат;
	КонецЕсли;  
	УстановкаЕдиницыИзмерения(Контекст);
КонецПроцедуры //ПриВыбореТовара
//-----------------------------------------------
Процедура ОбработкаПодбора(Выб)
	ЗапросКоличестваВПодборе(Контекст,Режим,Выб);
	УстановкаЕдиницыИзмерения(Контекст);
	АктивизироватьСтроку();
КонецПроцедуры
//-----------------------------------------------
Процедура ПриВводеСтроки()
	Если ПризнакРеализатора = Перечисление.ПризнакиРеализаторов.Реализатор_клиент Тогда
		Предупреждение("Документ следует вводить только в режиме ''Ввод на основании'', ввод дополнительных строк запрещен!");
		СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры

Процедура семУстановитьВалюту( флКопирования )
	Если флКопирования = 0 Тогда
		Валюта = Константа.ВалютаВзаиморасчетов;
	КонецЕсли;
	Дата_Курса = ДатаДок;
	Курс = КурсДляВалюты( Валюта, Дата_Курса );
	Валюта_Прежн = Валюта;
	Курс_Прежн = Курс;
КонецПроцедуры

Процедура ВводНового( флКопирования )
	ЗаполнитьШапку(Контекст);
	Склад = Константа.ОсновнойСклад;
	СтавкаНДС = Константа.ОсновнаяСтавкаНДС;
	семУстановитьВалюту( флКопирования );
	Если флКопирования = 1 Тогда Возврат; КонецЕсли;
	ПризнакРеализатора = Перечисление.ПризнакиРеализаторов.Реализатор_фирма;
	ДатаДок = РабочаяДата();
КонецПроцедуры

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Процедура ВводНаОсновании(ДокОснование)
	Если (ДокОснование.Вид()="РасходнаяРеализатора")
		ИЛИ (ДокОснование.Вид()="ВводОстатковРеализации") Тогда
		Если ДокОснование.Вид()="ВводОстатковРеализации" Тогда
			Если ДокОснование.ПризнакРеализатора=Перечисление.ПризнакиРеализаторов.Реализатор_фирма Тогда
				Предупреждение("Этот документ можно вводить только на основании расходных накладных по реализации или документа ВводОстатковРеализации (когда реализатор-клиент)!");
				СтатусВозврата(0);
			    Возврат;
			КонецЕсли;
		КонецЕсли;
		ЗаполнитьШапкуНаОсн(Контекст,ДокОснование);
		СтавкаНДС = Константа.ОсновнаяСтавкаНДС;
		Основание	 = ""; 
		Склад		 = ДокОснование.Склад;
		Агент 		 = ДокОснование.Агент;
		ДатаДок		 = РабочаяДата();
		Валюта		 = ДокОснование.Валюта;
		Дата_Курса	 = ДокОснование.Дата_Курса;
		СтавкаНДС	 = ДокОснование.СтавкаНДС;	
	    Курс		 = ДокОснование.Курс;
		Валюта_Прежн = Валюта;
		Курс_Прежн	 = Курс;
		Клиент 		 = ДокОснование.Клиент; 
		ДокОснование.ВыбратьСтроки();
		Пока ДокОснование.ПолучитьСтроку() = 1 Цикл
			НоваяСтрока();
			Товар 		= ДокОснование.Товар;
			ТовКод   	= Товар.Код;
			Единица 	= ДокОснование.Единица;
			Цена 		= ДокОснование.Цена;
			Коэффициент = ДокОснование.Коэффициент;
			Количество 	= ДокОснование.Количество;
			НДС 		= ДокОснование.НДС;
			Сумма 		= ДокОснование.Сумма;
			Всего		= Сумма + НДС;
		КонецЦикла;
		ПоНакладной  = ДокОснование;
		Валюта_Прежн = Валюта;
		Курс_Прежн   = Курс;
		ПризнакРеализатора = Перечисление.ПризнакиРеализаторов.Реализатор_клиент;
		
		ВыборРеализатора();
	Иначе
		Предупреждение("Этот документ можно вводить только на основании расходных накладных по реализации или документа ВводОстатковРеализации (когда реализатор-клиент)!");
		СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Процедура ВводСчетаФактуры()
	Перем ФормаСчФ;
	Если Проведен()=0  Тогда
		Предупреждение("Счет-фактуру нельзя вводить на основании не проведенного документа!");
		Возврат;
	КонецЕсли;
	ДокПодч=СоздатьОбъект("Документ");
	ДокПодч.ВыбратьПодчиненныеДокументы(ДатаДок-7,ПолучитьДатуТА(),ТекущийДокумент());
	Пока  ДокПодч.ПолучитьДокумент()=1 Цикл
		Если ДокПодч.Вид()="Счет_фактура" Тогда
			ОткрытьФорму(ДокПодч.ТекущийДокумент(),ФормаСчФ,0);
			Возврат;
		КонецЕсли;
	КонецЦикла;
	ОткрытьФорму("Документ.Счет_фактура",ФормаСчФ,ТекущийДокумент());
КонецПроцедуры  

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Процедура ПриЗаписи()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	//Если семМожноЗаписать( Контекст ) = 0 Тогда Возврат; КонецЕсли;
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД


//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Процедура Заполнить()

	Если КоличествоСтрок() > 0 Тогда
		Если Вопрос("Табличная часть будет очищена. Продолжить?","Да+Нет") = "Нет" Тогда
			Возврат;
		Иначе
			УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;

	Если ПризнакРеализатора = Перечисление.ПризнакиРеализаторов.Реализатор_клиент Тогда
		
		Меню=СоздатьОбъект("СписокЗначений");	
		Меню.ДобавитьЗначение(1,"Из партий отданных не реализацию");
		Меню.ДобавитьЗначение(2,"Из файла XLS");
		Выб=1;
		Если Меню.ВыбратьЗначение(выб,,,,1)=1 Тогда
		Иначе
			Возврат;
		КонецЕсли;

		// Для реализатора-клиента документ заполняем товарами по Регистру ПартииТоваров отданными на реализацию
		ТекстЗапроса = "SELECT ПартииТоваровОстатки.Товар [Товар $Справочник.Номенклатура]
		|					, ПартииТоваровОстатки.Контрагент [Контрагент $Справочник.Контрагенты]
		|					, ПартииТоваровОстатки.ОстатокТовараОстаток КонОстаток
		|					, ПартииТоваровОстатки.СтоимостьОстаток КонОстСтоим
		|					, ПартииТоваровОстатки.ПродСтоимостьОстаток КонОстПродСтоимость

		|				FROM $РегистрОстатки.ПартииТоваров(,,
		|												(Контрагент = :Клиент)
		|												AND (Фирма = :Фирма)
		|												AND (Статус = :Статус),
		|												(Товар, Контрагент),
		|												(ОстатокТовара, Стоимость, ПродСтоимость)) AS ПартииТоваровОстатки
		|				WHERE ПартииТоваровОстатки.ОстатокТовараОстаток>0
		|";
		ЗапросСКЛ=СоздатьОбъект("ODBCRecordSet");
		ЗапросСКЛ.УстановитьТекстовыйПараметр("Клиент",Клиент);
		ЗапросСКЛ.УстановитьТекстовыйПараметр("Фирма",Фирма);
		ЗапросСКЛ.УстановитьТекстовыйПараметр("Статус",Отданный);
		табл=ЗапросСКЛ.ВыполнитьИнструкцию(ТекстЗапроса);
		//табл.ВыбратьСтроку();
			
		Если Выб=1 Тогда
			
			Пока табл.ПолучитьСтроку() = 1 Цикл
				Состояние(Шаблон("[табл.НомерСтроки]/[табл.КоличествоСтрок()]"));
				НоваяСтрока();
				Товар=табл.Товар;
				ТовКод=Товар.Код;
				Количество=табл.КонОстаток;
				Если Количество<>0 Тогда
					Цена=табл.КонОстПродСтоимость/Количество;
				Иначе
					Цена=0;
					//Продолжить;
				КонецЕсли;
				УстановкаЕдиницыИзмерения(Контекст);
				Сумма=Цена*Количество;
				НДС = Сумма*(ПроцентНДС(Товар.СтавкаНДС)/100);
				Всего = Сумма+НДС;
			КонецЦикла;
		Иначе
			
			ВвестиНазваниеФайла();
			ПриСменеНазванияФайла();
			
			Если ФС.СуществуетФайл(НазваниеФайла)=0 Тогда
				Предупреждение("Выбранный файл не существует!");
				Возврат;
			КонецЕсли;
			
			ОчиститьОкноСообщений();
			Состояние("Загрузка данных файла "+НазваниеФайла);
			
			ТабЭлемент.Документ.Открыть (НазваниеФайла, 2);
			ТабЭлемент.Обновить ();
			
			Конвертер = СоздатьОбъект ("Йоксель.КонвертерВТаблицуЗначений");
			Конвертер.УстановитьДокумент (ТабЭлемент.Документ);
			Конвертер.СтрокДляОпределенияСтруктуры=1;
			Конвертер.ОпределятьСтруктуру = 1;

			СпрТ=СоздатьОбъект("Справочник.Номенклатура");			
			Таб = Конвертер.Загрузить ();
			СводнаяТаблица.Очистить ();
			СводнаяТаблица.Загрузить (Таб);  
			СводнаяТаблица.ВыбратьСтроки();  
			Пока СводнаяТаблица.ПолучитьСтроку()=1 Цикл  

				Состояние(Шаблон("[табл.НомерСтроки]/[табл.КоличествоСтрок()]"));

				КодДляПоиска=СокрЛП(СводнаяТаблица.ПолучитьЗначение(СводнаяТаблица.НомерСтроки,1));//код товара в первой колонке
				Если СтрДлина(КодДляПоиска)=6 Тогда
					КодДляПоиска="0"+КодДляПоиска;
				КонецЕсли;
				Если ПустоеЗначение(КодДляПоиска)=1 Тогда
					Продолжить;
				КонецЕсли;
				
				СпрТ.НайтиПоКоду(КодДляПоиска,0);
				Если СпрТ.Выбран()=0 Тогда
					//ищем по отдельному полю с кодом без букв
					КодДляПоиска = Лев(КодДляПоиска,7);
					СпрТ.НайтиПоРеквизиту("КодТовара",КодДляПоиска,1);
					
					Если СпрТ.Выбран()=0 Тогда
						Сообщить(Шаблон("Не найден товар по коду [КодДляПоиска] в строке [СводнаяТаблица.НомерСтроки]"),"!!!");
						Продолжить;
					Иначе
						КодДляПоиска = СпрТ.Код
					КонецЕсли;
					
				КонецЕсли;

				КолВо=СокрЛП(СводнаяТаблица.ПолучитьЗначение(СводнаяТаблица.НомерСтроки,3));//кол-во товара в 3-й колонке 
				поз=0;
				Если табл.НайтиЗначение(СпрТ.ТекущийЭлемент(),поз,"Товар")=0 Тогда
					Сообщить(Шаблон("Товар [КодДляПоиска] [СпрТ.Наименование] в строке [СводнаяТаблица.НомерСтроки] не найден среди отданных на реализацию!"),"!!!");
					//Продолжить;
				КонецЕсли;

				Если поз>0 Тогда
					табл.ПолучитьСтрокуПоНомеру(поз);
				КонецЕсли;
				
				НоваяСтрока();
				Товар=СпрТ.ТекущийЭлемент();
				ТовКод=Товар.Код;
				Количество=КолВо;
				Попытка
					Если Количество<>0 Тогда
						Цена=?(табл.КонОстаток=0,0,табл.КонОстПродСтоимость/табл.КонОстаток);
					Иначе
						Цена=0;
					КонецЕсли;
				Исключение
					Цена=0;
				КонецПопытки;
				УстановкаЕдиницыИзмерения(Контекст);
				Сумма=Цена*Количество;
				НДС = Сумма*(ПроцентНДС(СтавкаНДС)/100);
				Всего = Сумма+НДС;
				
			КонецЦикла;
			
		КонецЕсли;
		
	Иначе
		// Для реализатора-фирмы документ заполняем остатками товара по Регистру ПродажаВзятогоНаРеализацию
		Дат=0;
		Если ДатаДок<ПолучитьДатуТА() Тогда
			// если итоги не актуальны, то
			Дат=ДатаДок;
		КонецЕсли;
		// Сделаем это при помощи механизма Запросов
		Запрос=СоздатьОбъект("Запрос");
		ТекстЗапроса="
		|Период С '01.02.98'";
		Если Число(Дат)=0 Тогда
			//Без условий
			ТекстЗапроса=ТекстЗапроса+";";
		Иначе
			ТекстЗапроса=ТекстЗапроса+"По Дат;";
		КонецЕсли;
		ТекстЗапроса=ТекстЗапроса+"
		|Клн=Регистр.ПродажаВзятогоНаРеализацию.Клиент;
		|Товар=Регистр.ПродажаВзятогоНаРеализацию.Товар;
		|Стоим = Регистр.ПродажаВзятогоНаРеализацию.ПродСтоимость;
		|Остаток=Регистр.ПродажаВзятогоНаРеализацию.ОстатокТовара;";
		Если Клиент.Выбран()=0 Тогда
			//Без условий
			Возврат;
		Иначе
			ТекстЗапроса=ТекстЗапроса+"Условие (Клн=Клиент);";
		КонецЕсли;
		ТекстЗапроса=ТекстЗапроса+"
		|Условие (Клн = Клиент);
		|Группировка Товар Без групп;
		|Функция КонОстаток= КонОст(Остаток);
		|Функция КонОстСтоим= КонОст(Стоим);
		|";
		Флаг=Запрос.Выполнить(ТекстЗапроса);
		Если Флаг=0 тогда
			Предупреждение("Запрос  не выполнился!");
			Возврат;
		КонецЕсли;
		
		Пока Запрос.Группировка("Товар") = 1 Цикл
			Если Запрос.КонОстаток>0 Тогда
				
			Иначе
				Продолжить;
			КонецЕсли;
			НоваяСтрока();
			Товар=Запрос.Товар;
			ТовКод=Товар.Код;
			Количество=Запрос.КонОстаток;
			Если Количество<>0 Тогда
				Цена=Запрос.КонОстСтоим/Количество;
			Иначе
				Цена=0;
				//Продолжить;
			КонецЕсли;
			УстановкаЕдиницыИзмерения(Контекст);
			Сумма=Цена*Количество;
			НДС = Сумма*(ПроцентНДС(Товар.СтавкаНДС)/100);
			Всего = Сумма+НДС;
		КонецЦикла;
		
	КонецЕсли;
	
	
КонецПроцедуры            
 
Процедура ПересчетСумм()
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		НДС = Сумма*(ПроцентНДС(СтавкаНДС)/100);
		Всего = Сумма+НДС;
	КонецЦикла;	
КонецПроцедуры

//======================================================================
Процедура УдалитьНулевыеСтроки()
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Количество=0 Тогда
			УдалитьСтроку();
			ВыбратьСтроки();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры // УдалитьНулевыеСтроки

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// При входе в Форму запомним промежуточные переменные
ИнформационнаяСтрока="";
СводнаяТаблица=СоздатьОбъект("ТаблицаЗначений");

Prompt="Информация о взаиморасчетах:";
Валюта_Прежн=Валюта;
Курс_Прежн=Курс;
