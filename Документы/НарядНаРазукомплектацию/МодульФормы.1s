Перем ПредКолКомплекта;

//------------------------
Процедура ПриОткрытии()
	ПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.КнФирма.Доступность(0);
		Форма.КнСклад.Доступность(0);
		
//		Форма.КнСкладПолучатель.Доступность(0);
		//Форма.ПодборПоКаталогу.Доступность(0);
		Форма.кнОК.Доступность(0);
		Форма.кнКомплект.Доступность(0);
		Форма.КнопкаПоУмолчанию("Закрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("ОК");
	КонецЕсли;
	УстановкаРеквизитаТип(Контекст);

	ПредКолКомплекта=КоличествоКомплектов;
КонецПроцедуры
//-----------------------------------------------
Процедура УстанКоличестваКомплекта()
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Количество = Количество / ПредКолКомплекта * КоличествоКомплектов;
	КонецЦикла;

	ПредКолКомплекта=КоличествоКомплектов;
	
КонецПроцедуры
//-----------------------------------------------
Процедура УстДата()
	
КонецПроцедуры 
//-----------------------------------------------
Процедура ВводНового(ФлКопирования);

 	Предупреждение("Этот документ может вводиться только на основании Наряда на Сборку!!!");
	СтатусВозврата(0);
	возврат;
	
	
	ЗаполнитьШапку( Контекст );
	
	Если ФлКопирования=1 Тогда
		Возврат;	    
	КонецЕсли;
	
	КатегорияЦены = ?(ПустоеЗначение(РозничнаяКатегорияЦены) = 0, РозничнаяКатегорияЦены, Пользователь.ОснКатегорияЦены);
	Если ПустоеЗначение(КатегорияЦены)=1 Тогда
		КатегорияЦены = Константа.РозничнаяКатегорияЦены;
	КонецЕсли;
	
	ДатаДок=РабочаяДата();
	Склад=Константа.ОсновнойСклад;
	СкладПолучатель=Константа.ОсновнойСклад;  
	
КонецПроцедуры

//-----------------------------------------------
Процедура ВводНаОсновании(ДокОснование)
	
	Если ДокОснование.Вид()<>"НарядНаСборку" Тогда
	 	Предупреждение("Этот документ нельзя вводить на основании других документов, кроме Наряда на Сборку!!!");
		СтатусВозврата(0);
		возврат;
	КонецЕсли;  
	
	ЗаполнитьШапкуНаОсн(Контекст,ДокОснование);
	ДокументОснование = ДокОснование;
		
   КатегорияЦены 		= ДокОснование.КатегорияЦены;
   Склад				= докОснование.Склад;
   СкладПолучатель		= докОснование.СкладПолучатель;
   Комплект				= докОснование.Комплект;
   КоличествоКомплектов	= докОснование.КоличествоКомплектов;
	              
   докОснование.ВыбратьСтроки();
   Пока докОснование.ПолучитьСтроку()>0 Цикл
       новаяСтрока();
       Товар		= ДокОснование.товар;
	   ТовКод		= Товар.Код;
       Количество	= ДокОснование.количество;
	   Коэффициент	= ДокОснование.Коэффициент;
	   Единица		= ДокОснование.Единица;
   КонецЦикла;
	
КонецПроцедуры
//-----------------------------------------------

Procedure ПриУдаленииСтроки()
	Если Вопрос("Вы дейстивельно хотите удалить строку?","Да+Нет")="Да" Тогда
	Иначе
		СтатусВозврата(0);
	КонецЕсли;
endProcedure

Процедура Печать()
	
	Если Проведен()=0 Тогда
	    Предупреждение("Печать непроведенного документа невозможна!");
		Возврат;
	КонецЕсли;

	Рег=СоздатьОбъект("Регистр.ОстаткиТоваров");
	
	Фирма.ИспользоватьДату(ДатаДок);      
	Таб=СоздатьОбъект("Таблица");
	
	НомСтр=1;
	прд="";                                
	мхран=CreateObject("Справочник.МестаХранения");
	
	Если не(проведен()=1) Тогда
		образ="Projekts";
	иначе          
		образ="";
	КонецЕсли;
                                            
	tit="Nor®kojuns uz demontўzu - "+Комплект.Код+""+комплект.НаименованиеЛат;
	                                   
	Таб.ВывестиСекцию("Шапка");
	ВыбратьСтроки();
	Ном=0;        
	
	СтрокНаЛист=0;   
	sum=0;

	Пока ПолучитьСтроку() = 1 do 
		Ном=Ном+1;    
		СтрокНаЛист=СтрокНаЛист+1;
		Если (цел(ном/20)-(ном/20))=0 Тогда
			таб.newPage();              
			НомСтр=НомСтр+1;
			Если НомСтр>1 Тогда
				прд="(turpinўjums)";
			КонецЕсли;
			СтрокНаЛист=0;
			Таб.ВывестиСекцию("Пропуск");
			Таб.ВывестиСекцию("Шапка2");
		КонецЕсли; 
		
		
        Если Проведен()=1 Тогда
			рег.ВыбратьДвиженияДокумента(ТекущийДокумент());
			//заказ=запрос.заказ;
			//рег.товар=запрос.товар;
			БС = 0;
			ОС = 0;
			Пока (рег.получитьДвижение()=1) Цикл
		 		Если (Товар=рег.Товар) и (Рег.НомерСтроки()=НомерСтроки) Тогда
	 		  		БС = рег.БазоваяСтоимость;
		      		ОС = рег.ОстатокТовара;
			  		Прервать;
		 		КонецЕсли;
			КонецЦикла;
        КонецЕсли;

        Если ос<>0 Тогда
			ЦенаВ=бс/ос;
			sum=sum+ЦенаВ*количество;
		Иначе          
			ЦенаВ=0;
		КонецЕсли;	
		
	  	МХ="";         
		
		мхран.ИспользоватьВладельца(товар);
		
		мхран.ВыбратьЭлементыПоРеквизиту("Филиал",Константа.ОснФилиал,1,0);
		Пока мхран.ПолучитьЭлемент()>0 Цикл
			МХ=МХ+ мхран.Наименование+", ";	 
		конецЦикла;                           
		
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;
	
	Если СтрокНалист>16 Тогда
		таб.newPage();              
		Таб.ВывестиСекцию("Пропуск");
	КонецЕсли;
	
	Таб.ВывестиСекцию("Кончик");
	
	Таб.Опции(0,0,0,0,ПарСтрДок);   
	Таб.параметрыСтраницы(1,100,1,2,2,5,5,2,2);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	
	Таб.Показать("Печать  документа о перемещении","");
	
КонецПроцедуры 

// При входе в Форму запомним промежуточные переменные
				

Процедура стар_ПриЗаписи()
//Закомментировано Инсталлятором МОД:Процедура ПриЗаписи()
	Если семМожноЗаписать( Контекст ) = 0 Тогда Возврат; КонецЕсли;

	Если семПроверкаУникальностиНомера( контекст ) = 0 Тогда Возврат; КонецЕсли;

	Если (ДатаДок>ТекущаяДата()) и (Выбран()=0) Тогда
		АвтоВремяОтключить();
		УстановитьВремя(6,0,0);  
	ИначеЕсли  ДатаДок>ТекущаяДата() Тогда
		АвтоВремяНачалоДня();
	КонецЕсли;      
	
КонецПроцедуры


//-----------------------------------------------
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
//	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	стар_ПриЗаписи();
КонецПроцедуры  
