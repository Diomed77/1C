Процедура ПриОткрытии()
	ПроверкаРазрешенияРедактирования(Контекст);
	Форма.ТолькоПросмотр( Проведен() );
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.КнФирма.Доступность(0);
		Форма.кнЗаполнить.Доступность(0);
		Форма.кнОчистить.Доступность(0);
		Форма.ОК.Доступность(0);
		Форма.кнОчВыбТовар.Доступность(0);
		Форма.КнопкаПоУмолчанию("Закрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("ОК");
	КонецЕсли;
КонецПроцедуры 

Функция ФорматВывода( парам )
	Если ПоСчету.Выбран() = 0 Тогда Возврат ""; КонецЕсли;
	Если парам = "Клиент" Тогда
		Возврат ПоСчету.Клиент;
	ИначеЕсли парам = "Сумма" Тогда
		Возврат ПоСчету.Итог("Сумма");
	ИначеЕсли парам = "ДатаПост" Тогда
		Возврат ПоСчету.ДатаПоставки;
	КонецЕсли;
КонецФункции

Процедура кнЗаполнить()
	Запрос = СоздатьОбъект( "Запрос" );
	ТекстЗапроса = "
	|ДатаПост = Регистр.РезервыТоваров.ПоСчету.ДатаПоставки, Регистр.СпецЗаказы.ПоСчету.ДатаПоставки;
	|Товар = Регистр.РезервыТоваров.Товар, Регистр.СпецЗаказы.Товар;
	|Счет = Регистр.РезервыТоваров.ПоСчету, Регистр.СпецЗаказы.ПоСчету;
	|Клиент = Регистр.РезервыТоваров.ПоСчету.Клиент, Регистр.СпецЗаказы.ПоСчету.Клиент;
	|Резерв = Регистр.РезервыТоваров.РезервТовара, Регистр.СпецЗаказы.Заказано;
	|Функция фРезерв = КонОст( Резерв );
	|Группировка Счет;
	|Условие ( ДатаПост <= ДатаПоставки );";       
	Если выбТовар.Выбран() = 1 Тогда
		Если выбТовар.ЭтоГруппа() = 1 Тогда ТекстЗапроса = ТекстЗапроса + "
			|Условие ( Товар в выбТовар );";
		Иначе ТекстЗапроса = ТекстЗапроса + "
			|Условие ( Товар = выбТовар );";
		КонецЕсли;
	КонецЕсли; 

	Если ВыбКлиент.Выбран() = 1 Тогда
		Если ВыбКлиент.ЭтоГруппа() = 1 Тогда ТекстЗапроса = ТекстЗапроса + "
			|Условие ( Клиент в выбКлиент );";
		Иначе ТекстЗапроса = ТекстЗапроса + "
			|Условие ( Клиент = выбКлиент );";
		КонецЕсли;
	КонецЕсли; 

	
	РегР=СоздатьОбъект("Регистр.РезервыТоваров");
	РегСЗ=СоздатьОбъект("Регистр.СпецЗаказы");
	Если выбТовар.Выбран() = 1 Тогда
		Если выбТовар.ЭтоГруппа() = 1 Тогда 
			РегР.УстановитьЗначениеФильтра("Товар",ВыбТовар,2);
			РегСЗ.УстановитьЗначениеФильтра("Товар",ВыбТовар,2);
		Иначе 
			РегР.УстановитьЗначениеФильтра("Товар",ВыбТовар,1);
			РегСЗ.УстановитьЗначениеФильтра("Товар",ВыбТовар,1);
		КонецЕсли;
	КонецЕсли; 
                                
	ТР=СоздатьОбъект("ТаблицаЗначений");
	РегР.ВыгрузитьИтоги(ТР,0,1);  
	ТР.Свернуть("ПоСчету","РезервТовара");
	ТР.ВыбратьСтроки();
	Пока ТР.ПолучитьСтроку() = 1 Цикл
		Состояние("Резервы: "+ТР.НомерСтроки+"/"+ТР.КоличествоСтрок());
		Если ПустоеЗначение(ТР.ПоСчету) = 1 Тогда 
			Продолжить; 
		КонецЕсли;
		Если ТР.РезервТовара = 0 Тогда 
			Продолжить; 
		КонецЕсли;

		Если ПустоеЗначение(ВыбКлиент)=0 Тогда
			Если ТР.ПоСчету.Клиент<>ВыбКлиент Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Если ТР.ПоСчету.ДатаПоставки<=ДатаПоставки Тогда
			НоваяСтрока();
			ПоСчету=ТР.ПоСчету;
		КонецЕсли;
	КонецЦикла;    
	
	ТР=СоздатьОбъект("ТаблицаЗначений");
	РегСЗ.ВыгрузитьИтоги(ТР,0,1);     
	ТР.Свернуть("ПоСчету","Заказано");
	
	ТР.ВыбратьСтроки();
	Пока ТР.ПолучитьСтроку() = 1 Цикл
		Состояние("Спец. заказы: "+ТР.НомерСтроки+"/"+ТР.КоличествоСтрок());
		
		Если ПустоеЗначение(ТР.ПоСчету) = 1 Тогда 
			Продолжить; 
		КонецЕсли;
		Если ТР.Заказано = 0 Тогда 
			Продолжить; 
		КонецЕсли;

		Если ПустоеЗначение(ВыбКлиент)=0 Тогда
			Если ТР.ПоСчету.Клиент<>ВыбКлиент Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Если ТР.ПоСчету.ДатаПоставки<=ДатаПоставки Тогда
			НоваяСтрока();
			ПоСчету=ТР.ПоСчету;
		КонецЕсли;
	КонецЦикла;    
	            
	СортироватьСтроки("ПоСчету");
	//Пока Запрос.Группировка( "Счет" ) = 1 Цикл
	//	Если Запрос.Счет.Выбран() = 0 Тогда Продолжить; КонецЕсли;
	//	Если Запрос.фРезерв = 0 Тогда Продолжить; КонецЕсли;
	//	НоваяСтрока();
	//	ПоСчету=Запрос.Счет;
	//КонецЦикла;
КонецПроцедуры

Процедура кнОчистить()
	Ответ = Вопрос("Табличная часть будет очищена. Продолжить?", "Да+Нет");
	Если Ответ = "Да" Тогда
		УдалитьСтроки();
	КонецЕсли;
КонецПроцедуры

Процедура ВводНового(ФлКопирования);            
	ЗаполнитьШапку(Контекст);
	Если ФлКопирования=1 Тогда
		Возврат;	    
	КонецЕсли;
	ДатаДок=РабочаяДата();
	Основание="Истек срок резервирования товара.";
КонецПроцедуры

Процедура ВводНаОсновании(ДокОснование)
	Если (ДокОснование.Вид()="Счет")  Тогда  
		Если ДокОснование.Проведен() = 0 Тогда
			Сообщить("Нельзя вводить документ на основании непроведенного документа.","I");
			СтатусВозврата( 0 );
			Возврат;
		КонецЕсли;
		
		Если семМожноВводитьНаОснованииСчета( ДокОснование, "Расходная" ) = 0 Тогда СтатусВозврата( 0 ); Возврат; КонецЕсли;
		Если семМожноВводитьНаОснованииСчета( ДокОснование, "Перемещение" ) = 0 Тогда СтатусВозврата( 0 ); Возврат; КонецЕсли;
		Если семМожноВводитьНаОснованииСчета( ДокОснование, "СнятиеРезерва" ) = 0 Тогда СтатусВозврата( 0 ); Возврат; КонецЕсли;
		
		ЗаполнитьШапкуНаОсн(Контекст,ДокОснование);
		ДатаДок=РабочаяДата();
		НоваяСтрока();
		ПоСчету=ДокОснование;
		ДокументОснование=ДокОснование;
		
		Если Константа.НовыйМеханизмПретензий.Получить(ДатаДок)<>Да Тогда
			семПроверкаУдаленияЗаявки(ДокОснование);
		Иначе
			СостояниеЗаявки=глПолучитьСостояниеЗаявки(ДокОснование);
			Если (СостояниеЗаявки = "Ожидает компл.") ИЛИ (СостояниеЗаявки = "Ожидает отгрузки")ИЛИ (СостояниеЗаявки = "Ожидает бронь в пути") Тогда
			Иначе
				Предупреждение("Снятие с резерва можно вводить только на основании заявки в состоянии <Ожидает компл.> или <Ожидает отгрузки>!");
				СтатусВозврата(0);
			КонецЕсли;
		КонецЕсли;
	Иначе
		Предупреждение("Снятие с резерва нельзя вводить на основании выбранного вида документа!");
		СтатусВозврата(0);
	КонецЕсли; 
КонецПроцедуры

//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи() Далее
//Конец текста, вставленного Инсталлятором МОД
Процедура стар_ПриЗаписи()
//Закомментировано Инсталлятором МОД:Процедура ПриЗаписи()
	Если семМожноЗаписать( Контекст ) = 0 Тогда Возврат; КонецЕсли;
	АвтоВремяПослеТА();
КонецПроцедуры
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	стар_ПриЗаписи();
	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
КонецПроцедуры                             
//Конец текста, вставленного Инсталлятором МОД
