//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаПроведения() Далее
//Конец текста, вставленного Инсталлятором МОД
Процедура стар_ОбработкаПроведения()

	Если семМожноПровести( Контекст ) = 0 Тогда Возврат; КонецЕсли;

	Если КоличествоСтрок()=0 Тогда
		НеПроводить(Контекст,"Документ пустой!");
		Возврат;
	КонецЕсли;
	
	Если ГрупповаяОбработка() = 0 Тогда
		Если семПроверкаПретензии(Контекст) = 0 Тогда
			Сообщить("Ошибка проведения документа.","!");
			СтатусВозврата(0); Возврат;
		КонецЕсли;
	КонецЕсли;
	
	СпецРеги=СоздатьОбъект("Регистры");
	регРезервы 		= СпецРеги.РезервыТоваров;
	регСпецзаказы 	= СпецРеги.СпецЗаказы;
	регКомпл 		= СпецРеги.КомплектацияЗаявок;
	регЗаказыЗаявки	= СпецРеги.ЗаказыПоставщикамЗаявки;
	
	спСчетов = СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(спСчетов,"ПоСчету");
	Если ИтогиАктуальны()=0  Тогда
		СпецРеги.Актуальность(1);
		регРезервы.УстановитьЗначениеФильтра( "ПоСчету", спСчетов, 2 );
		регСпецзаказы.УстановитьЗначениеФильтра( "ПоСчету", спСчетов, 2 );
		регКомпл.УстановитьЗначениеФильтра( "ПоСчету", спСчетов, 2 );
		регЗаказыЗаявки.УстановитьЗначениеФильтра( "ПоСчету", спСчетов, 2 );
		регРезервы.ВременныйРасчет();
		регСпецзаказы.ВременныйРасчет();
		регКомпл.ВременныйРасчет();
		регЗаказыЗаявки.ВременныйРасчет();
		СпецРеги.РассчитатьРегистрыНа( ТекущийДокумент() );
	КонецЕсли;

	Если (КоличествоСтрок()=1) И (ДатаДок>='21.09.11') Тогда
		ПолучитьСтрокуПоНомеру(1);
		
		регКомпл.УстановитьЗначениеФильтра("ПоСчету",спСчетов,2);
		таблКомпл=СоздатьОбъект("ИндексированнаяТаблица");
		тт=СоздатьОбъект("ТаблицаЗначений");
		регКомпл.ВыгрузитьИтоги(тт,1,1);
		таблКомпл.Загрузить(тт);
		таблКомпл.ДобавитьИндекс("иСчет","*ПоСчету");
		
		ДокПодч=СоздатьОбъект("Документ");
		
		СостЗаявки=глПолучитьСостояниеЗаявки(ПоСчету);

		// закрываем все что есть по заявке		
		глПогашениеПоРезервам(Контекст,спСчетов,регРезервы,регСпецЗаказы,РегКомпл,регЗаказыЗаявки);
		
		Если ((СостЗаявки="Ожидает отгрузки") ИЛИ (СостЗаявки="Комплектуется") ИЛИ (СостЗаявки="Ожидает компл.")) И (ПустоеЗначение(ПоСчету.Склад.МестоКомплектации)=0) Тогда
			//значит еще не отгружена и  не закрыта - можно аннулировать
			таблКомпл.УстановитьФильтр(ПоСчету,ПоСчету,"иСчет");
			таблКомпл.ВыбратьСтроки("иСчет");
			Пока таблКомпл.ПолучитьСтроку("иСчет")=1 Цикл
				Регистр.КомплектацияЗаявок.ДатаПоставки=таблКомпл.ДатаПоставки;
				Регистр.КомплектацияЗаявок.ПоСчету=таблКомпл.ПоСчету;
				Регистр.КомплектацияЗаявок.ВидЗаявки=таблКомпл.ВидЗаявки;
				Регистр.КомплектацияЗаявок.МестоКомплектации=таблКомпл.МестоКомплектации;
				Регистр.КомплектацияЗаявок.Склад=таблКомпл.Склад;
				Регистр.КомплектацияЗаявок.ВидДоставки=таблКомпл.ВидДоставки;
				Регистр.КомплектацияЗаявок.Товар="";
				Регистр.КомплектацияЗаявок.Количество=таблКомпл.Количество;
				Регистр.КомплектацияЗаявок.Статус=-1;
				Регистр.КомплектацияЗаявок.ДвижениеПриходВыполнить();
			КонецЦикла;
				
		КонецЕсли;
	Иначе
		глПогашениеПоРезервам(Контекст,спСчетов,регРезервы,регСпецЗаказы,РегКомпл,регЗаказыЗаявки);
	КонецЕсли;

	//регЗаказыЗаявки.УстановитьЗначениеФильтра("ПоСчету",спСчетов,2);
	//таблЗаказыЗаявки=СоздатьОбъект("ТаблицаЗначений");
	//регЗаказыЗаявки.ВыгрузитьИтоги(таблЗаказыЗаявки,1,1);
	//таблЗаказыЗаявки.ВыбратьСтроки();
	//Пока таблЗаказыЗаявки.ПолучитьСтроку() = 1 Цикл
	//	Регистр.ЗаказыПоставщикамЗаявки.ПривязыватьСтроку(0);
	//	Регистр.ЗаказыПоставщикамЗаявки.Товар = таблЗаказыЗаявки.Товар;
	//	Регистр.ЗаказыПоставщикамЗаявки.ПоСчету = таблЗаказыЗаявки.ПоСчету;
	//	Регистр.ЗаказыПоставщикамЗаявки.ПоЗаказу = таблЗаказыЗаявки.ПоЗаказу;
	//	Регистр.ЗаказыПоставщикамЗаявки.Количество = таблЗаказыЗаявки.Количество;
	//	Регистр.ЗаказыПоставщикамЗаявки.ДвижениеРасходВыполнить();
	//КонецЦикла;
	
	
КонецПроцедуры

//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаПроведения()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	Если ПроведениеМОД(Контекст)=1 Тогда
		Возврат;
	КонецЕсли;
	стар_ОбработкаПроведения();
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаУдаленияПроведения()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	Если ПроведениеПоАлгоритмуМОД=1 Тогда
		Возврат;
	КонецЕсли;
	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	ПриОтменеПроведенияДокумента(ТекущийДокумент());
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД



