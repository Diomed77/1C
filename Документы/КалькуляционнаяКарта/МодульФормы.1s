Перем Выб;
Перем Рег1;
Перем Рег2;
Перем ВалБлюда;
Перем ВалБлюдаРозн;   
Перем РознЦенаБл;
Перем п1,п2,п3,п4,п5,п6,п7,п8,п9,п10,п11,п12,п13,п14,п15;

Перем ТаблЭнергЦенность;

Функция ФРМКолГр(Кол,Ед) Далее

//{Расчет энергетической ценности блюда

//======================================================================


Функция РасчетКалорийВыводСтроки(п_Номенклатура,п_колич)

	Спр=СоздатьОбъект("Справочник.НоменклатураЭнергЦенность");
	Спр.ИспользоватьВладельца(п_Номенклатура);
//	Спр.ПорядокКодов();
	Спр.ПорядокРеквизита("ПорядокВывода");
	Спр.ВыбратьЭлементы();
	Пока Спр.ПолучитьЭлемент()=1  Цикл
		Если Спр.ПометкаУдаления()=1 Тогда
			Продолжить;
		КонецЕсли;	
		Если Спр.Единица=Перечисление.ЕдиницыИзмерения.Грамм Тогда
			л_Килокалория=л_Килокалория+Спр.ВидСостава.КоэфКилаколория*Спр.Количество;
			л_Килоджоуль=л_Килоджоуль+Спр.ВидСостава.КоэфКилоджоуль*Спр.Количество;
		КонецЕсли;
	КонецЦикла;		
	
	л_Килоджоуль=Окр(л_Килоджоуль*п_Колич/100,0,1);
	л_Килокалория=Окр(л_Килокалория*п_Колич/100,0,1);
	л_СтрокаЭнергЦенность=Строка(л_Килоджоуль)+Перечисление.ЕдиницыИзмерения.Килоджоуль+"/"+Строка(л_Килокалория)+Перечисление.ЕдиницыИзмерения.Килокалория;
	Возврат л_СтрокаЭнергЦенность;
	
КонецФункции // РасчетКалорий


Функция ПереводКолВГр(п_Кол,п_Ед)
	Если п_Ед.Единица=Перечисление.ЕдиницыИзмерения.Грамм Тогда
	   КолВГр=Число(п_Кол);
	ИначеЕсли п_Ед.Единица=Перечисление.ЕдиницыИзмерения.Килограмм Тогда
       КолВГр=Число(п_Кол*1000);
	Иначе
		спр=СоздатьОбъект("Справочник.Единицы");
		спр.ИспользоватьВладельца(п_Ед.Владелец);
		спр.ВыбратьЭлементы();
		Пока спр.ПолучитьЭлемент() = 1 Цикл 
			Если спр.Единица=Перечисление.ЕдиницыИзмерения.Килограмм Тогда
				КолБаз=п_Кол*п_Ед.Коэффициент;
				КолВГр=(КолБаз/Спр.Коэффициент)*1000;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли; 
	Возврат КолВГр;
КонецФункции

Функция ПолучениеТаблицыДляТовара(п_Товар)
	ТЗ=СоздатьОбъект("ТаблицаЗначений");
	Запрос=СоздатьОбъект("ODBCRecordSet");
	
	ТекстЗапроса="SELECT НоменклатураЭнергЦенность.ID [Ссылка $Справочник.НоменклатураЭнергЦенность]
		|	, НоменклатураЭнергЦенность.PARENTEXT [Владелец $Справочник.Номенклатура]
		|	, НоменклатураЭнергЦенность.DESCR Наименование
		|	, $НоменклатураЭнергЦенность.ВидСостава [ВидСостава $Справочник.НоменклатураЭнергЦенностьПеревод]
		|	, $НоменклатураЭнергЦенность.Количество Количество
		|	, $НоменклатураЭнергЦенность.Единица [Единица $Перечисление.ЕдиницыИзмерения]
		|	, $НоменклатураЭнергЦенность.ПорядокВывода ПорядокВывода
		|FROM $Справочник.НоменклатураЭнергЦенность AS НоменклатураЭнергЦенность With (NOLOCK)
		|WHERE (НоменклатураЭнергЦенность.PARENTEXT = :Товар)
		|ORDER BY $НоменклатураЭнергЦенность.ПорядокВывода
		|";	
		
	Запрос.УстановитьТекстовыйПараметр("Товар",п_Товар);
	Запрос.ВыполнитьИнструкцию(ТекстЗапроса,ТЗ);
		
	Возврат ТЗ;	
	
КонецФункции // ПолучениеТаблицыДляТовара

Процедура ДобавитьСтрокиЭнергетическойЦенности(п_Товар,п_Колич,п_Ном,п_Признак=1)
	ТЗ=СоздатьОбъект("ТаблицаЗначений");
	ТЗ=ПолучениеТаблицыДляТовара(п_Товар);
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		ТаблЭнергЦенность.НоваяСтрока();
		ТаблЭнергЦенность.НомерСтрокиТаблицы=п_Ном;
		ТаблЭнергЦенность.ПорядокВывода=ТЗ.ПорядокВывода;
		ТаблЭнергЦенность.Ссылка = ТЗ.Ссылка;
		ТаблЭнергЦенность.ВидСостава = ТЗ.ВидСостава;
		
		КолВ100гр=п_Колич*ТЗ.Количество/100;
		Если ТЗ.ПорядокВывода=1 Тогда
			ТаблЭнергЦенность.Количество=РасчетКалорийВыводСтроки(п_Товар,п_Колич);
		Иначе
			ТаблЭнергЦенность.Количество = КолВ100гр;
		КонецЕсли;	
		ТаблЭнергЦенность.Единица = ТЗ.Единица;
		ТаблЭнергЦенность.Товар = п_Товар;
		ТаблЭнергЦенность.Признак=п_Признак; //1-главный индигриент
	КонецЦикла;	
КонецПроцедуры // ДобавитьСтрокиЭнергетическойЦенности

Процедура РасчетЭнергетическойЦенностиТаблица()
	Ном=0;

	ТаблЭнергЦенность=СоздатьОбъект("ИндексированнаяТаблица");
	ТаблЭнергЦенность.НоваяКолонка("ПорядокВывода");
	ТаблЭнергЦенность.НоваяКолонка("НомерСтрокиТаблицы");
	ТаблЭнергЦенность.НоваяКолонка("Ссылка");
	ТаблЭнергЦенность.НоваяКолонка("ВидСостава");
	ТаблЭнергЦенность.НоваяКолонка("Количество");
	ТаблЭнергЦенность.НоваяКолонка("Единица");
	ТаблЭнергЦенность.НоваяКолонка("Товар");
	ТаблЭнергЦенность.НоваяКолонка("Признак");
	
	ТаблЭнергЦенность.ДобавитьИндекс("иТовар","*Товар");
	ТаблЭнергЦенность.ДобавитьИндекс("иНомерСтрокиТаблицы","*НомерСтрокиТаблицы");
	ТаблЭнергЦенность.ДобавитьИндекс("иПризнак","*Признак");
	
	ВыбратьСтроки();                                 
	РаздСтрТехн=0;
	Пока ПолучитьСтроку()=1 Цикл
		Если Ингредиент.ВидТовара=Перечисление.ВидыТоваров.Блюдо Тогда
			ЕстьКалькуляция=0;
			ДокумКальк=ПолучитьКалькуляцию(ДатаДок,Ингредиент,ТекущийДокумент());
			Если ДокумКальк<>0 Тогда
				ЕстьКалькуляция=1;
			КонецЕсли;
			Если ЕстьКалькуляция=0 Тогда  
				Ном=Ном+1;	
				ДобавитьСтрокиЭнергетическойЦенности(Ингредиент,ПереводКолВГр(КоличествоНетто,Единица),Ном);
			Иначе 
				Ном=Ном+1;	
				ДобавитьСтрокиЭнергетическойЦенности(Ингредиент,ПереводКолВГр(КоличествоНетто,Единица),Ном);
				Коэф=Количество*Коэффициент/ДокумКальк.КоличествоКалькуляции;
				ДокумКальк.ВыбратьСтроки();
				Пока ДокумКальк.ПолучитьСтроку()=1 Цикл 
					Ном=Ном+1;	
					ДобавитьСтрокиЭнергетическойЦенности(ДокумКальк.Ингредиент,ПереводКолВГр(ДокумКальк.КоличествоНетто*Коэф,ДокумКальк.Единица),Ном,0);
				КонецЦикла;	
			КонецЕсли;
		Иначе
			Ном=Ном+1;	
			ДобавитьСтрокиЭнергетическойЦенности(Ингредиент,ПереводКолВГр(КоличествоНетто,Единица),Ном);
		КонецЕсли;	
	КонецЦикла; 

//	ТаблЭнергЦенность.Показать();
//	ТаблЭнергЦенность.Свернуть("ПорядокВывода","Количество");
//	ТаблЭнергЦенность.ВыбратьСтроку();
	
КонецПроцедуры // РасчетЭнергетическойЦенностиТаблица


//======================================================================
Процедура ЗаполнениеСтроки(п_Товар,п_НомерСтроки,п_Колич,п_ИТОГО=0)
	п1="";п2="";п3="";п4="";п5="";п6="";п7="";п8="";п9="";п10="";п11="";п12="";п13="";п14="";п15="";
	
	ТЗ1=СоздатьОбъект("ТаблицаЗначений");
//	ТЗ1=ПолучениеТаблицыДляТовара(п_Товар);
//	ТаблЭнергЦенность.Показать();
	ТаблЭнергЦенность.УстановитьФильтр(п_НомерСтроки,п_НомерСтроки,"иНомерСтрокиТаблицы");
//	ТаблЭнергЦенность.Показать("иТовар");

	ТаблЭнергЦенность.Выгрузить(ТЗ1,"иНомерСтрокиТаблицы",,);
	
//	ТЗ1.ВыбратьСтроку();
	ТЗ1.ВыбратьСтроки();
	Пока ТЗ1.ПолучитьСтроку() = 1 Цикл
		
		//КолВ100гр=Окр(п_Колич*ТЗ1.Количество/100,1,0);
		КолВ100гр=Окр(ТЗ1.Количество,1,0);
		Если ТЗ1.ПорядокВывода=1 Тогда
			п1=РасчетКалорийВыводСтроки(п_Товар,п_Колич);
		ИначеЕсли ТЗ1.ПорядокВывода=2 Тогда
			п2=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=3 Тогда
			п3=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=4 Тогда
			п4=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=5 Тогда
			п5=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=6 Тогда
			п6=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=7 Тогда
			п7=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=8 Тогда
			п8=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=9 Тогда
			п9=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=10 Тогда
			п10=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=11 Тогда
			п11=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=12 Тогда
			п12=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=13 Тогда
			п13=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=14 Тогда
			п14=КолВ100гр;	
		ИначеЕсли ТЗ1.ПорядокВывода=15 Тогда
			п15=КолВ100гр;	
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры // ЗаполнениеСтроки
Процедура ЗаполнениеСтроки1(п_Товар,п_Колич,п_ИТОГО=0)
	п1="";п2="";п3="";п4="";п5="";п6="";п7="";п8="";п9="";п10="";п11="";п12="";п13="";п14="";п15="";
	
	ТЗ1=СоздатьОбъект("ТаблицаЗначений");
//	ТЗ1=ПолучениеТаблицыДляТовара(п_Товар);
//	ТаблЭнергЦенность.Показать();
	ТаблЭнергЦенность.УстановитьФильтр(п_Товар,п_Товар,"иТовар");
//	ТаблЭнергЦенность.Показать("иТовар");

	ТаблЭнергЦенность.Выгрузить(ТЗ1,"иТовар",,);
	
//	ТЗ1.ВыбратьСтроку();
	ТЗ1.ВыбратьСтроки();
	Пока ТЗ1.ПолучитьСтроку() = 1 Цикл
		
		//КолВ100гр=Окр(п_Колич*ТЗ1.Количество/100,1,0);
		КолВ100гр=Окр(ТЗ1.Количество,1,0);
		Если ТЗ1.ПорядокВывода=1 Тогда
			п1=РасчетКалорийВыводСтроки(п_Товар,п_Колич);
		ИначеЕсли ТЗ1.ПорядокВывода=2 Тогда
			п2=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=3 Тогда
			п3=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=4 Тогда
			п4=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=5 Тогда
			п5=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=6 Тогда
			п6=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=7 Тогда
			п7=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=8 Тогда
			п8=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=9 Тогда
			п9=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=10 Тогда
			п10=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=11 Тогда
			п11=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=12 Тогда
			п12=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=13 Тогда
			п13=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=14 Тогда
			п14=КолВ100гр;	
		ИначеЕсли ТЗ1.ПорядокВывода=15 Тогда
			п15=КолВ100гр;	
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры // ЗаполнениеСтроки

Процедура ЗаполнениеСтрокиИТОГО(п_Товар)
	п1="";п2="";п3="";п4="";п5="";п6="";п7="";п8="";п9="";п10="";п11="";п12="";п13="";п14="";п15="";
	
	ТЗ1=СоздатьОбъект("ТаблицаЗначений");
	ТаблЭнергЦенность.ВыключитьФильтр("иПризнак");
	ТаблЭнергЦенность.УстановитьФильтр(1,1,"иПризнак");
	ТаблЭнергЦенность.Выгрузить(ТЗ1,"иПризнак");
	ТЗ1.Свернуть("ПорядокВывода","Количество");

	ТЗ1.ВыбратьСтроки();
	Пока ТЗ1.ПолучитьСтроку() = 1 Цикл
		
		КолВ100гр=Окр(ТЗ1.Количество,1,0);

		Если ТЗ1.ПорядокВывода=1 Тогда
			п1=РасчетКалорийВыводСтроки(п_Товар,ИтогНетто*1000);
	//		Сообщить(РасчетКалорийВыводСтроки(п_Товар,КолВ100гр));
		ИначеЕсли ТЗ1.ПорядокВывода=2 Тогда
			п2=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=3 Тогда
			п3=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=4 Тогда
			п4=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=5 Тогда
			п5=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=6 Тогда
			п6=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=7 Тогда
			п7=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=8 Тогда
			п8=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=9 Тогда
			п9=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=10 Тогда
			п10=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=11 Тогда
			п11=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=12 Тогда
			п12=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=13 Тогда
			п13=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=14 Тогда
			п14=КолВ100гр;	
		ИначеЕсли ТЗ1.ПорядокВывода=15 Тогда
			п15=КолВ100гр;	
		КонецЕсли;
	КонецЦикла;	
	

	
КонецПроцедуры // ЗаполнениеСтроки

Процедура ЗаполнениеСтрокиИТОГО2(п_Товар)
	п1="";п2="";п3="";п4="";п5="";п6="";п7="";п8="";п9="";п10="";п11="";п12="";п13="";п14="";п15="";
	
	ТЗ1=СоздатьОбъект("ТаблицаЗначений");
	
	ТаблЭнергЦенность.Выгрузить(ТЗ1,,,);
//	ТЗ1.ВыбратьСтроку();
	ТЗ1.Свернуть("ПорядокВывода","Количество");

//	ТЗ1.ВыбратьСтроку();
	ТЗ1.ВыбратьСтроки();
	Пока ТЗ1.ПолучитьСтроку() = 1 Цикл
		
		КолВ100гр=Окр(ТЗ1.Количество,1,0);

		Если ТЗ1.ПорядокВывода=1 Тогда
			п1=РасчетКалорийВыводСтроки(п_Товар,КолВ100гр);
		ИначеЕсли ТЗ1.ПорядокВывода=2 Тогда
			п2=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=3 Тогда
			п3=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=4 Тогда
			п4=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=5 Тогда
			п5=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=6 Тогда
			п6=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=7 Тогда
			п7=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=8 Тогда
			п8=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=9 Тогда
			п9=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=10 Тогда
			п10=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=11 Тогда
			п11=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=12 Тогда
			п12=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=13 Тогда
			п13=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=14 Тогда
			п14=КолВ100гр;	
		ИначеЕсли ТЗ1.ПорядокВывода=15 Тогда
			п15=КолВ100гр;	
		КонецЕсли;
	КонецЦикла;	
	

	
КонецПроцедуры // ЗаполнениеСтроки
Процедура ЗаполнениеСтрокиИТОГО1()
	п1="";п2="";п3="";п4="";п5="";п6="";п7="";п8="";п9="";п10="";п11="";п12="";п13="";п14="";п15="";
	
	ТЗ1=СоздатьОбъект("ТаблицаЗначений");
	
	ТаблЭнергЦенность.Выгрузить(ТЗ1,,,);
//	ТЗ1.ВыбратьСтроку();
	ТЗ1.Свернуть("ПорядокВывода","Количество");

//	ТЗ1.ВыбратьСтроку();
	ТЗ1.ВыбратьСтроки();
	Пока ТЗ1.ПолучитьСтроку() = 1 Цикл
		
		КолВ100гр=Окр(ТЗ1.Количество,1,0);

		Если ТЗ1.ПорядокВывода=1 Тогда
			п1=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=2 Тогда
			п2=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=3 Тогда
			п3=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=4 Тогда
			п4=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=5 Тогда
			п5=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=6 Тогда
			п6=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=7 Тогда
			п7=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=8 Тогда
			п8=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=9 Тогда
			п9=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=10 Тогда
			п10=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=11 Тогда
			п11=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=12 Тогда
			п12=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=13 Тогда
			п13=КолВ100гр;
		ИначеЕсли ТЗ1.ПорядокВывода=14 Тогда
			п14=КолВ100гр;	
		ИначеЕсли ТЗ1.ПорядокВывода=15 Тогда
			п15=КолВ100гр;	
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры // ЗаполнениеСтроки

//======================================================================
Процедура ПечатьЭнергетическаяКарта()

	РасчетЭнергетическойЦенностиТаблица();

	ДлинаТекста=СтрДлина(ТоварШапки.Технология);
	ДокумКальк=СоздатьОбъект("Документ.КалькуляционнаяКарта");
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("ЭнергетическаяКарта");
	Таб.ПараметрыСтраницы(2,,,,,,,,,,,);
	Таб.ВывестиСекцию("Шапка");  
	Ном=0;
	ВыбратьСтроки();                                 
	РаздСтрТехн=0;
	Пока ПолучитьСтроку()=1 Цикл
		Если Ингредиент.ВидТовара=Перечисление.ВидыТоваров.Блюдо Тогда
			ЕстьКалькуляция=0;
			ДокумКальк=ПолучитьКалькуляцию(ДатаДок,Ингредиент,ТекущийДокумент());
			Если ДокумКальк<>0 Тогда
				ЕстьКалькуляция=1;
			КонецЕсли;
			Если ЕстьКалькуляция=0 Тогда   
				СтрокаПродукт=Ингредиент.Наименование;
				Ном=Ном+1; 
				ЗаполнениеСтроки(Ингредиент,Ном,ПереводКолВГр(КоличествоНетто,Единица));
				Таб.ВывестиСекцию("Строка");
			Иначе 
				СтрокаПродукт=Ингредиент.Наименование+" :";  
				Ном=Ном+1;	
				ЗаполнениеСтроки(Ингредиент,Ном,ПереводКолВГр(КоличествоНетто,Единица));
				Таб.ВывестиСекцию("Строка");
				Коэф=Количество*Коэффициент/ДокумКальк.КоличествоКалькуляции;
				ДокумКальк.ВыбратьСтроки();
				Пока ДокумКальк.ПолучитьСтроку()=1 Цикл 	
					СтрокаПродукт="  "+ДокумКальк.Ингредиент.Наименование;
					Ном=Ном+1;  
					ЗаполнениеСтроки(ДокумКальк.Ингредиент,Ном,ПереводКолВГр(ДокумКальк.КоличествоНетто*Коэф,ДокумКальк.Единица));
 					Таб.ВывестиСекцию("СтрокаБлюда");	
				КонецЦикла;	
			КонецЕсли;
			
		Иначе
			СтрокаПродукт=Ингредиент.Наименование;
			Ном=Ном+1;  
			ЗаполнениеСтроки(Ингредиент,Ном,ПереводКолВГр(КоличествоНетто,Единица));
			Таб.ВывестиСекцию("Строка");
		КонецЕсли;	
	КонецЦикла; 
	
	ЗаполнениеСтрокиИТОГО(ТоварШапки);
	Таб.ВывестиСекцию("ИТОГО");
	Таб.ВывестиСекцию("Подписи"); 
	Таб.Опции(0,0,0,0);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Печать энергетической карты","");

	
КонецПроцедуры // ПечатьЭнергетическаяКарта()


Процедура ЭнергетическийРасчет()
	
	Если ТоварШапки.ФлЭнергЦенность=0 Тогда
		Предупреждение("Включите расчет энергетической ценности во вкладке Состав.");
	КонецЕсли;
	
	Если ИтогНетто=0 Тогда
		Предупреждение("Не рассчитан НЕТТО вес продукта.");
		Возврат;
	КонецЕсли;
	
	РасчетЭнергетическойЦенностиТаблица();
	
	ТЗ=СоздатьОбъект("ТаблицаЗначений");
	ТаблЭнергЦенность.ВыключитьФильтр("иПризнак");
	ТаблЭнергЦенность.УстановитьФильтр(1,1,"иПризнак");
//	ТаблЭнергЦенность.Показать("иПризнак");
	ТаблЭнергЦенность.Выгрузить(ТЗ,"иПризнак");
	ТЗ.Свернуть("ПорядокВывода","Количество");
//	ТЗ.ВыбратьСтроку();
	
	СпрЭнергЦенность=СоздатьОбъект("Справочник.НоменклатураЭнергЦенность");
	СпрЭнергЦенность.ИспользоватьВладельца(ТоварШапки);	
	СпрЭнергЦенность.ПорядокРеквизита("ПорядокВывода");
	СпрЭнергЦенность.ВыбратьЭлементы();
	ТЗ.ВыбратьСтроки();
	Пока СпрЭнергЦенность.ПолучитьЭлемент()=1  Цикл
		Если СпрЭнергЦенность.ПометкаУдаления()=1 Тогда
			Продолжить;
		КонецЕсли;
		ТЗ.ПолучитьСтроку();
		Если СпрЭнергЦенность.Наименование="tostarp:" Тогда
			СпрЭнергЦенность.Количество =ПолучитьПустоеЗначение(СпрЭнергЦенность.Количество);
			СпрЭнергЦенность.Единица=ПолучитьПустоеЗначение(СпрЭнергЦенность.Единица);
			СпрЭнергЦенность.КоличествоТекст =ПолучитьПустоеЗначение(СпрЭнергЦенность.Количество);
			
		Иначе
			СпрЭнергЦенность.Количество =Окр(Число(ТЗ.Количество)*100/(ИтогНетто*1000),1,0);
			Если СпрЭнергЦенность.ПорядокВывода<>1 Тогда
				СпрЭнергЦенность.Единица=Перечисление.ЕдиницыИзмерения.Грамм;
			КонецЕсли;
			СпрЭнергЦенность.КоличествоТекст=Строка(СпрЭнергЦенность.Количество)+"g";

		КонецЕсли;
		
		СпрЭнергЦенность.Записать();		
	КонецЦикла;
	Сообщить("Энергетическая ценность расчитана успешно.");	
КонецПроцедуры // ЭнергетическийРасчет

//}Расчет энергетической ценности блюда

Процедура кнУдалитьЗамену()
	Ответ = Вопрос("Документ Замена ингредиента будет помечен на удаление и удален из строки Калькуляционной карты. Продолжить?","Да+Нет",60);
	Если Ответ <> "Да" Тогда Возврат; КонецЕсли;
	док = СоздатьОбъект("Документ.ЗаменаИнгредиента");
	Если док.НайтиДокумент(Замена) = 1 Тогда
		док.Удалить(0);
		Замена = "";
	КонецЕсли;
КонецПроцедуры

//----------------------
Процедура ПриВводеСтроки()
	ПриВводеСтрокиДокумента(Контекст);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриИзмененииНаценки() 
	ПроцНДС=ПроцентНДС(ТоварШапки.СтавкаНДС);
	Если Константа.КалькулироватьСНДС=Перечисление.Булево.Нет Тогда
		Если ТоварШапки.ВалютаУчета=ТоварШапки.ВалютаПродажи Тогда
			РозничнаяЦена=(Итог("Сумма")/КоличествоКалькуляции)*(1+(ОбщаяНаценка/100))*(1+ПроцНДС/100);                       
		Иначе
			РозничнаяЦена=Пересчет((Итог("Сумма")/КоличествоКалькуляции)*(1+(ОбщаяНаценка/100)),ТоварШапки.ВалютаУчета,ДатаДок,ТоварШапки.ВалютаПродажи,ДатаДок)*(1+ПроцНДС/100);                       
		КонецЕсли;                                                                                                      
	Иначе
		Если ТоварШапки.ВалютаУчета=ТоварШапки.ВалютаПродажи Тогда
			РозничнаяЦена=(Итог("Сумма")/КоличествоКалькуляции)*(1+(ОбщаяНаценка/100));                       
		Иначе
			РозничнаяЦена=Пересчет((Итог("Сумма")/КоличествоКалькуляции)*(1+(ОбщаяНаценка/100)),ТоварШапки.ВалютаУчета,ДатаДок,ТоварШапки.ВалютаПродажи,ДатаДок);                       
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
//-----------------------------------------------
Процедура ПриИзмененииРозничнойЦены()         
	ПроцНДС=ПроцентНДС(ТоварШапки.СтавкаНДС);   
	Если Итог("Сумма")=0 Тогда
		ОбщаяНаценка=0;
		Возврат;
	КонецЕсли;	
	Если Константа.КалькулироватьСНДС=Перечисление.Булево.Нет Тогда	
		Если ТоварШапки.ВалютаУчета=ТоварШапки.ВалютаПродажи Тогда	
			ОбщаяНаценка=((РозничнаяЦена-РозничнаяЦена*ПроцНДС/(100+ПроцНДС))-(Итог("Сумма")/КоличествоКалькуляции))/(Итог("Сумма")/КоличествоКалькуляции)*100;
		Иначе
			ОбщаяНаценка=((Пересчет(РозничнаяЦена-РозничнаяЦена*ПроцНДС/(100+ПроцНДС),ТоварШапки.ВалютаПродажи,ДатаДок,ТоварШапки.ВалютаУчета,ДатаДок)-(Итог("Сумма") /КоличествоКалькуляции))/(Итог("Сумма")/КоличествоКалькуляции))*100;
		КонецЕсли;	
	Иначе
		Если ТоварШапки.ВалютаУчета=ТоварШапки.ВалютаПродажи Тогда	
			ОбщаяНаценка=(РозничнаяЦена-(Итог("Сумма")/КоличествоКалькуляции))/(Итог("Сумма")/КоличествоКалькуляции)*100;
		Иначе
			ОбщаяНаценка=((Пересчет(РозничнаяЦена,ТоварШапки.ВалютаПродажи,ДатаДок,ТоварШапки.ВалютаУчета,ДатаДок)-(Итог("Сумма") /КоличествоКалькуляции))/(Итог("Сумма")/КоличествоКалькуляции))*100;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры
//***************************************************************
//
Процедура ОбработкаПодбора(Выб) Далее
//_____________________________________________________________________________
Процедура ПоискТовараПоКоду()
	Если ПустоеЗначение(ТовКод)=1 Тогда
	    Возврат;
	КонецЕсли;  
	Спр=СоздатьОбъект("Справочник.Номенклатура");
	Если Спр.НайтиПоКоду(СокрЛП(ТовКод),0)=0 Тогда
	    Сообщить("Не могу найти ингридиент");
		Возврат;
	КонецЕсли;  
	Если Не((Спр.ВидТовара=Перечисление.ВидыТоваров.Блюдо) ИЛИ
		(Спр.ВидТовара=Перечисление.ВидыТоваров.Ингредиент) ИЛИ
		(Спр.ВидТовара=Перечисление.ВидыТоваров.Товар) ИЛИ
		(Спр.ВидТовара=Перечисление.ВидыТоваров.Компонент))Тогда
	    Сообщить("Товар "+Спр.ПоАлфавиту+" является "+Спр.ВидТовара+" и не может входить в состав блюда");
		Возврат;
	КонецЕсли;                      
	Если Спр.ПометкаУдаления()=1 Тогда
	    Если Вопрос("Ингридиент помечен на удаление. Продолжить","Да+Нет")="Нет" Тогда
	        Возврат;
	    КонецЕсли;
	КонецЕсли;
	Ингридиент=Спр.ТекущийЭлемент();
	ОбработкаПодбора(Спр.ТекущийЭлемент());
КонецПроцедуры //ПоискТовараПоКоду
//-----------------------------------------------
Функция ФРМКолГр(Кол,Ед)
	Если Ед.Единица=Перечисление.ЕдиницыИзмерения.Грамм Тогда
	   ПромСтрокаКол=Строка(Кол);
	ИначеЕсли Ед.Единица=Перечисление.ЕдиницыИзмерения.Килограмм Тогда
       ПромСтрокаКол=Строка(Окр(Кол*1000,3,1));
    Иначе
	   ПромСтрокаКол=Строка(Кол)+"("+Ед+")";
КонецЕсли; 
Возврат ПромСтрокаКол;
КонецФункции
//-----------------------------------------------
Процедура РозничнаяЦенаБлюда()
	Если УстановкаЦеныРеализации=Перечисление.УстанЦенРеализ.Автоматически Тогда
		РознЦенаБлюда=Итог("СуммаРозн")/КоличествоКалькуляции;                  

		Если КатегорияЦены=Константа.РозничнаяКатегорияЦены Тогда
			РознЦенаБлюдаСНДС=Окр(РознЦенаБлюда*(1+ПроцентНДС(ТоварШапки.СтавкаНДС)/100),2);
			РознЦенаБлюда=РознЦенаБлюдаСНДС/(1+(ПроцентНДС(ТоварШапки.СтавкаНДС)/100));
		Иначе
			РознЦенаБлюда=Окр(РознЦенаБлюда,2);
		КонецЕсли;
	Иначе
		РознЦенаБлюда=ЦенаТовараПоКатегорииДляТовара(ТоварШапки,КатегорияЦены,,,ДатаДок);
	КонецЕсли;                                                   
	
	Если РозничнаяЦена<>РознЦенаБлюда Тогда
		РозничнаяЦена=РознЦенаБлюда;
	КонецЕсли;
	
	Если Итог("Сумма")<>0 Тогда
		ПроцНДС=ПроцентНДС(ТоварШапки.СтавкаНДС);
		Если Константа.КалькулироватьСНДС=Перечисление.Булево.Да Тогда
			Если ТоварШапки.ВалютаУчета=ТоварШапки.ВалютаПродажи Тогда	
				ПромОбщаяНаценка=((РозничнаяЦена-РозничнаяЦена*ПроцНДС/(100+ПроцНДС))-(Итог("Сумма")/КоличествоКалькуляции))/(Итог("Сумма")/КоличествоКалькуляции)*100;
			Иначе
				ПромОбщаяНаценка=((Пересчет(РозничнаяЦена-РозничнаяЦена*ПроцНДС/(100+ПроцНДС),ТоварШапки.ВалютаПродажи,ДатаДок,ТоварШапки.ВалютаУчета,ДатаДок)-(Итог("Сумма") /КоличествоКалькуляции))/(Итог("Сумма")/КоличествоКалькуляции))*100;
			КонецЕсли;	
		Иначе
			Если ТоварШапки.ВалютаУчета=ТоварШапки.ВалютаПродажи Тогда
				ПромОбщаяНаценка=(РозничнаяЦена-(Итог("Сумма")/КоличествоКалькуляции))/(Итог("Сумма")/КоличествоКалькуляции)*100;
			Иначе
				ПромОбщаяНаценка=((Пересчет(РозничнаяЦена,ТоварШапки.ВалютаПродажи,ДатаДок,ТоварШапки.ВалютаУчета,ДатаДок)-(Итог("Сумма") /КоличествоКалькуляции))/(Итог("Сумма")/КоличествоКалькуляции))*100;
			КонецЕсли;
		КонецЕсли;	
	Иначе
		ПромОбщаяНаценка=0;	
	КонецЕсли;
	ПромОбщаяНаценка=Окр(ПромОбщаяНаценка,2);
	Если ОбщаяНаценка<>ПромОбщаяНаценка Тогда
		ОбщаяНаценка=ПромОбщаяНаценка;
	КонецЕсли;	
КонецПроцедуры 
//-----------------------------------------------
Процедура ОпределитьУровеньВложенности()
	Если  Ингредиент.ВидТовара=Перечисление.ВидыТоваров.Блюдо Тогда
		УрБлюда=Ингредиент.ИмеетБлюда;
		Если  УрБлюда>=УровеньВложенности Тогда
			УровеньВложенности=УрБлюда+1;
		Иначе
			УровеньВложенности=УровеньВложенности+1;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
//-----------------------------------------------
Процедура ВычСуммыСеб()
	ВалБлюда=ТоварШапки.ВалютаУчета;
	ВалБлюдаРозн=ТоварШапки.ВалютаПродажи;
	Если (КоэфСписания=100) ИЛИ (СезонКоэф=100)Тогда
			Количество=0;
			Сумма=0;
			СуммаРозн=0;
			Возврат;   
	КонецЕсли;	
		
	Если ПоБрутто=1 Тогда  
	    КоличествоНетто=(Количество*(100-КоэфСписания)*(100-СезонКоэф))/10000; 
	ИначеЕсли Константа.ВводКоличестваВКК=Перечисление.БруттоНетто.БруттоНетто Тогда 
		Если Количество=0 Тогда
			Возврат;
		Иначе	
			КоэфСписания=100-((КоличествоНетто*10000)/(Количество*(100-СезонКоэф)));
		КонецЕсли;		
	Иначе
	    КоличествоПром=(КоличествоНетто*100)/(100-КоэфСписания);
		Количество=(КоличествоПром*100)/(100-СезонКоэф);
	КонецЕсли;
	
	Если  Цена=0 Тогда
	    Сумма=0;
		СуммаРозн=0;
		Возврат;
	КонецЕсли; 	
	Сумма=Цена*Количество*Коэффициент;
	Если ВалБлюда.Код=ВалБлюдаРозн.Код Тогда
		СумР=Сумма;
	ИначеЕсли (ВалБлюда.Код<>ВалБлюдаРозн.Код) И (ВалБлюдаРозн.Код=Константа.БазоваяВалюта.Код) Тогда
		СумР=Сумма*КурсДляВалюты(ВалБлюда,ДатаДок);
	Иначе
		СумР=Сумма/КурсДляВалюты(ВалБлюдаРозн,ДатаДок)/КурсДляВалюты(ВалБлюда,ДатаДок);
	КонецЕсли;    
	
	ПроцНДС=ПроцентНДС(Ингредиент.СтавкаНДС);

	
	Если Константа.КалькулироватьСНДС=Перечисление.Булево.Нет Тогда
		СуммаРозн=СумР*(1+(Наценка/100));
	Иначе
		СуммаРозн=СумР*(1+(Наценка/100))/(1+(ПроцНДС/100));
	КонецЕсли;
	//Если Ингредиент.ВидТовара=Перечисление.ВидыТоваров.Блюдо Тогда
	//	СуммаРозн=Ингредиент.РозничнаяЦена.Получить(ДатаДок)*Количество*Коэффициент;
	//	СуммаРозн=Пересчет(СуммаРозн,Ингредиент.ВалютаПродажи,ДатаДок,ВалБлюда,ДатаДок);
	//	Наценка=((СуммаРозн-СумР)/СумР)*100;
	//КонецЕсли;                                 
	РозничнаяЦенаБлюда();
КонецПроцедуры
//-----------------------------------------------
Процедура УстановкаЕдиницыИзмер()
	Спр=СоздатьОбъект("Справочник.Единицы");
	Спр.ИспользоватьВладельца(Ингредиент);
	Спр.ВыбратьЭлементы();
	Пока Спр.ПолучитьЭлемент()=1 Цикл
		Если Спр.Единица=Ингредиент.БазоваяЕдиницаИзмерения Тогда
			Единица=Спр.ТекущийЭлемент();
			Коэффициент=Спр.Коэффициент;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	глСоздатьНовыйОбъект(Спр);
	Спр.Единица=Ингредиент.БазоваяЕдиницаИзмерения;
	Спр.Коэффициент=1;
	Спр.Наименование=Строка(Ингредиент.БазоваяЕдиницаИзмерения);
	//Закомментировано Инсталлятором МОД:Спр.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Спр, );
	//Конец текста, вставленного Инсталлятором МОД

	Единица=Спр.ТекущийЭлемент();
	Коэффициент=1;
КонецПроцедуры
//-----------------------------------------------
Процедура ВычСебСто()
	Остаток=Рег1.СводныйОстаток(Ингредиент,,,"ОстатокТовара");
	ВалБлюда=ТоварШапки.ВалютаУчета;
	ВалБлюдаРозн=ТоварШапки.ВалютаПродажи;
	ВалИнгр=Ингредиент.ВалютаУчета;       
	ВалЗакуп=Ингредиент.ВалютаЗакупки;       
	ПроцНДС=ПроцентНДС(Ингредиент.СтавкаНДС);
	Если Остаток<=0 Тогда
		Если Константа.КалькулироватьСНДС=Перечисление.Булево.Нет Тогда
				ЦенаРасчета=Ингредиент.ЦенаПриобретения;
			Иначе
				ЦенаРасчета=Ингредиент.ЦенаПриобретения*(100/(100+ПроцНДС));                               			
			КонецЕсли;       
			
		Если ВалБлюда=ВалЗакуп Тогда
			ЦенаК=ЦенаРасчета;
		Иначе
			ЦенаК=ЦенаРасчета*КурсДляВалюты(ВалИнгр,ДатаДок)/КурсДляВалюты(ВалБлюда,ДатаДок);
		КонецЕсли;
	Иначе
		Стоим=Рег2.СводныйОстаток(Фирма,Ингредиент,,,,,,,"Стоимость");
		НДСстоим=Рег2.СводныйОстаток(Фирма,Ингредиент,,,,,,,"НДС");
		Остат=Рег2.СводныйОстаток(Фирма,Ингредиент,,,,,,,"ОстатокТовара");
		Если (Остат<>0) и (Стоим>0) Тогда
			Если Константа.КалькулироватьСНДС=Перечисление.Булево.Нет Тогда
				ЦенаРасчета=Стоим/Остат;
			Иначе
				ЦенаРасчета=(Стоим+НДСстоим)/Остат;
			КонецЕсли;
		Иначе
			Если Константа.КалькулироватьСНДС=Перечисление.Булево.Нет Тогда
				ЦенаРасчета=Пересчет(Ингредиент.ЦенаПриобретения,ВалЗакуп,ДатаДок,ВалБлюда,ДатаДок); 
			Иначе
			    ЦенаРасчета=Пересчет(Ингредиент.ЦенаПриобретения,ВалЗакуп,ДатаДок,ВалБлюда,ДатаДок)*(100/(100+ПроцНДС));                             
			КонецЕсли; 
		КонецЕсли;	
		Если ВалБлюда=ВалИнгр Тогда
			ЦенаК=ЦенаРасчета;
		ИначеЕсли (ВалБлюда<>ВалИнгр) И (ВалИнгр=Константа.БазоваяВалюта) Тогда
			ЦенаК=ЦенаРасчета/КурсДляВалюты(ВалБлюда,ДатаДок);
		Иначе
			ЦенаК=ЦенаРасчета*КурсДляВалюты(ВалИнгр,ДатаДок)/КурсДляВалюты(ВалБлюда,ДатаДок);
		КонецЕсли;
	КонецЕсли;
	Цена=ЦенаК;
	ЦенаОпт=ЦенаТовараПоКатегорииДляТовара(Ингредиент,Константа.ОсновнаяКатегорияЦены,,,ДатаДок);
КонецПроцедуры   
//-----------------------------------------------
Процедура ОбновитьКоэфСписания() 
	Если ПустоеЗначение(ВидОбработки)=0 Тогда
		КоэфСписания=ВидОбработки.КоэффВыхода;
		ВычСуммыСеб();                           
	КонецЕсли;
КонецПроцедуры	
//-----------------------------------------------
Процедура РеквизитыКалькуляции()
	УстановкаЕдиницыИзмер(); 
	Если ПустоеЗначение(Ингредиент.ОбработкаПоУмолчанию)=0 Тогда
		ВидОбработки=Ингредиент.ОбработкаПоУмолчанию; 
		ОбновитьКоэфСписания();
	КонецЕсли;
	СезонКоэф=УстановитьСезонныйКоэффициент(Ингредиент,ДатаДок);
	Наценка=Ингредиент.НаценкаНаИнгредиент;  
	Если (КоэфСписания=100) ИЛИ (СезонКоэф=100)Тогда
			Количество=0;
			Сумма=0;
			СуммаРозн=0;
			Возврат;   
	КонецЕсли;	
		
	Если ПоБрутто=1 Тогда  
	    КоличествоНетто=(Количество*(100-КоэфСписания)*(100-СезонКоэф))/10000; 
	ИначеЕсли Константа.ВводКоличестваВКК=Перечисление.БруттоНетто.БруттоНетто Тогда 
		Если Количество=0 Тогда
			Возврат;
		Иначе	
			КоэфСписания=100-((КоличествоНетто*10000)/(Количество*(100-СезонКоэф)));
		КонецЕсли;		
	Иначе
	    КоличествоПром=(КоличествоНетто*100)/(100-КоэфСписания);
		Количество=(КоличествоПром*100)/(100-СезонКоэф);
	КонецЕсли;
КонецПроцедуры
//-----------------------------------------------
Процедура ИзмЕдинЛок()
	Коэффициент=Единица.Коэффициент;
	ВычСуммыСеб();
КонецПроцедуры
//-----------------------------------------------
Процедура ВводНового(ФлКопирования);
	ЗаполнитьШапку(Контекст);
	
	Если ФлКопирования=1 Тогда
		Возврат;
	КонецЕсли;
	
	Склад=Константа.ОсновнойСклад;
	                 
	КатегорияЦены=Константа.РозничнаяКатегорияЦены;
	УстановкаЦеныРеализации=Константа.УстановкаЦеныРеализации;
	
	Если СокрП(НомерДок)="" Тогда
		НомерДок="КК-00001";
	КонецЕсли;
	ДатаДок=РабочаяДата();
	КоличествоКалькуляции=1; 
	Если Константа.ВводКоличестваВКК=Перечисление.БруттоНетто.Брутто Тогда
		ПоБрутто=1;
		Форма.КоличествоНетто.Доступность(0);
		Форма.Количество.Доступность(1);
	ИначеЕсли Константа.ВводКоличестваВКК=Перечисление.БруттоНетто.БруттоНетто Тогда  
		ПоБрутто=0;
		Форма.ПоБрутто.Доступность(0);
		Форма.КоличествоНетто.Доступность(1);
		Форма.Количество.Доступность(1);
	Иначе
		ПоБрутто=0;
		Форма.КоличествоНетто.Доступность(1);
		Форма.Количество.Доступность(0);
	КонецЕсли;	 

	СписокПараметров=Форма.Параметр;
		
	Если ПустоеЗначение(СписокПараметров)=0 Тогда
		КоличествоКалькуляции=СписокПараметров.ПолучитьЗначение(1);
		ТоварШапки=СписокПараметров.ПолучитьЗначение(2);
	КонецЕсли;
КонецПроцедуры
//-----------------------------------------------
Процедура Подбор()
	ОткрытьПодбор("Спровочник.Номенклатура",,Контекст);
КонецПроцедуры
//-----------------------------------------------
Процедура ОбработкаПодбора(Выб) 
	Если ((Выб.ВидТовара=Перечисление.ВидыТоваров.Ингредиент)или(Выб.ВидТовара=Перечисление.ВидыТоваров.Блюдо)или(Выб.ВидТовара=Перечисление.ВидыТоваров.Компонент) или (Выб.ВидТовара=Перечисление.ВидыТоваров.Товар)) Тогда
		Если Константа.ВводКоличестваВКК=Перечисление.БруттоНетто.БруттоНетто Тогда
			КолНетто=1;
			КолБрутто=1;
			Если ВвестиЧисло(КолНетто,"Введите количество НЕТТО",10,3)=1 Тогда
				НоваяСтрока();
				Ингредиент=Выб; 
				ТовКод=Ингредиент.Код;
				КоличествоНетто=КолНетто;
			Иначе 
				Возврат;
			КонецЕсли; 
			Если ВвестиЧисло(КолБрутто,"Введите количество БРУТТО",10,3)=1 Тогда
				Ингредиент=Выб; 
				ТовКод=Ингредиент.Код;
				Количество=КолБрутто; 
			Иначе
				Возврат;
			КонецЕсли; 
		Иначе	
			Кол=1;
			Если ВвестиЧисло(Кол,"Введите количество",10,3)=1 Тогда
				НоваяСтрока();
				Ингредиент=Выб;     
				ТовКод=Ингредиент.Код;
				Если ПоБрутто=1 Тогда
					Количество=Кол;
				Иначе	
					КоличествоНетто=Кол;
				КонецЕсли;	
			Иначе
				Возврат;
			КонецЕсли; 
		КонецЕсли;
		РеквизитыКалькуляции();
		ОпределитьУровеньВложенности();	
	Иначе
		Возврат;
	КонецЕсли;
КонецПроцедуры
//-----------------------------------------------
Процедура ВыборБлюда()
	БЛ=СоздатьОбъект("Справочник.Номенклатура");
	БЛ.ИспользоватьДату(ДатаДок);
	Если ТоварШапки.Выбран()=1 Тогда
		БЛ.НайтиЭлемент(ТоварШапки);
	КонецЕсли;
	Если БЛ.Выбрать("Выберите Блюдо","")>0 Тогда
		Если Бл.ТекущийЭлемент().ВидТовара<>Перечисление.ВидыТоваров.Блюдо Тогда
			Возврат;
		Иначе
			Если Бл.ТекущийЭлемент().КоличествоКалькуляции<=0 Тогда
				Бл.КоличествоКалькуляции=1;
				//Закомментировано Инсталлятором МОД:Бл.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(Бл, );
	//Конец текста, вставленного Инсталлятором МОД

			КонецЕсли;
			ТоварШапки=Бл.ТекущийЭлемент();
			КоличествоКалькуляции=ТоварШапки.КоличествоКалькуляции;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
//-----------------------------------------------
Процедура ОткрытьЗамену()
	Если Выбран()=0 Тогда
		Предупреждение("Запишите документ !",2);
		Возврат;
	КонецЕсли;
	Если Замена.Выбран()=0 Тогда  
		ПромИнгр=ВзятьКонтекст(Контекст);
		ОткрытьФорму("Документ.ЗаменаИнгредиента",ПромИнгр,ТекущийДокумент());
	Иначе
		ОткрытьФорму(Замена.ТекущийДокумент(),,0);
	КонецЕсли;
КонецПроцедуры
//-----------------------------------------------
Процедура Печать()
	Таб=СоздатьОбъект("Таблица");
	Спр=СоздатьОбъект("Справочник.Номенклатура");
	Таб.ИсходнаяТаблица("Таблица");
	Таб.ВывестиСекцию("Шапка");
	ВыбратьСтроки();
	Ном=0; ЕстьЗамена = 0;
	Пока ПолучитьСтроку()=1 Цикл 
		Если Ингредиент.ВидТовара=Перечисление.ВидыТоваров.Компонент Тогда
			Продолжить;
		КонецЕсли;
		Ном=Ном+1; 
		ПечНетто=Окр(КоличествоНетто,3); 
		ПечБрутто=Окр(Количество,3); 
		Если Замена.Выбран() = 1 Тогда
			ЕстьЗамена = 1;
			пЕстьЗамена = "V";
		Иначе
			пЕстьЗамена = "";
		КонецЕсли;
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;                        
	РознЦенаБл=ТоварШапки.РозничнаяЦена.Получить(ДатаДок);
	Таб.ВывестиСекцию("Подвал"); 
	
	Если ЕстьЗамена = 1 Тогда
		Рег=СоздатьОбъект("Регистр.ПартииТоваров");
		Таб.ВывестиСекцию("ПустаяСтрока"); 
		Таб.ВывестиСекцию("ПустаяСтрока"); 
		пДатаЗам = Шаблон("[ПолучитьДатуТА()] [ПолучитьВремяТА()]");
		Таб.ВывестиСекцию("ШапкаЗам"); 
		ВыбратьСтроки(); Ном=0;
		Пока ПолучитьСтроку()=1 Цикл 
			Если Ингредиент.ВидТовара=Перечисление.ВидыТоваров.Компонент Тогда Продолжить; КонецЕсли;
			Ном=Ном+1; 
			
			Если Замена.Выбран() = 0 Тогда Продолжить; КонецЕсли;
			ПечНетто=Окр(КоличествоНетто,3); 
			ПечБрутто=Окр(Количество,3); 
			Таб.ВывестиСекцию("ТовЗам");
			Замена.ВыбратьСтроки();
			Пока Замена.ПолучитьСтроку() = 1 Цикл
				пЗамена = Замена.Замена;
				пЕдиницаЗам = Замена.Единица;
				//должно быть в той единице, которая указана в основной калькуляции
				пБруттоЗам = Окр(Количество*Замена.КоэффициентЗамены,3);
				пНеттоЗам = Окр(Количество*Замена.КоэффициентЗамены,3);
				пКол = Рег.СводныйОстаток("",пЗамена,,,,,,,"ОстатокТовара")/Замена.Коэффициент;
				
				//пЦенаЗам = ?(пКол > 0,Рег.СводныйОстаток("",пЗамена,,,,,,,"Стоимость")/пКол,0);
				пЦенаЗам = Пересчет(пЗамена.ЦенаПриобретения*Замена.Коэффициент,пЗамена.ВалютаЗакупки,ДатаДок,ТоварШапки.ВалютаУчета,ДатаДок);
				пСуммаЗам = пЦенаЗам*пНеттоЗам;
				Таб.ВывестиСекцию("Замена");
			КонецЦикла;
		КонецЦикла;                        
		Таб.ВывестиСекцию("ПодвалЗам");
	КонецЕсли;
	Таб.Опции(0,0,0,0,"ОпцииПечатиОстатков");
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Печать калькуляционной карточки","");
КонецПроцедуры

Процедура ПечатьТехнологическойКарты()   
	ДлинаТекста=СтрДлина(ТоварШапки.Технология);
	ДокумКальк=СоздатьОбъект("Документ.КалькуляционнаяКарта");
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("ТехнологическаяКарта");
	Таб.ПараметрыСтраницы(2,,,,,,,,,,,);
	Таб.ВывестиСекцию("Шапка");  
	Ном=0;
	ВыбратьСтроки();                                 
	РаздСтрТехн=0;
	Пока ПолучитьСтроку()=1 Цикл
		Если Ингредиент.ВидТовара=Перечисление.ВидыТоваров.Блюдо Тогда
			ЕстьКалькуляция=0;
			ДокумКальк=ПолучитьКалькуляцию(ДатаДок,Ингредиент,ТекущийДокумент());
			Если ДокумКальк<>0 Тогда
				ЕстьКалькуляция=1;
			КонецЕсли;
			Если ЕстьКалькуляция=0 Тогда   
				
				СтрокаПродукт=Ингредиент.Наименование;	  
				СтрокаБрутто=ФРМКолГр(Количество,Единица);
				СтрокаНетто=ФРМКолГр(КоличествоНетто,Единица); 
				Если  СезонКоэф<>100 Тогда
					СтрокаГотов=ФРМКолГр((КоличествоНетто*100)/(100-СезонКоэф),Единица);	
				Иначе	
					СтрокаГотов="";	
				КонецЕсли;
				Ном=Ном+1;   
				РаздСтрТехн=РаздСтрТехн+1;
				СтрокаТехнологии=СтрПолучитьСтроку(ТоварШапки.Технология,РаздСтрТехн);
				
				Таб.ВывестиСекцию("Строка");	
			Иначе 
				СтрокаПродукт=Ингредиент.Наименование+" :";  
				//СтрокаБрутто="";
				//СтрокаНетто=""; 
				//СтрокаГотов="";  
				  
				СтрокаБрутто=ФРМКолГр(Количество,Единица)+" :";
				СтрокаНетто=ФРМКолГр(КоличествоНетто,Единица)+" :"; 
				Если  СезонКоэф<>100 Тогда
					СтрокаГотов=ФРМКолГр((КоличествоНетто*100)/(100-СезонКоэф),Единица)+" :";	
				Иначе	
					СтрокаГотов="";	
				КонецЕсли;
				Ном=Ном+1;	
				РаздСтрТехн=РаздСтрТехн+1;
				СтрокаТехнологии=СтрПолучитьСтроку(ТоварШапки.Технология,РаздСтрТехн);
				
				Таб.ВывестиСекцию("Строка");
				Коэф=Количество*Коэффициент/ДокумКальк.КоличествоКалькуляции;
				ДокумКальк.ВыбратьСтроки();
				Пока ДокумКальк.ПолучитьСтроку()=1 Цикл 	
					СтрокаПродукт="  "+ДокумКальк.Ингредиент.Наименование;
					СтрокаБрутто=ФРМКолГр(ДокумКальк.Количество*Коэф,ДокумКальк.Единица);
					СтрокаНетто=ФРМКолГр(ДокумКальк.КоличествоНетто*Коэф,ДокумКальк.Единица); 
					Если  СезонКоэф<>100 Тогда
						СтрокаГотов=ФРМКолГр((ДокумКальк.КоличествоНетто*Коэф*100)/(100-ДокумКальк.СезонКоэф),ДокумКальк.Единица);	
					Иначе	
						СтрокаГотов="";	
					КонецЕсли;
					Ном=Ном+1;  
					РаздСтрТехн=РаздСтрТехн+1;
					СтрокаТехнологии=СтрПолучитьСтроку(ТоварШапки.Технология,РаздСтрТехн);
					
					Таб.ВывестиСекцию("Строка");	
				КонецЦикла;	
			КонецЕсли;
			
		Иначе
			СтрокаПродукт=Ингредиент.Наименование;
			СтрокаБрутто=ФРМКолГр(Количество,Единица);
			СтрокаНетто=ФРМКолГр(КоличествоНетто,Единица); 
			Если  СезонКоэф<>100 Тогда
				СтрокаГотов=ФРМКолГр((КоличествоНетто*100)/(100-СезонКоэф),Единица);	
			Иначе	
				СтрокаГотов="";	
			КонецЕсли;
			Ном=Ном+1;  
			РаздСтрТехн=РаздСтрТехн+1;
			СтрокаТехнологии=СтрПолучитьСтроку(ТоварШапки.Технология,РаздСтрТехн);
			
			Таб.ВывестиСекцию("Строка");
		КонецЕсли;	
	КонецЦикла; 
	Пока Ном<СтрКоличествоСтрок(ТоварШапки.Технология) Цикл
		Ном=Ном+1;  
		РаздСтрТехн=РаздСтрТехн+1;
		СтрокаТехнологии=СтрПолучитьСтроку(ТоварШапки.Технология,РаздСтрТехн);
		СтрокаПродукт="";
		СтрокаБрутто="";
		СтрокаНетто="";
		СтрокаГотов="";
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;	
	Таб.ВывестиСекцию("Подписи"); 
	Таб.Опции(0,0,0,0);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Печать технологической карты","");
	
//	РасчетЭнергетическойЦенностиТаблица();
КонецПроцедуры	
//--------------
//-----------------------------------------------
Процедура  РассчитатьВес()
	Предупреждение("Расчет имеет смысл только при одинаковых единицах измерения ингредиентов !",2);
	ИтогНетто=Итог("КоличествоНетто");
	ИтогБрутто=Итог("Количество");
КонецПроцедуры
//-----------------------------------------------
Процедура РасчетКоэф()
	Если СезонКоэф=100 Тогда
		Количество=0;
		Пром1=0;	
	Иначе
		Пром1=(1*100)/(100-СезонКоэф);
	КонецЕсли;  
	
	Если Количество=0 Тогда
		КоэфСписания=0;	
	Иначе	
		КС=100-(КоличествоНетто*Пром1*100/Количество);
		КоэфСписания=Окр(КС,2,1);
		ВычСуммыСеб();  
	КонецЕсли;
КонецПроцедуры
//-----------------------------------------------
Процедура ПриЗакрытии()
	ФлагЗапретаОткрытияВторойКарты=0; 
	Если Проведен()=0 Тогда
		Предупреждение("Документ не проведен. Кальк. карта не вступит в силу!",2);	
	КонецЕсли;
КонецПроцедуры
//-----------------------------------------------
Процедура ПриОткрытии() 
	ПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кнБлюдо.Доступность( 0 );
		Форма.кнЗамена.Доступность( 0 );
		Форма.КнСклад.Доступность( 0 );
		Форма.кнЗаписать.Доступность( 0 );
		Форма.кнПодбор.Доступность( 0 );
		Форма.кнВычСеб.Доступность( 0 );
		Форма.кнРасВес.Доступность( 0 );
		Форма.кнОк.Доступность( 0 );
		Форма.КнопкаПоУмолчанию( "кнЗакрыть" );
	Иначе
		Форма.КнопкаПоУмолчанию( "кнОк" );
	КонецЕсли;                                                             

	//РозничнаяЦенаБлюда(); 
	Если УстановкаЦеныРеализации=Перечисление.УстанЦенРеализ.Автоматически Тогда
		Форма.РозничнаяЦена.Доступность(0);
	КонецЕсли;                  
	
	Если Константа.ВводКоличестваВКК=Перечисление.БруттоНетто.Брутто Тогда
		ПоБрутто=1;
		Форма.КоличествоНетто.Доступность(0);
		Форма.Количество.Доступность(1);
	ИначеЕсли Константа.ВводКоличестваВКК=Перечисление.БруттоНетто.БруттоНетто Тогда  
		ПоБрутто=0; 
		Форма.ПоБрутто.Доступность(0);
		Форма.КоличествоНетто.Доступность(1);
		Форма.Количество.Доступность(1);
	Иначе
		ПоБрутто=0;
		Форма.КоличествоНетто.Доступность(1);
		Форма.Количество.Доступность(0);
	КонецЕсли;   
                      
	АвтоВремяТекущее();
//	АвтоВремяПослеТА();
	//ПроводитьПослеТА(1);	   
КонецПроцедуры
//-----------------------------------------------
Процедура ВычислитьСебестоимость()
	Рег1=СоздатьОбъект("Регистр.ОстаткиТоваров");
	Рег2=СоздатьОбъект("Регистр.ПартииТоваров");
	Если ДатаДок<ПолучитьДатуТА() Тогда
		Рег1.ВременныйРасчет();
		Рег2.ВременныйРасчет();        
		
		ТоварЛист=СоздатьОбъект("СписокЗначений");
		ВыгрузитьТабличнуюЧасть(ТоварЛист,"Ингредиент");
		Рег1.УстановитьЗначениеФильтра("Товар",ТоварЛист,2);
		Рег2.УстановитьЗначениеФильтра("Товар",ТоварЛист,2);
		РассчитатьРегистрыПо(ДатаДок);
	КонецЕсли;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		ВычСебСто();
		ВычСуммыСеб();
	КонецЦикла;
	Рег1=0;
	Рег2=0;    
	РозничнаяЦенаБлюда();
КонецПроцедуры
 //-----------------------------------------------
Процедура РасчетПоБрутто() 
Если Константа.ВводКоличестваВКК=Перечисление.БруттоНетто.БруттоНетто Тогда    
	Форма.КоличествоНетто.Доступность(1);
	Форма.Количество.Доступность(1);
Иначе	
	Если ПоБрутто=1 Тогда 
		Форма.КоличествоНетто.Доступность(0);
		Форма.Количество.Доступность(1);
	Иначе
		Форма.КоличествоНетто.Доступность(1);
		Форма.Количество.Доступность(0);
	КонецЕсли;
КонецЕсли;	
КонецПроцедуры
//-----------------------------------------------
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи() Далее
//Конец текста, вставленного Инсталлятором МОД
Процедура стар_ПриЗаписи()
//Закомментировано Инсталлятором МОД:Процедура ПриЗаписи()
	Если семМожноЗаписать( Контекст ) = 0 Тогда Возврат; КонецЕсли;
	Если КоличествоСтрок()=0 Тогда  
		Предупреждение("В калькуляционной карте нет ни одного ингредиента!",3);
		СтатусВозврата(0);
	КонецЕсли;
	Если ПустоеЗначение(ТоварШапки)=1 Тогда    
		Предупреждение("Не выбрано блюдо, для которого составлена калькуляция!",3);
		СтатусВозврата(0);
	КонецЕсли;	
	
	
	
КонецПроцедуры
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
//	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	стар_ПриЗаписи();
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД

//-----------------------------------------------           

