// ********************
Функция БолееПоздние()
	RS=СоздатьОбъект("ODBCRecordSet");
	RS.УстБД1С();
	ТекстЗапроса="SELECT DISTINCT TOP 1 ЗагрузкаКарточкиТовара.IDDOC [Ссылка $Документ.ЗагрузкаКарточкиТовара]
	|FROM $Документ.ЗагрузкаКарточкиТовара AS ЗагрузкаКарточкиТовара (NOLOCK)
	|	INNER JOIN _1SJOURN AS Журнал (NOLOCK) ON ЗагрузкаКарточкиТовара.IDDOC = Журнал.IDDOC
	|WHERE (Cast(Left(Журнал.DATE_TIME_IDDOC, 8) AS datetime) >= :ВыбДата)
	|	AND ((Журнал.CLOSED & 1) = 1)
	|	AND (Журнал.$ОбщийРеквизит.ТоварШапки = :ВыбТовар)
	|	AND (ЗагрузкаКарточкиТовара.IDDOC <> :ВыбДок)";
	RS.УстановитьТекстовыйПараметр("ВыбДата",ДатаДок);
	RS.УстановитьТекстовыйПараметр("ВыбТовар",ТоварШапки);
	RS.УстановитьТекстовыйПараметр("ВыбДок",ТекущийДокумент());
	ТЗ=RS.ВыполнитьИнструкцию(ТекстЗапроса);
	Возврат ТЗ;	
КонецФункции
// ********************
//
Процедура ОбработкаПроведения()
	
	Если ГрупповаяОбработка()=1 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТоварШапки.Выбран()=0 Тогда
		Сообщить("Отсутствует карточка товара! Документ "+ТекущийДокумент()+" не проводится! ");
		НеПроводитьДокумент();
		Возврат;
	КонецЕсли;
	ТЗ=БолееПоздние();
	Если ТЗ.КоличествоСтрок() <> 0 Тогда
		Предупреждение("Существуют более поздние изменения карточки товара! Проведение запрещено!");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Спр=СоздатьОбъект("Справочник.Номенклатура");
	Спр.НайтиЭлемент(ТоварШапки);
	Спр.Наименование=Наименование;
	Спр.ПоАлфавиту=Спр.Наименование;
	Спр.НаименованиеАнгл=Спр.Наименование;
	Спр.БазоваяЕдиницаИзмерения=БазоваяЕдиница;
	Спр.Поставщик=Поставщик;
	Спр.Вес=Т_Вес;
	Спр.СухойВес=Т_СухойВес;
	//Спр.ЛогистикаВидУпаковки=ВидУпаковки;
	//Спр.ЛогистикаВидЯщика=ВидЯщика;
	//Спр.ЛогистикаВесБруттоУпаковки=Т_ВесУпаковки;
	// габариты товара
	Спр.ЛогистикаДлинаУпаковки=Т_Длина;
	Спр.ЛогистикаШиринаУпаковки=Т_Ширина;
	Спр.ЛогистикаВысотаУпаковки=Т_Высота;
	// габариты вторичной упаковки
	Спр.ЛогистикаКолВУпаковке=КоличествоВУпаковке;
	Спр.ЛогистикаДлинаКоробки=У_Длина;
	Спр.ЛогистикаШиринаКоробки=У_Ширина;
	Спр.ЛогистикаВысотаКоробки=У_Высота;
	
	Спр.ОтгрКол=МинПродКол;
	Спр.СтранаПроизводитель=СтранаПроизводитель;
	Спр.СтранаПроисхождения=СтранаПроисхождения;
	Спр.ЯвляетсяУпаковкой=Перечисление.Булево.Нет;
	Если ПустоеЗначение(ШтрихКод)=0 Тогда
		Спр.ШтрихКод=ШтрихКод;
	КонецЕсли;
	Если ПустоеЗначение(ГЛН)=0 Тогда
		Спр.ГЛН=ГЛН;
	КонецЕсли;
	Если ПустоеЗначение(КодПоставщика)=0 Тогда
		Спр.КодПоставщика=КодПоставщика;
	КонецЕсли;
	Спр.ВидТовара=ВидТовара;
	Спр.Закупщик=Закупщик;
	Спр.МестоХранения=МестоХранения;
	Спр.ТамКод=ТамКод;
	Спр.ЛогистикаКолУпакНаПалетеВРяду=П_Вряду;
	Спр.ЛогистикаКолУпакНаЕвроПалете=НаПалете;
	Спр.ЯвляетсяГМО=ЯвляетсяГМО;
	Спр.СодержитГМО=СодержитГМО;
	Спр.СрокГоднПослеОткрытия=СрокГоднПослеОткрытия;
	Спр.ВидПредпродажнойПодготовки=ВидПредпродажнойПодготовки;
	Спр.Записать();
	
	// насчет упаковки - помечаем все на удаление, потом "освобождаем"
	// нужное, остальное остается удаленным
	Упак=СоздатьОбъект("Справочник.УпаковкаТоваров");
	Упак.ИспользоватьВладельца(Спр.ТекущийЭлемент());
	//Упак.ВыбратьЭлементы();
	//Пока Упак.ПолучитьЭлемент() = 1 Цикл
	//	Если Упак.ВидУпаковки.Выбран()=0 Тогда
	//		Упак.Удалить(1);
	//	Иначе
	//		Упак.КолВУпаковке = 0;
	//		Упак.ВысотаУпаковки = 0;
	//		Упак.ДлинаУпаковки = 0;
	//		Упак.ШиринаУпаковки = 0;
	//		Упак.ВесБруттоУпаковки=0;
	//		Упак.Записать();
	//		Упак.Удалить(0);
	//	КонецЕсли;
	//КонецЦикла;
	//
	//// упаковка самого товара
	//Если ВидУпаковки.Выбран()=1 Тогда
	//	Нашли=0;
	//	Упак.ВыбратьЭлементы();
	//	Пока Упак.ПолучитьЭлемент() = 1 Цикл
	//		Если Упак.ВидУпаковки=ВидУпаковки Тогда
	//			Нашли=1;
	//			Если Упак.ПометкаУдаления()=1 Тогда
	//				Упак.СнятьПометкуУдаления();
	//			КонецЕсли;
	//			Прервать;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Если Нашли=0 Тогда
	//		Упак.Новый();
	//	КонецЕсли;
	//	Упак.ВидУпаковки = ВидУпаковки;
	//	Упак.ТипУпаковки = Перечисление.ТипыУпаковки.Первичная;
	//	Упак.КолВУпаковке = 1;
	//	Упак.ВысотаУпаковки = Т_Высота;
	//	//Упак.ДлинаУпаковки = Т_Длина;
	//	//Упак.ШиринаУпаковки = Т_Ширина;
	//	//Упак.ВесБруттоУпаковки=Т_ВесУпаковки;
	//	Упак.ИспользоватьВладельца(Спр.ТекущийЭлемент());
	//	Упак.Записать();
	//КонецЕсли;
	//// доп. упаковка (если есть)
	//Если ВидУпаковкиДоп.Выбран()=1 Тогда
	//	Нашли=0;
	//	Упак.ВыбратьЭлементы();
	//	Пока Упак.ПолучитьЭлемент() = 1 Цикл
	//		Если Упак.ВидУпаковки=ВидУпаковкиДоп Тогда
	//			Нашли=1;
	//			Если Упак.ПометкаУдаления()=1 Тогда
	//				Упак.СнятьПометкуУдаления();
	//			КонецЕсли;
	//			Прервать;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Если Нашли=0 Тогда
	//		Упак.Новый();
	//	КонецЕсли;
	//	Упак.ВидУпаковки = ВидУпаковкиДоп;
	//	Упак.ТипУпаковки = Перечисление.ТипыУпаковки.Первичная;
	//	Упак.КолВУпаковке = 1;
	//	//Упак.ВысотаУпаковки = Д_Высота;
	//	//Упак.ДлинаУпаковки = Д_Длина;
	//	//Упак.ШиринаУпаковки = Д_Ширина;
	//	Упак.ВесБруттоУпаковки=Д_ВесУпаковки;
	//	Упак.ИспользоватьВладельца(Спр.ТекущийЭлемент());
	//	Упак.Записать();
	//КонецЕсли;
	//// ящик
	//Если ВидЯщика.Выбран()=1 Тогда
	//	Нашли=0;
	//	Упак.ВыбратьЭлементы();
	//	Пока Упак.ПолучитьЭлемент() = 1 Цикл
	//		Если Упак.ВидУпаковки=ВидЯщика Тогда
	//			Нашли=1;
	//			Если Упак.ПометкаУдаления()=1 Тогда
	//				Упак.СнятьПометкуУдаления();
	//			КонецЕсли;
	//			Прервать;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Если Нашли=0 Тогда
	//		Упак.Новый();
	//	КонецЕсли;
	//	Упак.ВидУпаковки = ВидЯщика;
	//	Упак.ТипУпаковки = Перечисление.ТипыУпаковки.Вторичная;
	//	Упак.КолВУпаковке = КоличествоВУпаковке;
	//	//Упак.ВысотаУпаковки = У_Высота;
	//	//Упак.ДлинаУпаковки = У_Длина;
	//	//Упак.ШиринаУпаковки = У_Ширина;
	//	Упак.ВесБруттоУпаковки=У_Вес;
	//	Упак.ИспользоватьВладельца(Спр.ТекущийЭлемент());
	//	Упак.Записать();
	//КонецЕсли;
	// поддон
	Если Константа.Европоддон.Выбран()=1 Тогда
		Нашли=0;
		Упак.ВыбратьЭлементы();
		Пока Упак.ПолучитьЭлемент() = 1 Цикл
			Если (Упак.Материал=Константа.Европоддон.Материал) и (Упак.ТипУпаковки = Перечисление.ТипыУпаковки.Третичная) Тогда
				Нашли=1;
				Если Упак.ПометкаУдаления()=1 Тогда
					Упак.СнятьПометкуУдаления();
				КонецЕсли;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Нашли=0 Тогда
			Упак.Новый();
			Упак.IDD = ПолучитьУникальныйIDD();
		КонецЕсли;
		Упак.ВидУпаковки = Константа.Европоддон;
		Упак.ТипУпаковки = Перечисление.ТипыУпаковки.Третичная;
		Упак.Материал = Константа.Европоддон.Материал;
		Упак.КолВУпаковке = КоличествоВУпаковке*П_Вряду*НаПалете;
		Упак.ИспользоватьВладельца(Спр.ТекущийЭлемент());
		ОбъектЗаписать(Упак);
		Если Константа.Европоддон.ДопВидУпаковки.Выбран()=1 Тогда
			Нашли=0;
			Упак.ВыбратьЭлементы();
			Пока Упак.ПолучитьЭлемент() = 1 Цикл
				Если (Упак.Материал=Константа.Европоддон.ДопВидУпаковки.Материал) и (Упак.ТипУпаковки = Перечисление.ТипыУпаковки.Третичная) Тогда
					Нашли=1;
					Если Упак.ПометкаУдаления()=1 Тогда
						Упак.СнятьПометкуУдаления();
						ОбъектЗаписать(Упак);
					КонецЕсли;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если Нашли=0 Тогда
				Упак.Новый();
				Упак.IDD = ПолучитьУникальныйIDD();
			КонецЕсли;
			Упак.ВидУпаковки = Константа.Европоддон.ДопВидУпаковки;
			Упак.ТипУпаковки = Перечисление.ТипыУпаковки.Третичная;
			Упак.Материал = Константа.Европоддон.ДопВидУпаковки.Материал;
			Упак.КолВУпаковке = КоличествоВУпаковке*П_Вряду*НаПалете;
			Упак.ВесБруттоУпаковки=Константа.Европоддон.ДопВидУпаковки.Вес;
			Упак.ИспользоватьВладельца(Спр.ТекущийЭлемент());
			ОбъектЗаписать(Упак);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
//********************************
Процедура ОбработкаУдаленияПроведения()
	ТЗ=БолееПоздние();
	Если ТЗ.КоличествоСтрок() <> 0 Тогда
		Предупреждение("Существуют более поздние изменения карточки товара! Распроведение запрещено!");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	// откат "назад" производим только к непустым значениям
	Спр=СоздатьОбъект("Справочник.Номенклатура");
	Спр.НайтиЭлемент(ТоварШапки);
	Спр.Наименование=Наименование_стар;
	Спр.ПоАлфавиту=Спр.Наименование;
	Спр.НаименованиеАнгл=Спр.Наименование;
	// базовую единицу не открываем, она не должна меняться
	//Спр.БазоваяЕдиницаИзмерения=БазоваяЕдиница_стар;
	Если Поставщик_стар.Выбран()=1 Тогда
		Спр.Поставщик=Поставщик_стар;
	КонецЕсли;
	Если ВидУпаковки_стар.Выбран()=1 Тогда
		Спр.ЛогистикаВидУпаковки=ВидУпаковки_стар;
	КонецЕсли;
	Если Т_ВесУпаковки_стар <> 0 Тогда
		Спр.ЛогистикаВесБруттоУпаковки=Т_ВесУпаковки_стар;
	КонецЕсли;
	Если Т_Длина_стар <> 0 Тогда
		Спр.ЛогистикаДлинаУпаковки=Т_Длина_стар;
	КонецЕсли;
	Если Т_Ширина_стар <> 0 Тогда
		Спр.ЛогистикаШиринаУпаковки=Т_Ширина_стар;
	КонецЕсли;
	Если Т_Высота_стар <> 0 Тогда
		Спр.ЛогистикаВысотаУпаковки=Т_Высота_стар;
	КонецЕсли;
	Если Т_Вес_стар <> 0 Тогда
		Спр.Вес=Т_Вес_стар;
	КонецЕсли;
	Если Т_СухойВес_стар <> 0 Тогда
		Спр.СухойВес=Т_СухойВес_стар;
	КонецЕсли;
	Если ВидЯщика_стар.Выбран()=1 Тогда
		Спр.ЛогистикаВидЯщика=ВидЯщика_стар;
	КонецЕсли;
	Если КоличествоВУпаковке_стар <> 0 Тогда
		Спр.ЛогистикаКолВУпаковке=КоличествоВУпаковке_стар;
	КонецЕсли;
	Если МинПродКол_стар <> 0 Тогда
		Спр.ОтгрКол=МинПродКол_стар;
	КонецЕсли;
	Если СтранаПроизводитель_стар.Выбран()=1 Тогда
		Спр.СтранаПроизводитель=СтранаПроизводитель_стар;
	КонецЕсли;
	Если СтранаПроисхождения_стар.Выбран()=1 Тогда
		Спр.СтранаПроисхождения=СтранаПроисхождения_стар;
	КонецЕсли;
	Если ПустоеЗначение(Штрихкод_стар)=0 Тогда
		Спр.ШтрихКод=ШтрихКод_стар;
	КонецЕсли;
	Если ПустоеЗначение(ГЛН_стар)=0 Тогда
		Спр.ГЛН=ГЛН_стар;
	КонецЕсли;
	Если ПустоеЗначение(КодПоставщика_стар)=0 Тогда
		Спр.КодПоставщика=КодПоставщика_стар;
	КонецЕсли;
	Если ПустоеЗначение(ВидТовара_стар)=0 Тогда
		Спр.ВидТовара=ВидТовара_стар;
	КонецЕсли;
	Если ПустоеЗначение(Закупщик_стар)=0 Тогда
		Спр.Закупщик=Закупщик_стар;
	КонецЕсли;
	Если ПустоеЗначение(МестоХранения_стар)=0 Тогда
		Спр.МестоХранения=МестоХранения_стар;
	КонецЕсли;
	Если П_Вряду_стар <> 0 Тогда
		Спр.ЛогистикаКолУпакНаПалетеВРяду=П_Вряду_стар;
	КонецЕсли;
	Если НаПалете_стар <> 0 Тогда
		Спр.ЛогистикаКолУпакНаЕвроПалете=НаПалете_стар;
	КонецЕсли;
	Если ПустоеЗначение(СодержитГМО_стар)=0 Тогда
		Спр.СодержитГМО=СодержитГМО_стар;
	КонецЕсли;
	Если ПустоеЗначение(ЯвляетсяГМО_стар)=0 Тогда
		Спр.ЯвляетсяГМО=ЯвляетсяГМО_стар;
	КонецЕсли;
	Если СрокГоднПослеОткрытия_стар <> 0 Тогда
		Спр.СрокГоднПослеОткрытия=СрокГоднПослеОткрытия_стар;
	КонецЕсли;
	Если ПустоеЗначение(ВидПредпродажнойПодготовки_стар)=0 Тогда
		Спр.ВидПредпродажнойПодготовки=ВидПредпродажнойПодготовки_стар;
	КонецЕсли;
	ОбъектЗаписать(Спр);
	
	Упак=СоздатьОбъект("Справочник.УпаковкаТоваров");
	Упак.ИспользоватьВладельца(Спр.ТекущийЭлемент());
	Упак.ВыбратьЭлементы();
	Пока Упак.ПолучитьЭлемент() = 1 Цикл
		Если Упак.ВидУпаковки.Выбран()=0 Тогда
			Упак.Удалить(1);
		КонецЕсли;
	КонецЦикла;
	// старая упаковка  товара
	Если ВидУпаковки_Стар.Выбран()=1 Тогда
		Нашли=0;
		Упак.ВыбратьЭлементы();
		Пока Упак.ПолучитьЭлемент() = 1 Цикл
			Если Упак.ВидУпаковки=ВидУпаковки_Стар Тогда
				Нашли=1;
				Если Упак.ПометкаУдаления()=1 Тогда
					Упак.СнятьПометкуУдаления();
					ОбъектЗаписать(Упак);
				КонецЕсли;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Нашли=1 Тогда
			Упак.КолВУпаковке = 1;
			Упак.ВысотаУпаковки = Т_Высота_стар;
			Упак.ДлинаУпаковки = Т_Длина_стар;
			Упак.ШиринаУпаковки = Т_Ширина_стар;
			Упак.ВесБруттоУпаковки=Т_ВесУпаковки_стар;
			Упак.ИспользоватьВладельца(Спр.ТекущийЭлемент());
			ОбъектЗаписать(Упак);
		КонецЕсли;
	КонецЕсли;
	// старая доп. упаковка товара
	Если ВидУпаковкиДоп_стар.Выбран()=1 Тогда
		Нашли=0;
		Упак.ВыбратьЭлементы();
		Пока Упак.ПолучитьЭлемент() = 1 Цикл
			Если Упак.ВидУпаковки=ВидУпаковкиДоп_стар Тогда
				Нашли=1;
				Если Упак.ПометкаУдаления()=1 Тогда
					Упак.СнятьПометкуУдаления();
					ОбъектЗаписать(Упак);
				КонецЕсли;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Нашли=1 Тогда
			Упак.КолВУпаковке = 1;
			Упак.ВысотаУпаковки = Д_Высота_стар;
			Упак.ДлинаУпаковки = Д_Длина_стар;
			Упак.ШиринаУпаковки = Д_Ширина_стар;
			Упак.ВесБруттоУпаковки=Д_ВесУпаковки_стар;
			Упак.ИспользоватьВладельца(Спр.ТекущийЭлемент());
			ОбъектЗаписать(Упак);
		КонецЕсли;
	КонецЕсли;
	// старый ящик
	Если ВидЯщика_стар.Выбран()=1 Тогда
		Нашли=0;
		Упак.ВыбратьЭлементы();
		Пока Упак.ПолучитьЭлемент() = 1 Цикл
			Если Упак.ВидУпаковки=ВидЯщика_стар Тогда
				Нашли=1;
				Если Упак.ПометкаУдаления()=1 Тогда
					Упак.СнятьПометкуУдаления();
					ОбъектЗаписать(Упак);
				КонецЕсли;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Нашли=1 Тогда
			Упак.КолВУпаковке = КоличествоВУпаковке_стар;
			Упак.ВысотаУпаковки = У_Высота_стар;
			Упак.ДлинаУпаковки = У_Длина_стар;
			Упак.ШиринаУпаковки = У_Ширина_стар;
			Упак.ВесБруттоУпаковки=У_Вес_стар;
			Упак.ИспользоватьВладельца(Спр.ТекущийЭлемент());
			ОбъектЗаписать(Упак);
		КонецЕсли;
	КонецЕсли;
	Если Константа.Европоддон.Выбран()=1 Тогда
		Нашли=0;
		Упак.ВыбратьЭлементы();
		Пока Упак.ПолучитьЭлемент() = 1 Цикл
			Если Упак.ВидУпаковки=Константа.Европоддон Тогда
				Если Упак.ПометкаУдаления()=1 Тогда
					Упак.СнятьПометкуУдаления();
					ОбъектЗаписать(Упак);
				КонецЕсли;
				Нашли=1;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Нашли=0 Тогда
			Упак.Новый();
		КонецЕсли;
		Упак.ВидУпаковки = Константа.Европоддон;
		Упак.КолВУпаковке = КоличествоВУпаковке_стар*П_Вряду_стар*НаПалете_стар;
		Упак.ИспользоватьВладельца(Спр.ТекущийЭлемент());
		ОбъектЗаписать(Упак);
		Если Константа.Европоддон.ДопВидУпаковки.Выбран()=1 Тогда
			Нашли=0;
			Упак.ВыбратьЭлементы();
			Пока Упак.ПолучитьЭлемент() = 1 Цикл
				Если Упак.ВидУпаковки=Константа.Европоддон.ДопВидУпаковки Тогда
					Нашли=1;
					Если Упак.ПометкаУдаления()=1 Тогда
						Упак.СнятьПометкуУдаления();
						ОбъектЗаписать(Упак);
					КонецЕсли;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если Нашли=0 Тогда
				Упак.Новый();
			КонецЕсли;
			Упак.ВидУпаковки = Константа.Европоддон.ДопВидУпаковки;
			Упак.КолВУпаковке = КоличествоВУпаковке_стар*П_Вряду_стар*НаПалете_стар;
			Упак.ИспользоватьВладельца(Спр.ТекущийЭлемент());
			ОбъектЗаписать(Упак);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
