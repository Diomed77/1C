Перем кОсновнаяКатегорияЦены,кРозничнаяКатегорияЦены;

//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаПроведения() Далее



//Конец текста, вставленного Инсталлятором МОД
Процедура стар_ОбработкаПроведения()
	семОбновитьКурс( контекст );
	ЭкспКатегорияЦены = семПолучитьКатегориюЦеныПоНаим( "Экспортная" );
	ОптКатегорияЦены = кОсновнаяКатегорияЦены;
	РозКатегорияЦены = кРозничнаяКатегорияЦены;
	РозКатегорияЦеныРевал = семПолучитьКатегориюЦеныПоНаим( "Розничная2" );
	ЗакКатегорияЦены = семПолучитьКатегориюЦеныПоНаим( "Закупочная" );
	ЭкспВалюта = семПолучитьВалютуПоНаим( "EUR" );
          
	Если ГрупповаяОбработка()=0 Тогда
		Если ПустоеЗначение(ДатаСоздания)=1 Тогда
			ДатаСоздания = ДатаДок;
		КонецЕсли;
	КонецЕсли;
	
	Если ГрупповаяОбработка()=0 Тогда
		Если (ДатаДок<=РабочаяДата()) И (семЕстьПраво("Документ","ПереоценкаТоваров","Проведение задним числом")=0) Тогда
			НеПроводить(Контекст,"Нельзя проводить документ задним числом!");
			Возврат;
		КонецЕсли;
		
		Если (Пользователь.CashCarry=1) И (КатегорияЦены<>Пользователь.ОснКатегорияЦены) Тогда
			НеПроводить(Контекст,"Данный пользователь может проводить документы только с категорией цены: "+Пользователь.ОснКатегорияЦены);
		КонецЕсли;	

	//	СоздатьДокументыПереоценокФилиалов();
	КонецЕсли;
	
	
	ВыбратьСтроки();    
	Пока ПолучитьСтроку()>0 Цикл
		ПривязыватьСтроку(НомерСтроки);
		Состояние("Обработано: "+НомерСтроки+"/"+КоличествоСтрок());
		
		// проверяем наличие товара в строке
		Если Товар.Выбран() = 0 Тогда 
			Сообщить(Шаблон("Не выбран товар в строке [НомерСтроки]"),"I");
			Продолжить; 
		КонецЕсли;
		
		
		Если ГрупповаяОбработка()=0 Тогда
			Если ПустоеЗначение(Пользователь.РазрРедТовараПоПризнакуСпецКода)=0 Тогда
				Если Товар.ПризнакСпецКода<>Пользователь.РазрРедТовараПоПризнакуСпецКода Тогда
					НеПроводить(Контекст,"Нельзя переоценивать товар "+Товар.Код+" "+Товар+" в строке "+НомерСтроки+". Вы имеете право переоценивать только товары с признаком кода: "+Пользователь.РазрРедТовараПоПризнакуСпецКода);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
      		//изменяем цены по закупочной категории для прайслиста
		Если ВидПереоценки = Перечисление.ВидыПереоценки.ПрайсЛист Тогда
			Если Цена = 0 Тогда Продолжить; КонецЕсли;
			Если ПустоеЗначение( ЗакКатегорияЦены ) = 1 Тогда Продолжить; КонецЕсли;
			спрЦены = СоздатьОбъект( "Справочник.Цены" );
			спрЦены.ИспользоватьВладельца( Товар.ТекущийЭлемент() );
			Если спрЦены.НайтиПоРеквизиту( "КатегорияЦены", ЗакКатегорияЦены, 0 ) = 0 Тогда
				глСоздатьНовыйОбъект(спрЦены);
				спрЦены.Валюта = ЗакКатегорияЦены.ОсновнаяВалюта;
				спрЦены.Единица = Единица;
				спрЦены.КатегорияЦены = ЗакКатегорияЦены;
				ОбъектЗаписать(спрЦены, );
			КонецЕсли;
			КоэффЦены = ?(спрЦены.Единица.Коэффициент = 0,1,спрЦены.Единица.Коэффициент)*Коэффициент;
			НовЗакЦена = Пересчет(ЗакЦена/КоэффЦены,ВалютаЗак,ДатаДок,ЗакКатегорияЦены.ОсновнаяВалюта,ДатаДок);
			УстановитьРеквизитСправочника(спрЦены.ТекущийЭлемент(),"Цена",НовЗакЦена,ДатаДок);
		КонецЕсли;

		// проверяем наличие единицы измерения
		Если Единица.Выбран() = 0 Тогда
			Если Товар.БазоваяЕдиницаИзмерения.Выбран() = 0 Тогда
				Сообщить(Шаблон("Не указана базовая единица измерения в карточке товара [Товар.Код] [Товар]"),"!");
				Возврат;
			КонецЕсли;
			спр=СоздатьОбъект("Справочник.Единицы");
			спр.ИспользоватьВладельца(Товар);
			спр.ВыбратьЭлементы();
			Пока спр.ПолучитьЭлемент() = 1 Цикл
				Если спр.Единица = Товар.БазоваяЕдиницаИзмерения Тогда
					Единица = спр.ТекущийЭлемент();
					Коэффициент = 1;
				КонецЕсли;
			КонецЦикла;
			глСоздатьНовыйОбъект(спр);
			спр.Единица=Товар.БазоваяЕдиницаИзмерения;
			спр.Коэффициент=1;
			спр.Наименование=Строка(Товар.БазоваяЕдиницаИзмерения);
			ОбъектЗаписать(спр, );
			Единица = спр.ТекущийЭлемент();
			Коэффициент = 1;
		КонецЕсли;
	
		//изменяем цены по выбранной в документе категории цены
		СпрЦен=СоздатьОбъект("Справочник.Цены");
		СпрЦен.ИспользоватьВладельца(Товар.ТекущийЭлемент());
		СпрЦен.ВыбратьЭлементыПоРеквизиту("КатегорияЦены",КатегорияЦены,1,0);
		
		НайденаЦена = 0;
		//СпрЦен.ВыбратьЭлементы();
		Пока СпрЦен.ПолучитьЭлемент() = 1 Цикл
			Если (СпрЦен.Валюта<>Валюта) И (ПустоеЗначение(СпрЦен.Валюта)=1) Тогда
				СпрЦен.Валюта=Валюта;
				ОбъектЗаписать(СпрЦен,);
			КонецЕсли;

			Если (СпрЦен.Единица<>Единица) Тогда
//				НайденаЦена = 1;
//				Прервать;
				СпрЦен.Единица=Единица;
				ОбъектЗаписать(СпрЦен,);
			КонецЕсли;
			
			НайденаЦена = 1;
			Прервать;
		КонецЦикла; 

		Если НайденаЦена = 0 Тогда
			глСоздатьНовыйОбъект(СпрЦен);
			СпрЦен.Валюта=Валюта;
			СпрЦен.Единица=Единица;
			СпрЦен.КатегорияЦены=КатегорияЦены;
			ОбъектЗаписать(СпрЦен, );
		Иначе
		КонецЕсли;
		
		НовЦена = Пересчет(Цена,Валюта,ДатаДок,СпрЦен.Валюта,КурсДляВалюты(СпрЦен.Валюта,ДатаДок));
		УстановитьРеквизитСправочника(СпрЦен.ТекущийЭлемент(),"Цена",НовЦена,ДатаДок);
		
		//изменяем цены по экспортной категории, если необходимо
		Если КатегорияЦены = ОптКатегорияЦены Тогда
			Если ПустоеЗначение( ЭкспКатегорияЦены ) = 1 Тогда Продолжить; КонецЕсли;
			Если ПустоеЗначение( ЭкспВалюта ) = 1 Тогда Продолжить; КонецЕсли;
			спрЦены = СоздатьОбъект( "Справочник.Цены" );
			спрЦены.ИспользоватьВладельца( Товар.ТекущийЭлемент() );
			Если спрЦены.НайтиПоРеквизиту( "КатегорияЦены", ЭкспКатегорияЦены, 0 ) = 0 Тогда
				глСоздатьНовыйОбъект(спрЦены);
				спрЦены.Валюта = ЭкспВалюта;
				спрЦены.Единица = Единица;
				спрЦены.КатегорияЦены = ЭкспКатегорияЦены;
				ОбъектЗаписать(спрЦены, );
			КонецЕсли;
			Если Константа.СтранаРезидент.Код="LV" Тогда
				ЭкспКоэфф = ?( спрЦены.Единица.Коэффициент = 0, 1, спрЦены.Единица.Коэффициент ) * Коэффициент;
				ЭкспЦена = Окр(Пересчет(Цена / ЭкспКоэфф,Валюта,ДатаДок,ЭкспВалюта,ДатаДок), 2, 1);
				ПривязыватьСтроку( НомерСтроки );
				УстановитьРеквизитСправочника( спрЦены.ТекущийЭлемент(), "Цена", ЭкспЦена, ДатаДок );
			КонецЕсли;
		КонецЕсли;

		//изменяем цены по розничной категории для Ревала, если необходимо
		Если (КатегорияЦены = РозКатегорияЦены) И (Константа.СтранаРезидент.Код="LV") Тогда
			Если ПустоеЗначение( РозКатегорияЦеныРевал ) = 1 Тогда Продолжить; КонецЕсли;
			спрЦены = СоздатьОбъект( "Справочник.Цены" );
			спрЦены.ИспользоватьВладельца( Товар.ТекущийЭлемент() );
			Если спрЦены.НайтиПоРеквизиту( "КатегорияЦены", РозКатегорияЦеныРевал, 0 ) = 0 Тогда
				глСоздатьНовыйОбъект(спрЦены);
				спрЦены.Валюта = Валюта;
				спрЦены.Единица = Единица;
				спрЦены.КатегорияЦены = РозКатегорияЦеныРевал;
				ОбъектЗаписать(спрЦены, );
			Иначе
				Если (спрЦены.Единица<>Единица) Тогда
					спрЦены.Единица=Единица;
					ОбъектЗаписать(спрЦены,);
				КонецЕсли;
				
			КонецЕсли;
			КоэфНаценки = 1+(Товар.ПроцентНацРознЦены.Получить(ДатаДок) / 100);
			_ЦенаСНДС = Цена * (1+(ПроцентНДС(Товар.СтавкаНДС)/100));
			_ЦенаСНДС = Окр( _ЦенаСНДС, КатегорияЦены.Точность, 1 );
			промЦенаСНДС = _ЦенаСНДС;
			//промЦенаСНДС = семОкрРознЦены(_ЦенаСНДС * КоэфНаценки);
			промЦена = промЦенаСНДС/(1+(ПроцентНДС(Товар.СтавкаНДС)/100));
			ПривязыватьСтроку( НомерСтроки );
			УстановитьРеквизитСправочника( спрЦены.ТекущийЭлемент(), "Цена", промЦена, ДатаДок );
		КонецЕсли;

	КонецЦикла;
КонецПроцедуры
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаПроведения()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	Если ПроведениеМОД(Контекст)=1 Тогда
		Возврат;
	КонецЕсли;
	стар_ОбработкаПроведения();
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаУдаленияПроведения()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	Если ПроведениеПоАлгоритмуМОД=1 Тогда
		Возврат;
	КонецЕсли;
	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	
	Если (Пользователь.CashCarry=1) И (КатегорияЦены<>Пользователь.ОснКатегорияЦены) Тогда
		Сообщить("Нельзя отменять проведение данного документа!");
		СтатусВозврата(0);
	КонецЕсли;
	
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД

кОсновнаяКатегорияЦены = Константа.ОсновнаяКатегорияЦены;
кРозничнаяКатегорияЦены = Константа.РозничнаяКатегорияЦены;