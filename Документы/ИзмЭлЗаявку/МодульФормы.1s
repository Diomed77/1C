Перем признакВыб;//Переменная признак для фиксации выбора
Перем флагВыб;//Для сути претензи
Перем флагИзменениеСтрок;
Перем пСостояниеЗаявки;

Процедура УстВидаОплаты(пВидОплаты) Далее

Функция ПроверкаПодчДок(п_ДокПоиска,п_ВидПоиска="КомплектацияМобил")
	Перем ДокПодч;
	Перем ДокПоиска;
	
	ДокПоиска=СоздатьОбъект("Документ."+п_ВидПоиска);
	ДокПодч=СоздатьОбъект("Документ");
	ДокПодч.ВыбратьПодчиненныеДокументы(п_ДокПоиска.ДатаДок,,п_ДокПоиска);
	Пока ДокПодч.ПолучитьДокумент() = 1 Цикл
		Если ДокПодч.Вид()=п_ВидПоиска Тогда
			Возврат 1;
		КонецЕсли;	
	КонецЦикла;	
	Возврат 0;	
КонецФункции // ПоискПодчДок

Функция ПроцентСкидки(Док,Точность)
	Если (ПустоеЗначение(ИзмТовар)=0) И ((Док.Сумма+Док.Скидка)<>0) Тогда
		Возврат Окр(Док.Скидка/(Док.Сумма+Док.Скидка)*100,Точность);
	Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции

Функция ПроверкаСкидки(Док,НовСтр)
	Перем пПредупреждение;
	пПредупреждение="";
//	Сообщить("Вид скидки: "+Док.ВидСкидки);
	Если (Док.ВидСкидки=Перечисление.ВидСкидки.Документ) Тогда
		//запросим у пользователя пояснение для установки цены вручную
		
		ПроцентСкидки = ПроцентСкидки(Док,0);
		//Сообщить("% скидки: "+ПроцентСкидки);
		
		ОграничениеСкидки = глОграничениеСкидкиНаТовар(Пользователь,Док.Товар,Док.КатегорияЦены,ИзмДатаПоставки);
		
		НедельныйАкцент=ИзмТовар.ПолучитьАтрибут("Выделить"+?(глКодСтраныПользователя="LV","",глКодСтраныПользователя));
		Если НедельныйАкцент=1 Тогда
			ОграничениеСкидки = Макс(40,ОграничениеСкидки); //для недельных акцентов увеличиваем процент скидки до 40.
		КонецЕсли;
	
		Если (ОграничениеСкидки=0) И (Док.Склад.ТипСклада = Перечисление.ТипыСкладов.Склад) Тогда
			//если ограничение скидки не стоит в должности у сотрудника - действует обычный механизм
//			Пояснение=Док.ПояснениеСкидки;
//			Если ВвестиСтроку(Пояснение,"Введите причину изменения цены",60)=1 Тогда
//				Если СтрДлина(СокрЛП(Пояснение))<6 Тогда
//					Предупреждение("Слишком короткое объяснение!");
//					СтатусВозврата(0);
//				КонецЕсли;
//				Док.ПояснениеСкидки=Пояснение;
//			Иначе
//				Предупреждение("Без ввода пояснения нельзя изменить цену вручную!");
//				СтатусВозврата(0);
//			КонецЕсли;
		ИначеЕсли (ОграничениеСкидки < Окр(ПроцентСкидки,0)) И (Док.Склад.ТипСклада = Перечисление.ТипыСкладов.Склад) Тогда
			пПредупреждение=("Вы превысили макс. разрешенный для Вас размер скидки на товар <"+ОграничениеСкидки+"%> -  требуется по документу <"+ПроцентСкидки(Док,)+"%>!");
		КонецЕсли;
	КонецЕсли;
		Возврат (пПредупреждение);
КонецФункции

Функция РасчетСкидки(Знач пНомерСтроки,пСкидка) //проверка изменений

	//Перем пНомерСтроки;//временая переменая
	Перем фСкидка;

	
	фСкидка="";
	Док=СоздатьОбъект("Документ.Счет");
	Док.НайтиДокумент(ПоСчету);
    	
	Док.ВидДоставки=ИзмВидДоставки;
	Док.ДатаПоставки=ИзмДатаПоставки;
	
//{  Проверка и согласование количество строк в документах изменения	
	флагИзменениеСтрок=0;
	Если КоличествоСтрок()<>Док.КоличествоСтрок() Тогда

		Если КоличествоСтрок()<Док.КоличествоСтрок() Тогда
    		Док.УдалитьСтроки();
		КонецЕсли;
		
		Если КоличествоСтрок()>Док.КоличествоСтрок() Тогда
			Для пНомерСтроки = Док.КоличествоСтрок() По КоличествоСтрок()-1 Цикл	
				Док.НоваяСтрока();
			КонецЦикла;	
		КонецЕсли;
		
		флагИзменениеСтрок=1;
	КонецЕсли;

//}  Проверка и согласование количество строк в документах изменения		

	Для пНомерСтроки = 1 По КоличествоСтрок() Цикл
		ПолучитьСтрокуПоНомеру(пНомерСтроки);
		Если ИзмКоличество>0 Тогда
			
			Док.ПолучитьСтрокуПоНомеру(пНомерСтроки);
			
	//проверка заполнение кода товара
	        
			Док.Товар 			=ИзмТовар;
			Док.Количество 		=ИзмКоличество;
			Док.Единица			=ИзмЕдиница;
		
	//{ 		Вызов Глобальных процедур Для коррекции данных в Накладной
	
				семПроверкаМинОтргКолва( Док );
				УстанЦеныРасх(Док,"Подбор");
				ИзмЕдин(Док);//добавил
				
	//}			Вызов Глобальных процедур Для коррекции данных в Накладной
			Док.Цена 			=ИзмЦена;
				
			Выч_суммы_накл(Док);
			
			пСкидка=ПроцентСкидки(Док,0);
			
		
		КонецЕсли;	 
		
	КонецЦикла;
	
	Возврат(пСкидка);
	
КонецФункции


Процедура КопироватьДокумент1(_Источник, _Приемник)
	////////////////////////////////////////////////////////////
	/// Возможна ошибка копирования, проверь наличие всех реквезитов в документекопия !!
	/////////////////////////////////////////////////////////////
	Для ъ = 1 По Метаданные.ОбщийРеквизитДокумента() Цикл
		Реквизит = Метаданные.ОбщийРеквизитДокумента(ъ).Идентификатор;
		Попытка
			_Приемник.УстановитьАтрибут(Реквизит, _Источник.ПолучитьАтрибут(Реквизит));
		Исключение
		КонецПопытки;
			
	КонецЦикла;

	Для ъ = 1 По Метаданные.Документ(_Источник.Вид()).РеквизитШапки() Цикл
		Реквизит = Метаданные.Документ(_Источник.Вид()).РеквизитШапки(ъ).Идентификатор;
		Попытка
			_Приемник.УстановитьАтрибут(Реквизит, _Источник.ПолучитьАтрибут(Реквизит));
		Исключение
		КонецПопытки;
	КонецЦикла;

	_Источник.ВыбратьСтроки();
	Пока _Источник.ПолучитьСтроку() = 1 Цикл
		_Приемник.НоваяСтрока();
		Для ъъ = 1 По Метаданные.Документ(_Источник.Вид()).РеквизитТабличнойЧасти() Цикл
			Реквизит = Метаданные.Документ(_Источник.Вид()).РеквизитТабличнойЧасти(ъъ).Идентификатор;
			Попытка
				_Приемник.УстановитьАтрибут(Реквизит, _Источник.ПолучитьАтрибут(Реквизит));
			Исключение
			КонецПопытки;

		КонецЦикла;
	КонецЦикла;
КонецПроцедуры	// КопироватьДокумент


Процедура ПриОткрытии()
	//ПриЗаписиПерепроводить(1);

	Док = СоздатьОбъект("Документ."+ХранениеНакладной.Вид());
	
	Если ПустоеЗначение(ХранениеНакладной) = 0 Тогда
		Док.НайтиДокумент(ХранениеНакладной);
		Док.ВыгрузитьТабличнуюЧасть(тПредЗаявки,"НомерСтроки,ТовКод,Товар,Количество,Единица,Цена");
	КонецЕсли;

	Если Проведен()=1 Тогда
		Форма.ТолькоПросмотр(1);
		форма.кнСкинутьИзменения.Доступность(0);
		Форма.кнЗаписатьИзменения.Доступность(0);
	КонецЕсли;

	РасчетСкидки(НомерСтроки,Скидка);
	УстВидаОплаты(ИзмВидОплаты);
	
КонецПроцедуры 


Процедура ПриЗаписи()

КонецПроцедуры

//{  Функции Блокировки Документа
Функция ПроверкаБлокировкиДок(пДок)

	флагВыбЗаявки=0;
	пПредупреждение="";
	
	СпрСост = СоздатьОбъект("Справочник.БлокировкиДок");
	СпрСост.НайтиПоРеквизиту("Док",пДок,0);
	Если СпрСост.Выбран()=1 Тогда

		//Стадия комплектации	
		//Если СпрСост.СостояниеДок="Комплектация" Тогда
		//	пПредупреждение="Изменение невозможно. Заявка находится на стадии комплектации.";
		//	Возврат(пПредупреждение);
		//КонецЕсли;
		
		//проверка состояний, кто то уже открыл
//		Если СпрСост.СостояниеДок="Изменение" Тогда
			Если СпрСост.Блокировка=1 Тогда
				Если СпрСост.Пользователь=Пользователь Тогда
					Если Вопрос("Изменение заблокировано пользователем <"+ СпрСост.Пользователь+">, разблокировать ?",4,15)=6 Тогда
						СпрСост.Блокировка=0;
						СпрСост.Записать();
						пПредупреждение="Изменение разаблокировано. Повторите Вход.";
						Возврат(пПредупреждение);
					КонецЕсли;
				КонецЕсли;
				пПредупреждение="Изменение заблокировано. Заявка изменяется пользователем "+ СпрСост.Пользователь+" !";
				Возврат(пПредупреждение);
			КонецЕсли; 
		
			// Если никто уже не открыл делаем изменение существующего документа в справочнике
			СпрСост.Дата=ТекущаяДата();
			СпрСост.Время=ТекущееВремя();
			СпрСост.Пользователь=Пользователь;
			СпрСост.СостояниеДок=Константа.СостояниеИзмененияДок;
			СпрСост.Блокировка=1;
			СпрСост.Записать();	
			флагВыбЗаявки=1;
			Возврат (пПредупреждение);
//		КонецЕсли;
	КонецЕсли;

			//Если в справочнике нет документа, создаем новый
	Если флагВыбЗаявки=0 Тогда
		СпрСост.Новый();
		СпрСост.Наименование=пДок.Вид();
		СпрСост.Дата=ТекущаяДата();
		СпрСост.Время=ТекущееВремя();
		СпрСост.Пользователь=Пользователь;
		СпрСост.Док=пДок;
		СпрСост.СостояниеДок=Константа.СостояниеИзмененияДок;
		СпрСост.Блокировка=1;
		СпрСост.Записать();
	КонецЕсли;

	Возврат (пПредупреждение);	
КонецФункции

Функция УстановкаБлокировкиДок(пДок,пБлокировки=0)
	
	СпрСост = СоздатьОбъект("Справочник.БлокировкиДок");
	
	Если СпрСост.НайтиПоРеквизиту("Док",пДок,0)=1 Тогда
			Если СпрСост.Выбран()=1 Тогда
					//проверка состояний, кто то уже открыл
//				Если СпрСост.СостояниеДок="Изменение" Тогда
					Если СпрСост.Пользователь=Пользователь Тогда
						СпрСост.Блокировка=пБлокировки;
						СпрСост.Записать();
						Сообщить(?(СпрСост.Блокировка=0,"Снята","Установлена")+" блокировка с документа пользователем "+ ИмяПользователя());
						Возврат(1);
					Иначе
						Сообщить("Блокировка не может быть "+?(СпрСост.Блокировка=1,"снята","установлена")+" пользователем "+ ИмяПользователя()+", заблокирована пользователем "+СпрСост.Пользователь);
						Возврат(0);
					КонецЕсли;				
				
//				КонецЕсли;
			КонецЕсли;
		
	Иначе
		Сообщить("Блокировка не может быть "+?(СпрСост.Блокировка=1,"снята.","установлена.")+" Документа не существует.");
		Возврат(0);
	КонецЕсли;
	
КонецФункции

//}  ФункцииБлокировки Документа	

Процедура ПриЗакрытии()
	

	Если Проведен()=0 Тогда
		УстановкаБлокировкиДок(ПоСчету,0);
		//Удаляются копии заявок, если не было записи документа и он был не проведен
		Если Выбран()=0 Тогда
			Док = СоздатьОбъект("Документ."+ХранениеНакладной.Вид());
			Если Док.НайтиДокумент(ХранениеНакладной)=1 Тогда
				Док.Удалить(1);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры



Процедура ВводНаОсновании(ДокОснование)

	АвтоВремяТекущее();
	//{{ВВОД_НА_ОСНОВАНИИ

	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора, внесенные вручную изменения будут потеряны!!!
	Если ДокОснование.Вид() = "Взаимозачет" Тогда
	ИначеЕсли ДокОснование.Вид() = "ЗагрузкаКарточкиТовара" Тогда
	ИначеЕсли ДокОснование.Вид() = "ЗаявкаНаИзготовление" Тогда
	ИначеЕсли ДокОснование.Вид() = "ЗаявкаНаПриобретение" Тогда
	ИначеЕсли ДокОснование.Вид() = "ИнвентаризацияРеализатора" Тогда
	ИначеЕсли ДокОснование.Вид() = "КоррекцииРасчетаБонусов" Тогда
	ИначеЕсли ДокОснование.Вид() = "КоррекцияРегистров" Тогда
	ИначеЕсли ДокОснование.Вид() = "КритерииРасчетаБонусов" Тогда
	ИначеЕсли ДокОснование.Вид() = "МаршрутныйЛист" Тогда
	ИначеЕсли ДокОснование.Вид() = "ОплатаЧеков" Тогда
	ИначеЕсли ДокОснование.Вид() = "ПереносВзаиморасчетыПокупателей" Тогда
	ИначеЕсли ДокОснование.Вид() = "ПереносВзаиморасчетыПоставщиков" Тогда
	ИначеЕсли ДокОснование.Вид() = "ПереносКасса" Тогда
	ИначеЕсли ДокОснование.Вид() = "ПереносОстаткиТоваров" Тогда
	ИначеЕсли ДокОснование.Вид() = "ПереносПартииТоваров" Тогда
	ИначеЕсли ДокОснование.Вид() = "ПереносРезервыТоваров" Тогда
	ИначеЕсли ДокОснование.Вид() = "ПереоценкаТоваров" Тогда
	ИначеЕсли ДокОснование.Вид() = "ПланированиеНаценки" Тогда
	ИначеЕсли ДокОснование.Вид() = "ПланированиеПрибыли" Тогда
	ИначеЕсли ДокОснование.Вид() = "ПланированиеПродаж" Тогда
	ИначеЕсли ДокОснование.Вид() = "ПросроченныеДолги" Тогда
	ИначеЕсли ДокОснование.Вид() = "Служ_АкцизПоВидам" Тогда
	ИначеЕсли ДокОснование.Вид() = "Служ_Основания" Тогда
	ИначеЕсли ДокОснование.Вид() = "Служ_СтавкиНДС" Тогда
	ИначеЕсли ДокОснование.Вид() = "СписаниеЗадолженности" Тогда
	ИначеЕсли ДокОснование.Вид() = "Счет" Тогда
		Клиент = ДокОснование.Клиент;
		АвторЗаявки = ДокОснование.Агент;
		ДатаПоставки = ДокОснование.ДатаПоставки;
		ИзмДатаПоставки = ДокОснование.ДатаПоставки;
		ИзмНомерДок = ДокОснование.НомерДок;
		ИзмВидДоставки = ДокОснование.ВидДоставки;
		ВидДоставки = ДокОснование.ВидДоставки;
		ДатаОригЗаявки = ДокОснование.ДатаДок;
		Склад = ДокОснование.Склад;
		СкладПолучатель = ДокОснование.СкладПолучатель;
		ИзмСклад = ДокОснование.Склад;
		ВидОплаты=ДокОснование.ВидОплаты;
		ИзмВидОплаты=ДокОснование.ВидОплаты;
		ДокОснование.ВыбратьСтроки();
		Пока ДокОснование.ПолучитьСтроку() = 1 Цикл
			НоваяСтрока();
			НомерСтроки = ДокОснование.НомерСтроки;
			ТовКод = ДокОснование.ТовКод;
			Товар = ДокОснование.Товар;
			Единица = ДокОснование.Единица;
			Количество = ДокОснование.Количество;
			Цена = ДокОснование.Цена;
			Коэффициент = ДокОснование.Коэффициент;
			ИзмТовКод = ДокОснование.ТовКод;
			ИзмТовар = ДокОснование.Товар;
			ИзмКоличество = ДокОснование.Количество;
			ИзмЕдиница = ДокОснование.Единица;
			ИзмЦена = ДокОснование.Цена;
			N = ДокОснование.НомерСтроки;
		КонецЦикла;
	ИначеЕсли ДокОснование.Вид() = "УниверсальноеДвижениеПоРегистру" Тогда
	ИначеЕсли ДокОснование.Вид() = "УстАкционныхСкидокКлиентов" Тогда
	ИначеЕсли ДокОснование.Вид() = "УстАкционныхСкидокТоваров" Тогда
	ИначеЕсли ДокОснование.Вид() = "УстановкаКредитныхЛимитов" Тогда
	ИначеЕсли ДокОснование.Вид() = "УстановкаСкидокКлиентам" Тогда
	ИначеЕсли ДокОснование.Вид() = "УстановкаСпецЦен" Тогда
	ИначеЕсли ДокОснование.Вид() = "Чек" Тогда
	КонецЕсли;
	//}}ВВОД_НА_ОСНОВАНИИ
	
	СостояниеЗаявки=глПолучитьСостояниеЗаявки(ДокОснование,1);
	
	
	
	//{  Проводим проверку состояния заявки
	Если ПроверкаПодчДок(ДокОснование,"ЗаказПоставщику")=1 Тогда
		Предупреждение("Изменение заблокировано. Заявка имеет ЗаказПоставщику!");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	
	
	Если (СостояниеЗаявки="Ожидает компл.")
	Тогда
		Если (Пользователь<>ДокОснование.Автор) И (семЕстьПраво( "Документ", "ИзмЭлЗаявку", "Изменение любой заявки" )=0) Тогда
			Предупреждение("Вы не можете исправлять заявку, оформленную пользователем: "+ДокОснование.Автор);
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;	
		
		пСостояниеБлокировки=ПроверкаБлокировкиДок(ДокОснование);
		Если пСостояниеБлокировки=""
		Тогда
		//все можно менять
		Иначе 
			Предупреждение(пСостояниеБлокировки);
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	//все можно менять
	ИначеЕсли  СостояниеЗаявки = "Изменение" Тогда
		пСостояниеБлокировки=ПроверкаБлокировкиДок(ДокОснование);
		Если пСостояниеБлокировки=""
		Тогда
		//все можно менять
		Иначе 
			Предупреждение(пСостояниеБлокировки);
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;

	ИначеЕсли  СостояниеЗаявки = "Ожидается обобщение" Тогда
		пСостояниеБлокировки=ПроверкаБлокировкиДок(ДокОснование);
		Если пСостояниеБлокировки=""
		Тогда
		//все можно менять
		Иначе 
			Предупреждение(пСостояниеБлокировки);
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;		
	Иначе
		Предупреждение("Изменение заблокировано. Заявка находится в состоянии <"+ СостояниеЗаявки+">!");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;


	
	
//}  Проводим проверку состояния заявки


	ЗаполнитьШапку(Контекст); 
	Автор=Пользователь;
	ПоСчету=ДокОснование;
	пДатаОригЗаявки=ДокОснование.ДатаДок;
	Форма.Заголовок("Документ изменения Эл. Заявки: "+НомерДок);
	
	УстВидаОплаты(ВидОплаты);
	признакВыб=0;

	
//{	Загрузка и формирование копии накладной
	Док = СоздатьОбъект("Документ."+ХранениеНакладной.Вид());
	Док.Новый();
	Док.Записать();
	КопироватьДокумент1(ДокОснование,Док);
	Док.IDD=ПолучитьУникальныйIDD();
	Док.НомерОригЗаявки=ДокОснование.НомерДок;
	//Док.УстановитьВремя(ДокОснование.ПолучитьВремя());
	ВремяДокумента=ДокОснование.ПолучитьВремя();
	Док.УстановитьВремя(Число(Сред(ВремяДокумента,1,2)),Число(Сред(ВремяДокумента,4,2)),Число(Сред(ВремяДокумента,7,2)));
	
	ХранениеНакладной = Док.ТекущийДокумент();	
	Док.Записать();
	
//}

   
КонецПроцедуры


Функция ВыборСутиПретензии()

		Запрос=СоздатьОбъект("ODBCRecordSet");
		Запрос.УложитьСписокОбъектов(Константа.СутьПретензийB,"#СутиПретензийB","Претензии");
		ЗапросПретензий="SELECT Val FROM #СутиПретензийB";
		УсловиеСклад=" AND $Претензии.ДляИзмененияЗаявки=1";
//		Если ПоСчету.Склад.ТипСклада=Перечисление.ТипыСкладов.СкладРаспродажи Тогда
//			УсловиеСклад=" AND $Претензии.ЗапретВыбораДляСкладаРаспродажи = 0";			
//		КонецЕсли;
		
		ТекстЗапроса="SELECT Претензии.CODE Код
		|					, Претензии.ID [Ссылка $Справочник.Претензии]
		|					, $Претензии.НаименованиеРусс СутьПретензии
		|			  FROM $Справочник.Претензии AS Претензии (NOLOCK)
		|			  WHERE ISMARK = 0 AND ID IN ("+ЗапросПретензий+") 
		|					"+УсловиеСклад+"
		|			  ORDER BY CODE
		|";
		
		
		табл=СоздатьОбъект("ТаблицаЗначений");
		табл=Запрос.ВыполнитьИнструкцию(ТекстЗапроса);
		табл.ВидимостьКолонки("Ссылка",0);
		ном=0;
		Если табл.ВыбратьСтроку(ном,"Выберите причичину претензии")=1 Тогда
			Возврат
			табл.ПолучитьЗначение(ном,"Ссылка");
		Иначе
			Возврат ПолучитьПустоеЗначение("Справочник.Претензии");
		КонецЕсли;

КонецФункции

Процедура ЗаполнитьСутьПретензии()
	
	// выбираем вариант заполнения
	сп = СоздатьОбъект( "СписокЗначений" );
	сп.ДобавитьЗначение(0,"Заполнить все");
	сп.ДобавитьЗначение(1,"Заполнить где требуется");
	выб = 0; Если сп.ВыбратьЗначение(выб,,,,1) = 0 Тогда Возврат; КонецЕсли;
	
	спр=ВыборСутиПретензии();

	Если ПустоеЗначение(Спр)=1 Тогда
		Возврат;
	КонецЕсли;
	// заполняем причину притензии согласно выбранному варианту
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если выб = 1 Тогда
			Если СутьПретензии.Выбран() = 1 Тогда Продолжить; КонецЕсли;
		КонецЕсли;
		
//		Если Аннулировать=0 Тогда
//			Если глНеобходимоНаличиеПретензии(Товар,Единица.Единица,Количество,КоличествоФакт)=1 Тогда
//				СутьПретензии = спр;
//			КонецЕсли;
//		Иначе
			СутьПретензии = спр;
//		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ВыборСклада()

	промСклад = УстСклада(Контекст,"Вернуть");
	
	Если ПустоеЗначение(промСклад)=1 Тогда
		Возврат;
	Иначе
		ИзмСклад= промСклад;
	КонецЕсли;
	

КонецПроцедуры




Процедура ПровестиИзменения()//запись всех строк для фиксации измкенений

	Перем пНомерСтроки;//временая переменая
	Перем фСкидка;
	Перем фКоличествоНоль;
	Перем пНомерСтрокиДок;
	
	ОчиститьОкноСообщений();
	фСкидка="";
	фКоличествоНоль=0;
	
	Док=СоздатьОбъект("Документ.Счет");
	Док.НайтиДокумент(ПоСчету);
    кВклПроверкуВремениЭлЗаявок = 0;
	//проводим изменение склада
	//Если флажокСклад=1 Тогда
	//	УстСклада(Док);
	//	ИзмСклад=Док.Склад;
	//КонецЕсли;
	
	Док.Склад=ИзмСклад;	
	Док.МестоКомплектации=ИзмСклад.МестоКомплектации;
	Док.ВидОплаты=?(ИзмСклад.СкладОтвХранения=1,2,Док.ВидОплаты);
	Док.ВидДоставки=ИзмВидДоставки;
	Док.ДатаПоставки=ИзмДатаПоставки;
	
	
	Для пНомерСтроки = 1 По КоличествоСтрок() Цикл
		ПолучитьСтрокуПоНомеру(пНомерСтроки);
		Если ИзмКоличество=0 Тогда
			фКоличествоНоль=фКоличествоНоль+1;
		КонецЕсли;
	КонецЦикла;


	
//{  Проверка и согласование количество строк в документах изменения	
	флагИзменениеСтрок=0;
	Если (КоличествоСтрок()<>Док.КоличествоСтрок())ИЛИ (фКоличествоНоль>0) Тогда

		Если (КоличествоСтрок()<Док.КоличествоСтрок()) ИЛИ ((фКоличествоНоль>0)) Тогда
			Док.УдалитьСтроки();
		КонецЕсли;
		
		Если КоличествоСтрок()>Док.КоличествоСтрок() Тогда
			Для пНомерСтроки = Док.КоличествоСтрок() По (КоличествоСтрок()-1-фКоличествоНоль) Цикл	
				Док.НоваяСтрока();
			КонецЦикла;	
		КонецЕсли;
		
		флагИзменениеСтрок=1;
	КонецЕсли;

//}  Проверка и согласование количество строк в документах изменения		

	пНомерСтрокиДок=0;
	Для пНомерСтроки = 1 По КоличествоСтрок() Цикл
		ПолучитьСтрокуПоНомеру(пНомерСтроки);
		Если ИзмКоличество>0 Тогда
			пНомерСтрокиДок=пНомерСтрокиДок+1;
			Док.ПолучитьСтрокуПоНомеру(пНомерСтрокиДок);
			
	//проверка заполнение кода товара
	        
			Док.Товар 			=ИзмТовар;
			Док.Количество 		=ИзмКоличество;
			Док.Единица			=ИзмЕдиница;
			Док.ВидОплаты		=ИзмВидОплаты;
	//{ 		Вызов Глобальных процедур Для коррекции данных в Накладной
	
				семПроверкаМинОтргКолва( Док );
				УстанЦеныРасх(Док,"Подбор");
				ИзмЕдин(Док);//добавил
				
	//}			Вызов Глобальных процедур Для коррекции данных в Накладной
	
	//{ 		Вызов Глобальных процедур Для коррекции цен и скидки в Накладной
	
				Если ИзмЦена<>Док.Цена Тогда
					Док.Цена 			=ИзмЦена;
					Выч_суммы_накл(Док,0,1);
				КонецЕсли;
				
				пПроверкаСкидки=ПроверкаСкидки(Док,);
				Если пПроверкаСкидки="" Тогда
				Иначе
					Сообщить("Ошибка в строке "+пНомерСтроки+" "+пПроверкаСкидки);
					фСкидка=пПроверкаСкидки;
				КонецЕсли;
	//}			Вызов Глобальных процедур Для коррекции цен и скидки в Накладной
			 
		КонецЕсли;
	КонецЦикла;
//{ 	Записать и провести Заявку для фиксации изменений
	Если фСкидка="" Тогда
	
		Если Вопрос("Вы хотите записать изменения в Электронную Заявку","Да+Нет")="Да" Тогда

			ОбъектЗаписать(Док,);
			Сообщить("Проводится эл. заявка "+Док.НомерДок+"...");
			
			Если Док.Провести()=1 Тогда
				//Провести Запись в Журнал Регистрации
				ЗаписьЖурналаРегистрации( "Эл. заявка "+Док.НомерДок+" успешно изменена и проведена ",, "Изменение Заявки Агентом", Док.ТекущийДокумент(), 2 );
				Сообщить("Эл. заявка "+Док.НомерДок+" успешно изменена и проведена ");
			    Записать();
			Иначе
				ЗаписьЖурналаРегистрации( "Эл. заявка "+Док.НомерДок+" не проведена",, "Изменение Заявки Агентом", Док.ТекущийДокумент(), 2 );
				Сообщить("Эл. заявка "+Док.НомерДок+" не изменена. Операция отменена!");
	
			КонецЕсли;
			кВклПроверкуВремениЭлЗаявок = 1;
			АвтоВремяТекущее();
			Записать();
			Если Провести()=1 Тогда
				УстановкаБлокировкиДок(ПоСчету,0);
				Форма.Закрыть();
			КонецЕсли;	

		КонецЕсли;
	Иначе
		Предупреждение("Документ не Записан."+фСкидка);
	КонецЕсли;
//} Записать и провести Заявку для фиксации изменений	
КонецПроцедуры

Процедура СкинутьИзменения()
Перем пНомерСтроки;		

    ЗагрузитьТабличнуюЧасть(тПредЗаявки);
	
	ИзмВидДоставки=ВидДоставки;
	ИзмДатаПоставки=ДатаПоставки;
	ИзмВидОплаты=ВидОплаты;
	УстВидаОплаты(ИзмВидОплаты);
	
	Для пНомерСтроки = 1 По КоличествоСтрок() Цикл
		ПолучитьСтрокуПоНомеру(пНомерСтроки);
		ИзмТовар=Товар;
		ИзмЕдиница=Единица;
		ИзмКоличество=Количество;
		ИзмТовКод=ТовКод;
		ИзмЦена=Цена;	
	КонецЦикла;
КонецПроцедуры

Процедура ПриВыбореТовара()
	ИзмЕдиница=глБазоваяЕдиницаИзмерения(ИзмТовар);
КонецПроцедуры	

Процедура ПриВыбореЕдИзм()

КонецПроцедуры

Процедура ПриОкончанииРедактированияСтроки(НовСтр)
	Перем пНомерСтроки;
	
	пНомерСтроки=НомерСтроки;
	ИзмТовКод=ИзмТовар.КодТовара;
	
	РасчетСкидки(НомерСтроки,Скидка);
	
//	НомерСтроки=пНомерСтроки;
	ПолучитьСтрокуПоНомеру(пНомерСтроки);
	
	Если НомерСтроки>тПредЗаявки.КоличествоСтрок() Тогда
		Возврат;
	КонецЕсли;
	
	Если (Товар<>ИзмТовар)
		ИЛИ (Количество>ИзмКоличество)//Если Изм Количество больше оригинальной заявки то претензия не пишется
//		ИЛИ (Цена<>ИзмЦена)
		ИЛИ (Единица<>ИзмЕдиница)
	Тогда
		Если ПустоеЗначение(СутьПретензии)=1 Тогда
// PR 03.09.12 отключен по запросу Ирины от Саниты
		//	СутьПретензии=ВыборСутиПретензии();//выб претензии
		//	Если ПустоеЗначение(СутьПретензии)=1 Тогда //если произошел отказ от выбора претензии - строку не фиксируем
		//		СтатусВозврата(0);
		//	КонецЕсли;
		КонецЕсли;
	Иначе
		СутьПретензии=ПолучитьПустоеЗначение(СутьПретензии);
	КонецЕсли;		

КонецПроцедуры

Процедура приИзмДатыПоставки();
	Если ИзмДатаПоставки<ДатаОригЗаявки Тогда
		Предупреждение("Новая дата поставки не может быть меньше Даты Документа оригинальной заявки.");
		ИзмДатаПоставки=ДатаОригЗаявки;
	КонецЕсли;
КонецПроцедуры

Процедура ПриУдаленииСтроки()
		СтатусВозврата(0);
КонецПроцедуры

Процедура ПриВыбореВидаОплаты()
Перем чВидОплаты;
	чВидОплаты=спВидОплаты.ПолучитьЗначение(спВидОплаты.ТекущаяСтрока());
	Если (чВидОплаты=ВидОплаты) ИЛИ (чВидОплаты=1) Тогда
		ИзмВидОплаты = спВидОплаты.ПолучитьЗначение(спВидОплаты.ТекущаяСтрока());
	Иначе
		Сообщить("Вид оплаты можно менять только на Наличные !");
		УстВидаОплаты(ИзмВидОплаты);
	КонецЕсли;
КонецПроцедуры

Процедура УстВидаОплаты(пВидОплаты)
	спВидОплаты.ТекущаяСтрока(спВидОплаты.НайтиЗначение(пВидОплаты));
КонецПроцедуры
//////////////////////////////////////////////////////
спВидОплаты.ДобавитьЗначение(0,"Кредит");
спВидОплаты.ДобавитьЗначение(1,"Наличные");
спВидОплаты.ДобавитьЗначение(2,"Отв. хранение");




