Перем Валюта_Прежн;
Перем Курс_Прежн;
Перем Режим;
Перем ИнформационнаяСтрока;
Перем Prompt;
Перем стар_Клиент;


//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Процедура ПриВводеСтроки()
	ПриВводеСтрокиДокумента(Контекст);
КонецПроцедуры

Процедура Доступ()
	          
	Если (Склад.ВидСклада=Перечисление.ВидыСкладов.Розничный)  Тогда
		Форма.КодДляРозницы.Видимость(1);
	Иначе
		Форма.КодДляРозницы.Видимость(0);
	КонецЕсли;
	              

	Если Строка(ДокументОснование.Вид()) = "Счет" Тогда
		Форма.Товар.Доступность(0);
	КонецЕсли;	
	
КонецПроцедуры

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Процедура ВыборРеализатора()
	Если (ПустоеЗначение(стар_Клиент)=0) и (клиент<>стар_Клиент) Тогда
		Если глПроверкаАгентаПоКлиенту(Контекст)=0 Тогда
			Клиент=стар_Клиент;
		КонецЕсли;             
		стар_Клиент="";
	КонецЕсли;
	КлГруппа=Клиент.КлГруппа;
	ИнформационнаяСтрока = "";
	Форма.ИнфПодпись.Видимость(1);
	Если ПустоеЗначение(Клиент.КатегорияЦены) = 0 Тогда
	    КатегорияЦены = Клиент.КатегорияЦены;
	Иначе
		КатегорияЦены = Константа.ОсновнаяКатегорияЦены;
	КонецЕсли;  
	
	СтавкаНДС = семПолучитьСтавкуНДС(Клиент,Контекст);	
	
	ПриИзмененииКатегорииЦены(Контекст);
КонецПроцедуры


Процедура семУстановитьВалюту( флКопирования )
	Если флКопирования = 0 Тогда
		Валюта = Константа.ОсновнаяВалютаПродажи;
	КонецЕсли;
	Дата_Курса = ДатаДок;
	Курс = КурсДляВалюты( Валюта, Дата_Курса );
	Валюта_Прежн = Валюта;
	Курс_Прежн = Курс;
КонецПроцедуры


Процедура ПересчетЦен()
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если (Счет.ВидСкидки = Перечисление.ВидСкидки.Документ) И (ПустоеЗначение(Счет.КлиентФилиала)=0) Тогда			
			УстанЦеныРасх(контекст,,0);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры  


Процедура семЗаполнитьПоСпискуЗаявок(сп)
	Если сп.РазмерСписка() = 0 Тогда 
		Сообщить( "Нет данных для заполнения." ); Возврат;
	Иначе
		промЗаявка = сп.ПолучитьЗначение( 1 );
	КонецЕсли;
	
	Автор = Пользователь;
	Фирма = Константа.ОсновнаяФирма;
	//Основание = "?????";
	IDD = ПолучитьУникальныйIDD();
	ТипУчета = промЗаявка.ТипУчета;
	ФинУчет = ?( ТипУчета > Упр, 1, 0 );
	
	ПризнакНакладной = Перечисление.ПризнРасхНакл.Продажа;
	ДатаДок = РабочаяДата();
	ДатаПоставки = ДатаДок;
	
	ДокументОснование=промЗаявка;
	Склад=промЗаявка.Склад;
	Дата_Курса=промЗаявка.Дата_Курса;
	Валюта=промЗаявка.Валюта;
	Курс=КурсДляВалюты( Валюта, Дата_Курса );
	Клиент=промЗаявка.Клиент;
	//Агент = Клиент.Агент;
	Агент = семПолучитьАгента( Клиент );
	стар_Клиент = "";
	ВыборРеализатора();    
	Агент = промЗаявка.Агент;
    КатегорияЦены=промЗаявка.КатегорияЦены;
	
	стар_Клиент = Клиент;
	Валюта_Прежн=Валюта;
	Курс_Прежн=Курс;
	
//	СкидкаНакл=промЗаявка.СкидкаНакл;
	
//	КатегорияЦены = промЗаявка.КатегорияЦены;
	//СтавкаНДС     = промЗаявка.СтавкаНДС;                       
	//Агент=промЗаявка.Агент;
	пОснование=ПеревестиНаГосЯзык("Счет")+" Nr. ";

	регРезервы = СоздатьОбъект( "Регистр.РезервыТоваров" );
	Если ПолучитьДатуТА()>ДатаДок Тогда
		регРезервы.ВременныйРасчет();
		РассчитатьРегистрыНа( ДатаДок+1 );
	КонецЕсли;
	Для н = 1 по сп.РазмерСписка() Цикл
		промЗаявка = сп.ПолучитьЗначение( н );
		пОснование = пОснование + СокрЛП(промЗаявка.НомерДок)+", ";
		промЗаявка.ВыбратьСтроки();
		Пока промЗаявка.ПолучитьСтроку()=1 Цикл
			Если промЗаявка.Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга Тогда // услуги
				НоваяСтрока();
				КомплектовщикСчет = промЗаявка.Комплектовщик;
				Счет = промЗаявка;    
				Если ПустоеЗначение(ДокументОснование) = 1 Тогда
					ДокументОснование = промЗаявка.ТекущийДокумент(); 
				КонецЕсли;
				Товар = промЗаявка.Товар; 
				ТовКод = Товар.Код;
				РознЦена = ЦенаТовараПоКатегории(Контекст,КатегорияЦены,1);
				//Цена=Пересчет(промЗаявка.Цена,промЗаявка.Валюта,промЗаявка.Дата_Курса,Валюта,Дата_Курса);
				Количество=промЗаявка.Количество;
				Коэффициент=промЗаявка.Коэффициент;
				Единица=промЗаявка.Единица;
				//Коэффициент=промЗаявка.Коэффициент;
				//Выч_суммы_накл_сНП(Контекст,0,1);
				//Сумма=Пересчет(промЗаявка.Сумма,промЗаявка.Валюта,промЗаявка.Дата_Курса,Валюта,Дата_Курса);
				//Скидка=Пересчет(промЗаявка.Скидка,промЗаявка.Валюта,промЗаявка.Дата_Курса,Валюта,Дата_Курса);
				//ВидСкидки=промЗаявка.ВидСкидки;
				//НДС=Пересчет(промЗаявка.НДС,промЗаявка.Валюта,промЗаявка.Дата_Курса,Валюта,Дата_Курса);
				//Всего = Сумма + НДС;
				УстанЦеныРасх(Контекст,,0);
				Продолжить;
			КонецЕсли;                                                                 
			
//			Если промЗаявка.Резерв=0 Тогда Продолжить; КонецЕсли;
			
			РезервПоСчету = регРезервы.Остаток( промЗаявка.Товар, промЗаявка, "РезервТовара" );
			Если РезервПоСчету > 0 Тогда
				НоваяСтрока();
				КомплектовщикСчет = промЗаявка.Комплектовщик;
				Счет = промЗаявка;   
				Если ПустоеЗначение(ДокументОснование) = 1 Тогда
					ДокументОснование = промЗаявка.ТекущийДокумент(); 
				КонецЕсли;				
				Товар=промЗаявка.Товар; 
				ТовКод   = Товар.Код;
				РознЦена = ЦенаТовараПоКатегории(Контекст,КатегорияЦены,1);
				Цена=Пересчет(промЗаявка.Цена,промЗаявка.Валюта,промЗаявка.Дата_Курса,Валюта,Дата_Курса);
				ЦенаСНДС=Пересчет(промЗаявка.ЦенаСНДС,промЗаявка.Валюта,промЗаявка.Дата_Курса,Валюта,Дата_Курса);
				НДС=Пересчет(промЗаявка.НДС,промЗаявка.Валюта,промЗаявка.Дата_Курса,Валюта,Дата_Курса); 
				
				Единица=промЗаявка.Единица;
				Коэффициент=промЗаявка.Коэффициент;
				Количество=РезервПоСчету/Коэффициент;
				ПояснениеСкидки=промЗаявка.ПояснениеСкидки;
				//цены, установленные вручную сохраняются в базе филиала при вводе на основании заявки накладной\
				//в этом случае когда накладная выписывается на клиента как фирму, оформившую заявку цены пересчитываем согласно условиям
				//в случае, когда заявка оформлена на конечного клиента - цены введенные вручную сохраняем
				Если (промЗаявка.ВидСкидки = Перечисление.ВидСкидки.Документ) И (ПустоеЗначение(промЗаявка.КлиентФилиала)=1) Тогда
					Выч_суммы_накл_сНП(Контекст,0,1);
				Иначе
					УстанЦеныРасх(Контекст,,0);
				КонецЕсли;
				//Выч_суммы_накл(Контекст);
				//Скидка=Пересчет(промЗаявка.Скидка,промЗаявка.Валюта,промЗаявка.Дата_Курса,Валюта,Дата_Курса);
				//ВидСкидки=промЗаявка.ВидСкидки;
				//Всего = Сумма + НДС;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	пОснование = Лев(пОснование,СтрДлина(пОснование)-2);
	Основание = пОснование;

	ПересчетЦен();
	регРезервы = 0;      
	
	
КонецПроцедуры


//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Процедура ПриОткрытии()
	ПроверкаРазрешенияРедактирования(Контекст);
	УстановкаРеквизитаТип(Контекст);
	Тип.ДобавитьЗначение("Упр.");
	Тип.ДобавитьЗначение("Общ.");
	Тип.ДобавитьЗначение("Фин.");
	Тип.ТекущаяСтрока(ТипУчета+1);
	Если Форма.ТолькоПросмотр() = 1 Тогда
	    Форма.КнФирма.Доступность(0);
	    Форма.КнСклад.Доступность(0);
	    Форма.КнВалюта.Доступность(0);
	    Форма.ПодборПоКаталогу.Доступность(0);
	    Форма.ОК.Доступность(0);
	    Форма.КнопкаПоУмолчанию("Закрыть");
	Иначе
	    Форма.КнопкаПоУмолчанию("ОК");
	КонецЕсли;            
	
	Доступ();
КонецПроцедуры
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Процедура ОбработкаВыбораЗначения(ВыбЗнач,ИдЭлДиал,ФлСтОбр)
	Если ИдЭлДиал = "Агент" Тогда
	    //Если ОчищениеТаблЧасти(Контекст) = 0 Тогда
//	        ФлСтОбр = 0;
	    //КонецЕсли;
	КонецЕсли;
	Если ИдЭлДиал = "Клиент" Тогда
    	стар_Клиент = Клиент;
	КонецЕсли;
КонецПроцедуры 
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Процедура Взаиморасчеты()
	Форма.ИнфПодпись.Видимость(0);
	ИнформационнаяСтрока=ДолгПоКредиту(Контекст);
КонецПроцедуры                                             

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Процедура ВыборДаты()
	Устан_Вал(Контекст,ДатаДок,Валюта_Прежн,Курс_Прежн);
КонецПроцедуры 


//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Процедура Подбор()
	Режим = "Каталог";
	ОткрытьПодбор("Номенклатура","ДляПодбора");
	УстановитьЗначениеВПодборе("Склад",Склад);
КонецПроцедуры

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Процедура ОбработкаПодбора(Выб)
	ЗапросКоличестваВПодборе(Контекст,Режим,Выб);
	УстанЦеныРасх(Контекст,"Подбор");
	Выч_суммы_накл(Контекст);
	АктивизироватьСтроку();
КонецПроцедуры

Процедура ПриВыбореДатыПоставки()

Если КоличествоСтрок() = 0 Тогда Возврат; КонецЕсли;
	Ответ = Вопрос("Измененна дата поствки товара. Пересчитать цены?","Да+Нет",60);
	Если Ответ <> "Да" Тогда Возврат; КонецЕсли;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ВидСкидки <> Перечисление.ВидСкидки.Документ Тогда
			УстанЦеныРасх(Контекст,"Подбор",0);
			Выч_суммы_накл_сНП(Контекст);
		КонецЕсли;
	КонецЦикла;                          
КонецПроцедуры

//_____________________________________________________________________________
Процедура ПриВыбореТовара()
	Если Товар.Выбран()=0 Тогда
	    Возврат;
	КонецЕсли;  
	Если УстановкаАгента(Контекст,"Каталог",Товар)=0 Тогда
	    Товар="";
	КонецЕсли;
КонецПроцедуры //ПриВыбореТовара

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Процедура Печать_Ress_Buve()
	Фирма.ИспользоватьДату(ДатаДок);
        //If ПоСчету.НомерДок<>"" Then
    Datums="Gala apmaksa l®dz : "+String(ДатаОплаты);
        // EndIf;
	// Сформируем печать скидки
	Если СкидкаНакл=0 Тогда
		ПечСкидки="";
		ПечСумСкидки="Atlaide (-)";
	ИначеЕсли СкидкаНакл>0 Тогда
		ПечСкидки="Atlaide - "+СкидкаНакл+" %";
		ПечСумСкидки="Atlaide (-)";
	ИначеЕсли СкидкаНакл<0 Тогда
		ПечСкидки="Uzcenojums - "+СкидкаНакл*(-1)+" %";
		ПечСумСкидки="Uzcenojums (+)";
	КонецЕсли;
	Таб=СоздатьОбъект("Таблица");
	Если ПризнакНакладной=Перечисление.ПризнРасхНакл.ВозвратПоставщику Тогда
		Таб.ИсходнаяТаблица("Возврат");
	КонецЕсли;
	Таб=СоздатьОбъект("Table");
	Таб.SourceTable("Ress_Buve");
	Фирма1=Const.Ress_Buve;

	Customer=Createobject("Reference.Контрагенты");
		Customer.Choose("Выберите получателя товара для  "+TrimAll(Константа.Ress_Buve.Наименование),"ФормаСписка");
		Клиент1=Customer.CurrentItem();

	If AtlKar=1 Then
		Таб.ВывестиСекцию("Шапка");
	Else
		Таб.ВывестиСекцию("Шапка|Pamata");
	EndIf;
	ВыбратьСтроки();
	Ном=0;
	ИтогСумНДС=0;
	Пока ПолучитьСтроку() = 1 do
		Ном=Ном+1;
		СумНДС=ЦенаТовараПоКатегории(Контекст,Константа.РозничнаяКатегорияЦены,1)*(1+ПроцентНДС(СтавкаНДС)/100)*Количество*Коэффициент;
		ИтогСумНДС=ИтогСумНДС+СумНДС;
		If AtlKar=1 Then
			Таб.ВывестиСекцию("Строка");
		Else
			Таб.ВывестиСекцию("Строка|Pamata");
		EndIf;
	enddo;
	If AtlKar=1 Then
		Таб.ВывестиСекцию("Подвал");
		Если Валюта<>Константа.БазоваяВалюта Тогда
			Таб.ВывестиСекцию("Валюта");
		КонецЕсли;
		Таб.ВывестиСекцию("Подвал1");
	Else
		Таб.ВывестиСекцию("Подвал|Pamata");
		Если Валюта<>Константа.БазоваяВалюта Тогда
			Таб.ВывестиСекцию("Валюта|Pamata");
		КонецЕсли;
		Таб.ВывестиСекцию("Подвал1|Pamata");
	EndIf;
	Таб.Опции(0,0,0,0,ПарСтрДок);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Печать накладной","");
КонецПроцедуры


Процедура семПечатьУпаковки()
	сп = СоздатьОбъект( "СписокЗначений" );
	сп.Установить( "Документ", ТекущийДокумент() );
	ОткрытьФорму( "Отчет", сп, КаталогИБ() + "ExtForms\Печать\ПечатьУпаковки.ert" );
КонецПроцедуры

Процедура семПечатьLT(пСроки,пНомер)
	сп = СоздатьОбъект( "СписокЗначений" );
	Если (Итог("Скидка")=0) ИЛИ ((ПризнакНакладной=Перечисление.ПризнРасхНакл.ВозвратПоставщику) ИЛИ (ПризнакНакладной=Перечисление.ПризнРасхНакл.ЭкспортныйВозврат)) Тогда
		сп.Установить( "Скидки", 0 );
	Иначе
		сп.Установить( "Скидки", 1 );
	КонецЕсли;
	сп.Установить( "Документ", ТекущийДокумент() );
	сп.Установить( "Сроки", пСроки );
	сп.Установить( "Язык", "Лит" );
	сп.Установить( "Номер", пНомер );
	сп.Установить( "Наловая", 0 );
	ОткрытьФорму( "Отчет", сп, КаталогИБ() + "ExtForms\Печать\ПечатьНакладнойLT.ert" );
КонецПроцедуры

Процедура семПечатьEE(пСроки,пНомер)
	сп = СоздатьОбъект( "СписокЗначений" );
	Если (Итог("Скидка")=0) ИЛИ ((ПризнакНакладной=Перечисление.ПризнРасхНакл.ВозвратПоставщику) ИЛИ (ПризнакНакладной=Перечисление.ПризнРасхНакл.ЭкспортныйВозврат)) Тогда
		сп.Установить( "Скидки", 0 );
	Иначе
		сп.Установить( "Скидки", 1 );
	КонецЕсли;
	сп.Установить( "Документ", ТекущийДокумент() );
	сп.Установить( "Сроки", пСроки );
	сп.Установить( "Язык", "Лит" );
	сп.Установить( "Номер", пНомер );
	сп.Установить( "Наловая", 0 );
	ОткрытьФорму( "Отчет", сп, КаталогИБ() + "ExtForms\Печать\ПечатьНакладнойEE.ert" );
КонецПроцедуры


//***************************************************************




Процедура семПечатьИнвойса( пЯзык, НомерФормы=15, СоСроками=0 )
	// 15 - обычная печать, с суммами без ШК и без сроков
	// 16 - сумма, ШК
	// 17 - сумма, ШК, сроки
	// 18 - без суммы, ШК и сроков
	сп = СоздатьОбъект( "СписокЗначений" );
	Если (НомерФормы=16) или (НомерФормы=17) Тогда
		сп.Установить( "ШтрихКод", "Да");
	Иначе
		сп.Установить( "ШтрихКод", "Нет");
	КонецЕсли;
	Если (НомерФормы = 17) ИЛИ (СоСроками=1) Тогда
		сп.Установить( "ПечСрокиРеализ", "Да");
	Иначе
		сп.Установить( "ПечСрокиРеализ", "Нет");
	КонецЕсли;
	Если НомерФормы = 18 Тогда
		сп.Установить( "БезСумм", 1 );
	Иначе
		сп.Установить( "БезСумм", 0 );
	КонецЕсли;
	сп.Установить( "Документ", ТекущийДокумент() );
	сп.Установить( "Язык", пЯзык );
	
	ОткрытьФорму( "Отчет", сп, КаталогИБ() + "ExtForms\Печать\инвойс.ert" );
КонецПроцедуры


Процедура семПечатьВозврат()
	Путь = КаталогИБ() + "ExtForms\Печать\ВозвратПоставщику.ert";
	спПарам = СоздатьОбъект( "СписокЗначений" );
	спПарам.Установить( "Документ", контекст );
	ОткрытьФорму( "Обработка", спПарам, Путь );
КонецПроцедуры

//***************************************************************
// *************************************************************************
Процедура Печать()
	
	сп = СоздатьОбъект( "СписокЗначений" ); 
	Если ПризнакНакладной <> Перечисление.ПризнРасхНакл.ВозвратПоставщику Тогда
		// реализация эстонскому покупателю
		Если (семТекСтрана() = "EE") И (Клиент.Страна.Код="EE") Тогда
			сп.Установить( "Печать ( EE )", 1 );
			Если семТекСтрана() <> "LV" Тогда 
				сп.Установить( "Печать ( EN )", 2 );
			КонецЕсли;
		Иначе

			Если (Клиент.Страна.Код="EE") Тогда
				сп.Установить( "Печать ( EE ) со сроками", 10 );
				сп.Установить( "Печать ( EE ) без сроков", 11 );
			КонецЕсли;

			
			сп.Установить( "Печать ( LV )", 1 );          
			Путь = КаталогИБ() + "ExtForms\Печать\ПечатьНакладнойLV.ert";
			//Если ФС.СуществуетФайл( Путь ) = 1 Тогда 
			//	сп.Установить( "Печать ( LV ) (на бланк)", 2 );
			//КонецЕсли;
			
			сп.Установить( "Печать ( EN )", 15 );
			сп.Установить( "Печать ( EN ) (штрих-код)", 16 );
			сп.Установить( "Печать ( EN ) (штрих-код со сроками)", 17 );
			сп.Установить( "Печать ( EN ) без сумм", 18 );
			сп.Установить( "Печать ( RU )", 4 );
			сп.Установить( "Печать ( RU ) (со сроками)", 5 );
			сп.Установить( "Печать упаковки", 9 );
			
		КонецЕсли;
	Иначе	
			Путь = КаталогИБ() + "ExtForms\Печать\ВозвратПоставщику.ert";
			Если ФС.СуществуетФайл( Путь ) = 1 Тогда 
				сп.Установить( "Печать возврата ( LV )", 13 );
			КонецЕсли;
		сп.Установить( "Печать ( EN )", 15 );
		сп.Установить( "Печать ( EN ) (штрих-код)", 16 );
		сп.Установить( "Печать ( EN ) (штрих-код со сроками)", 17 );
		сп.Установить( "Печать ( EN ) без сумм", 18 );
	КонецЕсли;
	
	
	зн = ""; Если сп.ВыбратьЗначение( зн ,,,, 1 ) = 0 Тогда Возврат; КонецЕсли;
	Если зн = 1 Тогда 
		//Печать();
		спПарам = СоздатьОбъект( "СписокЗначений" );
		спПарам.Установить( "Документ", контекст );
		спПарам.Установить( "Заголовок", 1 );
		спПарам.Установить( "ПечШтрихКод", 0 ); 
		спПарам.Установить( "ДопИнформ","");
		ОткрытьФорму( "Обработка", спПарам, Путь );
	ИначеЕсли зн = 2 Тогда 
		спПарам = СоздатьОбъект( "СписокЗначений" );
		спПарам.Установить( "Документ", контекст );
		спПарам.Установить( "Заголовок", 0 );
		спПарам.Установить( "ПечШтрихКод", 0 );                      
		спПарам.Установить( "ДопИнформ","");
		ОткрытьФорму( "Обработка", спПарам, Путь );
		
	ИначеЕсли (зн >= 15 ) и (зн <= 18) Тогда // англ
		семПечатьИнвойса( "Англ",зн);	
	//ИначеЕсли зн = 3 Тогда 
	//ИначеЕсли зн = 15 Тогда семПечатьИнвойса( "Англ",1 );
	ИначеЕсли зн = 4 Тогда семПечатьИнвойса( "Рус",,0 );
	ИначеЕсли зн = 5 Тогда семПечатьИнвойса( "Рус",,1 );
	//ИначеЕсли зн = 6 Тогда семПечатьLT(1,0);
	//ИначеЕсли зн = 7 Тогда семПечатьLT(0,0);
	//ИначеЕсли зн = 8 Тогда семПечатьLT(1,1); 
	ИначеЕсли зн = 9 Тогда семПечатьУпаковки();  
	ИначеЕсли зн = 10 Тогда семПечатьEE(1,0);
	ИначеЕсли зн = 11 Тогда семПечатьEE(0,0);
//	ИначеЕсли зн = 12 Тогда семПечатьEE(1,1);  
	ИначеЕсли зн = 13 Тогда семПечатьВозврат();  
//	ИначеЕсли зн = 14 Тогда ВыслатьПоЭлектроннойПочте();  
	КонецЕсли;
	
	
	Возврат;
	Если сп.РазмерСписка() <> 0 Тогда
		зн = ""; 
		Если сп.ВыбратьЗначение( зн ,,,, 1 ) = 0 Тогда Возврат; КонецЕсли;
		Если зн = 1 Тогда 
			семПечатьEE(1,0);
			Возврат;
		ИначеЕсли зн = 2 Тогда 
			семПечатьИнвойса( "Англ" );
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	
	
	Фирма.ИспользоватьДату(ДатаДок);
	 
	ПросроченоДней=0;
	
	Таб=СоздатьОбъект("Таблица");

	ОснДок="";
	Если ДокументОснование.Выбран()=1 Тогда
	    ОснДок=Шаблон("Pamat.: [ДокументОснование.НомерДок] no [ДокументОснование.ДатаДок]");
		ОснованиеДоп=ДокументОснование.Основание;
	КонецЕсли;
	        
	ДопТекст="Kods";
	Если ПризнакНакладной=Перечисление.ПризнРасхНакл.КредитнаяНота Тогда
		
		Таб.ИсходнаяТаблица("КредитнаяНота");
		Таб.ВывестиСекцию("Шапка");
		
		Таб.Опции(0,0,0,0,ПарСтрДок);
		Таб.ПараметрыСтраницы(1,100,,20,15,10,10,,,1);
		Таб.Защита(Константа.ФлагЗащитыТаблиц);
		Таб.ТолькоПросмотр(1);
		Таб.Показать("Kreditu nota: "+НомерДок,"");
		Возврат;
	ИначеЕсли ПризнакНакладной=Перечисление.ПризнРасхНакл.Переработка Тогда
    	Назв="Uz pўrstrўdi";
		Оплата="";
	ИначеЕсли (ПризнакНакладной=Перечисление.ПризнРасхНакл.ВозвратПоставщику) ИЛИ (ПризнакНакладной=Перечисление.ПризнРасхНакл.ЭкспортныйВозврат) Тогда
    	Назв="Atgrieєana";
		Оплата=Шаблон("Apmaksўt l®dz: [ДатаОплаты]   ar pўrskait®jumu");
		Таб.ИсходнаяТаблица("Возврат");
		Если НаАлкоголь=1 Тогда
		    ДопТекст="Akc®zes marka";
		КонецЕсли;
	Иначе
		Таб.ИсходнаяТаблица("Reaton"+семТекСтрана());
		Назв="";
		Оплата=Шаблон("Apmaksўt l®dz: [ДатаОплаты]   ar pўrskait®jumu");
	КонецЕсли;

// Получим строку с номерами сертификатов
	НомераСертификатов=СформироватьСтрокуСертификатов(Контекст);
// Сформируем печать скидки
	СпецОтм="";
                            
	Если  (Итог("Скидка")=0) ИЛИ ((ПризнакНакладной=Перечисление.ПризнРасхНакл.ВозвратПоставщику) ИЛИ (ПризнакНакладной=Перечисление.ПризнРасхНакл.ЭкспортныйВозврат)) Тогда
 	 	СекцияСкидка="БезСкидки";
	Иначе
	 	СекцияСкидка="СоСкидкой";
	КонецЕсли;
	
	Таб.ВывестиСекцию("Шапка|Основная");
	Таб.ПрисоединитьСекцию("Шапка|"+СекцияСкидка);
	
	ВыбратьСтроки();
	Ном=0;
	Пока ПолучитьСтроку() = 1 do
		Ном=Ном+1;
		
		Если НаАлкоголь=1 Тогда
		    ДопТекстТовар=АкцизнаяМарка;
		Иначе
			ДопТекстТовар=Товар.Код;
		КонецЕсли;
		
		Таб.ВывестиСекцию("Строка|Основная");
		Таб.ПрисоединитьСекцию("Строка|"+СекцияСкидка);
		  
		Если 1=2 Тогда //Отключено
		//Если Товар.ВидТовара=Перечисление.ВидыТоваров.Комплект Тогда
			Таб.ВывестиСекцию("ВСоставе|Основная");
			Таб.ПрисоединитьСекцию("ВСоставе|"+СекцияСкидка);

			Кмп=СоздатьОбъект("Справочник.Комплектация");
			Кмп.ИспользоватьВладельца(Товар);
			Кмп.ВыбратьЭлементы();
			Пока Кмп.ПолучитьЭлемент()>0 Цикл
				Таб.ВывестиСекцию("Состав|Основная");
				Таб.ПрисоединитьСекцию("Состав|"+СекцияСкидка);
			КонецЦикла;
			Кмп=0;
		КонецЕсли;
	КонецЦикла;

	Таб.ВывестиСекцию("Итог|Основная");
	Таб.ПрисоединитьСекцию("Итог|"+СекцияСкидка);

	Если  (Итог("Скидка")=0) ИЛИ ((ПризнакНакладной=Перечисление.ПризнРасхНакл.ВозвратПоставщику) ИЛИ (ПризнакНакладной=Перечисление.ПризнРасхНакл.ЭкспортныйВозврат)) Тогда
	Иначе
	КонецЕсли;
	
	Таб.ВывестиСекцию("Подвал|Основная");
	Таб.ПрисоединитьСекцию("Подвал|"+СекцияСкидка);
	
	   	
	Таб.ВывестиСекцию("Подвал1|Основная");
	Таб.ПрисоединитьСекцию("Подвал1|"+СекцияСкидка);
	 	
	Таб.Опции(0,0,0,0,ПарСтрДок);
	Таб.ПараметрыСтраницы(1,100,,10,5,3,10,,,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("PPR (Kredit): "+НомерДок,"");
КонецПроцедуры 
//***************************************************************
//
//Процедура Печать()
//	Фирма.ИспользоватьДату(ДатаДок);      
//	Таб = СоздатьОбъект("Таблица");
//	Таб.ВывестиСекцию("Шапка");
//	ВыбратьСтроки();
//	Ном = 0;
//	ВСоставе = 0;
//	Пока ПолучитьСтроку() = 1 Цикл 
//		Ном = Ном+1;
//		Таб.ВывестиСекцию("Строка");
//	КонецЦикла;
//	Таб.ВывестиСекцию("Подвал");
//	Таб.Опции(0,0,0,0,ПарСтрДок);
//	Таб.Защита(Константа.ФлагЗащитыТаблиц);
//	Таб.ТолькоПросмотр(1);
//	Таб.Показать("Печать накладной","");
//КонецПроцедуры 

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Процедура ВводНового(флКопирования) 
	ЗаполнитьШапку(Контекст); //заполняем обязательные реквизиты в любом случае
	семУстановитьВалюту( флКопирования );
	Если флКопирования = 1 Тогда Возврат; КонецЕсли;
	
	Если ТипЗначенияСтр( Форма.Параметр ) = "СписокЗначений" Тогда
		сп = Форма.Параметр;
		семЗаполнитьПоСпискуЗаявок(сп); Возврат;
	КонецЕсли;   

	ДатаДок=РабочаяДата();
	ДатаПоставки = ДатаДок;
	Склад=Константа.ОсновнойСклад;
	Клиент=Константа.ОсновнойПокупатель;
	ВыборРеализатора(); 
	ИспользоватьНП = Нет;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	КатегорияЦены = Константа.ОсновнаяКатегорияЦены;
	СтавкаНДС     = Константа.ОсновнаяСтавкаНДС;		
	ПризнакНакладной=Перечисление.ПризнРасхНакл.Продажа;
КонецПроцедуры

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Процедура ВводНаОсновании(ДокОснование)  
	Если семМожноВводитьНаОснованииСчета( ДокОснование, "Расходная" ) = 0 Тогда СтатусВозврата( 0 ); Возврат; КонецЕсли;
	Если семМожноВводитьНаОснованииСчета( ДокОснование, "Перемещение" ) = 0 Тогда СтатусВозврата( 0 ); Возврат; КонецЕсли;
	ДокументОснование = ДокОснование;
	

	Если (ДокОснование.Вид()="Счет") Тогда
 		ЗаполнениеПоРезервам=1;
			Если  ЗаполнениеПоРезервам=1 Тогда
			СостЗаявки=глПолучитьСостояниеЗаявки(ДокОснование);
			Если СостЗаявки="Ожидает отгрузки" Тогда
				сп=СоздатьОбъект("СписокЗначений");
				сп.ДобавитьЗначение(ДокОснование);
				семЗаполнитьПоСпискуЗаявок(сп);
			Иначе
				Предупреждение("Нельзя оформлять документ на основании заявки в состоянии <"+СостЗаявки+">!");
				СтатусВозврата(0);				
			КонецЕсли;
			Возврат;
		КонецЕсли;
		
		Если ПустоеЗначение(ДокОснование.Комплектовщик)=0 Тогда
			Комплектовщик=ДокОснование.Комплектовщик;
		Иначе
			Комплектовщик = семВыбратьКомплектовщика();
			Если Комплектовщик.Выбран() = 0 Тогда
				Предупреждение( "Не выбран комплектовщик." );
				СтатусВозврата( 0 );
				Возврат;
			КонецЕсли;
		КонецЕсли;
		ДатаПоставки = ДокОснование.ДатаПоставки;
	КонецЕсли;

	
	Если (ДокОснование.Вид()="Счет") ИЛИ
 			(ДокОснование.Вид()="РасходнаяНакладная") ИЛИ
 			(ДокОснование.Вид()="ПриходнаяНакладная") ИЛИ
 			(ДокОснование.Вид()="РасходнаяРеализатора") ИЛИ
 			(ДокОснование.Вид()="ПриходнаяРеализатора") Тогда
 				
 				
		ЗаполнитьШапкуНаОсн(Контекст,ДокОснование);

		ДатаДок=РабочаяДата();
		
		Если глЕстьРеквизитШапки("ДатаПоставки",ДокОснование.Вид())=1 Тогда
			ДатаПоставки = ДокОснование.ДатаПоставки;
		КонецЕсли;
		
		Если (ДокОснование.Вид()="Счет") Тогда
			Если ДокОснование.Проведен() = 0 Тогда
				Сообщить("Нельзя вводить документ на основании непроведенного документа.","I");
				СтатусВозврата( 0 );
				Возврат;
			КонецЕсли;
			Склад=Константа.ОсновнойСклад;   
			//ДокТест = СоздатьОбъект("Документ");
			//Если ДокТест.ВыбратьПодчиненныеДокументы(,,ДокОснование) = 1 Тогда
			//	Предупреждение("Электронка "+ДокОснование+" уже имеет подчиненный документ "+ДокТест);
			//	СтатусВозврата(0);
			//КонецЕсли;			
		Иначе
			Склад=ДокОснование.Склад;
		КонецЕсли;
		Валюта=ДокОснование.Валюта;
		Дата_Курса=ДокОснование.Дата_Курса;
	    Курс=ДокОснование.Курс;
		Валюта_Прежн=Валюта;
		Курс_Прежн=Курс;
		
		Клиент=ДокОснование.Клиент;
		ВыборРеализатора(); 
		
		Если глЕстьРеквизитШапки("СтавкаНДС",ДокОснование.Вид())=1 Тогда
			СтавкаНДС     = Константа.ОсновнаяСтавкаНДС;
		Иначе
			СтавкаНДС     = Константа.ОсновнаяСтавкаНДС;
		КонецЕсли;
		
		КатегорияЦены = ДокОснование.КатегорияЦены;
		СтавкаНДС     = ДокОснование.СтавкаНДС;                       
		Агент = ДокОснование.Агент;
		
		ДокОснование.ВыбратьСтроки();
		Пока ДокОснование.ПолучитьСтроку()=1 Цикл

			НоваяСтрока();
			Товар=ДокОснование.Товар; 
			//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			ТовКод   = Товар.Код;
			РознЦена = ЦенаТовараПоКатегории(Контекст,КатегорияЦены,1);
			//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			Цена=Пересчет(ДокОснование.Цена,ДокОснование.Валюта,ДокОснование.Курс,Валюта,Курс);
			Количество=ДокОснование.Количество;
			Единица=ДокОснование.Единица;
			Коэффициент=ДокОснование.Коэффициент;
			Сумма=Пересчет(ДокОснование.Сумма,ДокОснование.Валюта,ДокОснование.Курс,Валюта,Курс);
			Попытка
				Скидка=Пересчет(ДокОснование.Скидка,ДокОснование.Валюта,ДокОснование.Курс,Валюта,Курс);
				ВидСкидки=ДокОснование.ВидСкидки;
				ПояснениеСкидки=ДокОснование.ПояснениеСкидки;
			Исключение
			КонецПопытки;
			НДС=Пересчет(ДокОснование.НДС,ДокОснование.Валюта,ДокОснование.Курс,Валюта,Курс);
			Всего = Сумма + НДС; 
			Счет = ДокОснование;
			КомплектовщикСчет = Комплектовщик;
			//СкладТ 	= ДокОснование.Склад;
		КонецЦикла;
		Если (ДокОснование.Вид()="ПриходнаяРеализатора") Тогда
			ПризнакНакладной=Перечисление.ПризнРасхНакл.ВозвратПоставщику;
			ДокументОснование=ДокОснование;
		Иначе
			ПризнакНакладной=Перечисление.ПризнРасхНакл.Продажа;
		КонецЕсли;
	Иначе
		Предупреждение("Эту накладную нельзя вводить на основании выбранного вида документа!!!");
		СтатусВозврата(0);
	КонецЕсли; 
КонецПроцедуры

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Процедура ПриЗаписи()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	Если семМожноЗаписать( Контекст ) = 0 Тогда Возврат; КонецЕсли;

	//присвоение номера строгой отчетности\\
	Если ПризнакНакладной = Перечисление.ПризнРасхНакл.ВозвратПоставщику Тогда
		Если семПрисвоитьНовыйНомер( контекст ) = 0 Тогда Возврат; КонецЕсли;
	КонецЕсли;
	//присвоение номера строгой отчетности//

	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПустоеЗначение(СкладТ)=1 Тогда
			СкладТ=Склад;
		КонецЕсли;
		
		Если ПустоеЗначение(Счет)=0 Тогда
			Если Счет.Склад<>СкладТ Тогда
				СкладТ = Счет.Склад;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	тСклады=СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(тСклады,"СкладТ");	
	тСклады.Свернуть("СкладТ","");
	Если тСклады.КоличествоСтрок()>1 Тогда
		ДокСклады=СоздатьОбъект("Документ.Служ_Склады");
		Если ПустоеЗначение(СкладыДок)=1 Тогда
			ДокСклады.Новый();
			ДокСклады.ДатаДок=Дата(1980,ДатаМесяц(ДатаДок),ДатаЧисло(ДатаДок));
			ЗаполнитьШапку(ДокСклады);
		Иначе
			ДокСклады.НайтиДокумент(СкладыДок);
			ДокСклады.УдалитьСтроки();
		КонецЕсли;
		ОбъектЗаписать(ДокСклады);
		СкладыДок=ДокСклады.ТекущийДокумент();
	ИначеЕсли  ПустоеЗначение(СкладыДок)=0 Тогда
		//удаляем ссылку на документ со складами, если он был
		ДокСклады=СоздатьОбъект("Документ.Служ_Склады");
		ДокСклады.НайтиДокумент(СкладыДок);
		ОбъектУдалить(ДокСклады,1);
		СкладыДок = "";
		тСклады.ПолучитьСтрокуПоНомеру(1);
		Если Склад<>тСклады.СкладТ Тогда
			Склад = тСклады.СкладТ;
		КонецЕсли;
	Иначе
		тСклады.ПолучитьСтрокуПоНомеру(1);
		Если Склад<>тСклады.СкладТ Тогда
			Склад = тСклады.СкладТ;
		КонецЕсли;

	КонецЕсли;	
	
	
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД
 

//Сергей
Функция ССТовараНаСкладе()
	
	Ост=Регистр.ОстаткиТоваров.СводныйОстаток(Товар,Склад,,"ОстатокТовара");
	Если Константа.ПартииНаСкладах=Перечисление.Булево.Да Тогда
		ВалСто=Регистр.ПартииТоваров.СводныйОстаток(,Товар,,,,Склад,,,"Стоимость");
	Иначе
		ВалСто=Регистр.ПартииТоваров.СводныйОстаток(,Товар,,,,,,,"Стоимость");
	КонецЕсли;
	Возврат Формат(ВалСто/?(Ост<>0,Ост,1),"Ч10.3")+" "+Товар.ВалютаУчета;
	
КонецФункции

Процедура ПечатьСдачаОС()
	Если Клиент.selected()=0 Тогда domessagebox("Не выбран клиент!");
		Return;
	КонецЕсли;
	i=0;

	Фирма.ИспользоватьДату(ДатаДок);
       // Если ПоСчету.НомерДок<>"" Тогда
	ОснДок="";

	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Таблица1");
	КлиентНаим=Клиент.ПолноеНаименование;

	Таб.ВывестиСекцию("Шапка");

	ВыбратьСтроки();
	Ном=0;
	ИтогСумНДС=0;
	Пока ПолучитьСтроку() = 1 do
		Ном=Ном+1;
		ИтогСум=ИтогСум+Число(ССТовараНаСкладе());
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;
	Таб.ВывестиСекцию("Подвал");
	Таб.Опции(0,0,0,0,ПарСтрДок);
	Таб.ПараметрыСтраницы(1,100,0,10,10,3,10);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Печать накладной","");

КонецПроцедуры

Функция ФорматВывода( парам )
	Если парам = "ЦенаИзКат" Тогда
		
		// получение даты, на которую необходимо получить цену \\
		Если Число(ДатаПоставки) = 0 Тогда
			ДатаЦены = ДатаДок;
		Иначе
			ДатаЦены = ДатаПоставки;
		КонецЕсли;
		// получение даты, на которую необходимо получить цену //
		
		Возврат Формат(ЦенаТовараПоКатегорииДляТовара(Товар,КатегорияЦены,Валюта,КурсДляВалюты(Валюта,ДатаДок),ДатаЦены ),"Ч14.2");
	ИначеЕсли парам = "НомерЗаявки" Тогда
		Возврат ?(Счет.Выбран() = 1,Счет.НомерДок,"");
	ИначеЕсли парам = "ДатаОплаты" Тогда
		Если (ПризнакНакладной=Перечисление.ПризнРасхНакл.Продажа) ИЛИ (ПризнакНакладной=Перечисление.ПризнРасхНакл.Переработка) Тогда
			Возврат Шаблон( "[ДатаОплаты] ([семПолучитьГлубинуКредитаКлиента( Клиент, Перечисление.ВидыКлиентов.Покупатель, ДатаДок )])" );
		Иначе
			Возврат Шаблон( "[ДатаОплаты] ([семПолучитьГлубинуКредитаКлиента( Клиент, Перечисление.ВидыКлиентов.Поставщик, ДатаДок )])" );
		КонецЕсли;
	КонецЕсли;
КонецФункции


//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// При входе в Форму запомним промежуточные переменные
ИнформационнаяСтрока = "";
Prompt				 = "Информация о взаиморасчетах:";
Валюта_Прежн		 = Валюта;
Курс_Прежн			 = Курс;

