Перем 	ЗапросСКЛ;
//--------------------------------------------
//Начало текста, вставленного Инсталлятором МОД
Функция семПроверкаПозицииЭлектроннойЗаявки()
	ВсеОК = 1;
	текПозиция = ПолучитьПозицию();
	табл = СоздатьОбъект( "ТаблицаЗначений" );
	ВыгрузитьТабличнуюЧасть(табл,"Счет");
	табл.Свернуть("Счет","");
	табл.ВыбратьСтроки();
	Пока табл.ПолучитьСтроку() = 1 Цикл
		Если табл.Счет.Выбран() = 0 Тогда Продолжить; КонецЕсли;
		Если текПозиция < табл.Счет.ПолучитьПозицию() Тогда
			Сообщить(Шаблон("Нельзя проводить документ раньше Эл. заявки [табл.Счет.НомерДок] [табл.Счет.ДатаДок] [табл.Счет.ПолучитьВремя()]"),"!");
			ВсеОК = 0;
		КонецЕсли;
	КонецЦикла;
	Возврат ВсеОК;
КонецФункции


Процедура семЗаполнитьСрокРеализ()
	
	ТекстЗапросаКомпл = "SELECT TOP 1 NullIf($КомплектацияЗаявкиФактСтроки.СрокРеализ, '17530101') СрокРеализ
	|					 FROM $ДокументСтроки.КомплектацияЗаявкиФакт AS КомплектацияЗаявкиФактСтроки With (NOLOCK)
	|				 	 INNER JOIN $Документ.КомплектацияЗаявкиФакт AS КомплектацияЗаявкиФакт With (NOLOCK) ON КомплектацияЗаявкиФактСтроки.IDDOC = КомплектацияЗаявкиФакт.IDDOC
	|					  WHERE ($КомплектацияЗаявкиФакт.ПоСчету = :Док) AND ($КомплектацияЗаявкиФактСтроки.Товар=:Товар OR $КомплектацияЗаявкиФактСтроки.ТоварЗамена=:Товар ) 
	|";
	
	рег = СоздатьОбъект( "Регистр.ПартииТоваров" );
	рег.ВыбратьДвиженияДокумента( ТекущийДокумент() );
	НомСтр = 1;
	пДата = Дата( 0 );
	МинСрокРеализ = ДатаПоставки+2;
	
	//очищаем сроки реализации
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		СрокРеализ = "";
		ЗапросСКЛ.УстановитьТекстовыйПараметр("Док",Счет);
		ЗапросСКЛ.УстановитьТекстовыйПараметр("Товар",Товар);
		СрокРеализ = ЗапросСКЛ.ВыполнитьСкалярный(ТекстЗапросаКомпл);
	КонецЦикла;
	
	//прописываем сроки из регистра только для тех клиентов, кому не обязательны для печати. Для остальных же прописываем их из документам комплектации
	Если Клиент.ПечататьСрокиРеализ=0 Тогда	
		
		Пока рег.ПолучитьДвижение() = 1 Цикл
			
			
			Если (рег.СрокРеализации<(МинСрокРеализ)) И (Склад.НеОтгружатьПросроченныйТовар = 1)  Тогда
				НеПроводить(Контекст,"В строке "+рег.НомерСтроки()+" отгружается товар со сроком реализ. "+рег.СрокРеализации+" мин. допуст. срок: "+МинСрокРеализ);
			КонецЕсли;


			НомСтр = рег.НомерСтроки();
			ПолучитьСтрокуПоНомеру(НомСтр);
			Если ( Число(пДата) = 0 ) или ( пДата > рег.СрокРеализации ) Тогда
				пДата = рег.СрокРеализации;
			КонецЕсли;

			Если ПустоеЗначение(СрокРеализ)=1 Тогда
				УстановитьАтрибут("СрокРеализ",пДата);
			КонецЕсли;

				пДата = Дата( 0 );
			
			
//			Если НомСтр <> рег.НомерСтроки() Тогда
//				ПолучитьСтрокуПоНомеру(НомСтр);
//				Если ПустоеЗначение(СрокРеализ)=1 Тогда
//					УстановитьАтрибут("СрокРеализ",пДата);
//				КонецЕсли;
//				НомСтр = рег.НомерСтроки();
//				пДата = Дата( 0 );
//
//			КонецЕсли;
//
		КонецЦикла; 
		
		//ПолучитьСтрокуПоНомеру(НомСтр);
		//УстановитьАтрибут("СрокРеализ",пДата);
	КонецЕсли;
КонецПроцедуры


Процедура ОбработкаПроведения() Далее
//Конец текста, вставленного Инсталлятором МОД
Процедура стар_ОбработкаПроведения()
//Закомментировано Инсталлятором МОД:Процедура ОбработкаПроведения()
	Перем СписокТоваров;
	Перем СписокСтоим;
	Перем СписокНДС;
        // сем \\
	Если семМожноПровести( Контекст ) = 0 Тогда Возврат; КонецЕсли;
	семОбновитьКурс( контекст );
        // сем //
	//Если ДатаДок>ТекущаяДата() Тогда
	//	НеПроводить(Контекст,"Нельзя проводить документ будущей датой!");
	//	Возврат;
	//КонецЕсли;
	Если ПроверкаДублейСтрок(Контекст)=1 Тогда 
//		НеПроводить(Контекст,"В документе строки с одинаковым товаром!");
//		Возврат;
	КонецЕсли; 
	                   
	Если глПроверкаСкладаПоПользователю(Контекст,Склад)=0 Тогда
//		НеПроводить(Контекст,"Нельзя использовать данный склад!");
//		Возврат;
	КонецЕсли;

	Если ПустоеЗначение(Агент) = 1 Тогда
		НеПроводить(Контекст,"Укажите агента!");
		Возврат;		
	КонецЕсли;	
	
	Если семПроверкаПозицииЭлектроннойЗаявки() = 0 Тогда
		СтатусВозврата( 0 ); Возврат;		
	КонецЕсли;

	//-------------------------------------
	// по Регистру ОстаткиТоваров и РезервыТоваров  Упр. учет
	Если ТипУчета<Фин Тогда
		// сем \\
		Путь = КаталогИБ() + "ExtForms\Sem\семДвиженияРегистровНакладных.ert";
		Если ФС.СуществуетФайл( Путь ) = 1 Тогда
			сп = СоздатьОбъект( "СписокЗначений" );
			сп.Установить( "Контекст", ВзятьКонтекст( Контекст ) );
			ОткрытьФормуМодально( "Обработка", сп, Путь );
			Если сп.Получить( "Результат" ) = 0 Тогда
				Возврат;
			КонецЕсли;
		Иначе
			Если семДвиженияРегистровНакладных(Контекст)=1 Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		// сем //
	КонецЕсли;
	
	
	Клиент.ИспользоватьДату(ДатаДок);
	// Запишем главного клиента
	Если Клиент.КлГруппа.Выбран()=1 Тогда
		КлГруппа=Клиент.КлГруппа;
	Иначе
		КлГруппа=Клиент;
	КонецЕсли;       
	
	Если КлГруппа.ДляВыгрузки=0 Тогда
		спр=СоздатьОбъект("Справочник.Контрагенты");
   		Спр.НайтиЭлемент(КлГруппа);
		Спр.ДляВыгрузки=1;
		ОбъектЗаписать(Спр,);
	КонецЕсли;

	//-------------------------------------
	// по Регистру ПартииТоваров Упр. учет
	// Сначала определяем товары каких партий мы отпускаем
	Если ТипУчета<Фин Тогда
		Если ПогашениеПартииТоваров(Контекст,"Упр",,,,СписокТоваров,СписокСтоим,СписокНДС)=1 Тогда
			Возврат;
		КонецЕсли;
		// Теперь учтем партию отданных на реализацию товаров (в случае продажи)
		Если ПризнакНакладной=Перечисление.ПризнРасхНакл.Продажа Тогда
			// Здесь мы учитываем отдаваемый на реализацию товар
			// по Регистру ПартииТоваров
			Если ПогашениеПартииТоваров(Контекст,"Упр","Консигнация",,,СписокТоваров,СписокСтоим,СписокНДС)=1 Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
//-------------------------------------
// по Регистру ПартииТоваров Фин

	Если глЗаполнитьРеквизитыДокументаШ(Контекст,1)=0 Тогда
	    Сообщить("Внимание: Не удалось заполнить реквизиты Ш. Обязательно обратитесь к админстратору!!!","!");
	КонецЕсли;
	
	//СебестоимостьШ=0;
	//Рег=СоздатьОбъект("Регистр.ПартииТоваров");
	//Рег.ВыбратьДвиженияДокумента(ТекущийДокумент());
	//Пока Рег.ПолучитьДвижение()=1 Цикл   
	//	Если Рег.Фирма<>Фирма Тогда
	//		Продолжить;
	//	КонецЕсли;                 
	//	
	//	Если (Рег.Статус=Отданный) Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	СебестоимостьШ=СебестоимостьШ+Рег.Стоимость;
	//	
	//КонецЦикла;
	
	Если МожноПроводить(Контекст)=1 Тогда
		УстановитьГП(ТекущийДокумент());
	КонецЕсли;
	
	Если ГрупповаяОбработка()=0 Тогда
		Если ПризнакНакладной=Перечисление.ПризнРасхНакл.Продажа Тогда
			
			ЗапросСКЛ = СоздатьОбъект("ODBCRecordSet");
			семЗаполнитьСрокРеализ();
			
			Если Клиент.ПечататьСрокиРеализ=0 Тогда
			Иначе
				ВыбратьСтроки();
				Пока ПолучитьСтроку()=1 Цикл
					Если ПустоеЗначение(СрокРеализ)=1 Тогда
						НеПроводить(Контекст,"В строке "+ НомерСтроки+ " не указан срок реализации товара!");
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	

КонецПроцедуры
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаПроведения()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	Если ПроведениеМОД(Контекст)=1 Тогда
	    Возврат;
	КонецЕсли;
	стар_ОбработкаПроведения();
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД
 
//------------------------
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаУдаленияПроведения() Далее
//Конец текста, вставленного Инсталлятором МОД
Процедура стар_ОбработкаУдаленияПроведения()
//Закомментировано Инсталлятором МОД:Процедура ОбработкаУдаленияПроведения()
	Если СравнитьГП(ТекущийДокумент())<0 Тогда
		УстановитьГП(ТекущийДокумент());
	КонецЕсли;
КонецПроцедуры
//Начало текста, вставленного Инсталлятором МОД
Процедура ОбработкаУдаленияПроведения()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	Если ПроведениеПоАлгоритмуМОД=1 Тогда
	    Возврат;
	КонецЕсли;
	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	ПриОтменеПроведенияДокумента(ТекущийДокумент());
	стар_ОбработкаУдаленияПроведения();
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД


