//#ЗагрузитьИзФайла Текст1.txt
Перем Валюта_Прежн;
Перем Курс_Прежн;
Перем Режим;
Перем Prompt;
Перем ИнформационнаяСтрока;
Перем ПустаяФирма;
Перем Дат;

Перем ТабЭлемент;
Перем ВременнаяТаблица; 
Перем СводнаяТаблица;


Процедура ПриСменеНазванияФайла()
    
	Если ПустаяСтрока(НазваниеФайла)=1 Тогда
		Возврат;
	КонецЕсли;	
	
	Если ФС.СуществуетФайл(НазваниеФайла)=1 Тогда		// то, что ввели, является названием существующего файла

	Иначе       // то, что ввели, не является названием существующего файла
	   	Предупреждение("Файл "+НазваниеФайла+" не существует");
	КонецЕсли;
    
КонецПроцедуры  // ПриСменеНазванияФайла

Процедура ВвестиНазваниеФайла()
	// процедура ввода названия входного файла

	Перем Путь,Расширение,СтароеНазваниеФайла;
                                             
	СтароеНазваниеФайла = НазваниеФайла;
	
	Если Найти(НазваниеФайла,"\")<=0 Тогда
		Путь = КаталогИБ()+"ExtForms\Import\";
	Иначе      
		Индекс = СтрДлина(НазваниеФайла);
		Пока Сред(НазваниеФайла,Индекс,1)<>"\" Цикл
			Индекс = Индекс - 1;
		КонецЦикла;	            
		Путь = Лев(НазваниеФайла,Индекс);
	КонецЕсли;	
		
			Расширение = "XLS-таблица(*.xls)|*.xls";
		НазвФайла = "";
	
	Если ФС.ВыбратьФайл(0,НазвФайла,Путь,"Выберите импортируемый файл",Расширение,,)=1 Тогда
		НазваниеФайла = Путь + НазвФайла;
		Если НазваниеФайла<>СтароеНазваниеФайла Тогда	// изменилось название импортируемого файла
		    ПриСменеНазванияФайла();
		КонецЕсли;
	Иначе		// отказались от выбора - восстанавливаем старое название файла
		НазваниеФайла = СтароеНазваниеФайла;
	КонецЕсли;
    
КонецПроцедуры  // ВвестиНазваниеФайла

//******************************************************************************
Процедура СоздатьЭлементУправления ()
	Форма.ОбработкаОжидания ("", 0);
	
	ВремДокумент = СоздатьОбъект ("ТабличныйДокумент");
	ТабЭлемент = ВремДокумент.СоздатьЭлементУправления (Форма, "ВыбТабличныйДокумент");
	ТабЭлемент.ТолькоПросмотр = 0;
	//ТабЭлемент.Документ.ЗагрузитьИзТаблицы (ВременнаяТаблица);
КонецПроцедуры


//------------------------
Процедура ПриОткрытии()
	ПроверкаРазрешенияРедактирования(Контекст);
	УстановкаРеквизитаТип(Контекст);
	Тип.ДобавитьЗначение("Упр.");
	Тип.ДобавитьЗначение("Общ.");
	Тип.ДобавитьЗначение("Фин.");
	Тип.ТекущаяСтрока(ТипУчета+1);
	Если Форма.ТолькоПросмотр()=1 Тогда
	    Форма.КнФирма.Доступность(0);
	    Форма.КнКлиент.Доступность(0);
	    Форма.КнВалюта.Доступность(0);
	    Форма.ОК.Доступность(0);
	    Форма.КнопкаПоУмолчанию("Закрыть");
	Иначе
	    Форма.КнопкаПоУмолчанию("ОК");
	КонецЕсли;
	
	Форма.ОбработкаОжидания ("СоздатьЭлементУправления", 1);   
	ВременнаяТаблица = СоздатьОбъект ("Таблица");      
КонецПроцедуры
//-----------------------------------------------
Процедура Взаиморасчеты()
	Форма.ИнфПодпись.Видимость(0);
//	Форма.ИнфКнопка.Видимость(0);
	ИнформационнаяСтрока=ДолгПоКредиту(Контекст);
КонецПроцедуры
//-----------------------------------------------
Процедура ВыборДаты()
	Устан_Вал(Контекст,ДатаДок,Валюта_Прежн,Курс_Прежн);
//	Взаиморасчеты();
КонецПроцедуры
//-----------------------------------------------
Процедура НаборСпецификации()
	УдалитьСтрокиДокумента(Контекст);

	ПустаяФирма=Фирма;
	Если ТипУчета>Упр Тогда
		Валюта=Рубли;
	Иначе
	    Валюта=Константа.ВалютаВзаиморасчетов;
	КонецЕсли;
	Дата_Курса=ДатаДок;
	Курс=КурсДляВалюты(Валюта,Дата_Курса);
	Валюта_Прежн=Валюта;
	Курс_Прежн=Курс; 

 // Сделаем это при помощи механизма Запросов
	Запрос=СоздатьОбъект("Запрос");
	ТекстЗапроса="";
 	Если СравнитьТА()=-1  Тогда  // документ не новый, а существующий
		// так делаем, чтобы отделить новый Документ
		Если ДатаДок<>ПолучитьДатуТА() Тогда
			Дат=ТекущийДокумент();
			ТекстЗапроса=ТекстЗапроса+"
			|Период С Дат ПО Дат;";
		КонецЕсли;
	ИначеЕсли СравнитьТА()=-2  Тогда  // документ новый, и еще не записан
		Если ДатаДок<ПолучитьДатуТА() Тогда
	 	// если итоги не актуальны, то
			Дат=ДатаДок;
			ТекстЗапроса=ТекстЗапроса+"
			|Период С Дат ПО Дат;";
		КонецЕсли;
	КонецЕсли;
	
	ТекстЗапроса=ТекстЗапроса+"
	|ИзмТовар=Регистр.ПартииТоваров.Товар;
	|ИзмФирма=Регистр.ПартииТоваров.Фирма;
	|Статус=Регистр.ПартииТоваров.Статус;
	|ИзмКонтрагент=Регистр.ПартииТоваров.Контрагент;
	|ПрихДокумент=Регистр.ПартииТоваров.ПрихДокумент;
	|Докум=Регистр.ПартииТоваров.ТекущийДокумент;
	|Остаток=Регистр.ПартииТоваров.ОстатокТовара;
	|Долг=Регистр.ПартииТоваров.ПродСтоимость;
	|Группировка ИзмТовар Без групп;
	|Группировка ПрихДокумент;
	|Функция КонДолг=КонОст(Долг);
	|Функция КонОстаток=КонОст(Остаток);
	|Условие(ИзмКонтрагент=Клиент);
	|Условие(Статус=Отданный);";
	Если ТипУчета>Упр Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|Условие (ИзмФирма=Фирма);";
	Иначе
		ТекстЗапроса=ТекстЗапроса+"
		|Условие (ИзмФирма=Фирма);";
	КонецЕсли;
	
	Флаг=Запрос.Выполнить(ТекстЗапроса);
	Если Флаг=0 тогда
		Предупреждение("Запрос по партиям товаров, отданных на реализацию не выполнился!");
		Возврат;
	КонецЕсли; 

	Пока Запрос.Группировка("ИзмТовар") = 1 Цикл
		Если Запрос.КонОстаток=0 тогда
			Продолжить;
		КонецЕсли; 
		НоваяСтрока();
		Товар=Запрос.ИзмТовар;
		товКод=Товар.Код;
		Если ТипУчета>Упр Тогда
			ВП=Рубли;
		Иначе
			ВП=Товар.ВалютаУчета;
		КонецЕсли;
		Количество=Запрос.КонОстаток;
		Сумма=Пересчет(Запрос.КонДолг,ВП,Дата_Курса,Валюта,Курс);
		Цена=Сумма/Запрос.КонОстаток;
		НДС=Сумма*ПроцентНДС(Товар.СтавкаНДС)/(100+ПроцентНДС(Товар.СтавкаНДС));

		УстановкаЕдиницыИзмерения(Контекст);
	КонецЦикла;
КонецПроцедуры 

//-----------------------------------------------
Процедура УстКлиента()  
	Если ТекущийДокумент().Проведен()=1 Тогда
		Предупреждение("Нельзя менять клиента в проведенном документе!",3);
		Возврат;
	КонецЕсли;
	Клн=СоздатьОбъект("Справочник.Контрагенты");
	Если Клиент.Выбран()=1 Тогда
		Клн.НайтиЭлемент(Клиент);
	КонецЕсли;
	Если Клн.Выбрать("Выберите контрагента","")>0 Тогда
		Клиент=Клн.ТекущийЭлемент();
	КонецЕсли;
//	Взаиморасчеты();
	НаборСпецификации();
	ИнформационнаяСтрока="";
	Форма.ИнфПодпись.Видимость(1);
КонецПроцедуры 
//-----------------------------------------------
Процедура Печать()
	Если Проведен()=0 Тогда
		Предупреждение("Документ еще не проведен! Его можно распепчатать только после проведения!");
		Возврат;
	КонецЕсли;
	Рег1=СоздатьОбъект("Регистр.ПартииТоваров");
	//Фирма.ИспользоватьДату(ДатаДок);
	Таб=СоздатьОбъект("Таблица");
	Таб.ВывестиСекцию("Шапка");
	
	Ном=0;
	ПечатнаяОбщСумма=0;
	ПечатнаяОбщНДС=0;
	Рег1.УстановитьФильтр(?(типУчета>Упр,Фирма,""),,,Клиент,);
	Рег1.ВыбратьДвиженияДокумента(ТекущийДокумент());
	Пока Рег1.ПолучитьДвижение()>0 Цикл
		Если (Рег1.Контрагент)<> (Клиент) Тогда
			Продолжить;
		КонецЕсли;
		Ном=Ном+1;
		Если Рег1.ОстатокТовара=0 Тогда
			ПечатнаяЦена=0
		Иначе
			ПечатнаяЦена=Рег1.ПродСтоимость/Рег1.ОстатокТовара;
		КонецЕсли;
		Пром=Рег1.Товар;
		Пром.ИспользоватьДату(Дата_курса);
		Вал=Константа.ВалютаВзаиморасчетов;
		//ПечатнаяЦена=?(Константа.СуммаВключаетНДС.Получить(ДатаДок)=Перечисление.Булево.Нет
		//		,ПечатнаяЦена-ПечатнаяЦена/(100+ПроцентНДС(Пром.СтавкаНДС))*ПроцентНДС(Пром.СтавкаНДС),ПечатнаяЦена);
		ПечатнаяЦена=Окр(Пересчет(ПечатнаяЦена,Вал,Дата_Курса,Валюта,Курс),3);
		
		ПечатНДС=Рег1.НДСрасхода;
		Если Рег1.ОстатокТовара=0 Тогда
			ПечатнаяСумма=Рег1.ПродСтоимость;
		Иначе
			ПечатнаяСумма=Рег1.ОстатокТовара*ПечатнаяЦена;
		КонецЕсли;
		//		ПечатнаяСумма=?(Константа.СуммаВключаетНДС.Получить(ДатаДок)=Перечисление.Булево.Нет
		//			,Рег1.ПродСтоимость-ПечатНДС,Рег1.ПродСтоимость);
		//		ПечатнаяСумма=Пересчет(ПечатнаяСумма,Вал,Дата_курса,Валюта,Курс);
		ПечатНДС=Окр(Пересчет(ПечатНДС,Вал,Дата_Курса,Валюта,Курс),3);
		ПечатнаяОбщСумма=ПечатнаяОбщСумма+ПечатнаяСумма;
		ПечатнаяОбщНДС=ПечатнаяОбщНДС+ПечатНДС;
		//	ПечатнаяСумма=Фрм(ПечатнаяСумма,Валюта,0);
		Если Рег1.ОстатокТовара<0 Тогда
			Таб.ВывестиСекцию("Строка");
		Иначе
			Таб.ВывестиСекцию("Строка");
		КонецЕсли;
	КонецЦикла;
	ПечатнаяИтоговаяСумма=Окр(?(Константа.СуммаВключаетНДС.Получить(ДатаДок)=Перечисление.Булево.Да,
	"",ПечатнаяОбщСумма+ПечатнаяОбщНДС),3);
	С1=ПечатнаяОбщСумма;
	С2=ПечатнаяОбщНДС;
	//ПечатнаяОбщСумма=ФРМ(ПечатнаяОбщСумма,Валюта,1);
	//ПечатнаяОбщНДС=ФРМ(ПечатнаяОбщНДС,Валюта,1);
	
	ПечатИтог=?(Константа.СуммаВключаетНДС.Получить(ДатаДок)=Перечисление.Булево.Да
	,ПечатнаяОбщСумма,ПечатнаяОбщСумма);
	
	Если (Число(Валюта.Код)=1) ИЛИ (Число(Валюта.Код)=4) Тогда
		Пропись("USD.spl");
	ИначеЕсли Число(Валюта.Код)=2 Тогда
		Пропись("DM.spl");
	ИначеЕсли Нрег(Валюта.Сокр_назв)="условная единица" Тогда
		Пропись("UE.spl");
	КонецЕсли;
	СтрокаСуммы=Формат(?(Константа.СуммаВключаетНДС.Получить(ДатаДок)=Перечисление.Булево.Да
	,С1,С1),"ЧПДС");
	Пропись("");
	Инд=Найти(СтрокаСуммы,"ѕ");
	Если Инд > 0 Тогда
		Рез=Лев(СтрокаСуммы,Инд-1)+"Ѕ"+Прав(СтрокаСуммы,СтрДлина(СтрокаСуммы)-Инд);
	Иначе
		Рез=СтрокаСуммы;
	Конецесли;
	
	Таб.ВывестиСекцию("Подвал");
	Таб.Опции(0,0,0,0,ПарСтрДок);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Печать накладной","");
КонецПроцедуры     
//***************************************************************
//
Процедура ПечатьОстатков()
	Фирма.ИспользоватьДату(ДатаДок);
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Остатки");
	Таб.ВывестиСекцию("Шапка");
	ВыбратьСтроки();
	Ном=0;
	Пока ПолучитьСтроку() = 1 do
		Ном=Ном+1;
		Таб.ВывестиСекцию("Строка");
	enddo;
	Таб.ВывестиСекцию("Подвал");
	Таб.Опции(0,0,0,0,ПарСтрДок);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Остатки у реализатора","");
КонецПроцедуры

Процедура семУстановитьВалюту( флКопирования )
	Если флКопирования = 0 Тогда
		Валюта = Константа.ВалютаВзаиморасчетов;
	КонецЕсли;
	Дата_Курса = ДатаДок;
	Курс = КурсДляВалюты( Валюта, Дата_Курса );
	Валюта_Прежн = Валюта;
	Курс_Прежн = Курс;
КонецПроцедуры

Процедура ВводНового( флКопирования );
	ЗаполнитьШапку(Контекст); 
        семУстановитьВалюту( флКопирования );
	Если флКопирования = 1 Тогда Возврат; КонецЕсли;
	Склад=Константа.ОсновнойСклад;
	ДатаДок=РабочаяДата();
КонецПроцедуры

//-----------------------------------------------
Процедура ВводНаОсновании(ДокОснование)
		Предупреждение("Эту накладную нельзя вводить на основании других документов!!!");
		СтатусВозврата(0);
КонецПроцедуры

//-----------------------------------------------
Процедура ВводСчетаФактуры()
	Перем ФормаСчФ;
	Если Проведен()=0  Тогда
		Предупреждение("Счет-фактуру нельзя вводить на основании не проведенного документа!");
		Возврат;
	КонецЕсли;
	ДокПодч=СоздатьОбъект("Документ");
	ДокПодч.ВыбратьПодчиненныеДокументы(ДатаДок-7,ПолучитьДатуТА(),ТекущийДокумент()); 
	Пока  ДокПодч.ПолучитьДокумент()=1 Цикл
		Если ДокПодч.Вид()="Счет_фактура" Тогда
			ОткрытьФорму(ДокПодч.ТекущийДокумент(),ФормаСчФ,0);
			Возврат;
		КонецЕсли;
	КонецЦикла;
	ОткрытьФорму("Документ.Счет_фактура",ФормаСчФ,ТекущийДокумент());
КонецПроцедуры
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	Если семМожноЗаписать( Контекст ) = 0 Тогда Возврат; КонецЕсли;
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД


//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Процедура Заполнить()

	Если КоличествоСтрок() > 0 Тогда
		Если Вопрос("Кол-во в таблице будет изменено. Продолжить?","Да+Нет") = "Нет" Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

		Меню=СоздатьОбъект("СписокЗначений");	
		Меню.ДобавитьЗначение(1,"Из партий отданных не реализацию");
		Меню.ДобавитьЗначение(2,"Из файла XLS");
		Меню.ДобавитьЗначение(3,"Обнулить кол-во во всех позициях");
		Выб=1;
		Если Меню.ВыбратьЗначение(выб,,,,1)=1 Тогда
		Иначе
			Возврат;
		КонецЕсли;

		// Для реализатора-клиента документ заполняем товарами по Регистру ПартииТоваров отданными на реализацию
		ТекстЗапроса = "SELECT ПартииТоваровОстатки.Товар [Товар $Справочник.Номенклатура]
		|					, СпрТ.CODE КодТовара
		|					, ПартииТоваровОстатки.Контрагент [Контрагент $Справочник.Контрагенты]
		|					, ПартииТоваровОстатки.ОстатокТовараОстаток КонОстаток
		|					, ПартииТоваровОстатки.СтоимостьОстаток КонОстСтоим
		|					, ПартииТоваровОстатки.ПродСтоимостьОстаток КонОстПродСтоимость

		|				FROM $РегистрОстатки.ПартииТоваров(,,
		|												(Контрагент = :Клиент)
		|												AND (Фирма = :Фирма)
		|												AND (Статус = :Статус),
		|												(Товар, Контрагент),
		|												(ОстатокТовара, Стоимость, ПродСтоимость)) AS ПартииТоваровОстатки
		|				INNER JOIN $Справочник.Номенклатура СпрТ (NOLOCK) ON СпрТ.ID = ПартииТоваровОстатки.Товар
		|				WHERE ПартииТоваровОстатки.ОстатокТовараОстаток>0
		|";
		ЗапросСКЛ=СоздатьОбъект("ODBCRecordSet");
		ЗапросСКЛ.УстановитьТекстовыйПараметр("Клиент",Клиент);
		ЗапросСКЛ.УстановитьТекстовыйПараметр("Фирма",Фирма);
		ЗапросСКЛ.УстановитьТекстовыйПараметр("Статус",Отданный);
		итТабл=СоздатьОбъект("ИндексированнаяТаблица");
		ЗапросСКЛ.ВыполнитьИнструкцию(ТекстЗапроса,итТабл);
		итТабл.ДобавитьИндекс("иКодТовара","КодТовара");
		//табл.ВыбратьСтроку();
			
		Если Выб=1 Тогда
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				Состояние(Шаблон("[НомерСтроки]/[КоличествоСтрок()]"));
				
				Если итТабл.НайтиСтроку("иКодТовара",ТовКод,,1)=0 Тогда
					Количество=0;
				Иначе
					Количество=итТабл.КонОстаток;
				КонецЕсли;

				Сумма=Цена*Количество;
				НДС = Сумма*(ПроцентНДС(Товар.СтавкаНДС)/100);
				Всего = Сумма+НДС;
				
			КонецЦикла;

		ИначеЕсли выб = 2 Тогда
			
			ВвестиНазваниеФайла();
			ПриСменеНазванияФайла();
			
			Если ФС.СуществуетФайл(НазваниеФайла)=0 Тогда
				Предупреждение("Выбранный файл не существует!");
				Возврат;
			КонецЕсли;
			
			ОчиститьОкноСообщений();
			Состояние("Загрузка данных файла "+НазваниеФайла);
			
			ТабЭлемент.Документ.Открыть (НазваниеФайла, 2);
			ТабЭлемент.Обновить ();
			
			Конвертер = СоздатьОбъект ("Йоксель.КонвертерВТаблицуЗначений");
			Конвертер.УстановитьДокумент (ТабЭлемент.Документ);
			Конвертер.ОпределятьСтруктуру = 1;
			Конвертер.СтрокДляОпределенияСтруктуры=1;

			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				Количество=0;				
			КонецЦикла;
			табл="";
			таблНов=СоздатьОбъект("ТаблицаЗначений");
			таблНов.НоваяКолонка("ТовКод");
			таблНов.НоваяКолонка("Количество");
			таблНов.НоваяКолонка("НомерСтрокиФайла");
			ВыгрузитьТабличнуюЧасть(табл);
			таблНов.УдалитьСтроки();
			итТабл=СоздатьОбъект("ИндексированнаяТаблица");
			итТабл.Загрузить(табл);
			итТабл.ДобавитьИндекс("иКодТовара","#^ТовКод");
			//итТабл.Показ-ать();
			
			СпрТ=СоздатьОбъект("Справочник.Номенклатура");			
			Таб = Конвертер.Загрузить ();
			СводнаяТаблица.Очистить ();
			СводнаяТаблица.Загрузить (Таб);  
			СводнаяТаблица.ВыбратьСтроки();  
			Пока СводнаяТаблица.ПолучитьСтроку()=1 Цикл  

				Состояние(Шаблон("[СводнаяТаблица.НомерСтроки]/[СводнаяТаблица.КоличествоСтрок()]"));

				КодДляПоиска=СокрЛП(СводнаяТаблица.ПолучитьЗначение(СводнаяТаблица.НомерСтроки,1));//код товара в первой колонке
				Если СтрДлина(КодДляПоиска)=6 Тогда
					КодДляПоиска="0"+КодДляПоиска;
				КонецЕсли;
				Если ПустоеЗначение(КодДляПоиска)=1 Тогда
					Продолжить;
				КонецЕсли;
				
				СпрТ.НайтиПоКоду(КодДляПоиска,0);
				Если СпрТ.Выбран()=0 Тогда
					//ищем по отдельному полю с кодом без букв
					КодДляПоиска = Лев(КодДляПоиска,7);
					СпрТ.НайтиПоРеквизиту("КодТовара",КодДляПоиска,1);
					
					Если СпрТ.Выбран()=0 Тогда
						Сообщить(Шаблон("Не найден товар по коду [КодДляПоиска] в строке [СводнаяТаблица.НомерСтроки]"),"!!!");
						Продолжить;
					Иначе
						КодДляПоиска = СпрТ.Код
					КонецЕсли;
					
				КонецЕсли;

				//Сообщить(""+КодДляПоиска);
				КолВо=СокрЛП(СводнаяТаблица.ПолучитьЗначение(СводнаяТаблица.НомерСтроки,5));//кол-во актуального товара в 5-й колонке 
				Если Число(КолВо)=0 Тогда
//					Продолжить;
				КонецЕсли;
				Если итТабл.НайтиСтроку("иКодТовара",КодДляПоиска,,1)=0 Тогда
//					Сообщить(Шаблон("Не найден товар по коду [КодДляПоиска] в строке [СводнаяТаблица.НомерСтроки]"),"!!!");
					таблНов.НоваяСтрока();
					таблНов.ТовКод=КодДляПоиска;
					таблНов.Количество=КолВо;
					таблНов.НомерСтрокиФайла=СводнаяТаблица.НомерСтроки;
				Иначе
					итТабл.Количество=КолВо;
				КонецЕсли;

				Сумма=Цена*Количество;
				НДС = Сумма*(ПроцентНДС(Товар.СтавкаНДС)/100);
				Всего = Сумма+НДС;
				
			КонецЦикла;
			
			итТабл.Выгрузить(табл);
			ЗагрузитьТабличнуюЧасть(табл);

			таблНов.ВыбратьСтроки();
			Пока таблНов.ПолучитьСтроку()=1 Цикл
				КодДляПоиска=Нрег(таблНов.ТовКод);
				СпрТ.НайтиПоКоду(КодДляПоиска,0);
				Если СпрТ.Выбран()=0 Тогда
					Сообщить(Шаблон("Не найден товар в базе данных по коду [КодДляПоиска] в строке [таблНов.НомерСтрокиФайла]"),"!!!");
					Продолжить;
				КонецЕсли;
				
				НоваяСтрока();
				Товар=СпрТ.ТекущийЭлемент();
				ТовКод=Товар.Код;
				Количество=таблНов.Количество;
				УстановкаЕдиницыИзмерения(Контекст);
				Сумма=Цена*Количество;
				НДС = Сумма*(ПроцентНДС(Товар.СтавкаНДС)/100);
				Всего = Сумма+НДС;
				
			КонецЦикла;
			
		ИначеЕсли выб=3 Тогда
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку()=1 Цикл
				Количество = 0;
				
				Выч_суммы_накл(Контекст);
			КонецЦикла;
			
		КонецЕсли;
	
	
	
КонецПроцедуры            

//-----------------------------------------------
// При входе в Форму запомним промежуточные переменные
ИнформационнаяСтрока="";
Prompt="Информация о взаиморасчетах:";
Валюта_Прежн=Валюта;
Курс_Прежн=Курс;
СводнаяТаблица=СоздатьОбъект("ТаблицаЗначений");
