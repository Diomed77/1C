Перем ПромИсхКол;
Перем СписокПропорций;
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Перем ТаблицаПартий;
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//----------------------
Процедура ПриВводеСтроки()
	ПриВводеСтрокиДокумента(Контекст);
КонецПроцедуры

//-----------------------------------------------

Процедура ПриОткрытии()   
	
	ПроверкаРазрешенияРедактирования(Контекст);
                       
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.КнФирма.Доступность(0);
		Форма.кнПодбор.Доступность(0);
		Форма.кнСтрелки.Доступность(0);
		Форма.ОК.Доступность(0);
		Форма.кнСкорректироватьСумму.Доступность(0);
		Форма.КнопкаПоУмолчанию("Закрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("ОК");
	КонецЕсли;
	
	УстановкаРеквизитаТип(Контекст);
	Тип.ДобавитьЗначение("Упр.");     
	Тип.ДобавитьЗначение("Общ.");     
	Тип.ДобавитьЗначение("Фин.");     
	Тип.ТекущаяСтрока(ТипУчета+1);
	Если Константа.МетодРасчетаСебестоимостиУправленческогоУчета=Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
		Форма.ПодписьПартий.Видимость(0);
		Форма.СписокИсхПартий.Видимость(0);
		Форма.Стрелки.Видимость(0);
		Форма.ПодписьКолВвыб.Видимость(0);
		Форма.ПодписьКолВПарт.Видимость(0);
		Форма.ПодписьПоДок.Видимость(0);
		Форма.ПодписьПартИсх.Видимость(0);
	КонецЕсли;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	ТаблицаПартий.НоваяСтрока();
	ТаблицаПартий.Партия 		 = ИсхПартия;
	ТаблицаПартий.СрокРеализации = ИсхСрокРеализ;
	ТаблицаПартий.ПрихДок 		 = ПартияИсх;
	
	СписокИсхПартий.ДобавитьЗначение(ТаблицаПартий.НомерСтроки,ТаблицаПартий.ПрихДок.Вид() + " №" + ТаблицаПартий.ПрихДок.НомерДок + " " + Строка(ТаблицаПартий.Партия));
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
КонецПроцедуры

Процедура ВводНового(ФлКоп)
	//Если Константа.МетодРасчетаСебестоимостиУправленческогоУчета=Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
        ЗаполнитьШапку(Контекст);
		
		Если ФлКоп=1 Тогда
			ВыбратьСтроки();
			Пока ПолучитьСтроку()=1 Цикл
				Операции = "";
				СрокРеализ = ДатаДок + Товар.СрокГоднПоставщика;
			КонецЦикла;
		Иначе
			Фирма=Константа.ОсновнаяФирма; 
			Склад=Константа.ОсновнойСклад;
			СкладПолучатель = Константа.ОсновнойСклад;
		КонецЕсли;
		Подтверждено=0;
		
		
	
	//КонецЕсли;
КонецПроцедуры

Процедура ВычСуммы()
	Сумма=Цена*Количество;
	Ндс= Сумма*(ПроцентНДС(Константа.ОсновнаяСтавкаНДС)/100);
КонецПроцедуры

Процедура ВычЦеныОбр()
	Если Количество<>0 тогда
		Цена=Сумма/Количество;
	Иначе
		Цена=Сумма;
	КонецЕсли;  
	Ндс=Сумма*(ПроцентНДС(Константа.ОсновнаяСтавкаНДС)/100);
КонецПроцедуры

Процедура ВычЦены()
	Если Количество>0 Тогда
		Цена=Сумма/Количество;
	Иначе
	КонецЕсли;
КонецПроцедуры
                   
Функция ЦенаТовара(Тов)
	Если Склад.ВидСклада=Перечисление.ВидыСкладов.Розничный Тогда
		ПродЦена=ЦенаТовараПоКатегорииДляТовара(Тов,Константа.РозничнаяКатегорияЦены,,,ДатаДок);
	Иначе
		ПродЦена=ЦенаТовараПоКатегорииДляТовара(Тов,Константа.ОсновнаяКатегорияЦены,,,ДатаДок);
	КонецЕсли;
	
	Возврат Окр(ПродЦена,2);
КонецФункции


//***********************************************
Процедура РасчетПриходныхЦен(Реж="Коэф")
// Количество произведенного товара выражаем
// в базовой единице исходного товара
// Себестоимость исходного товара и стоимость работы распределяем
// по товарным позициям пропорционально пересчитанному количеству

// Рассчитаем суммарное количество произведенной продукции

	Подтверждено=1;
	ВсегоКол=0;
	ОбщийСортКоэф=0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если Товар.ВидТовара=Перечисление.ВидыТоваров.Услуга Тогда
			// Как услуга оформляются отходы производства
			Продолжить;
		КонецЕсли;          
		
		Если Реж="Коэф" Тогда
			Коэф=Цел(ЦенаТовара(Товар)*100);
			Коэф=?(Коэф=0,1,Коэф);
			ОбщийСортКоэф=ОбщийСортКоэф+Коэф*Количество;
		Иначе
			Коэф=СортКоэф;
			ОбщийСортКоэф=ОбщийСортКоэф+Коэф;
		КонецЕсли;
		
	КонецЦикла;

	// Еще раз пройдемся по строкам для расчета себестоимости
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если Товар.ВидТовара=Перечисление.ВидыТоваров.Услуга Тогда
			// Как услуга оформляются отходы производства
			Продолжить;
		КонецЕсли; 
		
		Если Реж="Коэф" Тогда
			Коэф=Цел(ЦенаТовара(Товар)*100);
			Коэф=?(Коэф=0,1,Коэф);
			СортКоэф=(Коэф*Количество)/ОбщийСортКоэф*1000;
			Если СортКоэф=0 Тогда
				СортКоэф=1;
			КонецЕсли;
			
			Сумма=(ИсхСебестоимость/ОбщийСортКоэф)*Коэф*Количество;
		Иначе
			Коэф=СортКоэф;
			Сумма=(ИсхСебестоимость/ОбщийСортКоэф)*Коэф;
		КонецЕсли;
		
	
//		Сумма=(ИсхСебестоимость/ОбщийСортКоэф)*СортКоэф*Количество;
		Цена=Сумма/Количество;
	КонецЦикла;
	
	
КонецПроцедуры


Процедура Заполнить()
	
	Если Вопрос("Перезаполнить?","Да+Нет")="Да" Тогда
		УдалитьСтроки();
		//Если ИсходныйТовар.ПодлежитРазделке=Перечисление.Булево.Да Тогда
			СпрПроп=СоздатьОбъект("Справочник.ПропорцииРазделки");
			СпрПроп.ИспользоватьВладельца(ИсходныйТовар);
			СпрПроп.ВыбратьЭлементы();
			Пока СпрПроп.ПолучитьЭлемент()=1 Цикл
				Если Спрпроп.ТекущийЭлемент().ПометкаУдаления()=1 Тогда
					Продолжить;
				КонецЕсли;
				НоваяСтрока();
				Товар=СпрПроп.Ингредиент;
				//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
				ТовКод   = Товар.Код;
				
				//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
				Количество=ИсхКоличество*СпрПроп.Количество.Получить(ДатаДок);
				
				Цена=Товар.ЦенаПриобретения*КурсДляВалюты(Товар.ВалютаЗакупки,ДатаДок);
				СрокРеализ = ДатаДок + Товар.СрокГоднПоставщика;
				
				ВычСуммы();
			КонецЦикла;
//		Иначе
//			Предупреждение("Разборке не подлежит !!!");
//		КонецЕсли;     
	КонецЕсли;
	
	РасчетПриходныхЦен();
КонецПроцедуры


//******************************************************************************
// Предопределенная процедура
Процедура ПриНачалеРедактированияСтроки()
	     
	Если (Форма.ТекущаяКолонка() = "ОткрытьОперацию") Тогда
		Если Операции.Выбран()=0 Тогда
			ТекДок=ВзятьКонтекст(Контекст);
			ОткрытьФорму("Документ.ВыполненныеОперации",ТекДок,ТекущийДокумент());
		Иначе     
			ОткрытьФорму(Операции);
		КонецЕсли;  
		
	КонецЕсли;
КонецПроцедуры


Процедура ПриИзмененииИсхКоличества()
	Если  ПромИсхКол=0 Тогда
		ИсхСебестоимость=0;
	Иначе
		ИсхСебестоимость=(ИсхСебестоимость/ПромИсхКол)*ИсхКоличество;
	КонецЕсли;
	ПромИсхКол=ИсхКоличество;
	Заполнить();
КонецПроцедуры

Процедура ПодставитьКоличество()
	ИсхКоличество=КоличествоВПартии;
	ПриИзмененииИсхКоличества();
КонецПроцедуры

Процедура ОпределитьСебестИсх()
	Если Константа.МетодРасчетаСебестоимостиУправленческогоУчета=Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
		РегПар=СоздатьОбъект("Регистр.ПартииТоваров");
		//
		РегПар.ПрихДокумент="";
		РегПар.Фирма=Фирма;
		
		РегПар.Товар=ИсходныйТовар;
		РегПар.КонтрАгент="";
		РегПар.Статус="К";  
		
		// склпарт
		Если Константа.ПартииНаСкладах=Перечисление.Булево.Да Тогда
			РегПар.Склад=Склад;
		Иначе
			РегПар.Склад="";
		КонецЕсли;
		
		//-- -- -- --
		
		РегПар.ОстаткиПолучить();
		
		КолИсхТов=РегПар.ОстатокТовара;
		СтоИсхТов=РегПар.Стоимость;
		НДСИсхТов=РегПар.НДС;
		Если ИсхКоличество=0 Тогда
			ИсхКоличество=КолИсхТов;
		КонецЕсли;  
		Если КолИсхТов<=0 Тогда
			Предупреждение("Остаток товара "+ИсходныйТовар+" меньше или равен = 0");
		Иначе	
			ПромИсхКол=ИсхКоличество;
			ИсхСебестоимость=(СтоИсхТов)*ИсхКоличество/КолИсхТов;
			ИсхСтоимость=СтоИсхТов;
			ИсхНДС=НДСИсхТов;   
		КонецЕсли;
	Иначе                                  
		ИсхСебестоимость=0;
		ТаблицаПартий.ПолучитьСтрокуПоНомеру(СписокИсхПартий.ПолучитьЗначение(СписокИсхПартий.ТекущаяСтрока()));
		ДокПарт = ТаблицаПартий.ПрихДок;
		РегПар = СоздатьОбъект("Регистр.ПартииТоваров");
//		РегПар.ПрихДокумент = ДокПарт.ТекущийДокумент();
		Если ДокПарт.ТипУчета = 2 Тогда
			РегПар.Фирма = ДокПарт.Фирма;
		Иначе
			РегПар.Фирма = "";
		КонецЕсли;
		РегПар.Товар = ИсходныйТовар;
		Попытка
//			РегПар.Контрагент = ДокПарт.Клиент;
		Исключение
		КонецПопытки;	
		РегПар.Статус = "К";
		// склпарт
		Если Константа.ПартииНаСкладах = Перечисление.Булево.Да Тогда
			РегПар.Склад = Склад;
		Иначе
			РегПар.Склад = "";
		КонецЕсли;             
		
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//		РегПар.Партия = ТаблицаПартий.Партия;
//		РегПар.СрокРеализации = ТаблицаПартий.СрокРеализации;
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		
		//-- -- -- --
		ТипУчета = ДокПарт.ТипУчета;
		Фирма = ДокПарт.Фирма;
		РегПар.ОстаткиПолучить();
		ИсхПартия = РегПар.Партия;
		ИсхСрокРеализ = РегПар.СрокРеализации;
		КолИсхТов=РегПар.ОстатокТовара;
		СтоИсхТов=РегПар.Стоимость;
		НДСИсхТов=РегПар.НДС;
		КоличествоВПартии=КолИсхТов;
		Если ИсхКоличество=0 Тогда
			ИсхКоличество=КолИсхТов;
		КонецЕсли;
		ПромИсхКол=ИсхКоличество;
		Если КолИсхТов<=0 Тогда
			Предупреждение("Остаток товара "+ИсходныйТовар+" по партии "+ДокПарт+" меньше или равен = 0");
		Иначе
			ИсхСебестоимость=(СтоИсхТов)*ИсхКоличество/КолИсхТов;
		КонецЕсли;
		ИсхСтоимость=СтоИсхТов;
		ИсхНДС=НДСИсхТов;
		ПартияИсх=ДокПарт.ТекущийДокумент();
	КонецЕсли;
	Заполнить();
КонецПроцедуры

Процедура ВычСебестоимости() 
	Перем ТекДок;
	
	ПромСклад=Склад;
	Если ИсходныйТовар.ПодлежитРазделке=Перечисление.Булево.Нет Тогда
		Предупреждение("Не подлежит разделке !");
		Возврат;
	КонецЕсли;
	Если Константа.МетодРасчетаСебестоимостиУправленческогоУчета=Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
		ОпределитьСебестИсх();
	Иначе  
		ТаблицаПартий.УдалитьСтроки();
		СписокИсхПартий.УдалитьВсе();
		Тов=ИсходныйТовар;
		Ост=Регистр.ОстаткиТоваров.СводныйОстаток(Тов,Склад,,"ОстатокТовара");
		Запрос=СоздатьОбъект("Запрос");    
		                          
		ТекстЗапроса="";
		Если СравнитьТА()<0 Тогда
			Если Выбран()=1 Тогда
				ТекДок=ТекущийДокумент();
				ТекстЗапроса=ТекстЗапроса+"Период С ТекДок По ТекДок;";	
			Иначе
				ТекстЗапроса=ТекстЗапроса+"Период С ДатаДок По ДатаДок;";	
			КонецЕсли;
		КонецЕсли;
			
		ТекстЗапроса=ТекстЗапроса+	"//{{ЗАПРОС(Партии)
		|Товар = Регистр.ПартииТоваров.Товар;
		|Скл = Регистр.ПартииТоваров.Склад;
		|ДокПар = Регистр.ПартииТоваров.ПрихДокумент;
		|ПартияРег = Регистр.ПартииТоваров.Партия;
		|СрокРеализРег = Регистр.ПартииТоваров.СрокРеализации;
		|Кол = Регистр.ПартииТоваров.ОстатокТовара;
		|Стоимость = Регистр.ПартииТоваров.Стоимость;
		|Группировка Товар упорядочить по Товар.Наименование;
//		|Группировка СрокРеализРег;
//		|Группировка ДокПар упорядочить по ДокПар.ДатаДок, ДокПар.ВремяДок;
//		|Группировка ПартияРег;
		|Функция Колич = КонОст(Кол);
		|Функция Стоим = КонОст(Стоимость);
		|Условие(Товар=Тов);"; 
		Если Константа.ПартииНаСкладах=Перечисление.Булево.Да Тогда
			ТекстЗапроса=ТекстЗапроса+
			"Условие(Скл=ПромСклад);";
		КонецЕсли;
		Запрос.Выполнить(ТекстЗапроса);
		
		ИсхСебестоимость=Запрос.Стоим;
		Возврат;
		Пока Запрос.Группировка(1) = 1 Цикл
			Пока Запрос.Группировка(2) = 1 Цикл 
				Пока Запрос.Группировка(3) = 1 Цикл
					Пока Запрос.Группировка(4) = 1 Цикл
						ТаблицаПартий.НоваяСтрока();
						ТаблицаПартий.Партия 		 = Запрос.ПартияРег;
						ТаблицаПартий.СрокРеализации = Запрос.СрокРеализРег;
						ТаблицаПартий.ПрихДок 		 = Запрос.ДокПар;
						
						СписокИсхПартий.ДобавитьЗначение(ТаблицаПартий.НомерСтроки,ТаблицаПартий.ПрихДок.Вид() + " №" + ТаблицаПартий.ПрихДок.НомерДок + " " + Строка(ТаблицаПартий.Партия));
					КонецЦикла;  
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли; 
	          
	ИсхСебестоимость=0;
//	Если ТаблицаПартий.КоличествоСтрок()>0 Тогда
//		ОпределитьСебестИсх();
//	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура Подбор()
	ОткрытьПодбор("Справочник.Номенклатура","ДляПодбора",Контекст);
КонецПроцедуры
//-----------------------------------------------
Процедура ОбработкаПодбора(Выб)
	Если Выб=ИсходныйТовар Тогда
		Предупреждение("Нельзя выбрать данный ингредиент !!!");
		СтатусВозврата(0);
	Иначе
		НоваяСтрока();
		Товар=Выб;
		Поставщик=Товар.Поставщик;
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		ТовКод   = Товар.Код;      
		
		СортКоэф=Цел(ЦенаТовара(Товар)*1000);
		СортКоэф=?(СортКоэф=0,1,СортКоэф);
		СрокРеализ = ДатаДок + Товар.СрокГоднПоставщика;
		
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		АктивизироватьСтроку();
	КонецЕсли;
КонецПроцедуры
//----------------------------------------------
Функция ЗаполнитьПропорцииРазделки(Товар)
	СписокПропорций.УдалитьСтроки();	
	Если Товар.ПодлежитРазделке=Перечисление.Булево.Да Тогда
		СпрПроп=СоздатьОбъект("Справочник.ПропорцииРазделки");
		СпрПроп.ИспользоватьВладельца(Товар);
		СпрПроп.ВыбратьЭлементы();
		Пока СпрПроп.ПолучитьЭлемент()=1 Цикл
			Если Спрпроп.ТекущийЭлемент().ПометкаУдаления()=1 Тогда
				Продолжить;
			КонецЕсли; 
			СписокПропорций.НоваяСтрока();
			СписокПропорций.Товар=СпрПроп.Ингредиент;
			СписокПропорций.Коэфф=СпрПроп.Количество.Получить(ДатаДок);
		КонецЦикла;
	Иначе
		Предупреждение("Разборке не подлежит !!!");
		Возврат 0;
	КонецЕсли;
	Возврат 1;
КонецФункции	
//----------------------------------------------
Процедура ПечатьОП23() 
	Если ЗаполнитьПропорцииРазделки(ИсходныйТовар)=0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("ОП-23");
	Таб.ВывестиСекцию("Шапка");
	//Выведем Мясную продукцию
	//Мясо
	ТоварСырье=ИсходныйТовар;
	ЦенаСырья=Формат((ИсхСебестоимость/ИсхКоличество),"N8.2");
	КоличествоСырья=Формат(ИсхКоличество,"N8.3");
	СебестоимостьСырья=Формат(ИсхСебестоимость,"N8.2");
	МассаПропорцииРазделкиПоНорме="";
	//Полуфабрикат  
	Фабрикат=ПолучитьПустоеЗначение("Справочник.Номенклатура");
	ПропорцияРазделкиПоНорме="";
	МассаПропорцииРазделкиПоНорме="";
	МассаПропорцииРазделкиПоНорме="";
	ФабрикатФактЦена="";
	ФабрикатФактМасса="";
	ФабрикатФактСумма="";
	Таб.ВывестиСекцию("Товар"); 
	//Выводим полуфабрикаты
	ТоварСырье=ПолучитьПустоеЗначение("Справочник.Номенклатура");;
	ЦенаСырья="";
	КоличествоСырья="";
	СебестоимостьСырья="";
	ВыбратьСтроки();
	Ном=0;
	ВсегоПолуфабрикатов=0; 
	ВсегоМассаПоНорме=0;
	ВсегоМассаФакт=0;
	ВсегоСуммаФак=0;
	Пока ПолучитьСтроку() = 1 do
		Ном=Ном+1;  
		Фабрикат=Товар; 
		Стр="";
		Если СписокПропорций.НайтиЗначение(Фабрикат,Стр,"Товар")>0 Тогда
			СписокПропорций.ПолучитьСтрокуПоНомеру(Стр);
			ПропорцияРазделкиПоНорме=""+(СписокПропорций.Коэфф*100)+" %";                                   
		КонецЕсли;
		МассаПропорцииРазделкиПоНорме=Формат((СписокПропорций.Коэфф*ИсхКоличество),"N8.3");
		МассаПропорцииРазделкиПоНорме=Формат((СписокПропорций.Коэфф*ИсхКоличество),"N8.3");
		ФабрикатФактЦена=Формат(Цена,"N8.2");
		ФабрикатФактМасса=Формат(Количество,"N8.3");
		ФабрикатФактСумма=Формат((Количество*Цена),"N8.2");
		ВсегоПолуфабрикатов=ВсегоПолуфабрикатов+Количество; 
		ВсегоМассаПоНорме=ВсегоМассаПоНорме+СписокПропорций.Коэфф*ИсхКоличество;
		ВсегоМассаФакт=ВсегоМассаФакт+Количество;  
		ВсегоСуммаФак=ВсегоСуммаФак+Количество*Цена; 
		Таб.ВывестиСекцию("Товар");
	КонецЦикла;
	Таб.ВывестиСекцию("Итого");
	Таб.ВывестиСекцию("Подвал");
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,0,0,ПарСтрДок);
	Таб.Показать("АКТ О РАЗДЕЛКЕ МЯСА-СЫРЬЯ НА ПОЛУФАБРИКАТЫ (ОП-23)","");
КонецПроцедуры

Процедура ПечатьВН()
	Фирма.ИспользоватьДату(ДатаДок);
	ТЗ=СоздатьОбъект("ТаблицаЗначений");
	ТЗ.НоваяКолонка("Товар","Справочник.Номенклатура");
	ТЗ.НоваяКолонка("НомерСтроки","Число",5,0);
	ТЗ.НоваяКолонка("Количество","Число",17,3);
	ТЗ.НоваяКолонка("Стоимость","Число",17,5);
	ТЗ.НоваяКолонка("СрокРеализ","Дата");
	ТЗ.НоваяКолонка("Приход","Документ");
	
	Если Выбран() = 1 Тогда 
		Рег=СоздатьОбъект("Регистр.ПартииТоваров");
		Рег.ВыбратьДвиженияДокумента(ТекущийДокумент());
		Пока Рег.ПолучитьДвижение()>0 Цикл
			
			Если Рег.Склад<>Склад Тогда
			    Продолжить;
			КонецЕсли;
			
			Если Рег.Товар<>ИсходныйТовар Тогда
				Продолжить;
			КонецЕсли;
			
			ТЗ.НоваяСтрока();
			ТЗ.Товар		=Рег.Товар;
			ТЗ.Количество	=?(Рег.Приход=1,-Рег.ОстатокТовара,Рег.ОстатокТовара);
			ТЗ.Стоимость	=?(Рег.Приход=1,-Рег.Стоимость,Рег.Стоимость);
			ТЗ.СрокРеализ	=Рег.СрокРеализации;
			ТЗ.Приход		=Рег.ПрихДокумент;	
		КонецЦикла;
	КонецЕсли;		    
	ТЗ.Свернуть("Товар,СрокРеализ,Приход","Коэффициент,Количество,Стоимость");

	ПечИсходныйТовар = "";
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ТЗ.Приход)=0 Тогда
			пПартияТовара=СокрЛП(ТЗ.Приход.НомерДок)+" ("+ТЗ.Приход.ДатаДок+")";
		Иначе
			пПартияТовара="";
		КонецЕсли;
		Если ПустоеЗначение(ПечИсходныйТовар)=0 Тогда
			ПечИсходныйТовар=ПечИсходныйТовар+РазделительСтрок;
		КонецЕсли;
		
		ПечИсходныйТовар = Шаблон("[ИсходныйТовар.Код] [ИсходныйТовар.Наименование] [ТЗ.Количество] [ИсходныйТовар.БазоваяЕдиницаИзмерения] (Partija: [пПартияТовара]  R.T.: [ТЗ.СрокРеализ])");
				
	КонецЦикла;
	
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Таблица1");
	Таб.ВывестиСекцию("Шапка");
	ВыбратьСтроки();
	Ном=0;
	
	
	ИтогПродСумма=0;
	Пока ПолучитьСтроку() = 1 do
		Ном=Ном+1;
		ПродЦена		= ЦенаТовараПоКатегорииДляТовара(Товар,Константа.РозничнаяКатегорияЦены)*Коэффициент;
		ПродСумма		= ПродЦена*Количество;
		ИтогПродСумма	= ИтогПродСумма+ПродСумма;
		ПечСрокРеализ 	= СрокРеализ;
		ПечДатаПроизв 	= ДатаПроизв;
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;
	Таб.ВывестиСекцию("Подвал");
	Таб.Опции(0,0,0,0,ПарСтрДок);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Печать накладной","");
	//Таб=СоздатьОбъект("Таблица");
	//Таб.ВывестиСекцию("Шапка");
	//ВыбратьСтроки();
	//Ном=0;
	//Пока ПолучитьСтроку() = 1 do
	//	Ном=Ном+1;
	//	Таб.ВывестиСекцию("Товар");
	//КонецЦикла;
	//Таб.ВывестиСекцию("Итого");
	//Таб.Защита(Константа.ФлагЗащитыТаблиц);
	//Таб.ТолькоПросмотр(1);
	//Таб.Опции(0,0,0,0,ПарСтрДок);
	//Таб.Показать("Печать Акта Разделки","");
КонецПроцедуры  

Процедура семПечать()
	Путь = КаталогИБ() + "ExtForms\Печать\УправлениеПечатью.ert";
	Если ФС.СуществуетФайл( Путь ) = 0 Тогда Возврат; КонецЕсли;
	ОткрытьФорму( "Отчет", ТекущийДокумент(), Путь );
КонецПроцедуры


Процедура Печать()
	Перем Стр, Код, Поз;	 
	Выбор=СоздатьОбъект("СписокЗначений");
	Выбор.ДобавитьЗначение(1,"Внутренняя форма");
	Выбор.ДобавитьЗначение(2,"Форма ОП-23");  
	Рез=Выбор.ВыбратьЗначение(Код, "", Поз,,1); 
	Если Рез<>1 Тогда
		Возврат; 
	КонецЕсли;  
	Если Код=1 Тогда 
		ПечатьВН();
	ИначеЕсли Код=2 Тогда
		ПечатьОП23();
	Иначе                            	
		Возврат;
	КонецЕсли;		
КонецПроцедуры	

Процедура КоррекцияСуммы()
	Разница=ИсхСебестоимость-Итог("Сумма");
	Сумма=Сумма+Разница;
	ВычЦеныОбр();
КонецПроцедуры
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи() Далее
//Конец текста, вставленного Инсталлятором МОД
Процедура стар_ПриЗаписи()
//Закомментировано Инсталлятором МОД:Процедура ПриЗаписи() 
	Если семМожноЗаписать( Контекст ) = 0 Тогда Возврат; КонецЕсли;
	// надо записать партии
	ОтменитьЗапись = 0;
	СпрПартии 	   = СоздатьОбъект("Справочник.Партии");
	
	// а в эту ТЗ запомним партии, чтобы в транзакции не затрагивать наш док
	// после записи всех партий - пропишем их в документ всех сразу
	ТЗПартии = СоздатьОбъект("ТаблицаЗначений");
	ТЗПартии.НоваяКолонка("НомерСтрокиДок");
	ТЗПартии.НоваяКолонка("Партия");
	
	НачатьТранзакцию();
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если (Партия.Выбран() = 0) и (Товар.Выбран() = 1) Тогда
			СпрПартии.ИспользоватьВладельца(Товар);
			глСоздатьНовыйОбъект(СпрПартии); 
			Попытка
				//Закомментировано Инсталлятором МОД:СпрПартии.Записать();
	//Начало текста, вставленного Инсталлятором МОД
	ОбъектЗаписать(СпрПартии, );
	//Конец текста, вставленного Инсталлятором МОД

			Исключение  
				Сообщить("Строка документа: " + НомерСтроки + " Ошибка: " + ОписаниеОшибки());
				ОтменитьЗапись = 1;
				Прервать;
			КонецПопытки;
			ТЗПартии.НоваяСтрока();
			ТЗПартии.НомерСтрокиДок = НомерСтроки;
			ТЗПартии.Партия = СпрПартии.ТекущийЭлемент();
		КонецЕсли;
	КонецЦикла; 
	
	Если ОтменитьЗапись=0 Тогда  
		// запишем созданные партии
		ЗафиксироватьТранзакцию();
		
		// теперь занесем партии в спецификацию нашего документа
		ТЗПартии.ВыбратьСтроки();
		Пока ТЗПартии.ПолучитьСтроку()=1 Цикл
			ПолучитьСтрокуПоНомеру(ТЗПартии.НомерСтрокиДок);
			Партия = ТЗПартии.Партия;
		КонецЦикла;
	Иначе
		ОтменитьТранзакцию();
	КонецЕсли;
	               
КонецПроцедуры
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
//	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	стар_ПриЗаписи();
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД
 
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ТаблицаПартий = СоздатьОбъект("ТаблицаЗначений");
ТаблицаПартий.НоваяКолонка("Партия");
ТаблицаПартий.НоваяКолонка("СрокРеализации");
ТаблицаПартий.НоваяКолонка("ПрихДок");
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


ПромИсхКол=ИсхКоличество;
СписокПропорций=СоздатьОбъект("ТаблицаЗначений");
СписокПропорций.НоваяКолонка("Товар","Справочник.Номенклатура"); 
СписокПропорций.НоваяКолонка("Коэфф","Число",10,3); 
