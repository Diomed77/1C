Перем ИнформационнаяСтрока;
Перем Валюта_Прежн;
Перем Курс_Прежн;
//Перем Режим;

Процедура кнПерепровести()
	Если (НазваниеНабораПрав() = "Администратор")
	или (НазваниеНабораПрав() = "СпециалистПоТранспорту") Тогда
	Иначе
		Сообщить( "У вас недостаточно прав для использования данной обработки." );
		Возврат;
	КонецЕсли;
	ЗаписьЖурналаРегистрации( "Начато проведение приходных документов",, "Автоматическое проведение",, 3 );
	
	Если ПустоеЗначение(Клиент)=1 Тогда
		Предупреждение("Не выбран клиент!");
		Возврат;
	КонецЕсли;
			
	ВыбратьСтроки();
	
	кВклПроверкуПретензийПрихода = 0;
	док = СоздатьОбъект( "Документ.ПриходнаяНакладная" );
	Пока ПолучитьСтроку() = 1 Цикл
		док.НайтиДокумент(ПрихДок);
		Если док.Проведен() = 1 Тогда
			Попытка 
				док.Провести();
				ЗаписьЖурналаРегистрации( "Автоматическое проведение приходных документов",, "Автоматическое проведение", Док.ТекущийДокумент(), 2 );
			Исключение
				Сообщить( "Не удалось провести документ "+ПрихДок, "!" );
				Сообщить( ОписаниеОшибки(), "I" );
					ЗаписьЖурналаРегистрации( ОписаниеОшибки(),, "Автоматическое проведение", Док.ТекущийДокумент(), 5 );
				Продолжить;
			КонецПопытки;
			Сообщить( "Проведен документ "+ПрихДок );
		КонецЕсли;
	КонецЦикла;
	кВклПроверкуПретензийПрихода = 1;
	ЗаписьЖурналаРегистрации( "Закончено проведение приходных документов",, "Автоматическое проведение",, 3 );
КонецПроцедуры
//---------------------------------------------
Процедура Взаиморасчеты()
	ИнформационнаяСтрока=ДолгПоКредиту(Контекст);
КонецПроцедуры
//---------------------------------------------

//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи() Далее
//Конец текста, вставленного Инсталлятором МОД
Процедура стар_приЗаписи()
//Закомментировано Инсталлятором МОД:Процедура приЗаписи()
	Если семМожноЗаписать( Контекст ) = 0 Тогда Возврат; КонецЕсли;
	ВсегоСуммаШ = Итог("Сумма") + Итог("НДС");
	ВсегоНДСШ	= Итог("НДС");
КонецПроцедуры
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
//	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
	стар_приЗаписи();
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД

Функция ОпределитьВидФлажка()
	Если НеВключенВДекларацию=0 Тогда
		Возврат 2;
	Иначе
		Возврат 1;
	КонецЕсли;	
КонецФункции

Процедура ПриНачалеРедактированияСтроки()
	
	ТекущаяКолонка	=	Форма.ТекущаяКолонка();
	Если ТекущаяКолонка="Флажок" Тогда
		Если НеВключенВДекларацию=0 Тогда
			НеВключенВДекларацию=1;
		Иначе
			НеВключенВДекларацию=0;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры


//---------------------------------------------
Процедура ПриОткрытии()
	
	ПроверкаРазрешенияРедактирования(Контекст);
	Валюта_Прежн=Валюта;
	Курс_Прежн=Курс;
                       
	взаиморасчеты();   
	
	Если Валюта=рубли Тогда
		форма.Курс.Доступность(0);
	иначе
		форма.Курс.Доступность(1);
	КонецЕсли;
	
КонецПроцедуры   

//-----------------------------------------------    
Функция ВычислитьСумму()
	
	НДС=Окр(Сумма*(ПроцентНДС(СтавкаНДС)/100),2,1);
	
КонецФункции


Процедура УстВалюты()
	вал=создатьОбъект("Справочник.Валюты");
	Если вал.выбрать("Выберите валюту","")>0 Тогда
		Валюта=вал.ТекущийЭлемент();	
		Курс=КурсДляВалюты(Валюта,Дата_курса);
	КонецЕсли;
КонецПроцедуры
               
//----------------------------------------------------
Процедура ВыборГлубины()
//	ДатаОплаты=БанковскаяДата(ДатаДок,Глубина);
	ДатаОплаты = семПолучитьДатуОплаты( Клиент, Перечисление.ВидыКлиентов.Поставщик, ДатаДок );
КонецПроцедуры


//-----------------------------------------------
                    
Процедура ВыборКлиента()
    Если Клиент.Выбран()=1 Тогда
		//Клиент.ИспользоватьДату(ДатаДок);
		// Проверим , является ли клиент групповым
		Если Клиент.КлГруппа.Выбран()=1 Тогда
			ТекКлиент=Клиент.КлГруппа;
		Иначе
			ТекКлиент=Клиент;
		КонецЕсли;
		ТекКлиент.ИспользоватьДату(ДатаДок);
		Если НЕ(ТекКлиент.СуммаКредитаПоставщика=0) Тогда
			Глубина=ТекКлиент.ГлубинаКредитаПоставщика;
		Иначе
       		Глубина=Клиент.ГлубинаКредитаПоставщика;
		КонецЕсли;
	// Установим дилера по клиенту
	
		Если Клиент.Страна=Константа.СтранаРезидент Тогда
			СтавкаНДС=Константа.ОсновнаяСтавкаНДС;
		Иначе
			СтавкаНДС=Перечисление.ЗначенияНДС.НДС0;
		КонецЕсли;		
	         
		ДатаОплаты = семПолучитьДатуОплаты( Клиент, Перечисление.ВидыКлиентов.Поставщик, ДатаИнвойса );
		ВыборГлубины();
		Взаиморасчеты();
	КонецЕсли;
КонецПроцедуры

Процедура семУстановитьВалюту( флКопирования )
	Если флКопирования = 0 Тогда
		Валюта = Константа.ВалютаВзаиморасчетов;
	КонецЕсли;
	Дата_Курса = ДатаДок;
	Курс = КурсДляВалюты( Валюта, Дата_Курса );
	Валюта_Прежн = Валюта;
	Курс_Прежн = Курс;
КонецПроцедуры

Процедура ВводНового( флКопирования )    
	
	ЗаполнитьШапку(Контекст);
	семУстановитьВалюту( флКопирования );
	ДатаДок=РабочаяДата();
	ДатаИнвойса = ДатаДок;	               
	Фирма=Константа.ОсновнаяФирма;

	Клиент=Константа.ОсновнойПокупатель;
	УстановитьНовыйНомер("TR-00");
	
	ВыборКлиента();

КонецПроцедуры                            

//-------------
Функция ПересчитатьСуммы()
	
	ВыбратьСтроки();
	Пока получитьСтроку()>0 Цикл
		НДС=окр(Сумма/100*ПроцентНДС(СтавкаНДС),2,1);
	КонецЦикла;
	
	
КонецФункции

Функция ИтогокОплате()
	
	СуммаДок=Формат(Итог("Сумма")+Итог("НДС"),"Ч15.2");
	возврат "Итого к оплате : "+суммаДок+"  "+валюта;
	
КонецФункции 

Функция ФорматВывода( парам )
	Если парам = "ДатаОплаты" Тогда
		Возврат Шаблон( "[семПолучитьГлубинуКредитаКлиента( Клиент, Перечисление.ВидыКлиентов.Поставщик, ДатаДок )]" );
	КонецЕсли;
КонецФункции
