//***********************************************************
//<<Алгоритм Успеха>> (begin)
//---------------
Процедура ВводНового(ФлКопирования,ОбъектКопирования);
	
	ЗаполнитьШапку(Контекст); //заполняем обязательные реквизиты в любом случае

//	Предупреждение("Создается автоматически");
//	СтатусВозврата(0);	
КонецПроцедуры
//***************************************************************

//======================================================================
Процедура ВводНаОсновании(ДокОснование)
	
	ЗаполнитьШапку(Контекст); //заполняем обязательные реквизиты в любом случае

	ДокументОснование=ДокОснование;
	
	ТекстЗапроса = "SELECT $ОбклейкаТоваров.Товар [Товар $Справочник.Номенклатура]
	|					, SUM(CASE WHEN $ОбклейкаТоваров.НеОбклеивать='V' THEN $ОбклейкаТоваров.План ELSE $ОбклейкаТоваров.Факт END) Факт
	|				FROM $Регистр.ОбклейкаТоваров AS ОбклейкаТоваров With (NOLOCK)
	|				WHERE ($ОбклейкаТоваров.ПоДокументу = $ВидДокумента36."+ДокументОснование.Вид()+"+:ВыбДок)
	|				GROUP BY $ОбклейкаТоваров.Товар
	|";
	
	итОбклеено = СоздатьОбъект("ИндексированнаяТаблица");
	Запрос = СоздатьОбъект("ODBCRecordSet");
	Запрос.УстановитьТекстовыйПараметр("ВыбДок",ДокументОснование);
	Запрос.ВыполнитьИнструкцию(ТекстЗапроса,итОбклеено);
	итОбклеено.ДобавитьИндекс("иТовар","*Товар");
	
	
	тт=СоздатьОбъект("ИндексированнаяТаблица");
	тт.Загрузить(ДокументОснование);
	Если глЕстьРеквизитМнЧ("Подтверждено",ДокументОснование.Вид())=1 Тогда
		тт.Свернуть("Товар","Количество,Подтверждено");

		тт.ВыбратьСтроки();
		Пока тт.ПолучитьСтроку() = 1 Цикл
			тт.Количество = тт.Подтверждено;		
		КонецЦикла;
	Иначе
		тт.Свернуть("Товар","Количество");
	КонецЕсли;
		
	
	тт.ВыбратьСтроки();
	Пока тт.ПолучитьСтроку() = 1 Цикл
		
		Тов = тт.Товар;
		Наклеено=0;
		Если итОбклеено.НайтиСтроку("иТовар",Тов,,1)>0 Тогда
			Наклеено = итОбклеено.Факт;
		КонецЕсли;

		Если Тов.ЕдНеттоВеса.Единица=Перечисление.ЕдиницыИзмерения.Килограмм Тогда
			НаклеекПлан_ = тт.Количество / Тов.Вес;
		Иначе
			НаклеекПлан_ = тт.Количество / Тов.ЕдНеттоВеса.Коэффициент ;
		КонецЕсли;
		
		НаклеекПлан_=НаклеекПлан_-Наклеено;
		
		Если НаклеекПлан_<=0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока();
		Товар 		= тт.Товар;
		ТовКод 		= Товар.Код;
		Количество 	= тт.Количество;
		Если глЕстьРеквизитМнЧ("Единица",ДокументОснование.Вид())=1 Тогда
			Единица 	= тт.Единица;
			Коэффициент = тт.Коэффициент;
		Иначе
			УстановкаЕдиницыИзмерения(Контекст);
		КонецЕсли;

		НаклеекПлан = НаклеекПлан_;
		
	КонецЦикла;
	
	
	
КонецПроцедуры // ВводНаОсновании

//------------------------------------------ 
Процедура ПриОткрытии() //предопределенная
	ПриЗаписиПерепроводить(1);
КонецПроцедуры //ПриОткрытии
//--------------------------------------------
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи() Далее
//Конец текста, вставленного Инсталлятором МОД
//Начало текста, вставленного Инсталлятором МОД
Процедура ПриЗаписи()
	//Внимание: данная процедура при обновлении Менеджера будет перезаписана заново
	//без сохранения текущего кода !!!
	//Рекомендуем собственные алгоритмы записывать в старую процедуру с префиксом стар_
//	ПриИзмененииОбъекта(Контекст, ТекущийДокумент(), ДатаДок);
КонецПроцедуры
//Конец текста, вставленного Инсталлятором МОД
  
//======================================================================
Процедура Печать()
	
	Если Выбран()=0 Тогда
		Если Вопрос("Перед печатью нужно записать документ. Записать?","Да+Нет")="Да" Тогда
			Записать();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Путь = КаталогИБ() + "ExtForms\Печать\НарядНаОбклейку.ert";
	Если ФС.СуществуетФайл( Путь ) = 1 Тогда 
		сп = СоздатьОбъект( "СписокЗначений" );
		сп.Установить( "Документ", ТекущийДокумент() );
		ОткрытьФорму( "Отчет", сп, Путь );
		Возврат;
	КонецЕсли;

КонецПроцедуры // Печать

//======================================================================
Процедура СкопироватьПланФакт()
	
	Если Вопрос("Вы уверены?","Да+Нет")="Да" Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			НаклеекФакт = НаклеекПлан;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры // СкопироватьПланФакт()

Процедура ОбработкаПодбора(Выб)    
	
	ЗапросКоличестваВПодборе(Контекст,"Каталог",Выб);
	
	ТовКод = Выб.Код;
	//Если Выб.ЕдНеттоВеса.Единица=Перечисление.ЕдиницыИзмерения.Килограмм Тогда
	//	НаклеекПлан = Количество / Выб.Вес;
	//Иначе
	//	НаклеекПлан = Количество / Выб.ЕдНеттоВеса.Коэффициент ;
	//КонецЕсли;
	
	НаклеекПлан = Количество;
	
	НаклеекФакт = НаклеекПлан;
	УстановкаЕдиницыИзмерения(Контекст);
	АктивизироватьСтроку();
КонецПроцедуры
                       
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Процедура ПоискПоКодуОбклейщика(КодПоиска) 
	Спр = СоздатьОбъект("Справочник.Обклейщики");
	Если Спр.НайтиПоКоду(КодПоиска,0) = 1 Тогда
		Обклейщик = Спр.ТекущийЭлемент();
	Иначе
		Обклейщик = "";
		Сообщить("Не найден обклейщик по коду "+КодПоиска);
	КонецЕсли;
КонецПроцедуры


Процедура ПриНачалеРедактированияСтроки()
                                
	Если Форма.ТекущаяКолонка() = "НеОбклеивать" Тогда
		СтатусВозврата( 0 );

		Если ПустоеЗначение(НеОбклеивать)=1 Тогда
			НеОбклеивать = "V";
		Иначе
			НеОбклеивать = "";
		КонецЕсли;
	ИначеЕсли Форма.ТекущаяКолонка() = "ДопРабота" Тогда
			СтатусВозврата( 0 );
	
			Если ПустоеЗначение(ДопРабота)=1 Тогда
				ДопРабота = "V";
			Иначе
				ДопРабота = "";
			КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры


Процедура кнЗаполнить()
	// выбираем вариант заполнения
	сп = СоздатьОбъект( "СписокЗначений" );
	сп.ДобавитьЗначение(0,"Заполнить все");
	сп.ДобавитьЗначение(1,"Заполнить пустые");
	выб = 0; Если сп.ВыбратьЗначение(выб,,,,1) = 0 Тогда Возврат; КонецЕсли;
	
	// выбираем причину притензии для заполнения
	спр = СоздатьОбъект( "Справочник.Обклейщики" );
	Если спр.Выбрать("Выберите маркировщика","ФормаСписка") = 0 Тогда Возврат; КонецЕсли;

	Если ПустоеЗначение(спр.ТекущийЭлемент())=1 Тогда
		Возврат;
	КонецЕсли;
	// заполняем причину притензии согласно выбранному варианту
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если выб = 1 Тогда
			Если Обклейщик.Выбран() = 1 Тогда Продолжить; КонецЕсли;
		КонецЕсли;
		Обклейщик = спр.ТекущийЭлемент();
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнениеПоГруппеСкладу()
	Путь = КаталогИБ() + "ExtForms\Служеб\ЗаполнениеПоГруппеСкладу.ert";
	спПарам = СоздатьОбъект( "СписокЗначений" );
	спПарам.Установить( "ДатаДок", ДатаДок );
	спПарам.Установить( "Док", ТекущийДокумент() );
	спПарам.Установить( "ВидДок", Вид() );
	спПарам.Установить("ДокОснование",ДокументОснование);
	спПарам.Установить( "ТипСклада", ТекущийДокумент() );
	спПарам.Установить( "Склад", Склад );
	ОткрытьФормуМодально( "Обработка", спПарам, Путь );
	ЗагрузитьТабличнуюЧасть(спПарам.Получить("Таблица"));
	Склад = спПарам.Получить("Склад");
	ДокументОснование = спПарам.Получить("ДокОснование");
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		
		ТовКод 		= Товар.Код;
		УстановкаЕдиницыИзмерения(Контекст);
		
		Если Товар.ЕдНеттоВеса.Единица=Перечисление.ЕдиницыИзмерения.Килограмм Тогда
			НаклеекПлан = Количество / Товар.Вес;
		Иначе
			НаклеекПлан = Количество / Товар.ЕдНеттоВеса.Коэффициент ;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриИзмененииФакта()
	
	Если Товар.ЕдНеттоВеса.Единица=Перечисление.ЕдиницыИзмерения.Килограмм Тогда
		Количество = НаклеекФакт * Товар.Вес;
	Иначе
		Количество = НаклеекФакт * Товар.ЕдНеттоВеса.Коэффициент ;
	КонецЕсли;
	
КонецПроцедуры

